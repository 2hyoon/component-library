{"version":3,"file":"app.js","mappings":"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","sources":["webpack://component-library/./app/scripts/vendors/noframework.waypoints.min.js","webpack://component-library/./app/scripts/components/Header.js","webpack://component-library/./app/scripts/components/Accordion.js","webpack://component-library/./app/scripts/utils/charty.js","webpack://component-library/./node_modules/chart.js/dist/chunks/helpers.segment.js","webpack://component-library/./node_modules/chart.js/dist/chart.js","webpack://component-library/./app/scripts/components/Charty.js","webpack://component-library/./app/scripts/components/Sticky.js","webpack://component-library/./app/scripts/app/appObj.js","webpack://component-library/./app/scripts/utils/initComponents.js","webpack://component-library/./app/scripts/app.js"],"sourcesContent":["/*!\nWaypoints - 4.0.1\nCopyright © 2011-2016 Caleb Troughton\nLicensed under the MIT license.\nhttps://github.com/imakewebthings/waypoints/blob/master/licenses.txt\n*/\n!function(){\"use strict\";function t(n){if(!n)throw new Error(\"No options passed to Waypoint constructor\");if(!n.element)throw new Error(\"No element option passed to Waypoint constructor\");if(!n.handler)throw new Error(\"No handler option passed to Waypoint constructor\");this.key=\"waypoint-\"+e,this.options=t.Adapter.extend({},t.defaults,n),this.element=this.options.element,this.adapter=new t.Adapter(this.element),this.callback=n.handler,this.axis=this.options.horizontal?\"horizontal\":\"vertical\",this.enabled=this.options.enabled,this.triggerPoint=null,this.group=t.Group.findOrCreate({name:this.options.group,axis:this.axis}),this.context=t.Context.findOrCreateByElement(this.options.context),t.offsetAliases[this.options.offset]&&(this.options.offset=t.offsetAliases[this.options.offset]),this.group.add(this),this.context.add(this),i[this.key]=this,e+=1}var e=0,i={};t.prototype.queueTrigger=function(t){this.group.queueTrigger(this,t)},t.prototype.trigger=function(t){this.enabled&&this.callback&&this.callback.apply(this,t)},t.prototype.destroy=function(){this.context.remove(this),this.group.remove(this),delete i[this.key]},t.prototype.disable=function(){return this.enabled=!1,this},t.prototype.enable=function(){return this.context.refresh(),this.enabled=!0,this},t.prototype.next=function(){return this.group.next(this)},t.prototype.previous=function(){return this.group.previous(this)},t.invokeAll=function(t){var e=[];for(var n in i)e.push(i[n]);for(var o=0,r=e.length;r>o;o++)e[o][t]()},t.destroyAll=function(){t.invokeAll(\"destroy\")},t.disableAll=function(){t.invokeAll(\"disable\")},t.enableAll=function(){t.Context.refreshAll();for(var e in i)i[e].enabled=!0;return this},t.refreshAll=function(){t.Context.refreshAll()},t.viewportHeight=function(){return window.innerHeight||document.documentElement.clientHeight},t.viewportWidth=function(){return document.documentElement.clientWidth},t.adapters=[],t.defaults={context:window,continuous:!0,enabled:!0,group:\"default\",horizontal:!1,offset:0},t.offsetAliases={\"bottom-in-view\":function(){return this.context.innerHeight()-this.adapter.outerHeight()},\"right-in-view\":function(){return this.context.innerWidth()-this.adapter.outerWidth()}},window.Waypoint=t}(),function(){\"use strict\";function t(t){window.setTimeout(t,1e3/60)}function e(t){this.element=t,this.Adapter=o.Adapter,this.adapter=new this.Adapter(t),this.key=\"waypoint-context-\"+i,this.didScroll=!1,this.didResize=!1,this.oldScroll={x:this.adapter.scrollLeft(),y:this.adapter.scrollTop()},this.waypoints={vertical:{},horizontal:{}},t.waypointContextKey=this.key,n[t.waypointContextKey]=this,i+=1,o.windowContext||(o.windowContext=!0,o.windowContext=new e(window)),this.createThrottledScrollHandler(),this.createThrottledResizeHandler()}var i=0,n={},o=window.Waypoint,r=window.onload;e.prototype.add=function(t){var e=t.options.horizontal?\"horizontal\":\"vertical\";this.waypoints[e][t.key]=t,this.refresh()},e.prototype.checkEmpty=function(){var t=this.Adapter.isEmptyObject(this.waypoints.horizontal),e=this.Adapter.isEmptyObject(this.waypoints.vertical),i=this.element==this.element.window;t&&e&&!i&&(this.adapter.off(\".waypoints\"),delete n[this.key])},e.prototype.createThrottledResizeHandler=function(){function t(){e.handleResize(),e.didResize=!1}var e=this;this.adapter.on(\"resize.waypoints\",function(){e.didResize||(e.didResize=!0,o.requestAnimationFrame(t))})},e.prototype.createThrottledScrollHandler=function(){function t(){e.handleScroll(),e.didScroll=!1}var e=this;this.adapter.on(\"scroll.waypoints\",function(){(!e.didScroll||o.isTouch)&&(e.didScroll=!0,o.requestAnimationFrame(t))})},e.prototype.handleResize=function(){o.Context.refreshAll()},e.prototype.handleScroll=function(){var t={},e={horizontal:{newScroll:this.adapter.scrollLeft(),oldScroll:this.oldScroll.x,forward:\"right\",backward:\"left\"},vertical:{newScroll:this.adapter.scrollTop(),oldScroll:this.oldScroll.y,forward:\"down\",backward:\"up\"}};for(var i in e){var n=e[i],o=n.newScroll>n.oldScroll,r=o?n.forward:n.backward;for(var s in this.waypoints[i]){var l=this.waypoints[i][s];if(null!==l.triggerPoint){var a=n.oldScroll<l.triggerPoint,h=n.newScroll>=l.triggerPoint,p=a&&h,u=!a&&!h;(p||u)&&(l.queueTrigger(r),t[l.group.id]=l.group)}}}for(var d in t)t[d].flushTriggers();this.oldScroll={x:e.horizontal.newScroll,y:e.vertical.newScroll}},e.prototype.innerHeight=function(){return this.element==this.element.window?o.viewportHeight():this.adapter.innerHeight()},e.prototype.remove=function(t){delete this.waypoints[t.axis][t.key],this.checkEmpty()},e.prototype.innerWidth=function(){return this.element==this.element.window?o.viewportWidth():this.adapter.innerWidth()},e.prototype.destroy=function(){var t=[];for(var e in this.waypoints)for(var i in this.waypoints[e])t.push(this.waypoints[e][i]);for(var n=0,o=t.length;o>n;n++)t[n].destroy()},e.prototype.refresh=function(){var t,e=this.element==this.element.window,i=e?void 0:this.adapter.offset(),n={};this.handleScroll(),t={horizontal:{contextOffset:e?0:i.left,contextScroll:e?0:this.oldScroll.x,contextDimension:this.innerWidth(),oldScroll:this.oldScroll.x,forward:\"right\",backward:\"left\",offsetProp:\"left\"},vertical:{contextOffset:e?0:i.top,contextScroll:e?0:this.oldScroll.y,contextDimension:this.innerHeight(),oldScroll:this.oldScroll.y,forward:\"down\",backward:\"up\",offsetProp:\"top\"}};for(var r in t){var s=t[r];for(var l in this.waypoints[r]){var a,h,p,u,d,f=this.waypoints[r][l],c=f.options.offset,w=f.triggerPoint,y=0,g=null==w;f.element!==f.element.window&&(y=f.adapter.offset()[s.offsetProp]),\"function\"==typeof c?c=c.apply(f):\"string\"==typeof c&&(c=parseFloat(c),f.options.offset.indexOf(\"%\")>-1&&(c=Math.ceil(s.contextDimension*c/100))),a=s.contextScroll-s.contextOffset,f.triggerPoint=Math.floor(y+a-c),h=w<s.oldScroll,p=f.triggerPoint>=s.oldScroll,u=h&&p,d=!h&&!p,!g&&u?(f.queueTrigger(s.backward),n[f.group.id]=f.group):!g&&d?(f.queueTrigger(s.forward),n[f.group.id]=f.group):g&&s.oldScroll>=f.triggerPoint&&(f.queueTrigger(s.forward),n[f.group.id]=f.group)}}return o.requestAnimationFrame(function(){for(var t in n)n[t].flushTriggers()}),this},e.findOrCreateByElement=function(t){return e.findByElement(t)||new e(t)},e.refreshAll=function(){for(var t in n)n[t].refresh()},e.findByElement=function(t){return n[t.waypointContextKey]},window.onload=function(){r&&r(),e.refreshAll()},o.requestAnimationFrame=function(e){var i=window.requestAnimationFrame||window.mozRequestAnimationFrame||window.webkitRequestAnimationFrame||t;i.call(window,e)},o.Context=e}(),function(){\"use strict\";function t(t,e){return t.triggerPoint-e.triggerPoint}function e(t,e){return e.triggerPoint-t.triggerPoint}function i(t){this.name=t.name,this.axis=t.axis,this.id=this.name+\"-\"+this.axis,this.waypoints=[],this.clearTriggerQueues(),n[this.axis][this.name]=this}var n={vertical:{},horizontal:{}},o=window.Waypoint;i.prototype.add=function(t){this.waypoints.push(t)},i.prototype.clearTriggerQueues=function(){this.triggerQueues={up:[],down:[],left:[],right:[]}},i.prototype.flushTriggers=function(){for(var i in this.triggerQueues){var n=this.triggerQueues[i],o=\"up\"===i||\"left\"===i;n.sort(o?e:t);for(var r=0,s=n.length;s>r;r+=1){var l=n[r];(l.options.continuous||r===n.length-1)&&l.trigger([i])}}this.clearTriggerQueues()},i.prototype.next=function(e){this.waypoints.sort(t);var i=o.Adapter.inArray(e,this.waypoints),n=i===this.waypoints.length-1;return n?null:this.waypoints[i+1]},i.prototype.previous=function(e){this.waypoints.sort(t);var i=o.Adapter.inArray(e,this.waypoints);return i?this.waypoints[i-1]:null},i.prototype.queueTrigger=function(t,e){this.triggerQueues[e].push(t)},i.prototype.remove=function(t){var e=o.Adapter.inArray(t,this.waypoints);e>-1&&this.waypoints.splice(e,1)},i.prototype.first=function(){return this.waypoints[0]},i.prototype.last=function(){return this.waypoints[this.waypoints.length-1]},i.findOrCreate=function(t){return n[t.axis][t.name]||new i(t)},o.Group=i}(),function(){\"use strict\";function t(t){return t===t.window}function e(e){return t(e)?e:e.defaultView}function i(t){this.element=t,this.handlers={}}var n=window.Waypoint;i.prototype.innerHeight=function(){var e=t(this.element);return e?this.element.innerHeight:this.element.clientHeight},i.prototype.innerWidth=function(){var e=t(this.element);return e?this.element.innerWidth:this.element.clientWidth},i.prototype.off=function(t,e){function i(t,e,i){for(var n=0,o=e.length-1;o>n;n++){var r=e[n];i&&i!==r||t.removeEventListener(r)}}var n=t.split(\".\"),o=n[0],r=n[1],s=this.element;if(r&&this.handlers[r]&&o)i(s,this.handlers[r][o],e),this.handlers[r][o]=[];else if(o)for(var l in this.handlers)i(s,this.handlers[l][o]||[],e),this.handlers[l][o]=[];else if(r&&this.handlers[r]){for(var a in this.handlers[r])i(s,this.handlers[r][a],e);this.handlers[r]={}}},i.prototype.offset=function(){if(!this.element.ownerDocument)return null;var t=this.element.ownerDocument.documentElement,i=e(this.element.ownerDocument),n={top:0,left:0};return this.element.getBoundingClientRect&&(n=this.element.getBoundingClientRect()),{top:n.top+i.pageYOffset-t.clientTop,left:n.left+i.pageXOffset-t.clientLeft}},i.prototype.on=function(t,e){var i=t.split(\".\"),n=i[0],o=i[1]||\"__default\",r=this.handlers[o]=this.handlers[o]||{},s=r[n]=r[n]||[];s.push(e),this.element.addEventListener(n,e)},i.prototype.outerHeight=function(e){var i,n=this.innerHeight();return e&&!t(this.element)&&(i=window.getComputedStyle(this.element),n+=parseInt(i.marginTop,10),n+=parseInt(i.marginBottom,10)),n},i.prototype.outerWidth=function(e){var i,n=this.innerWidth();return e&&!t(this.element)&&(i=window.getComputedStyle(this.element),n+=parseInt(i.marginLeft,10),n+=parseInt(i.marginRight,10)),n},i.prototype.scrollLeft=function(){var t=e(this.element);return t?t.pageXOffset:this.element.scrollLeft},i.prototype.scrollTop=function(){var t=e(this.element);return t?t.pageYOffset:this.element.scrollTop},i.extend=function(){function t(t,e){if(\"object\"==typeof t&&\"object\"==typeof e)for(var i in e)e.hasOwnProperty(i)&&(t[i]=e[i]);return t}for(var e=Array.prototype.slice.call(arguments),i=1,n=e.length;n>i;i++)t(e[0],e[i]);return e[0]},i.inArray=function(t,e,i){return null==e?-1:e.indexOf(t,i)},i.isEmptyObject=function(t){for(var e in t)return!1;return!0},n.adapters.push({name:\"noframework\",Adapter:i}),n.Adapter=i}();","export default class Header {\n  constructor(elem, APP) {\n    this.elem = elem;\n  }\n\n  init() {}\n}\n","export default class Accordion {\n  constructor(elem, APP) {\n    this.elem = elem;\n    this.tabs = this.elem.querySelectorAll(\".js-tab\");\n    this.panels = this.elem.querySelectorAll(\".js-panel\");\n    this.allowMultiple = false;\n  }\n\n  togglePanel(index) {\n    const tab = this.tabs[index];\n    const panel = this.panels[index];\n    const panelHeight = `${panel.querySelector(\".js-content\").offsetHeight}px`;\n\n    tab.classList.toggle(\"expanded\");\n    panel.classList.toggle(\"expanded\");\n\n    if (panel.classList.contains(\"expanded\")) {\n      panel.classList.remove(\"animate-out\");\n      panel.classList.add(\"animate-in\");\n      panel.style.height = panelHeight;\n      panel.setAttribute(\"aria-hidden\", false);\n      tab.setAttribute(\"aria-expanded\", true);\n    } else {\n      panel.classList.remove(\"animate-in\");\n      panel.classList.add(\"animate-out\");\n      panel.style.height = 0;\n      panel.setAttribute(\"aria-hidden\", true);\n      tab.setAttribute(\"aria-expanded\", false);\n    }\n  }\n\n  setTabHandler() {\n    this.tabs.forEach((t, i) => {\n      t.addEventListener(\"click\", () => {\n        this.togglePanel(i);\n      });\n    });\n  }\n\n  resizePanel() {\n    this.panels.forEach((elem) => {\n      const targetHeight = elem.querySelector(\"div\").offsetHeight + \"px\";\n      elem.style.height = elem.classList.contains(\"expanded\")\n        ? targetHeight\n        : \"0\";\n    });\n  }\n\n  init() {\n    this.setTabHandler();\n\n    window.addEventListener(\"resize\", () => {\n      this.resizePanel();\n    });\n  }\n}\n","export function displayTooltipTitle(context) {\n  const label = context[0].dataset.label || context[0].label;\n  return label;\n}\n\nexport function displayTooltipLabel(context) {\n  return context.raw;\n}\n\nexport function displayTooltipLabelWithUnit(context) {\n  return context.raw + '%';\n}\n\nexport function showChartTooltip(context) {\n  // Tooltip Element\n  let tooltipEl = document.getElementById('chartjs-tooltip');\n\n  // Create element on first render\n  if (!tooltipEl) {\n    tooltipEl = document.createElement('div');\n    tooltipEl.id = 'chartjs-tooltip';\n    tooltipEl.innerHTML = '<table></table>';\n    document.body.appendChild(tooltipEl);\n  }\n\n  // Hide if no tooltip\n  const tooltipModel = context.tooltip;\n  if (tooltipModel.opacity === 0) {\n    tooltipEl.style.opacity = 0;\n    return;\n  }\n\n  // Set caret Position\n  tooltipEl.classList.remove('above', 'below', 'no-transform');\n  if (tooltipModel.yAlign) {\n    tooltipEl.classList.add(tooltipModel.yAlign);\n  } else {\n    tooltipEl.classList.add('no-transform');\n  }\n\n  function getBody(bodyItem) {\n    return bodyItem.lines;\n  }\n\n  // Set Text\n  if (tooltipModel.body) {\n    const titleLines = tooltipModel.title || [];\n    const bodyLines = tooltipModel.body.map(getBody);\n\n    let innerHtml = '<thead>';\n\n    titleLines.forEach(function(title) {\n      innerHtml += '<tr><th>' + title + '</th></tr>';\n    });\n    innerHtml += '</thead><tbody>';\n\n    bodyLines.forEach(function(body, i) {\n      // const colors = tooltipModel.labelColors[i];\n      // let style = 'background:' + colors.backgroundColor;\n      // style += '; border-color:' + colors.borderColor;\n      // style += '; border-width: 2px';\n      // const span = '<span style=\"' + style + '\"></span>';\n      innerHtml += '<tr><td>' + body + '</td></tr>';\n    });\n    innerHtml += '</tbody>';\n\n    let tableRoot = tooltipEl.querySelector('table');\n    tableRoot.innerHTML = innerHtml;\n  }\n\n  const position = context.chart.canvas.getBoundingClientRect();\n\n  // Display, position, and set styles for font\n  tooltipEl.style.opacity = 1;\n  tooltipEl.style.position = 'absolute';\n  tooltipEl.style.left = position.left + window.pageXOffset + tooltipModel.caretX + 'px';\n  tooltipEl.style.top = position.top + window.pageYOffset + tooltipModel.caretY - 20 + 'px';\n  // tooltipEl.style.font = '\"Gotham A\", \"Gotham B\", sans-serif';\n  tooltipEl.style.pointerEvents = 'none';\n}\n\nexport function displayTicksWithUnit(value, index, ticks) {\n  return value + '%';\n}\n\n","/*!\n * Chart.js v4.0.1\n * https://www.chartjs.org\n * (c) 2022 Chart.js Contributors\n * Released under the MIT License\n */\n/**\n * @namespace Chart.helpers\n */ /**\n * An empty function that can be used, for example, for optional callback.\n */ function noop() {\n/* noop */ }\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */ const uid = (()=>{\n    let id = 0;\n    return ()=>id++;\n})();\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isNullOrUndef(value) {\n    return value === null || typeof value === 'undefined';\n}\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */ function isArray(value) {\n    if (Array.isArray && Array.isArray(value)) {\n        return true;\n    }\n    const type = Object.prototype.toString.call(value);\n    if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n        return true;\n    }\n    return false;\n}\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isObject(value) {\n    return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */ function isNumberFinite(value) {\n    return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */ function finiteOrDefault(value, defaultValue) {\n    return isNumberFinite(value) ? value : defaultValue;\n}\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */ function valueOrDefault(value, defaultValue) {\n    return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 : +value / dimension;\nconst toDimension = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 * dimension : +value;\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */ function callback(fn, args, thisArg) {\n    if (fn && typeof fn.call === 'function') {\n        return fn.apply(thisArg, args);\n    }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n    let i, len, keys;\n    if (isArray(loopable)) {\n        len = loopable.length;\n        if (reverse) {\n            for(i = len - 1; i >= 0; i--){\n                fn.call(thisArg, loopable[i], i);\n            }\n        } else {\n            for(i = 0; i < len; i++){\n                fn.call(thisArg, loopable[i], i);\n            }\n        }\n    } else if (isObject(loopable)) {\n        keys = Object.keys(loopable);\n        len = keys.length;\n        for(i = 0; i < len; i++){\n            fn.call(thisArg, loopable[keys[i]], keys[i]);\n        }\n    }\n}\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */ function _elementsEqual(a0, a1) {\n    let i, ilen, v0, v1;\n    if (!a0 || !a1 || a0.length !== a1.length) {\n        return false;\n    }\n    for(i = 0, ilen = a0.length; i < ilen; ++i){\n        v0 = a0[i];\n        v1 = a1[i];\n        if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */ function clone$1(source) {\n    if (isArray(source)) {\n        return source.map(clone$1);\n    }\n    if (isObject(source)) {\n        const target = Object.create(null);\n        const keys = Object.keys(source);\n        const klen = keys.length;\n        let k = 0;\n        for(; k < klen; ++k){\n            target[keys[k]] = clone$1(source[keys[k]]);\n        }\n        return target;\n    }\n    return source;\n}\nfunction isValidKey(key) {\n    return [\n        '__proto__',\n        'prototype',\n        'constructor'\n    ].indexOf(key) === -1;\n}\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */ function _merger(key, target, source, options) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        merge(tval, sval, options);\n    } else {\n        target[key] = clone$1(sval);\n    }\n}\nfunction merge(target, source, options) {\n    const sources = isArray(source) ? source : [\n        source\n    ];\n    const ilen = sources.length;\n    if (!isObject(target)) {\n        return target;\n    }\n    options = options || {};\n    const merger = options.merger || _merger;\n    let current;\n    for(let i = 0; i < ilen; ++i){\n        current = sources[i];\n        if (!isObject(current)) {\n            continue;\n        }\n        const keys = Object.keys(current);\n        for(let k = 0, klen = keys.length; k < klen; ++k){\n            merger(keys[k], target, current, options);\n        }\n    }\n    return target;\n}\nfunction mergeIf(target, source) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    return merge(target, source, {\n        merger: _mergerIf\n    });\n}\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */ function _mergerIf(key, target, source) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        mergeIf(tval, sval);\n    } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n        target[key] = clone$1(sval);\n    }\n}\n/**\n * @private\n */ function _deprecated(scope, value, previous, current) {\n    if (value !== undefined) {\n        console.warn(scope + ': \"' + previous + '\" is deprecated. Please use \"' + current + '\" instead');\n    }\n}\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n    // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n    '': (v)=>v,\n    // default resolvers\n    x: (o)=>o.x,\n    y: (o)=>o.y\n};\n/**\n * @private\n */ function _splitKey(key) {\n    const parts = key.split('.');\n    const keys = [];\n    let tmp = '';\n    for (const part of parts){\n        tmp += part;\n        if (tmp.endsWith('\\\\')) {\n            tmp = tmp.slice(0, -1) + '.';\n        } else {\n            keys.push(tmp);\n            tmp = '';\n        }\n    }\n    return keys;\n}\nfunction _getKeyResolver(key) {\n    const keys = _splitKey(key);\n    return (obj)=>{\n        for (const k of keys){\n            if (k === '') {\n                break;\n            }\n            obj = obj && obj[k];\n        }\n        return obj;\n    };\n}\nfunction resolveObjectKey(obj, key) {\n    const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n    return resolver(obj);\n}\n/**\n * @private\n */ function _capitalize(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value)=>typeof value !== 'undefined';\nconst isFunction = (value)=>typeof value === 'function';\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nconst setsEqual = (a, b)=>{\n    if (a.size !== b.size) {\n        return false;\n    }\n    for (const item of a){\n        if (!b.has(item)) {\n            return false;\n        }\n    }\n    return true;\n};\n/**\n * @param e - The event\n * @private\n */ function _isClickEvent(e) {\n    return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */ const PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction almostEquals(x, y, epsilon) {\n    return Math.abs(x - y) < epsilon;\n}\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */ function niceNum(range) {\n    const roundedRange = Math.round(range);\n    range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n    const niceRange = Math.pow(10, Math.floor(log10(range)));\n    const fraction = range / niceRange;\n    const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n    return niceFraction * niceRange;\n}\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */ function _factorize(value) {\n    const result = [];\n    const sqrt = Math.sqrt(value);\n    let i;\n    for(i = 1; i < sqrt; i++){\n        if (value % i === 0) {\n            result.push(i);\n            result.push(value / i);\n        }\n    }\n    if (sqrt === (sqrt | 0)) {\n        result.push(sqrt);\n    }\n    result.sort((a, b)=>a - b).pop();\n    return result;\n}\nfunction isNumber(n) {\n    return !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostWhole(x, epsilon) {\n    const rounded = Math.round(x);\n    return rounded - epsilon <= x && rounded + epsilon >= x;\n}\n/**\n * @private\n */ function _setMinAndMaxByKey(array, target, property) {\n    let i, ilen, value;\n    for(i = 0, ilen = array.length; i < ilen; i++){\n        value = array[i][property];\n        if (!isNaN(value)) {\n            target.min = Math.min(target.min, value);\n            target.max = Math.max(target.max, value);\n        }\n    }\n}\nfunction toRadians(degrees) {\n    return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n    return radians * (180 / PI);\n}\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */ function _decimalPlaces(x) {\n    if (!isNumberFinite(x)) {\n        return;\n    }\n    let e = 1;\n    let p = 0;\n    while(Math.round(x * e) / e !== x){\n        e *= 10;\n        p++;\n    }\n    return p;\n}\n// Gets the angle from vertical upright to the point about a centre.\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n    const distanceFromXCenter = anglePoint.x - centrePoint.x;\n    const distanceFromYCenter = anglePoint.y - centrePoint.y;\n    const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n    let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n    if (angle < -0.5 * PI) {\n        angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n    }\n    return {\n        angle,\n        distance: radialDistanceFromCenter\n    };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n    return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */ function _angleDiff(a, b) {\n    return (a - b + PITAU) % TAU - PI;\n}\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */ function _normalizeAngle(a) {\n    return (a % TAU + TAU) % TAU;\n}\n/**\n * @private\n */ function _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n    const a = _normalizeAngle(angle);\n    const s = _normalizeAngle(start);\n    const e = _normalizeAngle(end);\n    const angleToStart = _normalizeAngle(s - a);\n    const angleToEnd = _normalizeAngle(e - a);\n    const startToAngle = _normalizeAngle(a - s);\n    const endToAngle = _normalizeAngle(a - e);\n    return a === s || a === e || sameAngleIsFullCircle && s === e || angleToStart > angleToEnd && startToAngle < endToAngle;\n}\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */ function _limitValue(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n}\n/**\n * @param {number} value\n * @private\n */ function _int16Range(value) {\n    return _limitValue(value, -32768, 32767);\n}\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */ function _isBetween(value, start, end, epsilon = 1e-6) {\n    return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n\nfunction _lookup(table, value, cmp) {\n    cmp = cmp || ((index)=>table[index] < value);\n    let hi = table.length - 1;\n    let lo = 0;\n    let mid;\n    while(hi - lo > 1){\n        mid = lo + hi >> 1;\n        if (cmp(mid)) {\n            lo = mid;\n        } else {\n            hi = mid;\n        }\n    }\n    return {\n        lo,\n        hi\n    };\n}\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */ const _lookupByKey = (table, key, value, last)=>_lookup(table, value, last ? (index)=>{\n        const ti = table[index][key];\n        return ti < value || ti === value && table[index + 1][key] === value;\n    } : (index)=>table[index][key] < value);\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */ const _rlookupByKey = (table, key, value)=>_lookup(table, value, (index)=>table[index][key] >= value);\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */ function _filterBetween(values, min, max) {\n    let start = 0;\n    let end = values.length;\n    while(start < end && values[start] < min){\n        start++;\n    }\n    while(end > start && values[end - 1] > max){\n        end--;\n    }\n    return start > 0 || end < values.length ? values.slice(start, end) : values;\n}\nconst arrayEvents = [\n    'push',\n    'pop',\n    'shift',\n    'splice',\n    'unshift'\n];\nfunction listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n        array._chartjs.listeners.push(listener);\n        return;\n    }\n    Object.defineProperty(array, '_chartjs', {\n        configurable: true,\n        enumerable: false,\n        value: {\n            listeners: [\n                listener\n            ]\n        }\n    });\n    arrayEvents.forEach((key)=>{\n        const method = '_onData' + _capitalize(key);\n        const base = array[key];\n        Object.defineProperty(array, key, {\n            configurable: true,\n            enumerable: false,\n            value (...args) {\n                const res = base.apply(this, args);\n                array._chartjs.listeners.forEach((object)=>{\n                    if (typeof object[method] === 'function') {\n                        object[method](...args);\n                    }\n                });\n                return res;\n            }\n        });\n    });\n}\nfunction unlistenArrayEvents(array, listener) {\n    const stub = array._chartjs;\n    if (!stub) {\n        return;\n    }\n    const listeners = stub.listeners;\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n        listeners.splice(index, 1);\n    }\n    if (listeners.length > 0) {\n        return;\n    }\n    arrayEvents.forEach((key)=>{\n        delete array[key];\n    });\n    delete array._chartjs;\n}\n/**\n * @param items\n */ function _arrayUnique(items) {\n    const set = new Set();\n    let i, ilen;\n    for(i = 0, ilen = items.length; i < ilen; ++i){\n        set.add(items[i]);\n    }\n    if (set.size === ilen) {\n        return items;\n    }\n    return Array.from(set);\n}\n\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n    return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n/**\n* Request animation polyfill\n*/ const requestAnimFrame = function() {\n    if (typeof window === 'undefined') {\n        return function(callback) {\n            return callback();\n        };\n    }\n    return window.requestAnimationFrame;\n}();\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */ function throttled(fn, thisArg) {\n    let ticking = false;\n    return function(...args) {\n        if (!ticking) {\n            ticking = true;\n            requestAnimFrame.call(window, ()=>{\n                ticking = false;\n                fn.apply(thisArg, args);\n            });\n        }\n    };\n}\n/**\n * Debounces calling `fn` for `delay` ms\n */ function debounce(fn, delay) {\n    let timeout;\n    return function(...args) {\n        if (delay) {\n            clearTimeout(timeout);\n            timeout = setTimeout(fn, delay, args);\n        } else {\n            fn.apply(this, args);\n        }\n        return delay;\n    };\n}\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */ const _toLeftRightCenter = (align)=>align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */ const _alignStartEnd = (align, start, end)=>align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */ const _textX = (align, left, right, rtl)=>{\n    const check = rtl ? 'left' : 'right';\n    return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n/**\n * Return start and count of visible points.\n * @private\n */ function _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n    const pointCount = points.length;\n    let start = 0;\n    let count = pointCount;\n    if (meta._sorted) {\n        const { iScale , _parsed  } = meta;\n        const axis = iScale.axis;\n        const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n        if (minDefined) {\n            start = _limitValue(Math.min(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, iScale.axis, min).lo, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo), 0, pointCount - 1);\n        }\n        if (maxDefined) {\n            count = _limitValue(Math.max(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, iScale.axis, max, true).hi + 1, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1), start, pointCount) - start;\n        } else {\n            count = pointCount - start;\n        }\n    }\n    return {\n        start,\n        count\n    };\n}\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */ function _scaleRangesChanged(meta) {\n    const { xScale , yScale , _scaleRanges  } = meta;\n    const newRanges = {\n        xmin: xScale.min,\n        xmax: xScale.max,\n        ymin: yScale.min,\n        ymax: yScale.max\n    };\n    if (!_scaleRanges) {\n        meta._scaleRanges = newRanges;\n        return true;\n    }\n    const changed = _scaleRanges.xmin !== xScale.min || _scaleRanges.xmax !== xScale.max || _scaleRanges.ymin !== yScale.min || _scaleRanges.ymax !== yScale.max;\n    Object.assign(_scaleRanges, newRanges);\n    return changed;\n}\n\nconst atEdge = (t)=>t === 0 || t === 1;\nconst elasticIn = (t, s, p)=>-(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p)=>Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */ const effects = {\n    linear: (t)=>t,\n    easeInQuad: (t)=>t * t,\n    easeOutQuad: (t)=>-t * (t - 2),\n    easeInOutQuad: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t : -0.5 * (--t * (t - 2) - 1),\n    easeInCubic: (t)=>t * t * t,\n    easeOutCubic: (t)=>(t -= 1) * t * t + 1,\n    easeInOutCubic: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t : 0.5 * ((t -= 2) * t * t + 2),\n    easeInQuart: (t)=>t * t * t * t,\n    easeOutQuart: (t)=>-((t -= 1) * t * t * t - 1),\n    easeInOutQuart: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t : -0.5 * ((t -= 2) * t * t * t - 2),\n    easeInQuint: (t)=>t * t * t * t * t,\n    easeOutQuint: (t)=>(t -= 1) * t * t * t * t + 1,\n    easeInOutQuint: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t * t : 0.5 * ((t -= 2) * t * t * t * t + 2),\n    easeInSine: (t)=>-Math.cos(t * HALF_PI) + 1,\n    easeOutSine: (t)=>Math.sin(t * HALF_PI),\n    easeInOutSine: (t)=>-0.5 * (Math.cos(PI * t) - 1),\n    easeInExpo: (t)=>t === 0 ? 0 : Math.pow(2, 10 * (t - 1)),\n    easeOutExpo: (t)=>t === 1 ? 1 : -Math.pow(2, -10 * t) + 1,\n    easeInOutExpo: (t)=>atEdge(t) ? t : t < 0.5 ? 0.5 * Math.pow(2, 10 * (t * 2 - 1)) : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n    easeInCirc: (t)=>t >= 1 ? t : -(Math.sqrt(1 - t * t) - 1),\n    easeOutCirc: (t)=>Math.sqrt(1 - (t -= 1) * t),\n    easeInOutCirc: (t)=>(t /= 0.5) < 1 ? -0.5 * (Math.sqrt(1 - t * t) - 1) : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n    easeInElastic: (t)=>atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n    easeOutElastic: (t)=>atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n    easeInOutElastic (t) {\n        const s = 0.1125;\n        const p = 0.45;\n        return atEdge(t) ? t : t < 0.5 ? 0.5 * elasticIn(t * 2, s, p) : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n    },\n    easeInBack (t) {\n        const s = 1.70158;\n        return t * t * ((s + 1) * t - s);\n    },\n    easeOutBack (t) {\n        const s = 1.70158;\n        return (t -= 1) * t * ((s + 1) * t + s) + 1;\n    },\n    easeInOutBack (t) {\n        let s = 1.70158;\n        if ((t /= 0.5) < 1) {\n            return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n        }\n        return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n    easeInBounce: (t)=>1 - effects.easeOutBounce(1 - t),\n    easeOutBounce (t) {\n        const m = 7.5625;\n        const d = 2.75;\n        if (t < 1 / d) {\n            return m * t * t;\n        }\n        if (t < 2 / d) {\n            return m * (t -= 1.5 / d) * t + 0.75;\n        }\n        if (t < 2.5 / d) {\n            return m * (t -= 2.25 / d) * t + 0.9375;\n        }\n        return m * (t -= 2.625 / d) * t + 0.984375;\n    },\n    easeInOutBounce: (t)=>t < 0.5 ? effects.easeInBounce(t * 2) * 0.5 : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5\n};\nvar effects$1 = effects;\n\n/*!\n * @kurkle/color v0.2.1\n * https://github.com/kurkle/color#readme\n * (c) 2022 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\nconst map = {\n  x: 'dark',\n  Z: 'light',\n  Y: 're',\n  X: 'blu',\n  W: 'gr',\n  V: 'medium',\n  U: 'slate',\n  A: 'ee',\n  T: 'ol',\n  S: 'or',\n  B: 'ra',\n  C: 'lateg',\n  D: 'ights',\n  R: 'in',\n  Q: 'turquois',\n  E: 'hi',\n  P: 'ro',\n  O: 'al',\n  N: 'le',\n  M: 'de',\n  L: 'yello',\n  F: 'en',\n  K: 'ch',\n  G: 'arks',\n  H: 'ea',\n  I: 'ightg',\n  J: 'wh'\n};\nconst names$1 = {\n  OiceXe: 'f0f8ff',\n  antiquewEte: 'faebd7',\n  aqua: 'ffff',\n  aquamarRe: '7fffd4',\n  azuY: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '0',\n  blanKedOmond: 'ffebcd',\n  Xe: 'ff',\n  XeviTet: '8a2be2',\n  bPwn: 'a52a2a',\n  burlywood: 'deb887',\n  caMtXe: '5f9ea0',\n  KartYuse: '7fff00',\n  KocTate: 'd2691e',\n  cSO: 'ff7f50',\n  cSnflowerXe: '6495ed',\n  cSnsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: 'ffff',\n  xXe: '8b',\n  xcyan: '8b8b',\n  xgTMnPd: 'b8860b',\n  xWay: 'a9a9a9',\n  xgYF: '6400',\n  xgYy: 'a9a9a9',\n  xkhaki: 'bdb76b',\n  xmagFta: '8b008b',\n  xTivegYF: '556b2f',\n  xSange: 'ff8c00',\n  xScEd: '9932cc',\n  xYd: '8b0000',\n  xsOmon: 'e9967a',\n  xsHgYF: '8fbc8f',\n  xUXe: '483d8b',\n  xUWay: '2f4f4f',\n  xUgYy: '2f4f4f',\n  xQe: 'ced1',\n  xviTet: '9400d3',\n  dAppRk: 'ff1493',\n  dApskyXe: 'bfff',\n  dimWay: '696969',\n  dimgYy: '696969',\n  dodgerXe: '1e90ff',\n  fiYbrick: 'b22222',\n  flSOwEte: 'fffaf0',\n  foYstWAn: '228b22',\n  fuKsia: 'ff00ff',\n  gaRsbSo: 'dcdcdc',\n  ghostwEte: 'f8f8ff',\n  gTd: 'ffd700',\n  gTMnPd: 'daa520',\n  Way: '808080',\n  gYF: '8000',\n  gYFLw: 'adff2f',\n  gYy: '808080',\n  honeyMw: 'f0fff0',\n  hotpRk: 'ff69b4',\n  RdianYd: 'cd5c5c',\n  Rdigo: '4b0082',\n  ivSy: 'fffff0',\n  khaki: 'f0e68c',\n  lavFMr: 'e6e6fa',\n  lavFMrXsh: 'fff0f5',\n  lawngYF: '7cfc00',\n  NmoncEffon: 'fffacd',\n  ZXe: 'add8e6',\n  ZcSO: 'f08080',\n  Zcyan: 'e0ffff',\n  ZgTMnPdLw: 'fafad2',\n  ZWay: 'd3d3d3',\n  ZgYF: '90ee90',\n  ZgYy: 'd3d3d3',\n  ZpRk: 'ffb6c1',\n  ZsOmon: 'ffa07a',\n  ZsHgYF: '20b2aa',\n  ZskyXe: '87cefa',\n  ZUWay: '778899',\n  ZUgYy: '778899',\n  ZstAlXe: 'b0c4de',\n  ZLw: 'ffffe0',\n  lime: 'ff00',\n  limegYF: '32cd32',\n  lRF: 'faf0e6',\n  magFta: 'ff00ff',\n  maPon: '800000',\n  VaquamarRe: '66cdaa',\n  VXe: 'cd',\n  VScEd: 'ba55d3',\n  VpurpN: '9370db',\n  VsHgYF: '3cb371',\n  VUXe: '7b68ee',\n  VsprRggYF: 'fa9a',\n  VQe: '48d1cc',\n  VviTetYd: 'c71585',\n  midnightXe: '191970',\n  mRtcYam: 'f5fffa',\n  mistyPse: 'ffe4e1',\n  moccasR: 'ffe4b5',\n  navajowEte: 'ffdead',\n  navy: '80',\n  Tdlace: 'fdf5e6',\n  Tive: '808000',\n  TivedBb: '6b8e23',\n  Sange: 'ffa500',\n  SangeYd: 'ff4500',\n  ScEd: 'da70d6',\n  pOegTMnPd: 'eee8aa',\n  pOegYF: '98fb98',\n  pOeQe: 'afeeee',\n  pOeviTetYd: 'db7093',\n  papayawEp: 'ffefd5',\n  pHKpuff: 'ffdab9',\n  peru: 'cd853f',\n  pRk: 'ffc0cb',\n  plum: 'dda0dd',\n  powMrXe: 'b0e0e6',\n  purpN: '800080',\n  YbeccapurpN: '663399',\n  Yd: 'ff0000',\n  Psybrown: 'bc8f8f',\n  PyOXe: '4169e1',\n  saddNbPwn: '8b4513',\n  sOmon: 'fa8072',\n  sandybPwn: 'f4a460',\n  sHgYF: '2e8b57',\n  sHshell: 'fff5ee',\n  siFna: 'a0522d',\n  silver: 'c0c0c0',\n  skyXe: '87ceeb',\n  UXe: '6a5acd',\n  UWay: '708090',\n  UgYy: '708090',\n  snow: 'fffafa',\n  sprRggYF: 'ff7f',\n  stAlXe: '4682b4',\n  tan: 'd2b48c',\n  teO: '8080',\n  tEstN: 'd8bfd8',\n  tomato: 'ff6347',\n  Qe: '40e0d0',\n  viTet: 'ee82ee',\n  JHt: 'f5deb3',\n  wEte: 'ffffff',\n  wEtesmoke: 'f5f5f5',\n  Lw: 'ffff00',\n  LwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nfunction isPatternOrGradient(value) {\n    if (value && typeof value === 'object') {\n        const type = value.toString();\n        return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n    }\n    return false;\n}\nfunction color(value) {\n    return isPatternOrGradient(value) ? value : index_esm(value);\n}\nfunction getHoverColor(value) {\n    return isPatternOrGradient(value) ? value : index_esm(value).saturate(0.5).darken(0.1).hexString();\n}\n\nconst numbers = [\n    'x',\n    'y',\n    'borderWidth',\n    'radius',\n    'tension'\n];\nconst colors = [\n    'color',\n    'borderColor',\n    'backgroundColor'\n];\nfunction applyAnimationsDefaults(defaults) {\n    defaults.set('animation', {\n        delay: undefined,\n        duration: 1000,\n        easing: 'easeOutQuart',\n        fn: undefined,\n        from: undefined,\n        loop: undefined,\n        to: undefined,\n        type: undefined\n    });\n    defaults.describe('animation', {\n        _fallback: false,\n        _indexable: false,\n        _scriptable: (name)=>name !== 'onProgress' && name !== 'onComplete' && name !== 'fn'\n    });\n    defaults.set('animations', {\n        colors: {\n            type: 'color',\n            properties: colors\n        },\n        numbers: {\n            type: 'number',\n            properties: numbers\n        }\n    });\n    defaults.describe('animations', {\n        _fallback: 'animation'\n    });\n    defaults.set('transitions', {\n        active: {\n            animation: {\n                duration: 400\n            }\n        },\n        resize: {\n            animation: {\n                duration: 0\n            }\n        },\n        show: {\n            animations: {\n                colors: {\n                    from: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    duration: 0\n                }\n            }\n        },\n        hide: {\n            animations: {\n                colors: {\n                    to: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    easing: 'linear',\n                    fn: (v)=>v | 0\n                }\n            }\n        }\n    });\n}\n\nfunction applyLayoutsDefaults(defaults) {\n    defaults.set('layout', {\n        autoPadding: true,\n        padding: {\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0\n        }\n    });\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n    options = options || {};\n    const cacheKey = locale + JSON.stringify(options);\n    let formatter = intlCache.get(cacheKey);\n    if (!formatter) {\n        formatter = new Intl.NumberFormat(locale, options);\n        intlCache.set(cacheKey, formatter);\n    }\n    return formatter;\n}\nfunction formatNumber(num, locale, options) {\n    return getNumberFormat(locale, options).format(num);\n}\n\nconst formatters = {\n values (value) {\n        return isArray(value) ?  (value) : '' + value;\n    },\n numeric (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const locale = this.chart.options.locale;\n        let notation;\n        let delta = tickValue;\n        if (ticks.length > 1) {\n            const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n            if (maxTick < 1e-4 || maxTick > 1e+15) {\n                notation = 'scientific';\n            }\n            delta = calculateDelta(tickValue, ticks);\n        }\n        const logDelta = log10(Math.abs(delta));\n        const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n        const options = {\n            notation,\n            minimumFractionDigits: numDecimal,\n            maximumFractionDigits: numDecimal\n        };\n        Object.assign(options, this.options.ticks.format);\n        return formatNumber(tickValue, locale, options);\n    },\n logarithmic (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const remain = ticks[index].significand || tickValue / Math.pow(10, Math.floor(log10(tickValue)));\n        if ([\n            1,\n            2,\n            3,\n            5,\n            10,\n            15\n        ].includes(remain) || index > 0.8 * ticks.length) {\n            return formatters.numeric.call(this, tickValue, index, ticks);\n        }\n        return '';\n    }\n};\nfunction calculateDelta(tickValue, ticks) {\n    let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n    if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n        delta = tickValue - Math.floor(tickValue);\n    }\n    return delta;\n}\n var Ticks = {\n    formatters\n};\n\nfunction applyScaleDefaults(defaults) {\n    defaults.set('scale', {\n        display: true,\n        offset: false,\n        reverse: false,\n        beginAtZero: false,\n bounds: 'ticks',\n grace: 0,\n        grid: {\n            display: true,\n            lineWidth: 1,\n            drawOnChartArea: true,\n            drawTicks: true,\n            tickLength: 8,\n            tickWidth: (_ctx, options)=>options.lineWidth,\n            tickColor: (_ctx, options)=>options.color,\n            offset: false\n        },\n        border: {\n            display: true,\n            dash: [],\n            dashOffset: 0.0,\n            width: 1\n        },\n        title: {\n            display: false,\n            text: '',\n            padding: {\n                top: 4,\n                bottom: 4\n            }\n        },\n        ticks: {\n            minRotation: 0,\n            maxRotation: 50,\n            mirror: false,\n            textStrokeWidth: 0,\n            textStrokeColor: '',\n            padding: 3,\n            display: true,\n            autoSkip: true,\n            autoSkipPadding: 3,\n            labelOffset: 0,\n            callback: Ticks.formatters.values,\n            minor: {},\n            major: {},\n            align: 'center',\n            crossAlign: 'near',\n            showLabelBackdrop: false,\n            backdropColor: 'rgba(255, 255, 255, 0.75)',\n            backdropPadding: 2\n        }\n    });\n    defaults.route('scale.ticks', 'color', '', 'color');\n    defaults.route('scale.grid', 'color', '', 'borderColor');\n    defaults.route('scale.border', 'color', '', 'borderColor');\n    defaults.route('scale.title', 'color', '', 'color');\n    defaults.describe('scale', {\n        _fallback: false,\n        _scriptable: (name)=>!name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n        _indexable: (name)=>name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash'\n    });\n    defaults.describe('scales', {\n        _fallback: 'scale'\n    });\n    defaults.describe('scale.ticks', {\n        _scriptable: (name)=>name !== 'backdropPadding' && name !== 'callback',\n        _indexable: (name)=>name !== 'backdropPadding'\n    });\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\n function getScope$1(node, key) {\n    if (!key) {\n        return node;\n    }\n    const keys = key.split('.');\n    for(let i = 0, n = keys.length; i < n; ++i){\n        const k = keys[i];\n        node = node[k] || (node[k] = Object.create(null));\n    }\n    return node;\n}\nfunction set(root, scope, values) {\n    if (typeof scope === 'string') {\n        return merge(getScope$1(root, scope), values);\n    }\n    return merge(getScope$1(root, ''), scope);\n}\n class Defaults {\n    constructor(_descriptors, _appliers){\n        this.animation = undefined;\n        this.backgroundColor = 'rgba(0,0,0,0.1)';\n        this.borderColor = 'rgba(0,0,0,0.1)';\n        this.color = '#666';\n        this.datasets = {};\n        this.devicePixelRatio = (context)=>context.chart.platform.getDevicePixelRatio();\n        this.elements = {};\n        this.events = [\n            'mousemove',\n            'mouseout',\n            'click',\n            'touchstart',\n            'touchmove'\n        ];\n        this.font = {\n            family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n            size: 12,\n            style: 'normal',\n            lineHeight: 1.2,\n            weight: null\n        };\n        this.hover = {};\n        this.hoverBackgroundColor = (ctx, options)=>getHoverColor(options.backgroundColor);\n        this.hoverBorderColor = (ctx, options)=>getHoverColor(options.borderColor);\n        this.hoverColor = (ctx, options)=>getHoverColor(options.color);\n        this.indexAxis = 'x';\n        this.interaction = {\n            mode: 'nearest',\n            intersect: true,\n            includeInvisible: false\n        };\n        this.maintainAspectRatio = true;\n        this.onHover = null;\n        this.onClick = null;\n        this.parsing = true;\n        this.plugins = {};\n        this.responsive = true;\n        this.scale = undefined;\n        this.scales = {};\n        this.showLine = true;\n        this.drawActiveElementsOnTop = true;\n        this.describe(_descriptors);\n        this.apply(_appliers);\n    }\n set(scope, values) {\n        return set(this, scope, values);\n    }\n get(scope) {\n        return getScope$1(this, scope);\n    }\n describe(scope, values) {\n        return set(descriptors, scope, values);\n    }\n    override(scope, values) {\n        return set(overrides, scope, values);\n    }\n route(scope, name, targetScope, targetName) {\n        const scopeObject = getScope$1(this, scope);\n        const targetScopeObject = getScope$1(this, targetScope);\n        const privateName = '_' + name;\n        Object.defineProperties(scopeObject, {\n            [privateName]: {\n                value: scopeObject[name],\n                writable: true\n            },\n            [name]: {\n                enumerable: true,\n                get () {\n                    const local = this[privateName];\n                    const target = targetScopeObject[targetName];\n                    if (isObject(local)) {\n                        return Object.assign({}, target, local);\n                    }\n                    return valueOrDefault(local, target);\n                },\n                set (value) {\n                    this[privateName] = value;\n                }\n            }\n        });\n    }\n    apply(appliers) {\n        appliers.forEach((apply)=>apply(this));\n    }\n}\nvar defaults = /* #__PURE__ */ new Defaults({\n    _scriptable: (name)=>!name.startsWith('on'),\n    _indexable: (name)=>name !== 'events',\n    hover: {\n        _fallback: 'interaction'\n    },\n    interaction: {\n        _scriptable: false,\n        _indexable: false\n    }\n}, [\n    applyAnimationsDefaults,\n    applyLayoutsDefaults,\n    applyScaleDefaults\n]);\n\nfunction toFontString(font) {\n    if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n        return null;\n    }\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n}\n function _measureText(ctx, data, gc, longest, string) {\n    let textWidth = data[string];\n    if (!textWidth) {\n        textWidth = data[string] = ctx.measureText(string).width;\n        gc.push(string);\n    }\n    if (textWidth > longest) {\n        longest = textWidth;\n    }\n    return longest;\n}\n function _longestText(ctx, font, arrayOfThings, cache) {\n    cache = cache || {};\n    let data = cache.data = cache.data || {};\n    let gc = cache.garbageCollect = cache.garbageCollect || [];\n    if (cache.font !== font) {\n        data = cache.data = {};\n        gc = cache.garbageCollect = [];\n        cache.font = font;\n    }\n    ctx.save();\n    ctx.font = font;\n    let longest = 0;\n    const ilen = arrayOfThings.length;\n    let i, j, jlen, thing, nestedThing;\n    for(i = 0; i < ilen; i++){\n        thing = arrayOfThings[i];\n        if (thing !== undefined && thing !== null && isArray(thing) !== true) {\n            longest = _measureText(ctx, data, gc, longest, thing);\n        } else if (isArray(thing)) {\n            for(j = 0, jlen = thing.length; j < jlen; j++){\n                nestedThing = thing[j];\n                if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n                    longest = _measureText(ctx, data, gc, longest, nestedThing);\n                }\n            }\n        }\n    }\n    ctx.restore();\n    const gcLen = gc.length / 2;\n    if (gcLen > arrayOfThings.length) {\n        for(i = 0; i < gcLen; i++){\n            delete data[gc[i]];\n        }\n        gc.splice(0, gcLen);\n    }\n    return longest;\n}\n function _alignPixel(chart, pixel, width) {\n    const devicePixelRatio = chart.currentDevicePixelRatio;\n    const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n    return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n function clearCanvas(canvas, ctx) {\n    ctx = ctx || canvas.getContext('2d');\n    ctx.save();\n    ctx.resetTransform();\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n    drawPointLegend(ctx, options, x, y, null);\n}\nfunction drawPointLegend(ctx, options, x, y, w) {\n    let type, xOffset, yOffset, size, cornerRadius, width, xOffsetW, yOffsetW;\n    const style = options.pointStyle;\n    const rotation = options.rotation;\n    const radius = options.radius;\n    let rad = (rotation || 0) * RAD_PER_DEG;\n    if (style && typeof style === 'object') {\n        type = style.toString();\n        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n            ctx.save();\n            ctx.translate(x, y);\n            ctx.rotate(rad);\n            ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n            ctx.restore();\n            return;\n        }\n    }\n    if (isNaN(radius) || radius <= 0) {\n        return;\n    }\n    ctx.beginPath();\n    switch(style){\n        default:\n            if (w) {\n                ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n            } else {\n                ctx.arc(x, y, radius, 0, TAU);\n            }\n            ctx.closePath();\n            break;\n        case 'triangle':\n            width = w ? w / 2 : radius;\n            ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            ctx.closePath();\n            break;\n        case 'rectRounded':\n            cornerRadius = radius * 0.516;\n            size = radius - cornerRadius;\n            xOffset = Math.cos(rad + QUARTER_PI) * size;\n            xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            yOffset = Math.sin(rad + QUARTER_PI) * size;\n            yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n            ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n            ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n            ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n            ctx.closePath();\n            break;\n        case 'rect':\n            if (!rotation) {\n                size = Math.SQRT1_2 * radius;\n                width = w ? w / 2 : size;\n                ctx.rect(x - width, y - size, 2 * width, 2 * size);\n                break;\n            }\n            rad += QUARTER_PI;\n         case 'rectRot':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            ctx.closePath();\n            break;\n        case 'crossRot':\n            rad += QUARTER_PI;\n         case 'cross':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'star':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            rad += QUARTER_PI;\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'line':\n            xOffset = w ? w / 2 : Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            ctx.moveTo(x - xOffset, y - yOffset);\n            ctx.lineTo(x + xOffset, y + yOffset);\n            break;\n        case 'dash':\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n            break;\n    }\n    ctx.fill();\n    if (options.borderWidth > 0) {\n        ctx.stroke();\n    }\n}\n function _isPointInArea(point, area, margin) {\n    margin = margin || 0.5;\n    return !area || point && point.x > area.left - margin && point.x < area.right + margin && point.y > area.top - margin && point.y < area.bottom + margin;\n}\nfunction clipArea(ctx, area) {\n    ctx.save();\n    ctx.beginPath();\n    ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n    ctx.clip();\n}\nfunction unclipArea(ctx) {\n    ctx.restore();\n}\n function _steppedLineTo(ctx, previous, target, flip, mode) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    if (mode === 'middle') {\n        const midpoint = (previous.x + target.x) / 2.0;\n        ctx.lineTo(midpoint, previous.y);\n        ctx.lineTo(midpoint, target.y);\n    } else if (mode === 'after' !== !!flip) {\n        ctx.lineTo(previous.x, target.y);\n    } else {\n        ctx.lineTo(target.x, previous.y);\n    }\n    ctx.lineTo(target.x, target.y);\n}\n function _bezierCurveTo(ctx, previous, target, flip) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    ctx.bezierCurveTo(flip ? previous.cp1x : previous.cp2x, flip ? previous.cp1y : previous.cp2y, flip ? target.cp2x : target.cp1x, flip ? target.cp2y : target.cp1y, target.x, target.y);\n}\n function renderText(ctx, text, x, y, font, opts = {}) {\n    const lines = isArray(text) ? text : [\n        text\n    ];\n    const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n    let i, line;\n    ctx.save();\n    ctx.font = font.string;\n    setRenderOpts(ctx, opts);\n    for(i = 0; i < lines.length; ++i){\n        line = lines[i];\n        if (opts.backdrop) {\n            drawBackdrop(ctx, opts.backdrop);\n        }\n        if (stroke) {\n            if (opts.strokeColor) {\n                ctx.strokeStyle = opts.strokeColor;\n            }\n            if (!isNullOrUndef(opts.strokeWidth)) {\n                ctx.lineWidth = opts.strokeWidth;\n            }\n            ctx.strokeText(line, x, y, opts.maxWidth);\n        }\n        ctx.fillText(line, x, y, opts.maxWidth);\n        decorateText(ctx, x, y, line, opts);\n        y += font.lineHeight;\n    }\n    ctx.restore();\n}\nfunction setRenderOpts(ctx, opts) {\n    if (opts.translation) {\n        ctx.translate(opts.translation[0], opts.translation[1]);\n    }\n    if (!isNullOrUndef(opts.rotation)) {\n        ctx.rotate(opts.rotation);\n    }\n    if (opts.color) {\n        ctx.fillStyle = opts.color;\n    }\n    if (opts.textAlign) {\n        ctx.textAlign = opts.textAlign;\n    }\n    if (opts.textBaseline) {\n        ctx.textBaseline = opts.textBaseline;\n    }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n    if (opts.strikethrough || opts.underline) {\n const metrics = ctx.measureText(line);\n        const left = x - metrics.actualBoundingBoxLeft;\n        const right = x + metrics.actualBoundingBoxRight;\n        const top = y - metrics.actualBoundingBoxAscent;\n        const bottom = y + metrics.actualBoundingBoxDescent;\n        const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n        ctx.strokeStyle = ctx.fillStyle;\n        ctx.beginPath();\n        ctx.lineWidth = opts.decorationWidth || 2;\n        ctx.moveTo(left, yDecoration);\n        ctx.lineTo(right, yDecoration);\n        ctx.stroke();\n    }\n}\nfunction drawBackdrop(ctx, opts) {\n    const oldColor = ctx.fillStyle;\n    ctx.fillStyle = opts.color;\n    ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n    ctx.fillStyle = oldColor;\n}\n function addRoundedRectPath(ctx, rect) {\n    const { x , y , w , h , radius  } = rect;\n    ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, -HALF_PI, PI, true);\n    ctx.lineTo(x, y + h - radius.bottomLeft);\n    ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n    ctx.lineTo(x + w - radius.bottomRight, y + h);\n    ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n    ctx.lineTo(x + w, y + radius.topRight);\n    ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n    ctx.lineTo(x + radius.topLeft, y);\n}\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n/**\n * @alias Chart.helpers.options\n * @namespace\n */ /**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */ function toLineHeight(value, size) {\n    const matches = ('' + value).match(LINE_HEIGHT);\n    if (!matches || matches[1] === 'normal') {\n        return size * 1.2;\n    }\n    value = +matches[2];\n    switch(matches[3]){\n        case 'px':\n            return value;\n        case '%':\n            value /= 100;\n            break;\n    }\n    return size * value;\n}\nconst numberOrZero = (v)=>+v || 0;\nfunction _readValueToProps(value, props) {\n    const ret = {};\n    const objProps = isObject(props);\n    const keys = objProps ? Object.keys(props) : props;\n    const read = isObject(value) ? objProps ? (prop)=>valueOrDefault(value[prop], value[props[prop]]) : (prop)=>value[prop] : ()=>value;\n    for (const prop of keys){\n        ret[prop] = numberOrZero(read(prop));\n    }\n    return ret;\n}\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */ function toTRBL(value) {\n    return _readValueToProps(value, {\n        top: 'y',\n        right: 'x',\n        bottom: 'y',\n        left: 'x'\n    });\n}\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */ function toTRBLCorners(value) {\n    return _readValueToProps(value, [\n        'topLeft',\n        'topRight',\n        'bottomLeft',\n        'bottomRight'\n    ]);\n}\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */ function toPadding(value) {\n    const obj = toTRBL(value);\n    obj.width = obj.left + obj.right;\n    obj.height = obj.top + obj.bottom;\n    return obj;\n}\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */ function toFont(options, fallback) {\n    options = options || {};\n    fallback = fallback || defaults.font;\n    let size = valueOrDefault(options.size, fallback.size);\n    if (typeof size === 'string') {\n        size = parseInt(size, 10);\n    }\n    let style = valueOrDefault(options.style, fallback.style);\n    if (style && !('' + style).match(FONT_STYLE)) {\n        console.warn('Invalid font style specified: \"' + style + '\"');\n        style = undefined;\n    }\n    const font = {\n        family: valueOrDefault(options.family, fallback.family),\n        lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n        size,\n        style,\n        weight: valueOrDefault(options.weight, fallback.weight),\n        string: ''\n    };\n    font.string = toFontString(font);\n    return font;\n}\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */ function resolve(inputs, context, index, info) {\n    let cacheable = true;\n    let i, ilen, value;\n    for(i = 0, ilen = inputs.length; i < ilen; ++i){\n        value = inputs[i];\n        if (value === undefined) {\n            continue;\n        }\n        if (context !== undefined && typeof value === 'function') {\n            value = value(context);\n            cacheable = false;\n        }\n        if (index !== undefined && isArray(value)) {\n            value = value[index % value.length];\n            cacheable = false;\n        }\n        if (value !== undefined) {\n            if (info && !cacheable) {\n                info.cacheable = false;\n            }\n            return value;\n        }\n    }\n}\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */ function _addGrace(minmax, grace, beginAtZero) {\n    const { min , max  } = minmax;\n    const change = toDimension(grace, (max - min) / 2);\n    const keepZero = (value, add)=>beginAtZero && value === 0 ? 0 : value + add;\n    return {\n        min: keepZero(min, -Math.abs(change)),\n        max: keepZero(max, change)\n    };\n}\n/**\n * Create a context inheriting parentContext\n * @param parentContext\n * @param context\n * @returns\n */ function createContext(parentContext, context) {\n    return Object.assign(Object.create(parentContext), context);\n}\n\nfunction _createResolver(scopes, prefixes = [\n    ''\n], rootScopes = scopes, fallback, getTarget = ()=>scopes[0]) {\n    if (!defined(fallback)) {\n        fallback = _resolve('_fallback', scopes);\n    }\n    const cache = {\n        [Symbol.toStringTag]: 'Object',\n        _cacheable: true,\n        _scopes: scopes,\n        _rootScopes: rootScopes,\n        _fallback: fallback,\n        _getTarget: getTarget,\n        override: (scope)=>_createResolver([\n                scope,\n                ...scopes\n            ], prefixes, rootScopes, fallback)\n    };\n    return new Proxy(cache, {\n deleteProperty (target, prop) {\n            delete target[prop];\n            delete target._keys;\n            delete scopes[0][prop];\n            return true;\n        },\n get (target, prop) {\n            return _cached(target, prop, ()=>_resolveWithPrefixes(prop, prefixes, scopes, target));\n        },\n getOwnPropertyDescriptor (target, prop) {\n            return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n        },\n getPrototypeOf () {\n            return Reflect.getPrototypeOf(scopes[0]);\n        },\n has (target, prop) {\n            return getKeysFromAllScopes(target).includes(prop);\n        },\n ownKeys (target) {\n            return getKeysFromAllScopes(target);\n        },\n set (target, prop, value) {\n            const storage = target._storage || (target._storage = getTarget());\n            target[prop] = storage[prop] = value;\n            delete target._keys;\n            return true;\n        }\n    });\n}\n function _attachContext(proxy, context, subProxy, descriptorDefaults) {\n    const cache = {\n        _cacheable: false,\n        _proxy: proxy,\n        _context: context,\n        _subProxy: subProxy,\n        _stack: new Set(),\n        _descriptors: _descriptors(proxy, descriptorDefaults),\n        setContext: (ctx)=>_attachContext(proxy, ctx, subProxy, descriptorDefaults),\n        override: (scope)=>_attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n    };\n    return new Proxy(cache, {\n deleteProperty (target, prop) {\n            delete target[prop];\n            delete proxy[prop];\n            return true;\n        },\n get (target, prop, receiver) {\n            return _cached(target, prop, ()=>_resolveWithContext(target, prop, receiver));\n        },\n getOwnPropertyDescriptor (target, prop) {\n            return target._descriptors.allKeys ? Reflect.has(proxy, prop) ? {\n                enumerable: true,\n                configurable: true\n            } : undefined : Reflect.getOwnPropertyDescriptor(proxy, prop);\n        },\n getPrototypeOf () {\n            return Reflect.getPrototypeOf(proxy);\n        },\n has (target, prop) {\n            return Reflect.has(proxy, prop);\n        },\n ownKeys () {\n            return Reflect.ownKeys(proxy);\n        },\n set (target, prop, value) {\n            proxy[prop] = value;\n            delete target[prop];\n            return true;\n        }\n    });\n}\n function _descriptors(proxy, defaults = {\n    scriptable: true,\n    indexable: true\n}) {\n    const { _scriptable =defaults.scriptable , _indexable =defaults.indexable , _allKeys =defaults.allKeys  } = proxy;\n    return {\n        allKeys: _allKeys,\n        scriptable: _scriptable,\n        indexable: _indexable,\n        isScriptable: isFunction(_scriptable) ? _scriptable : ()=>_scriptable,\n        isIndexable: isFunction(_indexable) ? _indexable : ()=>_indexable\n    };\n}\nconst readKey = (prefix, name)=>prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value)=>isObject(value) && prop !== 'adapters' && (Object.getPrototypeOf(value) === null || value.constructor === Object);\nfunction _cached(target, prop, resolve) {\n    if (Object.prototype.hasOwnProperty.call(target, prop)) {\n        return target[prop];\n    }\n    const value = resolve();\n    target[prop] = value;\n    return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    let value = _proxy[prop];\n    if (isFunction(value) && descriptors.isScriptable(prop)) {\n        value = _resolveScriptable(prop, value, target, receiver);\n    }\n    if (isArray(value) && value.length) {\n        value = _resolveArray(prop, value, target, descriptors.isIndexable);\n    }\n    if (needsSubResolver(prop, value)) {\n        value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n    }\n    return value;\n}\nfunction _resolveScriptable(prop, value, target, receiver) {\n    const { _proxy , _context , _subProxy , _stack  } = target;\n    if (_stack.has(prop)) {\n        throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n    }\n    _stack.add(prop);\n    value = value(_context, _subProxy || receiver);\n    _stack.delete(prop);\n    if (needsSubResolver(prop, value)) {\n        value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n    }\n    return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    if (defined(_context.index) && isIndexable(prop)) {\n        value = value[_context.index % value.length];\n    } else if (isObject(value[0])) {\n        const arr = value;\n        const scopes = _proxy._scopes.filter((s)=>s !== arr);\n        value = [];\n        for (const item of arr){\n            const resolver = createSubResolver(scopes, _proxy, prop, item);\n            value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n        }\n    }\n    return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n    return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent)=>key === true ? parent : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n    for (const parent of parentScopes){\n        const scope = getScope(key, parent);\n        if (scope) {\n            set.add(scope);\n            const fallback = resolveFallback(scope._fallback, key, value);\n            if (defined(fallback) && fallback !== key && fallback !== parentFallback) {\n                return fallback;\n            }\n        } else if (scope === false && defined(parentFallback) && key !== parentFallback) {\n            return null;\n        }\n    }\n    return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n    const rootScopes = resolver._rootScopes;\n    const fallback = resolveFallback(resolver._fallback, prop, value);\n    const allScopes = [\n        ...parentScopes,\n        ...rootScopes\n    ];\n    const set = new Set();\n    set.add(value);\n    let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n    if (key === null) {\n        return false;\n    }\n    if (defined(fallback) && fallback !== prop) {\n        key = addScopesFromKey(set, allScopes, fallback, key, value);\n        if (key === null) {\n            return false;\n        }\n    }\n    return _createResolver(Array.from(set), [\n        ''\n    ], rootScopes, fallback, ()=>subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n    while(key){\n        key = addScopes(set, allScopes, key, fallback, item);\n    }\n    return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n    const parent = resolver._getTarget();\n    if (!(prop in parent)) {\n        parent[prop] = {};\n    }\n    const target = parent[prop];\n    if (isArray(target) && isObject(value)) {\n        return value;\n    }\n    return target || {};\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n    let value;\n    for (const prefix of prefixes){\n        value = _resolve(readKey(prefix, prop), scopes);\n        if (defined(value)) {\n            return needsSubResolver(prop, value) ? createSubResolver(scopes, proxy, prop, value) : value;\n        }\n    }\n}\nfunction _resolve(key, scopes) {\n    for (const scope of scopes){\n        if (!scope) {\n            continue;\n        }\n        const value = scope[key];\n        if (defined(value)) {\n            return value;\n        }\n    }\n}\nfunction getKeysFromAllScopes(target) {\n    let keys = target._keys;\n    if (!keys) {\n        keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n    }\n    return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n    const set = new Set();\n    for (const scope of scopes){\n        for (const key of Object.keys(scope).filter((k)=>!k.startsWith('_'))){\n            set.add(key);\n        }\n    }\n    return Array.from(set);\n}\nfunction _parseObjectDataRadialScale(meta, data, start, count) {\n    const { iScale  } = meta;\n    const { key ='r'  } = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for(i = 0, ilen = count; i < ilen; ++i){\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n            r: iScale.parse(resolveObjectKey(item, key), index)\n        };\n    }\n    return parsed;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i)=>i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis)=>indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n    // Props to Rob Spencer at scaled innovation for his post on splining between points\n    // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n    // This function must also respect \"skipped\" points\n    const previous = firstPoint.skip ? middlePoint : firstPoint;\n    const current = middlePoint;\n    const next = afterPoint.skip ? middlePoint : afterPoint;\n    const d01 = distanceBetweenPoints(current, previous);\n    const d12 = distanceBetweenPoints(next, current);\n    let s01 = d01 / (d01 + d12);\n    let s12 = d12 / (d01 + d12);\n    // If all points are the same, s01 & s02 will be inf\n    s01 = isNaN(s01) ? 0 : s01;\n    s12 = isNaN(s12) ? 0 : s12;\n    const fa = t * s01; // scaling factor for triangle Ta\n    const fb = t * s12;\n    return {\n        previous: {\n            x: current.x - fa * (next.x - previous.x),\n            y: current.y - fa * (next.y - previous.y)\n        },\n        next: {\n            x: current.x + fb * (next.x - previous.x),\n            y: current.y + fb * (next.y - previous.y)\n        }\n    };\n}\n/**\n * Adjust tangents to ensure monotonic properties\n */ function monotoneAdjust(points, deltaK, mK) {\n    const pointsLen = points.length;\n    let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen - 1; ++i){\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent || !pointAfter) {\n            continue;\n        }\n        if (almostEquals(deltaK[i], 0, EPSILON)) {\n            mK[i] = mK[i + 1] = 0;\n            continue;\n        }\n        alphaK = mK[i] / deltaK[i];\n        betaK = mK[i + 1] / deltaK[i];\n        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n        if (squaredMagnitude <= 9) {\n            continue;\n        }\n        tauK = 3 / Math.sqrt(squaredMagnitude);\n        mK[i] = alphaK * tauK * deltaK[i];\n        mK[i + 1] = betaK * tauK * deltaK[i];\n    }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    let delta, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        const iPixel = pointCurrent[indexAxis];\n        const vPixel = pointCurrent[valueAxis];\n        if (pointBefore) {\n            delta = (iPixel - pointBefore[indexAxis]) / 3;\n            pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n            pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n        }\n        if (pointAfter) {\n            delta = (pointAfter[indexAxis] - iPixel) / 3;\n            pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n            pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n        }\n    }\n}\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */ function splineCurveMonotone(points, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    const deltaK = Array(pointsLen).fill(0);\n    const mK = Array(pointsLen);\n    // Calculate slopes (deltaK) and initialize tangents (mK)\n    let i, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        if (pointAfter) {\n            const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n            // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n            deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n        }\n        mK[i] = !pointBefore ? deltaK[i] : !pointAfter ? deltaK[i - 1] : sign(deltaK[i - 1]) !== sign(deltaK[i]) ? 0 : (deltaK[i - 1] + deltaK[i]) / 2;\n    }\n    monotoneAdjust(points, deltaK, mK);\n    monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n    return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n    let i, ilen, point, inArea, inAreaPrev;\n    let inAreaNext = _isPointInArea(points[0], area);\n    for(i = 0, ilen = points.length; i < ilen; ++i){\n        inAreaPrev = inArea;\n        inArea = inAreaNext;\n        inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n        if (!inArea) {\n            continue;\n        }\n        point = points[i];\n        if (inAreaPrev) {\n            point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n            point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n        }\n        if (inAreaNext) {\n            point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n            point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n        }\n    }\n}\n/**\n * @private\n */ function _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n    let i, ilen, point, controlPoints;\n    // Only consider points that are drawn in case the spanGaps option is used\n    if (options.spanGaps) {\n        points = points.filter((pt)=>!pt.skip);\n    }\n    if (options.cubicInterpolationMode === 'monotone') {\n        splineCurveMonotone(points, indexAxis);\n    } else {\n        let prev = loop ? points[points.length - 1] : points[0];\n        for(i = 0, ilen = points.length; i < ilen; ++i){\n            point = points[i];\n            controlPoints = splineCurve(prev, point, points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen], options.tension);\n            point.cp1x = controlPoints.previous.x;\n            point.cp1y = controlPoints.previous.y;\n            point.cp2x = controlPoints.next.x;\n            point.cp2y = controlPoints.next.y;\n            prev = point;\n        }\n    }\n    if (options.capBezierPoints) {\n        capBezierPoints(points, area);\n    }\n}\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `dom` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import(\"../core/core.controller\").default } dom.Chart\n * @typedef { import('../../types').ChartEvent } ChartEvent\n */ /**\n * @private\n */ function _isDomSupported() {\n    return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n/**\n * @private\n */ function _getParentNode(domNode) {\n    let parent = domNode.parentNode;\n    if (parent && parent.toString() === '[object ShadowRoot]') {\n        parent = parent.host;\n    }\n    return parent;\n}\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */ function parseMaxStyle(styleValue, node, parentProperty) {\n    let valueInPixels;\n    if (typeof styleValue === 'string') {\n        valueInPixels = parseInt(styleValue, 10);\n        if (styleValue.indexOf('%') !== -1) {\n            // percentage * size in dimension\n            valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n        }\n    } else {\n        valueInPixels = styleValue;\n    }\n    return valueInPixels;\n}\nconst getComputedStyle = (element)=>element.ownerDocument.defaultView.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n    return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = [\n    'top',\n    'right',\n    'bottom',\n    'left'\n];\nfunction getPositionedStyle(styles, style, suffix) {\n    const result = {};\n    suffix = suffix ? '-' + suffix : '';\n    for(let i = 0; i < 4; i++){\n        const pos = positions[i];\n        result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n    }\n    result.width = result.left + result.right;\n    result.height = result.top + result.bottom;\n    return result;\n}\nconst useOffsetPos = (x, y, target)=>(x > 0 || y > 0) && (!target || !target.shadowRoot);\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */ function getCanvasPosition(e, canvas) {\n    const touches = e.touches;\n    const source = touches && touches.length ? touches[0] : e;\n    const { offsetX , offsetY  } = source;\n    let box = false;\n    let x, y;\n    if (useOffsetPos(offsetX, offsetY, e.target)) {\n        x = offsetX;\n        y = offsetY;\n    } else {\n        const rect = canvas.getBoundingClientRect();\n        x = source.clientX - rect.left;\n        y = source.clientY - rect.top;\n        box = true;\n    }\n    return {\n        x,\n        y,\n        box\n    };\n}\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */ function getRelativePosition(event, chart) {\n    if ('native' in event) {\n        return event;\n    }\n    const { canvas , currentDevicePixelRatio  } = chart;\n    const style = getComputedStyle(canvas);\n    const borderBox = style.boxSizing === 'border-box';\n    const paddings = getPositionedStyle(style, 'padding');\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const { x , y , box  } = getCanvasPosition(event, canvas);\n    const xOffset = paddings.left + (box && borders.left);\n    const yOffset = paddings.top + (box && borders.top);\n    let { width , height  } = chart;\n    if (borderBox) {\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    return {\n        x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n        y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n    };\n}\nfunction getContainerSize(canvas, width, height) {\n    let maxWidth, maxHeight;\n    if (width === undefined || height === undefined) {\n        const container = _getParentNode(canvas);\n        if (!container) {\n            width = canvas.clientWidth;\n            height = canvas.clientHeight;\n        } else {\n            const rect = container.getBoundingClientRect(); // this is the border box of the container\n            const containerStyle = getComputedStyle(container);\n            const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n            const containerPadding = getPositionedStyle(containerStyle, 'padding');\n            width = rect.width - containerPadding.width - containerBorder.width;\n            height = rect.height - containerPadding.height - containerBorder.height;\n            maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n            maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n        }\n    }\n    return {\n        width,\n        height,\n        maxWidth: maxWidth || INFINITY,\n        maxHeight: maxHeight || INFINITY\n    };\n}\nconst round1 = (v)=>Math.round(v * 10) / 10;\n// eslint-disable-next-line complexity\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n    const style = getComputedStyle(canvas);\n    const margins = getPositionedStyle(style, 'margin');\n    const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n    const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n    const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n    let { width , height  } = containerSize;\n    if (style.boxSizing === 'content-box') {\n        const borders = getPositionedStyle(style, 'border', 'width');\n        const paddings = getPositionedStyle(style, 'padding');\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    width = Math.max(0, width - margins.width);\n    height = Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height - margins.height);\n    width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n    height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n    if (width && !height) {\n        // https://github.com/chartjs/Chart.js/issues/4659\n        // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n        height = round1(width / 2);\n    }\n    const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n    if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n        height = containerSize.height;\n        width = round1(Math.floor(height * aspectRatio));\n    }\n    return {\n        width,\n        height\n    };\n}\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */ function retinaScale(chart, forceRatio, forceStyle) {\n    const pixelRatio = forceRatio || 1;\n    const deviceHeight = Math.floor(chart.height * pixelRatio);\n    const deviceWidth = Math.floor(chart.width * pixelRatio);\n    chart.height = deviceHeight / pixelRatio;\n    chart.width = deviceWidth / pixelRatio;\n    const canvas = chart.canvas;\n    // If no style has been set on the canvas, the render size is used as display size,\n    // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n    // See https://github.com/chartjs/Chart.js/issues/3575\n    if (canvas.style && (forceStyle || !canvas.style.height && !canvas.style.width)) {\n        canvas.style.height = `${chart.height}px`;\n        canvas.style.width = `${chart.width}px`;\n    }\n    if (chart.currentDevicePixelRatio !== pixelRatio || canvas.height !== deviceHeight || canvas.width !== deviceWidth) {\n        chart.currentDevicePixelRatio = pixelRatio;\n        canvas.height = deviceHeight;\n        canvas.width = deviceWidth;\n        chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n        return true;\n    }\n    return false;\n}\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */ const supportsEventListenerOptions = function() {\n    let passiveSupported = false;\n    try {\n        const options = {\n            get passive () {\n                passiveSupported = true;\n                return false;\n            }\n        };\n        window.addEventListener('test', null, options);\n        window.removeEventListener('test', null, options);\n    } catch (e) {\n    // continue regardless of error\n    }\n    return passiveSupported;\n}();\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */ function readUsedSize(element, property) {\n    const value = getStyle(element, property);\n    const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? +matches[1] : undefined;\n}\n\n/**\n * @private\n */ function _pointInLine(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: p1.y + t * (p2.y - p1.y)\n    };\n}\n/**\n * @private\n */ function _steppedInterpolation(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y : mode === 'after' ? t < 1 ? p1.y : p2.y : t > 0 ? p2.y : p1.y\n    };\n}\n/**\n * @private\n */ function _bezierInterpolation(p1, p2, t, mode) {\n    const cp1 = {\n        x: p1.cp2x,\n        y: p1.cp2y\n    };\n    const cp2 = {\n        x: p2.cp1x,\n        y: p2.cp1y\n    };\n    const a = _pointInLine(p1, cp1, t);\n    const b = _pointInLine(cp1, cp2, t);\n    const c = _pointInLine(cp2, p2, t);\n    const d = _pointInLine(a, b, t);\n    const e = _pointInLine(b, c, t);\n    return _pointInLine(d, e, t);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n    return {\n        x (x) {\n            return rectX + rectX + width - x;\n        },\n        setWidth (w) {\n            width = w;\n        },\n        textAlign (align) {\n            if (align === 'center') {\n                return align;\n            }\n            return align === 'right' ? 'left' : 'right';\n        },\n        xPlus (x, value) {\n            return x - value;\n        },\n        leftForLtr (x, itemWidth) {\n            return x - itemWidth;\n        }\n    };\n};\nconst getLeftToRightAdapter = function() {\n    return {\n        x (x) {\n            return x;\n        },\n        setWidth (w) {},\n        textAlign (align) {\n            return align;\n        },\n        xPlus (x, value) {\n            return x + value;\n        },\n        leftForLtr (x, _itemWidth) {\n            return x;\n        }\n    };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n    return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n    let style, original;\n    if (direction === 'ltr' || direction === 'rtl') {\n        style = ctx.canvas.style;\n        original = [\n            style.getPropertyValue('direction'),\n            style.getPropertyPriority('direction'), \n        ];\n        style.setProperty('direction', direction, 'important');\n        ctx.prevTextDirection = original;\n    }\n}\nfunction restoreTextDirection(ctx, original) {\n    if (original !== undefined) {\n        delete ctx.prevTextDirection;\n        ctx.canvas.style.setProperty('direction', original[0], original[1]);\n    }\n}\n\nfunction propertyFn(property) {\n    if (property === 'angle') {\n        return {\n            between: _angleBetween,\n            compare: _angleDiff,\n            normalize: _normalizeAngle\n        };\n    }\n    return {\n        between: _isBetween,\n        compare: (a, b)=>a - b,\n        normalize: (x)=>x\n    };\n}\nfunction normalizeSegment({ start , end , count , loop , style  }) {\n    return {\n        start: start % count,\n        end: end % count,\n        loop: loop && (end - start + 1) % count === 0,\n        style\n    };\n}\nfunction getSegment(segment, points, bounds) {\n    const { property , start: startBound , end: endBound  } = bounds;\n    const { between , normalize  } = propertyFn(property);\n    const count = points.length;\n    let { start , end , loop  } = segment;\n    let i, ilen;\n    if (loop) {\n        start += count;\n        end += count;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n                break;\n            }\n            start--;\n            end--;\n        }\n        start %= count;\n        end %= count;\n    }\n    if (end < start) {\n        end += count;\n    }\n    return {\n        start,\n        end,\n        loop,\n        style: segment.style\n    };\n}\n function _boundSegment(segment, points, bounds) {\n    if (!bounds) {\n        return [\n            segment\n        ];\n    }\n    const { property , start: startBound , end: endBound  } = bounds;\n    const count = points.length;\n    const { compare , between , normalize  } = propertyFn(property);\n    const { start , end , loop , style  } = getSegment(segment, points, bounds);\n    const result = [];\n    let inside = false;\n    let subStart = null;\n    let value, point, prevValue;\n    const startIsBefore = ()=>between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n    const endIsBefore = ()=>compare(endBound, value) === 0 || between(endBound, prevValue, value);\n    const shouldStart = ()=>inside || startIsBefore();\n    const shouldStop = ()=>!inside || endIsBefore();\n    for(let i = start, prev = start; i <= end; ++i){\n        point = points[i % count];\n        if (point.skip) {\n            continue;\n        }\n        value = normalize(point[property]);\n        if (value === prevValue) {\n            continue;\n        }\n        inside = between(value, startBound, endBound);\n        if (subStart === null && shouldStart()) {\n            subStart = compare(value, startBound) === 0 ? i : prev;\n        }\n        if (subStart !== null && shouldStop()) {\n            result.push(normalizeSegment({\n                start: subStart,\n                end: i,\n                loop,\n                count,\n                style\n            }));\n            subStart = null;\n        }\n        prev = i;\n        prevValue = value;\n    }\n    if (subStart !== null) {\n        result.push(normalizeSegment({\n            start: subStart,\n            end,\n            loop,\n            count,\n            style\n        }));\n    }\n    return result;\n}\n function _boundSegments(line, bounds) {\n    const result = [];\n    const segments = line.segments;\n    for(let i = 0; i < segments.length; i++){\n        const sub = _boundSegment(segments[i], line.points, bounds);\n        if (sub.length) {\n            result.push(...sub);\n        }\n    }\n    return result;\n}\n function findStartAndEnd(points, count, loop, spanGaps) {\n    let start = 0;\n    let end = count - 1;\n    if (loop && !spanGaps) {\n        while(start < count && !points[start].skip){\n            start++;\n        }\n    }\n    while(start < count && points[start].skip){\n        start++;\n    }\n    start %= count;\n    if (loop) {\n        end += start;\n    }\n    while(end > start && points[end % count].skip){\n        end--;\n    }\n    end %= count;\n    return {\n        start,\n        end\n    };\n}\n function solidSegments(points, start, max, loop) {\n    const count = points.length;\n    const result = [];\n    let last = start;\n    let prev = points[start];\n    let end;\n    for(end = start + 1; end <= max; ++end){\n        const cur = points[end % count];\n        if (cur.skip || cur.stop) {\n            if (!prev.skip) {\n                loop = false;\n                result.push({\n                    start: start % count,\n                    end: (end - 1) % count,\n                    loop\n                });\n                start = last = cur.stop ? end : null;\n            }\n        } else {\n            last = end;\n            if (prev.skip) {\n                start = end;\n            }\n        }\n        prev = cur;\n    }\n    if (last !== null) {\n        result.push({\n            start: start % count,\n            end: last % count,\n            loop\n        });\n    }\n    return result;\n}\n function _computeSegments(line, segmentOptions) {\n    const points = line.points;\n    const spanGaps = line.options.spanGaps;\n    const count = points.length;\n    if (!count) {\n        return [];\n    }\n    const loop = !!line._loop;\n    const { start , end  } = findStartAndEnd(points, count, loop, spanGaps);\n    if (spanGaps === true) {\n        return splitByStyles(line, [\n            {\n                start,\n                end,\n                loop\n            }\n        ], points, segmentOptions);\n    }\n    const max = end < start ? end + count : end;\n    const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n    return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n function splitByStyles(line, segments, points, segmentOptions) {\n    if (!segmentOptions || !segmentOptions.setContext || !points) {\n        return segments;\n    }\n    return doSplitByStyles(line, segments, points, segmentOptions);\n}\n function doSplitByStyles(line, segments, points, segmentOptions) {\n    const chartContext = line._chart.getContext();\n    const baseStyle = readStyle(line.options);\n    const { _datasetIndex: datasetIndex , options: { spanGaps  }  } = line;\n    const count = points.length;\n    const result = [];\n    let prevStyle = baseStyle;\n    let start = segments[0].start;\n    let i = start;\n    function addStyle(s, e, l, st) {\n        const dir = spanGaps ? -1 : 1;\n        if (s === e) {\n            return;\n        }\n        s += count;\n        while(points[s % count].skip){\n            s -= dir;\n        }\n        while(points[e % count].skip){\n            e += dir;\n        }\n        if (s % count !== e % count) {\n            result.push({\n                start: s % count,\n                end: e % count,\n                loop: l,\n                style: st\n            });\n            prevStyle = st;\n            start = e % count;\n        }\n    }\n    for (const segment of segments){\n        start = spanGaps ? start : segment.start;\n        let prev = points[start % count];\n        let style;\n        for(i = start + 1; i <= segment.end; i++){\n            const pt = points[i % count];\n            style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n                type: 'segment',\n                p0: prev,\n                p1: pt,\n                p0DataIndex: (i - 1) % count,\n                p1DataIndex: i % count,\n                datasetIndex\n            })));\n            if (styleChanged(style, prevStyle)) {\n                addStyle(start, i - 1, segment.loop, prevStyle);\n            }\n            prev = pt;\n            prevStyle = style;\n        }\n        if (start < i - 1) {\n            addStyle(start, i - 1, segment.loop, prevStyle);\n        }\n    }\n    return result;\n}\nfunction readStyle(options) {\n    return {\n        backgroundColor: options.backgroundColor,\n        borderCapStyle: options.borderCapStyle,\n        borderDash: options.borderDash,\n        borderDashOffset: options.borderDashOffset,\n        borderJoinStyle: options.borderJoinStyle,\n        borderWidth: options.borderWidth,\n        borderColor: options.borderColor\n    };\n}\nfunction styleChanged(style, prevStyle) {\n    return prevStyle && JSON.stringify(style) !== JSON.stringify(prevStyle);\n}\n\nexport { unclipArea as $, _rlookupByKey as A, _lookupByKey as B, _isPointInArea as C, getAngleFromPoint as D, toPadding as E, each as F, getMaximumSize as G, HALF_PI as H, _getParentNode as I, readUsedSize as J, supportsEventListenerOptions as K, throttled as L, _isDomSupported as M, _factorize as N, finiteOrDefault as O, PI as P, callback as Q, _addGrace as R, _limitValue as S, TAU as T, toDegrees as U, _measureText as V, _int16Range as W, _alignPixel as X, clipArea as Y, renderText as Z, _arrayUnique as _, resolve as a, fontString as a$, toFont as a0, _toLeftRightCenter as a1, _alignStartEnd as a2, overrides as a3, merge as a4, _capitalize as a5, descriptors as a6, isFunction as a7, _attachContext as a8, _createResolver as a9, overrideTextDirection as aA, _textX as aB, restoreTextDirection as aC, drawPointLegend as aD, distanceBetweenPoints as aE, noop as aF, _setMinAndMaxByKey as aG, niceNum as aH, almostWhole as aI, almostEquals as aJ, _decimalPlaces as aK, Ticks as aL, log10 as aM, _longestText as aN, _filterBetween as aO, _lookup as aP, isPatternOrGradient as aQ, getHoverColor as aR, clone$1 as aS, _merger as aT, _mergerIf as aU, _deprecated as aV, _splitKey as aW, toFontString as aX, splineCurve as aY, splineCurveMonotone as aZ, getStyle as a_, _descriptors as aa, mergeIf as ab, uid as ac, debounce as ad, retinaScale as ae, clearCanvas as af, setsEqual as ag, _elementsEqual as ah, _isClickEvent as ai, _isBetween as aj, _readValueToProps as ak, _updateBezierControlPoints as al, _computeSegments as am, _boundSegments as an, _steppedInterpolation as ao, _bezierInterpolation as ap, _pointInLine as aq, _steppedLineTo as ar, _bezierCurveTo as as, drawPoint as at, addRoundedRectPath as au, toTRBL as av, toTRBLCorners as aw, _boundSegment as ax, _normalizeAngle as ay, getRtlAdapter as az, isArray as b, toLineHeight as b0, PITAU as b1, INFINITY as b2, RAD_PER_DEG as b3, QUARTER_PI as b4, TWO_THIRDS_PI as b5, _angleDiff as b6, color as c, defaults as d, effects$1 as e, resolveObjectKey as f, isNumberFinite as g, defined as h, isObject as i, createContext as j, isNullOrUndef as k, listenArrayEvents as l, toPercentage as m, toDimension as n, formatNumber as o, _angleBetween as p, _getStartAndCountOfVisiblePoints as q, requestAnimFrame as r, sign as s, toRadians as t, unlistenArrayEvents as u, valueOrDefault as v, _scaleRangesChanged as w, isNumber as x, _parseObjectDataRadialScale as y, getRelativePosition as z };\n//# sourceMappingURL=helpers.segment.js.map\n","/*!\n * Chart.js v4.0.1\n * https://www.chartjs.org\n * (c) 2022 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, i as isObject, d as defaults, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as createContext, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, T as TAU, m as toPercentage, n as toDimension, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as _getStartAndCountOfVisiblePoints, w as _scaleRangesChanged, x as isNumber, y as _parseObjectDataRadialScale, z as getRelativePosition, A as _rlookupByKey, B as _lookupByKey, C as _isPointInArea, D as getAngleFromPoint, E as toPadding, F as each, G as getMaximumSize, I as _getParentNode, J as readUsedSize, K as supportsEventListenerOptions, L as throttled, M as _isDomSupported, N as _factorize, O as finiteOrDefault, Q as callback, R as _addGrace, S as _limitValue, U as toDegrees, V as _measureText, W as _int16Range, X as _alignPixel, Y as clipArea, Z as renderText, $ as unclipArea, a0 as toFont, a1 as _toLeftRightCenter, a2 as _alignStartEnd, a3 as overrides, a4 as merge, a5 as _capitalize, a6 as descriptors, a7 as isFunction, a8 as _attachContext, a9 as _createResolver, aa as _descriptors, ab as mergeIf, ac as uid, ad as debounce, ae as retinaScale, af as clearCanvas, ag as setsEqual, ah as _elementsEqual, ai as _isClickEvent, aj as _isBetween, ak as _readValueToProps, al as _updateBezierControlPoints, am as _computeSegments, an as _boundSegments, ao as _steppedInterpolation, ap as _bezierInterpolation, aq as _pointInLine, ar as _steppedLineTo, as as _bezierCurveTo, at as drawPoint, au as addRoundedRectPath, av as toTRBL, aw as toTRBLCorners, ax as _boundSegment, ay as _normalizeAngle, az as getRtlAdapter, aA as overrideTextDirection, aB as _textX, aC as restoreTextDirection, aD as drawPointLegend, aE as distanceBetweenPoints, aF as noop, aG as _setMinAndMaxByKey, aH as niceNum, aI as almostWhole, aJ as almostEquals, aK as _decimalPlaces, aL as Ticks, aM as log10, aN as _longestText, aO as _filterBetween, aP as _lookup } from './chunks/helpers.segment.js';\nexport { aL as Ticks, d as defaults } from './chunks/helpers.segment.js';\n\nclass Animator {\n    constructor(){\n        this._request = null;\n        this._charts = new Map();\n        this._running = false;\n        this._lastDate = undefined;\n    }\n _notify(chart, anims, date, type) {\n        const callbacks = anims.listeners[type];\n        const numSteps = anims.duration;\n        callbacks.forEach((fn)=>fn({\n                chart,\n                initial: anims.initial,\n                numSteps,\n                currentStep: Math.min(date - anims.start, numSteps)\n            }));\n    }\n _refresh() {\n        if (this._request) {\n            return;\n        }\n        this._running = true;\n        this._request = requestAnimFrame.call(window, ()=>{\n            this._update();\n            this._request = null;\n            if (this._running) {\n                this._refresh();\n            }\n        });\n    }\n _update(date = Date.now()) {\n        let remaining = 0;\n        this._charts.forEach((anims, chart)=>{\n            if (!anims.running || !anims.items.length) {\n                return;\n            }\n            const items = anims.items;\n            let i = items.length - 1;\n            let draw = false;\n            let item;\n            for(; i >= 0; --i){\n                item = items[i];\n                if (item._active) {\n                    if (item._total > anims.duration) {\n                        anims.duration = item._total;\n                    }\n                    item.tick(date);\n                    draw = true;\n                } else {\n                    items[i] = items[items.length - 1];\n                    items.pop();\n                }\n            }\n            if (draw) {\n                chart.draw();\n                this._notify(chart, anims, date, 'progress');\n            }\n            if (!items.length) {\n                anims.running = false;\n                this._notify(chart, anims, date, 'complete');\n                anims.initial = false;\n            }\n            remaining += items.length;\n        });\n        this._lastDate = date;\n        if (remaining === 0) {\n            this._running = false;\n        }\n    }\n _getAnims(chart) {\n        const charts = this._charts;\n        let anims = charts.get(chart);\n        if (!anims) {\n            anims = {\n                running: false,\n                initial: true,\n                items: [],\n                listeners: {\n                    complete: [],\n                    progress: []\n                }\n            };\n            charts.set(chart, anims);\n        }\n        return anims;\n    }\n listen(chart, event, cb) {\n        this._getAnims(chart).listeners[event].push(cb);\n    }\n add(chart, items) {\n        if (!items || !items.length) {\n            return;\n        }\n        this._getAnims(chart).items.push(...items);\n    }\n has(chart) {\n        return this._getAnims(chart).items.length > 0;\n    }\n start(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims) {\n            return;\n        }\n        anims.running = true;\n        anims.start = Date.now();\n        anims.duration = anims.items.reduce((acc, cur)=>Math.max(acc, cur._duration), 0);\n        this._refresh();\n    }\n    running(chart) {\n        if (!this._running) {\n            return false;\n        }\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.running || !anims.items.length) {\n            return false;\n        }\n        return true;\n    }\n stop(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.items.length) {\n            return;\n        }\n        const items = anims.items;\n        let i = items.length - 1;\n        for(; i >= 0; --i){\n            items[i].cancel();\n        }\n        anims.items = [];\n        this._notify(chart, anims, Date.now(), 'complete');\n    }\n remove(chart) {\n        return this._charts.delete(chart);\n    }\n}\nvar animator = /* #__PURE__ */ new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n    boolean (from, to, factor) {\n        return factor > 0.5 ? to : from;\n    },\n color (from, to, factor) {\n        const c0 = color(from || transparent);\n        const c1 = c0.valid && color(to || transparent);\n        return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n    },\n    number (from, to, factor) {\n        return from + (to - from) * factor;\n    }\n};\nclass Animation {\n    constructor(cfg, target, prop, to){\n        const currentValue = target[prop];\n        to = resolve([\n            cfg.to,\n            to,\n            currentValue,\n            cfg.from\n        ]);\n        const from = resolve([\n            cfg.from,\n            currentValue,\n            to\n        ]);\n        this._active = true;\n        this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n        this._easing = effects[cfg.easing] || effects.linear;\n        this._start = Math.floor(Date.now() + (cfg.delay || 0));\n        this._duration = this._total = Math.floor(cfg.duration);\n        this._loop = !!cfg.loop;\n        this._target = target;\n        this._prop = prop;\n        this._from = from;\n        this._to = to;\n        this._promises = undefined;\n    }\n    active() {\n        return this._active;\n    }\n    update(cfg, to, date) {\n        if (this._active) {\n            this._notify(false);\n            const currentValue = this._target[this._prop];\n            const elapsed = date - this._start;\n            const remain = this._duration - elapsed;\n            this._start = date;\n            this._duration = Math.floor(Math.max(remain, cfg.duration));\n            this._total += elapsed;\n            this._loop = !!cfg.loop;\n            this._to = resolve([\n                cfg.to,\n                to,\n                currentValue,\n                cfg.from\n            ]);\n            this._from = resolve([\n                cfg.from,\n                currentValue,\n                to\n            ]);\n        }\n    }\n    cancel() {\n        if (this._active) {\n            this.tick(Date.now());\n            this._active = false;\n            this._notify(false);\n        }\n    }\n    tick(date) {\n        const elapsed = date - this._start;\n        const duration = this._duration;\n        const prop = this._prop;\n        const from = this._from;\n        const loop = this._loop;\n        const to = this._to;\n        let factor;\n        this._active = from !== to && (loop || elapsed < duration);\n        if (!this._active) {\n            this._target[prop] = to;\n            this._notify(true);\n            return;\n        }\n        if (elapsed < 0) {\n            this._target[prop] = from;\n            return;\n        }\n        factor = elapsed / duration % 2;\n        factor = loop && factor > 1 ? 2 - factor : factor;\n        factor = this._easing(Math.min(1, Math.max(0, factor)));\n        this._target[prop] = this._fn(from, to, factor);\n    }\n    wait() {\n        const promises = this._promises || (this._promises = []);\n        return new Promise((res, rej)=>{\n            promises.push({\n                res,\n                rej\n            });\n        });\n    }\n    _notify(resolved) {\n        const method = resolved ? 'res' : 'rej';\n        const promises = this._promises || [];\n        for(let i = 0; i < promises.length; i++){\n            promises[i][method]();\n        }\n    }\n}\n\nclass Animations {\n    constructor(chart, config){\n        this._chart = chart;\n        this._properties = new Map();\n        this.configure(config);\n    }\n    configure(config) {\n        if (!isObject(config)) {\n            return;\n        }\n        const animationOptions = Object.keys(defaults.animation);\n        const animatedProps = this._properties;\n        Object.getOwnPropertyNames(config).forEach((key)=>{\n            const cfg = config[key];\n            if (!isObject(cfg)) {\n                return;\n            }\n            const resolved = {};\n            for (const option of animationOptions){\n                resolved[option] = cfg[option];\n            }\n            (isArray(cfg.properties) && cfg.properties || [\n                key\n            ]).forEach((prop)=>{\n                if (prop === key || !animatedProps.has(prop)) {\n                    animatedProps.set(prop, resolved);\n                }\n            });\n        });\n    }\n _animateOptions(target, values) {\n        const newOptions = values.options;\n        const options = resolveTargetOptions(target, newOptions);\n        if (!options) {\n            return [];\n        }\n        const animations = this._createAnimations(options, newOptions);\n        if (newOptions.$shared) {\n            awaitAll(target.options.$animations, newOptions).then(()=>{\n                target.options = newOptions;\n            }, ()=>{\n            });\n        }\n        return animations;\n    }\n _createAnimations(target, values) {\n        const animatedProps = this._properties;\n        const animations = [];\n        const running = target.$animations || (target.$animations = {});\n        const props = Object.keys(values);\n        const date = Date.now();\n        let i;\n        for(i = props.length - 1; i >= 0; --i){\n            const prop = props[i];\n            if (prop.charAt(0) === '$') {\n                continue;\n            }\n            if (prop === 'options') {\n                animations.push(...this._animateOptions(target, values));\n                continue;\n            }\n            const value = values[prop];\n            let animation = running[prop];\n            const cfg = animatedProps.get(prop);\n            if (animation) {\n                if (cfg && animation.active()) {\n                    animation.update(cfg, value, date);\n                    continue;\n                } else {\n                    animation.cancel();\n                }\n            }\n            if (!cfg || !cfg.duration) {\n                target[prop] = value;\n                continue;\n            }\n            running[prop] = animation = new Animation(cfg, target, prop, value);\n            animations.push(animation);\n        }\n        return animations;\n    }\n update(target, values) {\n        if (this._properties.size === 0) {\n            Object.assign(target, values);\n            return;\n        }\n        const animations = this._createAnimations(target, values);\n        if (animations.length) {\n            animator.add(this._chart, animations);\n            return true;\n        }\n    }\n}function awaitAll(animations, properties) {\n    const running = [];\n    const keys = Object.keys(properties);\n    for(let i = 0; i < keys.length; i++){\n        const anim = animations[keys[i]];\n        if (anim && anim.active()) {\n            running.push(anim.wait());\n        }\n    }\n    return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n    if (!newOptions) {\n        return;\n    }\n    let options = target.options;\n    if (!options) {\n        target.options = newOptions;\n        return;\n    }\n    if (options.$shared) {\n        target.options = options = Object.assign({}, options, {\n            $shared: false,\n            $animations: {}\n        });\n    }\n    return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n    const opts = scale && scale.options || {};\n    const reverse = opts.reverse;\n    const min = opts.min === undefined ? allowedOverflow : 0;\n    const max = opts.max === undefined ? allowedOverflow : 0;\n    return {\n        start: reverse ? max : min,\n        end: reverse ? min : max\n    };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n    if (allowedOverflow === false) {\n        return false;\n    }\n    const x = scaleClip(xScale, allowedOverflow);\n    const y = scaleClip(yScale, allowedOverflow);\n    return {\n        top: y.end,\n        right: x.end,\n        bottom: y.start,\n        left: x.start\n    };\n}\nfunction toClip(value) {\n    let t, r, b, l;\n    if (isObject(value)) {\n        t = value.top;\n        r = value.right;\n        b = value.bottom;\n        l = value.left;\n    } else {\n        t = r = b = l = value;\n    }\n    return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        disabled: value === false\n    };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n    const keys = [];\n    const metasets = chart._getSortedDatasetMetas(filterVisible);\n    let i, ilen;\n    for(i = 0, ilen = metasets.length; i < ilen; ++i){\n        keys.push(metasets[i].index);\n    }\n    return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n    const keys = stack.keys;\n    const singleMode = options.mode === 'single';\n    let i, ilen, datasetIndex, otherValue;\n    if (value === null) {\n        return;\n    }\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        datasetIndex = +keys[i];\n        if (datasetIndex === dsIndex) {\n            if (options.all) {\n                continue;\n            }\n            break;\n        }\n        otherValue = stack.values[datasetIndex];\n        if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n            value += otherValue;\n        }\n    }\n    return value;\n}\nfunction convertObjectDataToArray(data) {\n    const keys = Object.keys(data);\n    const adata = new Array(keys.length);\n    let i, ilen, key;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        key = keys[i];\n        adata[i] = {\n            x: key,\n            y: data[key]\n        };\n    }\n    return adata;\n}\nfunction isStacked(scale, meta) {\n    const stacked = scale && scale.options.stacked;\n    return stacked || stacked === undefined && meta.stack !== undefined;\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n    return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n    const { min , max , minDefined , maxDefined  } = scale.getUserBounds();\n    return {\n        min: minDefined ? min : Number.NEGATIVE_INFINITY,\n        max: maxDefined ? max : Number.POSITIVE_INFINITY\n    };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n    const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n    return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n    for (const meta of vScale.getMatchingVisibleMetas(type).reverse()){\n        const value = stack[meta.index];\n        if (positive && value > 0 || !positive && value < 0) {\n            return meta.index;\n        }\n    }\n    return null;\n}\nfunction updateStacks(controller, parsed) {\n    const { chart , _cachedMeta: meta  } = controller;\n    const stacks = chart._stacks || (chart._stacks = {});\n    const { iScale , vScale , index: datasetIndex  } = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const key = getStackKey(iScale, vScale, meta);\n    const ilen = parsed.length;\n    let stack;\n    for(let i = 0; i < ilen; ++i){\n        const item = parsed[i];\n        const { [iAxis]: index , [vAxis]: value  } = item;\n        const itemStacks = item._stacks || (item._stacks = {});\n        stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n        stack[datasetIndex] = value;\n        stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n        stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n    }\n}\nfunction getFirstScaleId(chart, axis) {\n    const scales = chart.scales;\n    return Object.keys(scales).filter((key)=>scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n    return createContext(parent, {\n        active: false,\n        dataset: undefined,\n        datasetIndex: index,\n        index,\n        mode: 'default',\n        type: 'dataset'\n    });\n}\nfunction createDataContext(parent, index, element) {\n    return createContext(parent, {\n        active: false,\n        dataIndex: index,\n        parsed: undefined,\n        raw: undefined,\n        element,\n        index,\n        mode: 'default',\n        type: 'data'\n    });\n}\nfunction clearStacks(meta, items) {\n    const datasetIndex = meta.controller.index;\n    const axis = meta.vScale && meta.vScale.axis;\n    if (!axis) {\n        return;\n    }\n    items = items || meta._parsed;\n    for (const parsed of items){\n        const stacks = parsed._stacks;\n        if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n            return;\n        }\n        delete stacks[axis][datasetIndex];\n    }\n}\nconst isDirectUpdateMode = (mode)=>mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared)=>shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart)=>canStack && !meta.hidden && meta._stacked && {\n        keys: getSortedDatasetIndices(chart, true),\n        values: null\n    };\nclass DatasetController {\n static defaults = {};\n static datasetElementType = null;\n static dataElementType = null;\n constructor(chart, datasetIndex){\n        this.chart = chart;\n        this._ctx = chart.ctx;\n        this.index = datasetIndex;\n        this._cachedDataOpts = {};\n        this._cachedMeta = this.getMeta();\n        this._type = this._cachedMeta.type;\n        this.options = undefined;\n         this._parsing = false;\n        this._data = undefined;\n        this._objectData = undefined;\n        this._sharedOptions = undefined;\n        this._drawStart = undefined;\n        this._drawCount = undefined;\n        this.enableOptionSharing = false;\n        this.supportsDecimation = false;\n        this.$context = undefined;\n        this._syncList = [];\n        this.datasetElementType = new.target.datasetElementType;\n        this.dataElementType = new.target.dataElementType;\n        this.initialize();\n    }\n    initialize() {\n        const meta = this._cachedMeta;\n        this.configure();\n        this.linkScales();\n        meta._stacked = isStacked(meta.vScale, meta);\n        this.addElements();\n        if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n            console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n        }\n    }\n    updateIndex(datasetIndex) {\n        if (this.index !== datasetIndex) {\n            clearStacks(this._cachedMeta);\n        }\n        this.index = datasetIndex;\n    }\n    linkScales() {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        const chooseId = (axis, x, y, r)=>axis === 'x' ? x : axis === 'r' ? r : y;\n        const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n        const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n        const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n        const indexAxis = meta.indexAxis;\n        const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n        const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n        meta.xScale = this.getScaleForId(xid);\n        meta.yScale = this.getScaleForId(yid);\n        meta.rScale = this.getScaleForId(rid);\n        meta.iScale = this.getScaleForId(iid);\n        meta.vScale = this.getScaleForId(vid);\n    }\n    getDataset() {\n        return this.chart.data.datasets[this.index];\n    }\n    getMeta() {\n        return this.chart.getDatasetMeta(this.index);\n    }\n getScaleForId(scaleID) {\n        return this.chart.scales[scaleID];\n    }\n _getOtherScale(scale) {\n        const meta = this._cachedMeta;\n        return scale === meta.iScale ? meta.vScale : meta.iScale;\n    }\n    reset() {\n        this._update('reset');\n    }\n _destroy() {\n        const meta = this._cachedMeta;\n        if (this._data) {\n            unlistenArrayEvents(this._data, this);\n        }\n        if (meta._stacked) {\n            clearStacks(meta);\n        }\n    }\n _dataCheck() {\n        const dataset = this.getDataset();\n        const data = dataset.data || (dataset.data = []);\n        const _data = this._data;\n        if (isObject(data)) {\n            this._data = convertObjectDataToArray(data);\n        } else if (_data !== data) {\n            if (_data) {\n                unlistenArrayEvents(_data, this);\n                const meta = this._cachedMeta;\n                clearStacks(meta);\n                meta._parsed = [];\n            }\n            if (data && Object.isExtensible(data)) {\n                listenArrayEvents(data, this);\n            }\n            this._syncList = [];\n            this._data = data;\n        }\n    }\n    addElements() {\n        const meta = this._cachedMeta;\n        this._dataCheck();\n        if (this.datasetElementType) {\n            meta.dataset = new this.datasetElementType();\n        }\n    }\n    buildOrUpdateElements(resetNewElements) {\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        let stackChanged = false;\n        this._dataCheck();\n        const oldStacked = meta._stacked;\n        meta._stacked = isStacked(meta.vScale, meta);\n        if (meta.stack !== dataset.stack) {\n            stackChanged = true;\n            clearStacks(meta);\n            meta.stack = dataset.stack;\n        }\n        this._resyncElements(resetNewElements);\n        if (stackChanged || oldStacked !== meta._stacked) {\n            updateStacks(this, meta._parsed);\n        }\n    }\n configure() {\n        const config = this.chart.config;\n        const scopeKeys = config.datasetScopeKeys(this._type);\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n        this.options = config.createResolver(scopes, this.getContext());\n        this._parsing = this.options.parsing;\n        this._cachedDataOpts = {};\n    }\n parse(start, count) {\n        const { _cachedMeta: meta , _data: data  } = this;\n        const { iScale , _stacked  } = meta;\n        const iAxis = iScale.axis;\n        let sorted = start === 0 && count === data.length ? true : meta._sorted;\n        let prev = start > 0 && meta._parsed[start - 1];\n        let i, cur, parsed;\n        if (this._parsing === false) {\n            meta._parsed = data;\n            meta._sorted = true;\n            parsed = data;\n        } else {\n            if (isArray(data[start])) {\n                parsed = this.parseArrayData(meta, data, start, count);\n            } else if (isObject(data[start])) {\n                parsed = this.parseObjectData(meta, data, start, count);\n            } else {\n                parsed = this.parsePrimitiveData(meta, data, start, count);\n            }\n            const isNotInOrderComparedToPrev = ()=>cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n            for(i = 0; i < count; ++i){\n                meta._parsed[i + start] = cur = parsed[i];\n                if (sorted) {\n                    if (isNotInOrderComparedToPrev()) {\n                        sorted = false;\n                    }\n                    prev = cur;\n                }\n            }\n            meta._sorted = sorted;\n        }\n        if (_stacked) {\n            updateStacks(this, parsed);\n        }\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const labels = iScale.getLabels();\n        const singleScale = iScale === vScale;\n        const parsed = new Array(count);\n        let i, ilen, index;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            parsed[i] = {\n                [iAxis]: singleScale || iScale.parse(labels[index], index),\n                [vAxis]: vScale.parse(data[index], index)\n            };\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(item[0], index),\n                y: yScale.parse(item[1], index)\n            };\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n                y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n            };\n        }\n        return parsed;\n    }\n getParsed(index) {\n        return this._cachedMeta._parsed[index];\n    }\n getDataElement(index) {\n        return this._cachedMeta.data[index];\n    }\n applyStack(scale, parsed, mode) {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const value = parsed[scale.axis];\n        const stack = {\n            keys: getSortedDatasetIndices(chart, true),\n            values: parsed._stacks[scale.axis]\n        };\n        return applyStack(stack, value, meta.index, {\n            mode\n        });\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        const parsedValue = parsed[scale.axis];\n        let value = parsedValue === null ? NaN : parsedValue;\n        const values = stack && parsed._stacks[scale.axis];\n        if (stack && values) {\n            stack.values = values;\n            value = applyStack(stack, parsedValue, this._cachedMeta.index);\n        }\n        range.min = Math.min(range.min, value);\n        range.max = Math.max(range.max, value);\n    }\n getMinMax(scale, canStack) {\n        const meta = this._cachedMeta;\n        const _parsed = meta._parsed;\n        const sorted = meta._sorted && scale === meta.iScale;\n        const ilen = _parsed.length;\n        const otherScale = this._getOtherScale(scale);\n        const stack = createStack(canStack, meta, this.chart);\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        const { min: otherMin , max: otherMax  } = getUserBounds(otherScale);\n        let i, parsed;\n        function _skip() {\n            parsed = _parsed[i];\n            const otherValue = parsed[otherScale.axis];\n            return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n        }\n        for(i = 0; i < ilen; ++i){\n            if (_skip()) {\n                continue;\n            }\n            this.updateRangeFromParsed(range, scale, parsed, stack);\n            if (sorted) {\n                break;\n            }\n        }\n        if (sorted) {\n            for(i = ilen - 1; i >= 0; --i){\n                if (_skip()) {\n                    continue;\n                }\n                this.updateRangeFromParsed(range, scale, parsed, stack);\n                break;\n            }\n        }\n        return range;\n    }\n    getAllParsedValues(scale) {\n        const parsed = this._cachedMeta._parsed;\n        const values = [];\n        let i, ilen, value;\n        for(i = 0, ilen = parsed.length; i < ilen; ++i){\n            value = parsed[i][scale.axis];\n            if (isNumberFinite(value)) {\n                values.push(value);\n            }\n        }\n        return values;\n    }\n getMaxOverflow() {\n        return false;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const vScale = meta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n            value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n        };\n    }\n _update(mode) {\n        const meta = this._cachedMeta;\n        this.update(mode || 'default');\n        meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n    }\n update(mode) {}\n    draw() {\n        const ctx = this._ctx;\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const elements = meta.data || [];\n        const area = chart.chartArea;\n        const active = [];\n        const start = this._drawStart || 0;\n        const count = this._drawCount || elements.length - start;\n        const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n        let i;\n        if (meta.dataset) {\n            meta.dataset.draw(ctx, area, start, count);\n        }\n        for(i = start; i < start + count; ++i){\n            const element = elements[i];\n            if (element.hidden) {\n                continue;\n            }\n            if (element.active && drawActiveElementsOnTop) {\n                active.push(element);\n            } else {\n                element.draw(ctx, area);\n            }\n        }\n        for(i = 0; i < active.length; ++i){\n            active[i].draw(ctx, area);\n        }\n    }\n getStyle(index, active) {\n        const mode = active ? 'active' : 'default';\n        return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n    }\n getContext(index, active, mode) {\n        const dataset = this.getDataset();\n        let context;\n        if (index >= 0 && index < this._cachedMeta.data.length) {\n            const element = this._cachedMeta.data[index];\n            context = element.$context || (element.$context = createDataContext(this.getContext(), index, element));\n            context.parsed = this.getParsed(index);\n            context.raw = dataset.data[index];\n            context.index = context.dataIndex = index;\n        } else {\n            context = this.$context || (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n            context.dataset = dataset;\n            context.index = context.datasetIndex = this.index;\n        }\n        context.active = !!active;\n        context.mode = mode;\n        return context;\n    }\n resolveDatasetElementOptions(mode) {\n        return this._resolveElementOptions(this.datasetElementType.id, mode);\n    }\n resolveDataElementOptions(index, mode) {\n        return this._resolveElementOptions(this.dataElementType.id, mode, index);\n    }\n _resolveElementOptions(elementType, mode = 'default', index) {\n        const active = mode === 'active';\n        const cache = this._cachedDataOpts;\n        const cacheKey = elementType + '-' + mode;\n        const cached = cache[cacheKey];\n        const sharing = this.enableOptionSharing && defined(index);\n        if (cached) {\n            return cloneIfNotShared(cached, sharing);\n        }\n        const config = this.chart.config;\n        const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n        const prefixes = active ? [\n            `${elementType}Hover`,\n            'hover',\n            elementType,\n            ''\n        ] : [\n            elementType,\n            ''\n        ];\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n        const names = Object.keys(defaults.elements[elementType]);\n        const context = ()=>this.getContext(index, active);\n        const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n        if (values.$shared) {\n            values.$shared = sharing;\n            cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n        }\n        return values;\n    }\n _resolveAnimations(index, transition, active) {\n        const chart = this.chart;\n        const cache = this._cachedDataOpts;\n        const cacheKey = `animation-${transition}`;\n        const cached = cache[cacheKey];\n        if (cached) {\n            return cached;\n        }\n        let options;\n        if (chart.options.animation !== false) {\n            const config = this.chart.config;\n            const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n            const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n            options = config.createResolver(scopes, this.getContext(index, active, transition));\n        }\n        const animations = new Animations(chart, options && options.animations);\n        if (options && options._cacheable) {\n            cache[cacheKey] = Object.freeze(animations);\n        }\n        return animations;\n    }\n getSharedOptions(options) {\n        if (!options.$shared) {\n            return;\n        }\n        return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n    }\n includeOptions(mode, sharedOptions) {\n        return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n    }\n _getSharedOptions(start, mode) {\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const previouslySharedOptions = this._sharedOptions;\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions) || sharedOptions !== previouslySharedOptions;\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n        return {\n            sharedOptions,\n            includeOptions\n        };\n    }\n updateElement(element, index, properties, mode) {\n        if (isDirectUpdateMode(mode)) {\n            Object.assign(element, properties);\n        } else {\n            this._resolveAnimations(index, mode).update(element, properties);\n        }\n    }\n updateSharedOptions(sharedOptions, mode, newOptions) {\n        if (sharedOptions && !isDirectUpdateMode(mode)) {\n            this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n        }\n    }\n _setStyle(element, index, mode, active) {\n        element.active = active;\n        const options = this.getStyle(index, active);\n        this._resolveAnimations(index, mode, active).update(element, {\n            options: !active && this.getSharedOptions(options) || options\n        });\n    }\n    removeHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', false);\n    }\n    setHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', true);\n    }\n _removeDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', false);\n        }\n    }\n _setDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', true);\n        }\n    }\n _resyncElements(resetNewElements) {\n        const data = this._data;\n        const elements = this._cachedMeta.data;\n        for (const [method, arg1, arg2] of this._syncList){\n            this[method](arg1, arg2);\n        }\n        this._syncList = [];\n        const numMeta = elements.length;\n        const numData = data.length;\n        const count = Math.min(numData, numMeta);\n        if (count) {\n            this.parse(0, count);\n        }\n        if (numData > numMeta) {\n            this._insertElements(numMeta, numData - numMeta, resetNewElements);\n        } else if (numData < numMeta) {\n            this._removeElements(numData, numMeta - numData);\n        }\n    }\n _insertElements(start, count, resetNewElements = true) {\n        const meta = this._cachedMeta;\n        const data = meta.data;\n        const end = start + count;\n        let i;\n        const move = (arr)=>{\n            arr.length += count;\n            for(i = arr.length - 1; i >= end; i--){\n                arr[i] = arr[i - count];\n            }\n        };\n        move(data);\n        for(i = start; i < end; ++i){\n            data[i] = new this.dataElementType();\n        }\n        if (this._parsing) {\n            move(meta._parsed);\n        }\n        this.parse(start, count);\n        if (resetNewElements) {\n            this.updateElements(data, start, count, 'reset');\n        }\n    }\n    updateElements(element, start, count, mode) {}\n _removeElements(start, count) {\n        const meta = this._cachedMeta;\n        if (this._parsing) {\n            const removed = meta._parsed.splice(start, count);\n            if (meta._stacked) {\n                clearStacks(meta, removed);\n            }\n        }\n        meta.data.splice(start, count);\n    }\n _sync(args) {\n        if (this._parsing) {\n            this._syncList.push(args);\n        } else {\n            const [method, arg1, arg2] = args;\n            this[method](arg1, arg2);\n        }\n        this.chart._dataChanges.push([\n            this.index,\n            ...args\n        ]);\n    }\n    _onDataPush() {\n        const count = arguments.length;\n        this._sync([\n            '_insertElements',\n            this.getDataset().data.length - count,\n            count\n        ]);\n    }\n    _onDataPop() {\n        this._sync([\n            '_removeElements',\n            this._cachedMeta.data.length - 1,\n            1\n        ]);\n    }\n    _onDataShift() {\n        this._sync([\n            '_removeElements',\n            0,\n            1\n        ]);\n    }\n    _onDataSplice(start, count) {\n        if (count) {\n            this._sync([\n                '_removeElements',\n                start,\n                count\n            ]);\n        }\n        const newCount = arguments.length - 2;\n        if (newCount) {\n            this._sync([\n                '_insertElements',\n                start,\n                newCount\n            ]);\n        }\n    }\n    _onDataUnshift() {\n        this._sync([\n            '_insertElements',\n            0,\n            arguments.length\n        ]);\n    }\n}\n\nfunction getAllScaleValues(scale, type) {\n    if (!scale._cache.$bar) {\n        const visibleMetas = scale.getMatchingVisibleMetas(type);\n        let values = [];\n        for(let i = 0, ilen = visibleMetas.length; i < ilen; i++){\n            values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n        }\n        scale._cache.$bar = _arrayUnique(values.sort((a, b)=>a - b));\n    }\n    return scale._cache.$bar;\n}\n function computeMinSampleSize(meta) {\n    const scale = meta.iScale;\n    const values = getAllScaleValues(scale, meta.type);\n    let min = scale._length;\n    let i, ilen, curr, prev;\n    const updateMinAndPrev = ()=>{\n        if (curr === 32767 || curr === -32768) {\n            return;\n        }\n        if (defined(prev)) {\n            min = Math.min(min, Math.abs(curr - prev) || min);\n        }\n        prev = curr;\n    };\n    for(i = 0, ilen = values.length; i < ilen; ++i){\n        curr = scale.getPixelForValue(values[i]);\n        updateMinAndPrev();\n    }\n    prev = undefined;\n    for(i = 0, ilen = scale.ticks.length; i < ilen; ++i){\n        curr = scale.getPixelForTick(i);\n        updateMinAndPrev();\n    }\n    return min;\n}\n function computeFitCategoryTraits(index, ruler, options, stackCount) {\n    const thickness = options.barThickness;\n    let size, ratio;\n    if (isNullOrUndef(thickness)) {\n        size = ruler.min * options.categoryPercentage;\n        ratio = options.barPercentage;\n    } else {\n        size = thickness * stackCount;\n        ratio = 1;\n    }\n    return {\n        chunk: size / stackCount,\n        ratio,\n        start: ruler.pixels[index] - size / 2\n    };\n}\n function computeFlexCategoryTraits(index, ruler, options, stackCount) {\n    const pixels = ruler.pixels;\n    const curr = pixels[index];\n    let prev = index > 0 ? pixels[index - 1] : null;\n    let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    const percent = options.categoryPercentage;\n    if (prev === null) {\n        prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n    if (next === null) {\n        next = curr + curr - prev;\n    }\n    const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    const size = Math.abs(next - prev) / 2 * percent;\n    return {\n        chunk: size / stackCount,\n        ratio: options.barPercentage,\n        start\n    };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n    const startValue = vScale.parse(entry[0], i);\n    const endValue = vScale.parse(entry[1], i);\n    const min = Math.min(startValue, endValue);\n    const max = Math.max(startValue, endValue);\n    let barStart = min;\n    let barEnd = max;\n    if (Math.abs(min) > Math.abs(max)) {\n        barStart = max;\n        barEnd = min;\n    }\n    item[vScale.axis] = barEnd;\n    item._custom = {\n        barStart,\n        barEnd,\n        start: startValue,\n        end: endValue,\n        min,\n        max\n    };\n}\nfunction parseValue(entry, item, vScale, i) {\n    if (isArray(entry)) {\n        parseFloatBar(entry, item, vScale, i);\n    } else {\n        item[vScale.axis] = vScale.parse(entry, i);\n    }\n    return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = [];\n    let i, ilen, item, entry;\n    for(i = start, ilen = start + count; i < ilen; ++i){\n        entry = data[i];\n        item = {};\n        item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n        parsed.push(parseValue(entry, item, vScale, i));\n    }\n    return parsed;\n}\nfunction isFloatBar(custom) {\n    return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n    if (size !== 0) {\n        return sign(size);\n    }\n    return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n    let reverse, start, end, top, bottom;\n    if (properties.horizontal) {\n        reverse = properties.base > properties.x;\n        start = 'left';\n        end = 'right';\n    } else {\n        reverse = properties.base < properties.y;\n        start = 'bottom';\n        end = 'top';\n    }\n    if (reverse) {\n        top = 'end';\n        bottom = 'start';\n    } else {\n        top = 'start';\n        bottom = 'end';\n    }\n    return {\n        start,\n        end,\n        reverse,\n        top,\n        bottom\n    };\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n    let edge = options.borderSkipped;\n    const res = {};\n    if (!edge) {\n        properties.borderSkipped = res;\n        return;\n    }\n    if (edge === true) {\n        properties.borderSkipped = {\n            top: true,\n            right: true,\n            bottom: true,\n            left: true\n        };\n        return;\n    }\n    const { start , end , reverse , top , bottom  } = borderProps(properties);\n    if (edge === 'middle' && stack) {\n        properties.enableBorderRadius = true;\n        if ((stack._top || 0) === index) {\n            edge = top;\n        } else if ((stack._bottom || 0) === index) {\n            edge = bottom;\n        } else {\n            res[parseEdge(bottom, start, end, reverse)] = true;\n            edge = top;\n        }\n    }\n    res[parseEdge(edge, start, end, reverse)] = true;\n    properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n    if (reverse) {\n        edge = swap(edge, a, b);\n        edge = startEnd(edge, b, a);\n    } else {\n        edge = startEnd(edge, a, b);\n    }\n    return edge;\n}\nfunction swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n    return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, { inflateAmount  }, ratio) {\n    properties.inflateAmount = inflateAmount === 'auto' ? ratio === 1 ? 0.33 : 0 : inflateAmount;\n}\nclass BarController extends DatasetController {\n    static id = 'bar';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'bar',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        grouped: true,\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'base',\n                    'width',\n                    'height'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category',\n                offset: true,\n                grid: {\n                    offset: true\n                }\n            },\n            _value_: {\n                type: 'linear',\n                beginAtZero: true\n            }\n        }\n    };\n parsePrimitiveData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseArrayData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseObjectData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const parsed = [];\n        let i, ilen, item, obj;\n        for(i = start, ilen = start + count; i < ilen; ++i){\n            obj = data[i];\n            item = {};\n            item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n            parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n        }\n        return parsed;\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        super.updateRangeFromParsed(range, scale, parsed, stack);\n        const custom = parsed._custom;\n        if (custom && scale === this._cachedMeta.vScale) {\n            range.min = Math.min(range.min, custom.min);\n            range.max = Math.max(range.max, custom.max);\n        }\n    }\n getMaxOverflow() {\n        return 0;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const { iScale , vScale  } = meta;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n        return {\n            label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n            value\n        };\n    }\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n        const meta = this._cachedMeta;\n        meta.stack = this.getDataset().stack;\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        this.updateElements(meta.data, 0, meta.data.length, mode);\n    }\n    updateElements(bars, start, count, mode) {\n        const reset = mode === 'reset';\n        const { index , _cachedMeta: { vScale  }  } = this;\n        const base = vScale.getBasePixel();\n        const horizontal = vScale.isHorizontal();\n        const ruler = this._getRuler();\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        for(let i = start; i < start + count; i++){\n            const parsed = this.getParsed(i);\n            const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n                base,\n                head: base\n            } : this._calculateBarValuePixels(i);\n            const ipixels = this._calculateBarIndexPixels(i, ruler);\n            const stack = (parsed._stacks || {})[vScale.axis];\n            const properties = {\n                horizontal,\n                base: vpixels.base,\n                enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n                x: horizontal ? vpixels.head : ipixels.center,\n                y: horizontal ? ipixels.center : vpixels.head,\n                height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n                width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n            }\n            const options = properties.options || bars[i].options;\n            setBorderSkipped(properties, options, stack, index);\n            setInflateAmount(properties, options, ruler.ratio);\n            this.updateElement(bars[i], i, properties, mode);\n        }\n    }\n _getStacks(last, dataIndex) {\n        const { iScale  } = this._cachedMeta;\n        const metasets = iScale.getMatchingVisibleMetas(this._type).filter((meta)=>meta.controller.options.grouped);\n        const stacked = iScale.options.stacked;\n        const stacks = [];\n        const skipNull = (meta)=>{\n            const parsed = meta.controller.getParsed(dataIndex);\n            const val = parsed && parsed[meta.vScale.axis];\n            if (isNullOrUndef(val) || isNaN(val)) {\n                return true;\n            }\n        };\n        for (const meta of metasets){\n            if (dataIndex !== undefined && skipNull(meta)) {\n                continue;\n            }\n            if (stacked === false || stacks.indexOf(meta.stack) === -1 || stacked === undefined && meta.stack === undefined) {\n                stacks.push(meta.stack);\n            }\n            if (meta.index === last) {\n                break;\n            }\n        }\n        if (!stacks.length) {\n            stacks.push(undefined);\n        }\n        return stacks;\n    }\n _getStackCount(index) {\n        return this._getStacks(undefined, index).length;\n    }\n _getStackIndex(datasetIndex, name, dataIndex) {\n        const stacks = this._getStacks(datasetIndex, dataIndex);\n        const index = name !== undefined ? stacks.indexOf(name) : -1;\n        return index === -1 ? stacks.length - 1 : index;\n    }\n _getRuler() {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const pixels = [];\n        let i, ilen;\n        for(i = 0, ilen = meta.data.length; i < ilen; ++i){\n            pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n        }\n        const barThickness = opts.barThickness;\n        const min = barThickness || computeMinSampleSize(meta);\n        return {\n            min,\n            pixels,\n            start: iScale._startPixel,\n            end: iScale._endPixel,\n            stackCount: this._getStackCount(),\n            scale: iScale,\n            grouped: opts.grouped,\n            ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n        };\n    }\n _calculateBarValuePixels(index) {\n        const { _cachedMeta: { vScale , _stacked  } , options: { base: baseValue , minBarLength  }  } = this;\n        const actualBase = baseValue || 0;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const floating = isFloatBar(custom);\n        let value = parsed[vScale.axis];\n        let start = 0;\n        let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n        let head, size;\n        if (length !== value) {\n            start = length - value;\n            length = value;\n        }\n        if (floating) {\n            value = custom.barStart;\n            length = custom.barEnd - custom.barStart;\n            if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n                start = 0;\n            }\n            start += value;\n        }\n        const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n        let base = vScale.getPixelForValue(startValue);\n        if (this.chart.getDataVisibility(index)) {\n            head = vScale.getPixelForValue(start + length);\n        } else {\n            head = base;\n        }\n        size = head - base;\n        if (Math.abs(size) < minBarLength) {\n            size = barSign(size, vScale, actualBase) * minBarLength;\n            if (value === actualBase) {\n                base -= size / 2;\n            }\n            const startPixel = vScale.getPixelForDecimal(0);\n            const endPixel = vScale.getPixelForDecimal(1);\n            const min = Math.min(startPixel, endPixel);\n            const max = Math.max(startPixel, endPixel);\n            base = Math.max(Math.min(base, max), min);\n            head = base + size;\n        }\n        if (base === vScale.getPixelForValue(actualBase)) {\n            const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n            base += halfGrid;\n            size -= halfGrid;\n        }\n        return {\n            size,\n            base,\n            head,\n            center: head + size / 2\n        };\n    }\n _calculateBarIndexPixels(index, ruler) {\n        const scale = ruler.scale;\n        const options = this.options;\n        const skipNull = options.skipNull;\n        const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n        let center, size;\n        if (ruler.grouped) {\n            const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n            const range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount) : computeFitCategoryTraits(index, ruler, options, stackCount);\n            const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n            center = range.start + range.chunk * stackIndex + range.chunk / 2;\n            size = Math.min(maxBarThickness, range.chunk * range.ratio);\n        } else {\n            center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n            size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n        }\n        return {\n            base: center - size / 2,\n            head: center + size / 2,\n            center,\n            size\n        };\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        const vScale = meta.vScale;\n        const rects = meta.data;\n        const ilen = rects.length;\n        let i = 0;\n        for(; i < ilen; ++i){\n            if (this.getParsed(i)[vScale.axis] !== null) {\n                rects[i].draw(this._ctx);\n            }\n        }\n    }\n}\n\nclass BubbleController extends DatasetController {\n    static id = 'bubble';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'borderWidth',\n                    'radius'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const parsed = super.parsePrimitiveData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const parsed = super.parseArrayData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const parsed = super.parseObjectData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n getMaxOverflow() {\n        const data = this._cachedMeta.data;\n        let max = 0;\n        for(let i = data.length - 1; i >= 0; --i){\n            max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n        }\n        return max > 0 && max;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        const r = parsed._custom;\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n        };\n    }\n    update(mode) {\n        const points = this._cachedMeta.data;\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const parsed = !reset && this.getParsed(i);\n            const properties = {};\n            const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n            const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel);\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n                if (reset) {\n                    properties.options.radius = 0;\n                }\n            }\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n resolveDataElementOptions(index, mode) {\n        const parsed = this.getParsed(index);\n        let values = super.resolveDataElementOptions(index, mode);\n        if (values.$shared) {\n            values = Object.assign({}, values, {\n                $shared: false\n            });\n        }\n        const radius = values.radius;\n        if (mode !== 'active') {\n            values.radius = 0;\n        }\n        values.radius += valueOrDefault(parsed && parsed._custom, radius);\n        return values;\n    }\n}\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n    let ratioX = 1;\n    let ratioY = 1;\n    let offsetX = 0;\n    let offsetY = 0;\n    if (circumference < TAU) {\n        const startAngle = rotation;\n        const endAngle = startAngle + circumference;\n        const startX = Math.cos(startAngle);\n        const startY = Math.sin(startAngle);\n        const endX = Math.cos(endAngle);\n        const endY = Math.sin(endAngle);\n        const calcMax = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n        const calcMin = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n        const maxX = calcMax(0, startX, endX);\n        const maxY = calcMax(HALF_PI, startY, endY);\n        const minX = calcMin(PI, startX, endX);\n        const minY = calcMin(PI + HALF_PI, startY, endY);\n        ratioX = (maxX - minX) / 2;\n        ratioY = (maxY - minY) / 2;\n        offsetX = -(maxX + minX) / 2;\n        offsetY = -(maxY + minY) / 2;\n    }\n    return {\n        ratioX,\n        ratioY,\n        offsetX,\n        offsetY\n    };\n}\nclass DoughnutController extends DatasetController {\n    static id = 'doughnut';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: false\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'circumference',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius',\n                    'startAngle',\n                    'x',\n                    'y',\n                    'offset',\n                    'borderWidth',\n                    'spacing'\n                ]\n            }\n        },\n        cutout: '50%',\n        rotation: 0,\n        circumference: 360,\n        radius: '100%',\n        spacing: 0,\n        indexAxis: 'r'\n    };\n    static descriptors = {\n        _scriptable: (name)=>name !== 'spacing',\n        _indexable: (name)=>name !== 'spacing'\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.enableOptionSharing = true;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.offsetX = undefined;\n        this.offsetY = undefined;\n    }\n    linkScales() {}\n parse(start, count) {\n        const data = this.getDataset().data;\n        const meta = this._cachedMeta;\n        if (this._parsing === false) {\n            meta._parsed = data;\n        } else {\n            let getter = (i)=>+data[i];\n            if (isObject(data[start])) {\n                const { key ='value'  } = this._parsing;\n                getter = (i)=>+resolveObjectKey(data[i], key);\n            }\n            let i, ilen;\n            for(i = start, ilen = start + count; i < ilen; ++i){\n                meta._parsed[i] = getter(i);\n            }\n        }\n    }\n _getRotation() {\n        return toRadians(this.options.rotation - 90);\n    }\n _getCircumference() {\n        return toRadians(this.options.circumference);\n    }\n _getRotationExtents() {\n        let min = TAU;\n        let max = -TAU;\n        for(let i = 0; i < this.chart.data.datasets.length; ++i){\n            if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n                const controller = this.chart.getDatasetMeta(i).controller;\n                const rotation = controller._getRotation();\n                const circumference = controller._getCircumference();\n                min = Math.min(min, rotation);\n                max = Math.max(max, rotation + circumference);\n            }\n        }\n        return {\n            rotation: min,\n            circumference: max - min\n        };\n    }\n update(mode) {\n        const chart = this.chart;\n        const { chartArea  } = chart;\n        const meta = this._cachedMeta;\n        const arcs = meta.data;\n        const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n        const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n        const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n        const chartWeight = this._getRingWeight(this.index);\n        const { circumference , rotation  } = this._getRotationExtents();\n        const { ratioX , ratioY , offsetX , offsetY  } = getRatioAndOffset(rotation, circumference, cutout);\n        const maxWidth = (chartArea.width - spacing) / ratioX;\n        const maxHeight = (chartArea.height - spacing) / ratioY;\n        const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n        const outerRadius = toDimension(this.options.radius, maxRadius);\n        const innerRadius = Math.max(outerRadius * cutout, 0);\n        const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n        this.offsetX = offsetX * outerRadius;\n        this.offsetY = offsetY * outerRadius;\n        meta.total = this.calculateTotal();\n        this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n        this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n _circumference(i, reset) {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const circumference = this._getCircumference();\n        if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n            return 0;\n        }\n        return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const centerX = (chartArea.left + chartArea.right) / 2;\n        const centerY = (chartArea.top + chartArea.bottom) / 2;\n        const animateScale = reset && animationOpts.animateScale;\n        const innerRadius = animateScale ? 0 : this.innerRadius;\n        const outerRadius = animateScale ? 0 : this.outerRadius;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        let startAngle = this._getRotation();\n        let i;\n        for(i = 0; i < start; ++i){\n            startAngle += this._circumference(i, reset);\n        }\n        for(i = start; i < start + count; ++i){\n            const circumference = this._circumference(i, reset);\n            const arc = arcs[i];\n            const properties = {\n                x: centerX + this.offsetX,\n                y: centerY + this.offsetY,\n                startAngle,\n                endAngle: startAngle + circumference,\n                circumference,\n                outerRadius,\n                innerRadius\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n            }\n            startAngle += circumference;\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    calculateTotal() {\n        const meta = this._cachedMeta;\n        const metaData = meta.data;\n        let total = 0;\n        let i;\n        for(i = 0; i < metaData.length; i++){\n            const value = meta._parsed[i];\n            if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n                total += Math.abs(value);\n            }\n        }\n        return total;\n    }\n    calculateCircumference(value) {\n        const total = this._cachedMeta.total;\n        if (total > 0 && !isNaN(value)) {\n            return TAU * (Math.abs(value) / total);\n        }\n        return 0;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index], chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    getMaxBorderWidth(arcs) {\n        let max = 0;\n        const chart = this.chart;\n        let i, ilen, meta, controller, options;\n        if (!arcs) {\n            for(i = 0, ilen = chart.data.datasets.length; i < ilen; ++i){\n                if (chart.isDatasetVisible(i)) {\n                    meta = chart.getDatasetMeta(i);\n                    arcs = meta.data;\n                    controller = meta.controller;\n                    break;\n                }\n            }\n        }\n        if (!arcs) {\n            return 0;\n        }\n        for(i = 0, ilen = arcs.length; i < ilen; ++i){\n            options = controller.resolveDataElementOptions(i);\n            if (options.borderAlign !== 'inner') {\n                max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n            }\n        }\n        return max;\n    }\n    getMaxOffset(arcs) {\n        let max = 0;\n        for(let i = 0, ilen = arcs.length; i < ilen; ++i){\n            const options = this.resolveDataElementOptions(i);\n            max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n        }\n        return max;\n    }\n _getRingWeightOffset(datasetIndex) {\n        let ringWeightOffset = 0;\n        for(let i = 0; i < datasetIndex; ++i){\n            if (this.chart.isDatasetVisible(i)) {\n                ringWeightOffset += this._getRingWeight(i);\n            }\n        }\n        return ringWeightOffset;\n    }\n _getRingWeight(datasetIndex) {\n        return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n    }\n _getVisibleDatasetWeightTotal() {\n        return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n    }\n}\n\nclass LineController extends DatasetController {\n    static id = 'line';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        showLine: true,\n        spanGaps: false\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category'\n            },\n            _value_: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        this.supportsDecimation = true;\n        super.initialize();\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { dataset: line , data: points = [] , _dataset  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        line._chart = this.chart;\n        line._datasetIndex = this.index;\n        line._decimated = !!_dataset._decimated;\n        line.points = points;\n        const options = this.resolveDatasetElementOptions(mode);\n        if (!this.options.showLine) {\n            options.borderWidth = 0;\n        }\n        options.segment = this.options.segment;\n        this.updateElement(line, undefined, {\n            animated: !animationsDisabled,\n            options\n        }, mode);\n        this.updateElements(points, start, count, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        const end = start + count;\n        const pointsCount = points.length;\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = 0; i < pointsCount; ++i){\n            const point = points[i];\n            const properties = directUpdate ? point : {};\n            if (i < start || i >= end) {\n                properties.skip = true;\n                continue;\n            }\n            const parsed = this.getParsed(i);\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        const data = meta.data || [];\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n        super.draw();\n    }\n}\n\nclass PolarAreaController extends DatasetController {\n    static id = 'polarArea';\n static defaults = {\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: true\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'startAngle',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius'\n                ]\n            }\n        },\n        indexAxis: 'r',\n        startAngle: 0\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        },\n        scales: {\n            r: {\n                type: 'radialLinear',\n                angleLines: {\n                    display: false\n                },\n                beginAtZero: true,\n                grid: {\n                    circular: true\n                },\n                pointLabels: {\n                    display: false\n                },\n                startAngle: 0\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const arcs = this._cachedMeta.data;\n        this._updateRadius();\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n getMinMax() {\n        const meta = this._cachedMeta;\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        meta.data.forEach((element, index)=>{\n            const parsed = this.getParsed(index).r;\n            if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n                if (parsed < range.min) {\n                    range.min = parsed;\n                }\n                if (parsed > range.max) {\n                    range.max = parsed;\n                }\n            }\n        });\n        return range;\n    }\n _updateRadius() {\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n        const outerRadius = Math.max(minSize / 2, 0);\n        const innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n        const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n        this.outerRadius = outerRadius - radiusLength * this.index;\n        this.innerRadius = this.outerRadius - radiusLength;\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const scale = this._cachedMeta.rScale;\n        const centerX = scale.xCenter;\n        const centerY = scale.yCenter;\n        const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n        let angle = datasetStartAngle;\n        let i;\n        const defaultAngle = 360 / this.countVisibleElements();\n        for(i = 0; i < start; ++i){\n            angle += this._computeAngle(i, mode, defaultAngle);\n        }\n        for(i = start; i < start + count; i++){\n            const arc = arcs[i];\n            let startAngle = angle;\n            let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n            let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n            angle = endAngle;\n            if (reset) {\n                if (animationOpts.animateScale) {\n                    outerRadius = 0;\n                }\n                if (animationOpts.animateRotate) {\n                    startAngle = endAngle = datasetStartAngle;\n                }\n            }\n            const properties = {\n                x: centerX,\n                y: centerY,\n                innerRadius: 0,\n                outerRadius,\n                startAngle,\n                endAngle,\n                options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n            };\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    countVisibleElements() {\n        const meta = this._cachedMeta;\n        let count = 0;\n        meta.data.forEach((element, index)=>{\n            if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n                count++;\n            }\n        });\n        return count;\n    }\n _computeAngle(index, mode, defaultAngle) {\n        return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n    }\n}\n\nclass PieController extends DoughnutController {\n    static id = 'pie';\n static defaults = {\n        cutout: 0,\n        rotation: 0,\n        circumference: 360,\n        radius: '100%'\n    };\n}\n\nclass RadarController extends DatasetController {\n    static id = 'radar';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        indexAxis: 'r',\n        showLine: true,\n        elements: {\n            line: {\n                fill: 'start'\n            }\n        }\n    };\n static overrides = {\n        aspectRatio: 1,\n        scales: {\n            r: {\n                type: 'radialLinear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const vScale = this._cachedMeta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: vScale.getLabels()[index],\n            value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const line = meta.dataset;\n        const points = meta.data || [];\n        const labels = meta.iScale.getLabels();\n        line.points = points;\n        if (mode !== 'resize') {\n            const options = this.resolveDatasetElementOptions(mode);\n            if (!this.options.showLine) {\n                options.borderWidth = 0;\n            }\n            const properties = {\n                _loop: true,\n                _fullLoop: labels.length === points.length,\n                options\n            };\n            this.updateElement(line, undefined, properties, mode);\n        }\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const scale = this._cachedMeta.rScale;\n        const reset = mode === 'reset';\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n            const x = reset ? scale.xCenter : pointPosition.x;\n            const y = reset ? scale.yCenter : pointPosition.y;\n            const properties = {\n                x,\n                y,\n                angle: pointPosition.angle,\n                skip: isNaN(x) || isNaN(y),\n                options\n            };\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n}\n\nclass ScatterController extends DatasetController {\n    static id = 'scatter';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        showLine: false,\n        fill: false\n    };\n static overrides = {\n        interaction: {\n            mode: 'point'\n        },\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + ')'\n        };\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { data: points = []  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        if (this.options.showLine) {\n            const { dataset: line , _dataset  } = meta;\n            line._chart = this.chart;\n            line._datasetIndex = this.index;\n            line._decimated = !!_dataset._decimated;\n            line.points = points;\n            const options = this.resolveDatasetElementOptions(mode);\n            options.segment = this.options.segment;\n            this.updateElement(line, undefined, {\n                animated: !animationsDisabled,\n                options\n            }, mode);\n        }\n        this.updateElements(points, start, count, mode);\n    }\n    addElements() {\n        const { showLine  } = this.options;\n        if (!this.datasetElementType && showLine) {\n            this.datasetElementType = this.chart.registry.getElement('line');\n        }\n        super.addElements();\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = start; i < start + count; ++i){\n            const point = points[i];\n            const parsed = this.getParsed(i);\n            const properties = directUpdate ? point : {};\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const data = meta.data || [];\n        if (!this.options.showLine) {\n            let max = 0;\n            for(let i = data.length - 1; i >= 0; --i){\n                max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n            }\n            return max > 0 && max;\n        }\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n}\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPolarAreaController: PolarAreaController,\nPieController: PieController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\n/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */ function abstract() {\n    throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */ class DateAdapterBase {\n    /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */ static override(members) {\n        Object.assign(DateAdapterBase.prototype, members);\n    }\n    constructor(options){\n        this.options = options || {};\n    }\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    init() {}\n    formats() {\n        return abstract();\n    }\n    parse() {\n        return abstract();\n    }\n    format() {\n        return abstract();\n    }\n    add() {\n        return abstract();\n    }\n    diff() {\n        return abstract();\n    }\n    startOf() {\n        return abstract();\n    }\n    endOf() {\n        return abstract();\n    }\n}\nvar adapters = {\n    _date: DateAdapterBase\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n    const { controller , data , _sorted  } = metaset;\n    const iScale = controller._cachedMeta.iScale;\n    if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n        const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n        if (!intersect) {\n            return lookupMethod(data, axis, value);\n        } else if (controller._sharedOptions) {\n            const el = data[0];\n            const range = typeof el.getRange === 'function' && el.getRange(axis);\n            if (range) {\n                const start = lookupMethod(data, axis, value - range);\n                const end = lookupMethod(data, axis, value + range);\n                return {\n                    lo: start.lo,\n                    hi: end.hi\n                };\n            }\n        }\n    }\n    return {\n        lo: 0,\n        hi: data.length - 1\n    };\n}\n function evaluateInteractionItems(chart, axis, position, handler, intersect) {\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const value = position[axis];\n    for(let i = 0, ilen = metasets.length; i < ilen; ++i){\n        const { index , data  } = metasets[i];\n        const { lo , hi  } = binarySearch(metasets[i], axis, value, intersect);\n        for(let j = lo; j <= hi; ++j){\n            const element = data[j];\n            if (!element.skip) {\n                handler(element, index, j);\n            }\n        }\n    }\n}\n function getDistanceMetricForAxis(axis) {\n    const useX = axis.indexOf('x') !== -1;\n    const useY = axis.indexOf('y') !== -1;\n    return function(pt1, pt2) {\n        const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n        const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n        return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n}\n function getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n    const items = [];\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return items;\n    }\n    const evaluationFunc = function(element, datasetIndex, index) {\n        if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n            return;\n        }\n        if (element.inRange(position.x, position.y, useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    };\n    evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n    return items;\n}\n function getNearestRadialItems(chart, position, axis, useFinalPosition) {\n    let items = [];\n    function evaluationFunc(element, datasetIndex, index) {\n        const { startAngle , endAngle  } = element.getProps([\n            'startAngle',\n            'endAngle'\n        ], useFinalPosition);\n        const { angle  } = getAngleFromPoint(element, {\n            x: position.x,\n            y: position.y\n        });\n        if (_angleBetween(angle, startAngle, endAngle)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    let items = [];\n    const distanceMetric = getDistanceMetricForAxis(axis);\n    let minDistance = Number.POSITIVE_INFINITY;\n    function evaluationFunc(element, datasetIndex, index) {\n        const inRange = element.inRange(position.x, position.y, useFinalPosition);\n        if (intersect && !inRange) {\n            return;\n        }\n        const center = element.getCenterPoint(useFinalPosition);\n        const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n        if (!pointInArea && !inRange) {\n            return;\n        }\n        const distance = distanceMetric(position, center);\n        if (distance < minDistance) {\n            items = [\n                {\n                    element,\n                    datasetIndex,\n                    index\n                }\n            ];\n            minDistance = distance;\n        } else if (distance === minDistance) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return [];\n    }\n    return axis === 'r' && !intersect ? getNearestRadialItems(chart, position, axis, useFinalPosition) : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n function getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n    const items = [];\n    const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n    let intersectsItem = false;\n    evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index)=>{\n        if (element[rangeMethod](position[axis], useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n            intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n        }\n    });\n    if (intersect && !intersectsItem) {\n        return [];\n    }\n    return items;\n}\n var Interaction = {\n    evaluateInteractionItems,\n    modes: {\n index (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'x';\n            const includeInvisible = options.includeInvisible || false;\n            const items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            const elements = [];\n            if (!items.length) {\n                return [];\n            }\n            chart.getSortedVisibleDatasetMetas().forEach((meta)=>{\n                const index = items[0].index;\n                const element = meta.data[index];\n                if (element && !element.skip) {\n                    elements.push({\n                        element,\n                        datasetIndex: meta.index,\n                        index\n                    });\n                }\n            });\n            return elements;\n        },\n dataset (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            let items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            if (items.length > 0) {\n                const datasetIndex = items[0].datasetIndex;\n                const data = chart.getDatasetMeta(datasetIndex).data;\n                items = [];\n                for(let i = 0; i < data.length; ++i){\n                    items.push({\n                        element: data[i],\n                        datasetIndex,\n                        index: i\n                    });\n                }\n            }\n            return items;\n        },\n point (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n        },\n nearest (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n        },\n x (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n        },\n y (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n        }\n    }\n};\n\nconst STATIC_POSITIONS = [\n    'left',\n    'top',\n    'right',\n    'bottom'\n];\nfunction filterByPosition(array, position) {\n    return array.filter((v)=>v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n    return array.filter((v)=>STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n    return array.sort((a, b)=>{\n        const v0 = reverse ? b : a;\n        const v1 = reverse ? a : b;\n        return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n    });\n}\nfunction wrapBoxes(boxes) {\n    const layoutBoxes = [];\n    let i, ilen, box, pos, stack, stackWeight;\n    for(i = 0, ilen = (boxes || []).length; i < ilen; ++i){\n        box = boxes[i];\n        ({ position: pos , options: { stack , stackWeight =1  }  } = box);\n        layoutBoxes.push({\n            index: i,\n            box,\n            pos,\n            horizontal: box.isHorizontal(),\n            weight: box.weight,\n            stack: stack && pos + stack,\n            stackWeight\n        });\n    }\n    return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n    const stacks = {};\n    for (const wrap of layouts){\n        const { stack , pos , stackWeight  } = wrap;\n        if (!stack || !STATIC_POSITIONS.includes(pos)) {\n            continue;\n        }\n        const _stack = stacks[stack] || (stacks[stack] = {\n            count: 0,\n            placed: 0,\n            weight: 0,\n            size: 0\n        });\n        _stack.count++;\n        _stack.weight += stackWeight;\n    }\n    return stacks;\n}\n function setLayoutDims(layouts, params) {\n    const stacks = buildStacks(layouts);\n    const { vBoxMaxWidth , hBoxMaxHeight  } = params;\n    let i, ilen, layout;\n    for(i = 0, ilen = layouts.length; i < ilen; ++i){\n        layout = layouts[i];\n        const { fullSize  } = layout.box;\n        const stack = stacks[layout.stack];\n        const factor = stack && layout.stackWeight / stack.weight;\n        if (layout.horizontal) {\n            layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n            layout.height = hBoxMaxHeight;\n        } else {\n            layout.width = vBoxMaxWidth;\n            layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n        }\n    }\n    return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n    const layoutBoxes = wrapBoxes(boxes);\n    const fullSize = sortByWeight(layoutBoxes.filter((wrap)=>wrap.box.fullSize), true);\n    const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n    const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n    const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n    const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n    const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n    const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n    return {\n        fullSize,\n        leftAndTop: left.concat(top),\n        rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n        chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n        vertical: left.concat(right).concat(centerVertical),\n        horizontal: top.concat(bottom).concat(centerHorizontal)\n    };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n    return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n    maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n    maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n    maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n    maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n    const { pos , box  } = layout;\n    const maxPadding = chartArea.maxPadding;\n    if (!isObject(pos)) {\n        if (layout.size) {\n            chartArea[pos] -= layout.size;\n        }\n        const stack = stacks[layout.stack] || {\n            size: 0,\n            count: 1\n        };\n        stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n        layout.size = stack.size / stack.count;\n        chartArea[pos] += layout.size;\n    }\n    if (box.getPadding) {\n        updateMaxPadding(maxPadding, box.getPadding());\n    }\n    const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n    const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n    const widthChanged = newWidth !== chartArea.w;\n    const heightChanged = newHeight !== chartArea.h;\n    chartArea.w = newWidth;\n    chartArea.h = newHeight;\n    return layout.horizontal ? {\n        same: widthChanged,\n        other: heightChanged\n    } : {\n        same: heightChanged,\n        other: widthChanged\n    };\n}\nfunction handleMaxPadding(chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function updatePos(pos) {\n        const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n        chartArea[pos] += change;\n        return change;\n    }\n    chartArea.y += updatePos('top');\n    chartArea.x += updatePos('left');\n    updatePos('right');\n    updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function marginForPositions(positions) {\n        const margin = {\n            left: 0,\n            top: 0,\n            right: 0,\n            bottom: 0\n        };\n        positions.forEach((pos)=>{\n            margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n        });\n        return margin;\n    }\n    return horizontal ? marginForPositions([\n        'left',\n        'right'\n    ]) : marginForPositions([\n        'top',\n        'bottom'\n    ]);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n    const refitBoxes = [];\n    let i, ilen, layout, box, refit, changed;\n    for(i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i){\n        layout = boxes[i];\n        box = layout.box;\n        box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n        const { same , other  } = updateDims(chartArea, params, layout, stacks);\n        refit |= same && refitBoxes.length;\n        changed = changed || other;\n        if (!box.fullSize) {\n            refitBoxes.push(layout);\n        }\n    }\n    return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n    box.top = top;\n    box.left = left;\n    box.right = left + width;\n    box.bottom = top + height;\n    box.width = width;\n    box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n    const userPadding = params.padding;\n    let { x , y  } = chartArea;\n    for (const layout of boxes){\n        const box = layout.box;\n        const stack = stacks[layout.stack] || {\n            count: 1,\n            placed: 0,\n            weight: 1\n        };\n        const weight = layout.stackWeight / stack.weight || 1;\n        if (layout.horizontal) {\n            const width = chartArea.w * weight;\n            const height = stack.size || box.height;\n            if (defined(stack.start)) {\n                y = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n            } else {\n                setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n            }\n            stack.start = y;\n            stack.placed += width;\n            y = box.bottom;\n        } else {\n            const height1 = chartArea.h * weight;\n            const width1 = stack.size || box.width;\n            if (defined(stack.start)) {\n                x = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, x, userPadding.top, width1, params.outerHeight - userPadding.bottom - userPadding.top);\n            } else {\n                setBoxDims(box, x, chartArea.top + stack.placed, width1, height1);\n            }\n            stack.start = x;\n            stack.placed += height1;\n            x = box.right;\n        }\n    }\n    chartArea.x = x;\n    chartArea.y = y;\n}\nvar layouts = {\n addBox (chart, item) {\n        if (!chart.boxes) {\n            chart.boxes = [];\n        }\n        item.fullSize = item.fullSize || false;\n        item.position = item.position || 'top';\n        item.weight = item.weight || 0;\n        item._layers = item._layers || function() {\n            return [\n                {\n                    z: 0,\n                    draw (chartArea) {\n                        item.draw(chartArea);\n                    }\n                }\n            ];\n        };\n        chart.boxes.push(item);\n    },\n removeBox (chart, layoutItem) {\n        const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n        if (index !== -1) {\n            chart.boxes.splice(index, 1);\n        }\n    },\n configure (chart, item, options) {\n        item.fullSize = options.fullSize;\n        item.position = options.position;\n        item.weight = options.weight;\n    },\n update (chart, width, height, minPadding) {\n        if (!chart) {\n            return;\n        }\n        const padding = toPadding(chart.options.layout.padding);\n        const availableWidth = Math.max(width - padding.width, 0);\n        const availableHeight = Math.max(height - padding.height, 0);\n        const boxes = buildLayoutBoxes(chart.boxes);\n        const verticalBoxes = boxes.vertical;\n        const horizontalBoxes = boxes.horizontal;\n        each(chart.boxes, (box)=>{\n            if (typeof box.beforeLayout === 'function') {\n                box.beforeLayout();\n            }\n        });\n        const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap)=>wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n        const params = Object.freeze({\n            outerWidth: width,\n            outerHeight: height,\n            padding,\n            availableWidth,\n            availableHeight,\n            vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n            hBoxMaxHeight: availableHeight / 2\n        });\n        const maxPadding = Object.assign({}, padding);\n        updateMaxPadding(maxPadding, toPadding(minPadding));\n        const chartArea = Object.assign({\n            maxPadding,\n            w: availableWidth,\n            h: availableHeight,\n            x: padding.left,\n            y: padding.top\n        }, padding);\n        const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n        fitBoxes(boxes.fullSize, chartArea, params, stacks);\n        fitBoxes(verticalBoxes, chartArea, params, stacks);\n        if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n            fitBoxes(verticalBoxes, chartArea, params, stacks);\n        }\n        handleMaxPadding(chartArea);\n        placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n        chartArea.x += chartArea.w;\n        chartArea.y += chartArea.h;\n        placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n        chart.chartArea = {\n            left: chartArea.left,\n            top: chartArea.top,\n            right: chartArea.left + chartArea.w,\n            bottom: chartArea.top + chartArea.h,\n            height: chartArea.h,\n            width: chartArea.w\n        };\n        each(boxes.chartArea, (layout)=>{\n            const box = layout.box;\n            Object.assign(box, chart.chartArea);\n            box.update(chartArea.w, chartArea.h, {\n                left: 0,\n                top: 0,\n                right: 0,\n                bottom: 0\n            });\n        });\n    }\n};\n\nclass BasePlatform {\n acquireContext(canvas, aspectRatio) {}\n releaseContext(context) {\n        return false;\n    }\n addEventListener(chart, type, listener) {}\n removeEventListener(chart, type, listener) {}\n getDevicePixelRatio() {\n        return 1;\n    }\n getMaximumSize(element, width, height, aspectRatio) {\n        width = Math.max(0, width || element.width);\n        height = height || element.height;\n        return {\n            width,\n            height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n        };\n    }\n isAttached(canvas) {\n        return true;\n    }\n updateConfig(config) {\n    }\n}\n\nclass BasicPlatform extends BasePlatform {\n    acquireContext(item) {\n        return item && item.getContext && item.getContext('2d') || null;\n    }\n    updateConfig(config) {\n        config.options.animation = false;\n    }\n}\n\nconst EXPANDO_KEY = '$chartjs';\n const EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n};\nconst isNullOrEmpty = (value)=>value === null || value === '';\n function initCanvas(canvas, aspectRatio) {\n    const style = canvas.style;\n    const renderHeight = canvas.getAttribute('height');\n    const renderWidth = canvas.getAttribute('width');\n    canvas[EXPANDO_KEY] = {\n        initial: {\n            height: renderHeight,\n            width: renderWidth,\n            style: {\n                display: style.display,\n                height: style.height,\n                width: style.width\n            }\n        }\n    };\n    style.display = style.display || 'block';\n    style.boxSizing = style.boxSizing || 'border-box';\n    if (isNullOrEmpty(renderWidth)) {\n        const displayWidth = readUsedSize(canvas, 'width');\n        if (displayWidth !== undefined) {\n            canvas.width = displayWidth;\n        }\n    }\n    if (isNullOrEmpty(renderHeight)) {\n        if (canvas.style.height === '') {\n            canvas.height = canvas.width / (aspectRatio || 2);\n        } else {\n            const displayHeight = readUsedSize(canvas, 'height');\n            if (displayHeight !== undefined) {\n                canvas.height = displayHeight;\n            }\n        }\n    }\n    return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n} : false;\nfunction addListener(node, type, listener) {\n    node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n    chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n    const type = EVENT_TYPES[event.type] || event.type;\n    const { x , y  } = getRelativePosition(event, chart);\n    return {\n        type,\n        chart,\n        native: event,\n        x: x !== undefined ? x : null,\n        y: y !== undefined ? y : null\n    };\n}\nfunction nodeListContains(nodeList, canvas) {\n    for (const node of nodeList){\n        if (node === canvas || node.contains(canvas)) {\n            return true;\n        }\n    }\n}\nfunction createAttachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n    const dpr = window.devicePixelRatio;\n    if (dpr === oldDevicePixelRatio) {\n        return;\n    }\n    oldDevicePixelRatio = dpr;\n    drpListeningCharts.forEach((resize, chart)=>{\n        if (chart.currentDevicePixelRatio !== dpr) {\n            resize();\n        }\n    });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n    if (!drpListeningCharts.size) {\n        window.addEventListener('resize', onWindowResize);\n    }\n    drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n    drpListeningCharts.delete(chart);\n    if (!drpListeningCharts.size) {\n        window.removeEventListener('resize', onWindowResize);\n    }\n}\nfunction createResizeObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const container = canvas && _getParentNode(canvas);\n    if (!container) {\n        return;\n    }\n    const resize = throttled((width, height)=>{\n        const w = container.clientWidth;\n        listener(width, height);\n        if (w < container.clientWidth) {\n            listener();\n        }\n    }, window);\n    const observer = new ResizeObserver((entries)=>{\n        const entry = entries[0];\n        const width = entry.contentRect.width;\n        const height = entry.contentRect.height;\n        if (width === 0 && height === 0) {\n            return;\n        }\n        resize(width, height);\n    });\n    observer.observe(container);\n    listenDevicePixelRatioChanges(chart, resize);\n    return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n    if (observer) {\n        observer.disconnect();\n    }\n    if (type === 'resize') {\n        unlistenDevicePixelRatioChanges(chart);\n    }\n}\nfunction createProxyAndListen(chart, type, listener) {\n    const canvas = chart.canvas;\n    const proxy = throttled((event)=>{\n        if (chart.ctx !== null) {\n            listener(fromNativeEvent(event, chart));\n        }\n    }, chart);\n    addListener(canvas, type, proxy);\n    return proxy;\n}\n class DomPlatform extends BasePlatform {\n acquireContext(canvas, aspectRatio) {\n        const context = canvas && canvas.getContext && canvas.getContext('2d');\n        if (context && context.canvas === canvas) {\n            initCanvas(canvas, aspectRatio);\n            return context;\n        }\n        return null;\n    }\n releaseContext(context) {\n        const canvas = context.canvas;\n        if (!canvas[EXPANDO_KEY]) {\n            return false;\n        }\n        const initial = canvas[EXPANDO_KEY].initial;\n        [\n            'height',\n            'width'\n        ].forEach((prop)=>{\n            const value = initial[prop];\n            if (isNullOrUndef(value)) {\n                canvas.removeAttribute(prop);\n            } else {\n                canvas.setAttribute(prop, value);\n            }\n        });\n        const style = initial.style || {};\n        Object.keys(style).forEach((key)=>{\n            canvas.style[key] = style[key];\n        });\n        canvas.width = canvas.width;\n        delete canvas[EXPANDO_KEY];\n        return true;\n    }\n addEventListener(chart, type, listener) {\n        this.removeEventListener(chart, type);\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const handlers = {\n            attach: createAttachObserver,\n            detach: createDetachObserver,\n            resize: createResizeObserver\n        };\n        const handler = handlers[type] || createProxyAndListen;\n        proxies[type] = handler(chart, type, listener);\n    }\n removeEventListener(chart, type) {\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const proxy = proxies[type];\n        if (!proxy) {\n            return;\n        }\n        const handlers = {\n            attach: releaseObserver,\n            detach: releaseObserver,\n            resize: releaseObserver\n        };\n        const handler = handlers[type] || removeListener;\n        handler(chart, type, proxy);\n        proxies[type] = undefined;\n    }\n    getDevicePixelRatio() {\n        return window.devicePixelRatio;\n    }\n getMaximumSize(canvas, width, height, aspectRatio) {\n        return getMaximumSize(canvas, width, height, aspectRatio);\n    }\n isAttached(canvas) {\n        const container = _getParentNode(canvas);\n        return !!(container && container.isConnected);\n    }\n}\n\nfunction _detectPlatform(canvas) {\n    if (!_isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n        return BasicPlatform;\n    }\n    return DomPlatform;\n}\n\nclass Element {\n    static defaults = {};\n    static defaultRoutes = undefined;\n    active = false;\n    tooltipPosition(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    hasValue() {\n        return isNumber(this.x) && isNumber(this.y);\n    }\n    getProps(props, final) {\n        const anims = this.$animations;\n        if (!final || !anims) {\n            // let's not create an object, if not needed\n            return this;\n        }\n        const ret = {};\n        props.forEach((prop)=>{\n            ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n        });\n        return ret;\n    }\n}\n\nfunction autoSkip(scale, ticks) {\n    const tickOpts = scale.options.ticks;\n    const determinedMaxTicks = determineMaxTicks(scale);\n    const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n    const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n    const numMajorIndices = majorIndices.length;\n    const first = majorIndices[0];\n    const last = majorIndices[numMajorIndices - 1];\n    const newTicks = [];\n    if (numMajorIndices > ticksLimit) {\n        skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n        return newTicks;\n    }\n    const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n    if (numMajorIndices > 0) {\n        let i, ilen;\n        const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n        skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n        for(i = 0, ilen = numMajorIndices - 1; i < ilen; i++){\n            skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n        }\n        skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n        return newTicks;\n    }\n    skip(ticks, newTicks, spacing);\n    return newTicks;\n}\nfunction determineMaxTicks(scale) {\n    const offset = scale.options.offset;\n    const tickLength = scale._tickSize();\n    const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n    const maxChart = scale._maxLength / tickLength;\n    return Math.floor(Math.min(maxScale, maxChart));\n}\n function calculateSpacing(majorIndices, ticks, ticksLimit) {\n    const evenMajorSpacing = getEvenSpacing(majorIndices);\n    const spacing = ticks.length / ticksLimit;\n    if (!evenMajorSpacing) {\n        return Math.max(spacing, 1);\n    }\n    const factors = _factorize(evenMajorSpacing);\n    for(let i = 0, ilen = factors.length - 1; i < ilen; i++){\n        const factor = factors[i];\n        if (factor > spacing) {\n            return factor;\n        }\n    }\n    return Math.max(spacing, 1);\n}\n function getMajorIndices(ticks) {\n    const result = [];\n    let i, ilen;\n    for(i = 0, ilen = ticks.length; i < ilen; i++){\n        if (ticks[i].major) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n function skipMajors(ticks, newTicks, majorIndices, spacing) {\n    let count = 0;\n    let next = majorIndices[0];\n    let i;\n    spacing = Math.ceil(spacing);\n    for(i = 0; i < ticks.length; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = majorIndices[count * spacing];\n        }\n    }\n}\n function skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n    const start = valueOrDefault(majorStart, 0);\n    const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n    let count = 0;\n    let length, i, next;\n    spacing = Math.ceil(spacing);\n    if (majorEnd) {\n        length = majorEnd - majorStart;\n        spacing = length / Math.floor(length / spacing);\n    }\n    next = start;\n    while(next < 0){\n        count++;\n        next = Math.round(start + count * spacing);\n    }\n    for(i = Math.max(start, 0); i < end; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = Math.round(start + count * spacing);\n        }\n    }\n}\n function getEvenSpacing(arr) {\n    const len = arr.length;\n    let i, diff;\n    if (len < 2) {\n        return false;\n    }\n    for(diff = arr[0], i = 1; i < len; ++i){\n        if (arr[i] - arr[i - 1] !== diff) {\n            return false;\n        }\n    }\n    return diff;\n}\n\nconst reverseAlign = (align)=>align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset)=>edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\n function sample(arr, numItems) {\n    const result = [];\n    const increment = arr.length / numItems;\n    const len = arr.length;\n    let i = 0;\n    for(; i < len; i += increment){\n        result.push(arr[Math.floor(i)]);\n    }\n    return result;\n}\n function getPixelForGridLine(scale, index, offsetGridLines) {\n    const length = scale.ticks.length;\n    const validIndex = Math.min(index, length - 1);\n    const start = scale._startPixel;\n    const end = scale._endPixel;\n    const epsilon = 1e-6;\n    let lineValue = scale.getPixelForTick(validIndex);\n    let offset;\n    if (offsetGridLines) {\n        if (length === 1) {\n            offset = Math.max(lineValue - start, end - lineValue);\n        } else if (index === 0) {\n            offset = (scale.getPixelForTick(1) - lineValue) / 2;\n        } else {\n            offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n        }\n        lineValue += validIndex < index ? offset : -offset;\n        if (lineValue < start - epsilon || lineValue > end + epsilon) {\n            return;\n        }\n    }\n    return lineValue;\n}\n function garbageCollect(caches, length) {\n    each(caches, (cache)=>{\n        const gc = cache.gc;\n        const gcLen = gc.length / 2;\n        let i;\n        if (gcLen > length) {\n            for(i = 0; i < gcLen; ++i){\n                delete cache.data[gc[i]];\n            }\n            gc.splice(0, gcLen);\n        }\n    });\n}\n function getTickMarkLength(options) {\n    return options.drawTicks ? options.tickLength : 0;\n}\n function getTitleHeight(options, fallback) {\n    if (!options.display) {\n        return 0;\n    }\n    const font = toFont(options.font, fallback);\n    const padding = toPadding(options.padding);\n    const lines = isArray(options.text) ? options.text.length : 1;\n    return lines * font.lineHeight + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n    return createContext(parent, {\n        scale,\n        type: 'scale'\n    });\n}\nfunction createTickContext(parent, index, tick) {\n    return createContext(parent, {\n        tick,\n        index,\n        type: 'tick'\n    });\n}\nfunction titleAlign(align, position, reverse) {\n    let ret = _toLeftRightCenter(align);\n    if (reverse && position !== 'right' || !reverse && position === 'right') {\n        ret = reverseAlign(ret);\n    }\n    return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n    const { top , left , bottom , right , chart  } = scale;\n    const { chartArea , scales  } = chart;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    const height = bottom - top;\n    const width = right - left;\n    if (scale.isHorizontal()) {\n        titleX = _alignStartEnd(align, left, right);\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n        } else if (position === 'center') {\n            titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n        } else {\n            titleY = offsetFromEdge(scale, position, offset);\n        }\n        maxWidth = right - left;\n    } else {\n        if (isObject(position)) {\n            const positionAxisID1 = Object.keys(position)[0];\n            const value1 = position[positionAxisID1];\n            titleX = scales[positionAxisID1].getPixelForValue(value1) - width + offset;\n        } else if (position === 'center') {\n            titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n        } else {\n            titleX = offsetFromEdge(scale, position, offset);\n        }\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = position === 'left' ? -HALF_PI : HALF_PI;\n    }\n    return {\n        titleX,\n        titleY,\n        maxWidth,\n        rotation\n    };\n}\nclass Scale extends Element {\n    constructor(cfg){\n        super();\n         this.id = cfg.id;\n         this.type = cfg.type;\n         this.options = undefined;\n         this.ctx = cfg.ctx;\n         this.chart = cfg.chart;\n         this.top = undefined;\n         this.bottom = undefined;\n         this.left = undefined;\n         this.right = undefined;\n         this.width = undefined;\n         this.height = undefined;\n        this._margins = {\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        };\n         this.maxWidth = undefined;\n         this.maxHeight = undefined;\n         this.paddingTop = undefined;\n         this.paddingBottom = undefined;\n         this.paddingLeft = undefined;\n         this.paddingRight = undefined;\n         this.axis = undefined;\n         this.labelRotation = undefined;\n        this.min = undefined;\n        this.max = undefined;\n        this._range = undefined;\n         this.ticks = [];\n         this._gridLineItems = null;\n         this._labelItems = null;\n         this._labelSizes = null;\n        this._length = 0;\n        this._maxLength = 0;\n        this._longestTextCache = {};\n         this._startPixel = undefined;\n         this._endPixel = undefined;\n        this._reversePixels = false;\n        this._userMax = undefined;\n        this._userMin = undefined;\n        this._suggestedMax = undefined;\n        this._suggestedMin = undefined;\n        this._ticksLength = 0;\n        this._borderValue = 0;\n        this._cache = {};\n        this._dataLimitsCached = false;\n        this.$context = undefined;\n    }\n init(options) {\n        this.options = options.setContext(this.getContext());\n        this.axis = options.axis;\n        this._userMin = this.parse(options.min);\n        this._userMax = this.parse(options.max);\n        this._suggestedMin = this.parse(options.suggestedMin);\n        this._suggestedMax = this.parse(options.suggestedMax);\n    }\n parse(raw, index) {\n        return raw;\n    }\n getUserBounds() {\n        let { _userMin , _userMax , _suggestedMin , _suggestedMax  } = this;\n        _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n        _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n        _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n        _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n        return {\n            min: finiteOrDefault(_userMin, _suggestedMin),\n            max: finiteOrDefault(_userMax, _suggestedMax),\n            minDefined: isNumberFinite(_userMin),\n            maxDefined: isNumberFinite(_userMax)\n        };\n    }\n getMinMax(canStack) {\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n        let range;\n        if (minDefined && maxDefined) {\n            return {\n                min,\n                max\n            };\n        }\n        const metas = this.getMatchingVisibleMetas();\n        for(let i = 0, ilen = metas.length; i < ilen; ++i){\n            range = metas[i].controller.getMinMax(this, canStack);\n            if (!minDefined) {\n                min = Math.min(min, range.min);\n            }\n            if (!maxDefined) {\n                max = Math.max(max, range.max);\n            }\n        }\n        min = maxDefined && min > max ? max : min;\n        max = minDefined && min > max ? min : max;\n        return {\n            min: finiteOrDefault(min, finiteOrDefault(max, min)),\n            max: finiteOrDefault(max, finiteOrDefault(min, max))\n        };\n    }\n getPadding() {\n        return {\n            left: this.paddingLeft || 0,\n            top: this.paddingTop || 0,\n            right: this.paddingRight || 0,\n            bottom: this.paddingBottom || 0\n        };\n    }\n getTicks() {\n        return this.ticks;\n    }\n getLabels() {\n        const data = this.chart.data;\n        return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n    }\n    beforeLayout() {\n        this._cache = {};\n        this._dataLimitsCached = false;\n    }\n    beforeUpdate() {\n        callback(this.options.beforeUpdate, [\n            this\n        ]);\n    }\n update(maxWidth, maxHeight, margins) {\n        const { beginAtZero , grace , ticks: tickOpts  } = this.options;\n        const sampleSize = tickOpts.sampleSize;\n        this.beforeUpdate();\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins = Object.assign({\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        }, margins);\n        this.ticks = null;\n        this._labelSizes = null;\n        this._gridLineItems = null;\n        this._labelItems = null;\n        this.beforeSetDimensions();\n        this.setDimensions();\n        this.afterSetDimensions();\n        this._maxLength = this.isHorizontal() ? this.width + margins.left + margins.right : this.height + margins.top + margins.bottom;\n        if (!this._dataLimitsCached) {\n            this.beforeDataLimits();\n            this.determineDataLimits();\n            this.afterDataLimits();\n            this._range = _addGrace(this, grace, beginAtZero);\n            this._dataLimitsCached = true;\n        }\n        this.beforeBuildTicks();\n        this.ticks = this.buildTicks() || [];\n        this.afterBuildTicks();\n        const samplingEnabled = sampleSize < this.ticks.length;\n        this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n        this.configure();\n        this.beforeCalculateLabelRotation();\n        this.calculateLabelRotation();\n        this.afterCalculateLabelRotation();\n        if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n            this.ticks = autoSkip(this, this.ticks);\n            this._labelSizes = null;\n            this.afterAutoSkip();\n        }\n        if (samplingEnabled) {\n            this._convertTicksToLabels(this.ticks);\n        }\n        this.beforeFit();\n        this.fit();\n        this.afterFit();\n        this.afterUpdate();\n    }\n configure() {\n        let reversePixels = this.options.reverse;\n        let startPixel, endPixel;\n        if (this.isHorizontal()) {\n            startPixel = this.left;\n            endPixel = this.right;\n        } else {\n            startPixel = this.top;\n            endPixel = this.bottom;\n            reversePixels = !reversePixels;\n        }\n        this._startPixel = startPixel;\n        this._endPixel = endPixel;\n        this._reversePixels = reversePixels;\n        this._length = endPixel - startPixel;\n        this._alignToPixels = this.options.alignToPixels;\n    }\n    afterUpdate() {\n        callback(this.options.afterUpdate, [\n            this\n        ]);\n    }\n    beforeSetDimensions() {\n        callback(this.options.beforeSetDimensions, [\n            this\n        ]);\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = 0;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = 0;\n            this.bottom = this.height;\n        }\n        this.paddingLeft = 0;\n        this.paddingTop = 0;\n        this.paddingRight = 0;\n        this.paddingBottom = 0;\n    }\n    afterSetDimensions() {\n        callback(this.options.afterSetDimensions, [\n            this\n        ]);\n    }\n    _callHooks(name) {\n        this.chart.notifyPlugins(name, this.getContext());\n        callback(this.options[name], [\n            this\n        ]);\n    }\n    beforeDataLimits() {\n        this._callHooks('beforeDataLimits');\n    }\n    determineDataLimits() {}\n    afterDataLimits() {\n        this._callHooks('afterDataLimits');\n    }\n    beforeBuildTicks() {\n        this._callHooks('beforeBuildTicks');\n    }\n buildTicks() {\n        return [];\n    }\n    afterBuildTicks() {\n        this._callHooks('afterBuildTicks');\n    }\n    beforeTickToLabelConversion() {\n        callback(this.options.beforeTickToLabelConversion, [\n            this\n        ]);\n    }\n generateTickLabels(ticks) {\n        const tickOpts = this.options.ticks;\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            tick = ticks[i];\n            tick.label = callback(tickOpts.callback, [\n                tick.value,\n                i,\n                ticks\n            ], this);\n        }\n    }\n    afterTickToLabelConversion() {\n        callback(this.options.afterTickToLabelConversion, [\n            this\n        ]);\n    }\n    beforeCalculateLabelRotation() {\n        callback(this.options.beforeCalculateLabelRotation, [\n            this\n        ]);\n    }\n    calculateLabelRotation() {\n        const options = this.options;\n        const tickOpts = options.ticks;\n        const numTicks = this.ticks.length;\n        const minRotation = tickOpts.minRotation || 0;\n        const maxRotation = tickOpts.maxRotation;\n        let labelRotation = minRotation;\n        let tickWidth, maxHeight, maxLabelDiagonal;\n        if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n            this.labelRotation = minRotation;\n            return;\n        }\n        const labelSizes = this._getLabelSizes();\n        const maxLabelWidth = labelSizes.widest.width;\n        const maxLabelHeight = labelSizes.highest.height;\n        const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n        tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n        if (maxLabelWidth + 6 > tickWidth) {\n            tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n            maxHeight = this.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n            maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n            labelRotation = toDegrees(Math.min(Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n            labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n        }\n        this.labelRotation = labelRotation;\n    }\n    afterCalculateLabelRotation() {\n        callback(this.options.afterCalculateLabelRotation, [\n            this\n        ]);\n    }\n    afterAutoSkip() {}\n    beforeFit() {\n        callback(this.options.beforeFit, [\n            this\n        ]);\n    }\n    fit() {\n        const minSize = {\n            width: 0,\n            height: 0\n        };\n        const { chart , options: { ticks: tickOpts , title: titleOpts , grid: gridOpts  }  } = this;\n        const display = this._isVisible();\n        const isHorizontal = this.isHorizontal();\n        if (display) {\n            const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n            if (isHorizontal) {\n                minSize.width = this.maxWidth;\n                minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n            } else {\n                minSize.height = this.maxHeight;\n                minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n            }\n            if (tickOpts.display && this.ticks.length) {\n                const { first , last , widest , highest  } = this._getLabelSizes();\n                const tickPadding = tickOpts.padding * 2;\n                const angleRadians = toRadians(this.labelRotation);\n                const cos = Math.cos(angleRadians);\n                const sin = Math.sin(angleRadians);\n                if (isHorizontal) {\n                    const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n                    minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n                } else {\n                    const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n                    minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n                }\n                this._calculatePadding(first, last, sin, cos);\n            }\n        }\n        this._handleMargins();\n        if (isHorizontal) {\n            this.width = this._length = chart.width - this._margins.left - this._margins.right;\n            this.height = minSize.height;\n        } else {\n            this.width = minSize.width;\n            this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n        }\n    }\n    _calculatePadding(first, last, sin, cos) {\n        const { ticks: { align , padding  } , position  } = this.options;\n        const isRotated = this.labelRotation !== 0;\n        const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n        if (this.isHorizontal()) {\n            const offsetLeft = this.getPixelForTick(0) - this.left;\n            const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n            let paddingLeft = 0;\n            let paddingRight = 0;\n            if (isRotated) {\n                if (labelsBelowTicks) {\n                    paddingLeft = cos * first.width;\n                    paddingRight = sin * last.height;\n                } else {\n                    paddingLeft = sin * first.height;\n                    paddingRight = cos * last.width;\n                }\n            } else if (align === 'start') {\n                paddingRight = last.width;\n            } else if (align === 'end') {\n                paddingLeft = first.width;\n            } else if (align !== 'inner') {\n                paddingLeft = first.width / 2;\n                paddingRight = last.width / 2;\n            }\n            this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n            this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n        } else {\n            let paddingTop = last.height / 2;\n            let paddingBottom = first.height / 2;\n            if (align === 'start') {\n                paddingTop = 0;\n                paddingBottom = first.height;\n            } else if (align === 'end') {\n                paddingTop = last.height;\n                paddingBottom = 0;\n            }\n            this.paddingTop = paddingTop + padding;\n            this.paddingBottom = paddingBottom + padding;\n        }\n    }\n _handleMargins() {\n        if (this._margins) {\n            this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n            this._margins.top = Math.max(this.paddingTop, this._margins.top);\n            this._margins.right = Math.max(this.paddingRight, this._margins.right);\n            this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n        }\n    }\n    afterFit() {\n        callback(this.options.afterFit, [\n            this\n        ]);\n    }\n isHorizontal() {\n        const { axis , position  } = this.options;\n        return position === 'top' || position === 'bottom' || axis === 'x';\n    }\n isFullSize() {\n        return this.options.fullSize;\n    }\n _convertTicksToLabels(ticks) {\n        this.beforeTickToLabelConversion();\n        this.generateTickLabels(ticks);\n        let i, ilen;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            if (isNullOrUndef(ticks[i].label)) {\n                ticks.splice(i, 1);\n                ilen--;\n                i--;\n            }\n        }\n        this.afterTickToLabelConversion();\n    }\n _getLabelSizes() {\n        let labelSizes = this._labelSizes;\n        if (!labelSizes) {\n            const sampleSize = this.options.ticks.sampleSize;\n            let ticks = this.ticks;\n            if (sampleSize < ticks.length) {\n                ticks = sample(ticks, sampleSize);\n            }\n            this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length);\n        }\n        return labelSizes;\n    }\n _computeLabelSizes(ticks, length) {\n        const { ctx , _longestTextCache: caches  } = this;\n        const widths = [];\n        const heights = [];\n        let widestLabelSize = 0;\n        let highestLabelSize = 0;\n        let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n        for(i = 0; i < length; ++i){\n            label = ticks[i].label;\n            tickFont = this._resolveTickFontOptions(i);\n            ctx.font = fontString = tickFont.string;\n            cache = caches[fontString] = caches[fontString] || {\n                data: {},\n                gc: []\n            };\n            lineHeight = tickFont.lineHeight;\n            width = height = 0;\n            if (!isNullOrUndef(label) && !isArray(label)) {\n                width = _measureText(ctx, cache.data, cache.gc, width, label);\n                height = lineHeight;\n            } else if (isArray(label)) {\n                for(j = 0, jlen = label.length; j < jlen; ++j){\n                    nestedLabel = label[j];\n                    if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n                        width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n                        height += lineHeight;\n                    }\n                }\n            }\n            widths.push(width);\n            heights.push(height);\n            widestLabelSize = Math.max(width, widestLabelSize);\n            highestLabelSize = Math.max(height, highestLabelSize);\n        }\n        garbageCollect(caches, length);\n        const widest = widths.indexOf(widestLabelSize);\n        const highest = heights.indexOf(highestLabelSize);\n        const valueAt = (idx)=>({\n                width: widths[idx] || 0,\n                height: heights[idx] || 0\n            });\n        return {\n            first: valueAt(0),\n            last: valueAt(length - 1),\n            widest: valueAt(widest),\n            highest: valueAt(highest),\n            widths,\n            heights\n        };\n    }\n getLabelForValue(value) {\n        return value;\n    }\n getPixelForValue(value, index) {\n        return NaN;\n    }\n getValueForPixel(pixel) {}\n getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n getPixelForDecimal(decimal) {\n        if (this._reversePixels) {\n            decimal = 1 - decimal;\n        }\n        const pixel = this._startPixel + decimal * this._length;\n        return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n    }\n getDecimalForPixel(pixel) {\n        const decimal = (pixel - this._startPixel) / this._length;\n        return this._reversePixels ? 1 - decimal : decimal;\n    }\n getBasePixel() {\n        return this.getPixelForValue(this.getBaseValue());\n    }\n getBaseValue() {\n        const { min , max  } = this;\n        return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    }\n getContext(index) {\n        const ticks = this.ticks || [];\n        if (index >= 0 && index < ticks.length) {\n            const tick = ticks[index];\n            return tick.$context || (tick.$context = createTickContext(this.getContext(), index, tick));\n        }\n        return this.$context || (this.$context = createScaleContext(this.chart.getContext(), this));\n    }\n _tickSize() {\n        const optionTicks = this.options.ticks;\n        const rot = toRadians(this.labelRotation);\n        const cos = Math.abs(Math.cos(rot));\n        const sin = Math.abs(Math.sin(rot));\n        const labelSizes = this._getLabelSizes();\n        const padding = optionTicks.autoSkipPadding || 0;\n        const w = labelSizes ? labelSizes.widest.width + padding : 0;\n        const h = labelSizes ? labelSizes.highest.height + padding : 0;\n        return this.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    }\n _isVisible() {\n        const display = this.options.display;\n        if (display !== 'auto') {\n            return !!display;\n        }\n        return this.getMatchingVisibleMetas().length > 0;\n    }\n _computeGridLineItems(chartArea) {\n        const axis = this.axis;\n        const chart = this.chart;\n        const options = this.options;\n        const { grid , position , border  } = options;\n        const offset = grid.offset;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const ticksLength = ticks.length + (offset ? 1 : 0);\n        const tl = getTickMarkLength(grid);\n        const items = [];\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = borderOpts.display ? borderOpts.width : 0;\n        const axisHalfWidth = axisWidth / 2;\n        const alignBorderValue = function(pixel) {\n            return _alignPixel(chart, pixel, axisWidth);\n        };\n        let borderValue, i, lineValue, alignedLineValue;\n        let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n        if (position === 'top') {\n            borderValue = alignBorderValue(this.bottom);\n            ty1 = this.bottom - tl;\n            ty2 = borderValue - axisHalfWidth;\n            y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n            y2 = chartArea.bottom;\n        } else if (position === 'bottom') {\n            borderValue = alignBorderValue(this.top);\n            y1 = chartArea.top;\n            y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = this.top + tl;\n        } else if (position === 'left') {\n            borderValue = alignBorderValue(this.right);\n            tx1 = this.right - tl;\n            tx2 = borderValue - axisHalfWidth;\n            x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n            x2 = chartArea.right;\n        } else if (position === 'right') {\n            borderValue = alignBorderValue(this.left);\n            x1 = chartArea.left;\n            x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n            tx1 = borderValue + axisHalfWidth;\n            tx2 = this.left + tl;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            y1 = chartArea.top;\n            y2 = chartArea.bottom;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = ty1 + tl;\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n            } else if (isObject(position)) {\n                const positionAxisID1 = Object.keys(position)[0];\n                const value1 = position[positionAxisID1];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID1].getPixelForValue(value1));\n            }\n            tx1 = borderValue - axisHalfWidth;\n            tx2 = tx1 - tl;\n            x1 = chartArea.left;\n            x2 = chartArea.right;\n        }\n        const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n        const step = Math.max(1, Math.ceil(ticksLength / limit));\n        for(i = 0; i < ticksLength; i += step){\n            const context = this.getContext(i);\n            const optsAtIndex = grid.setContext(context);\n            const optsAtIndexBorder = border.setContext(context);\n            const lineWidth = optsAtIndex.lineWidth;\n            const lineColor = optsAtIndex.color;\n            const borderDash = optsAtIndexBorder.dash || [];\n            const borderDashOffset = optsAtIndexBorder.dashOffset;\n            const tickWidth = optsAtIndex.tickWidth;\n            const tickColor = optsAtIndex.tickColor;\n            const tickBorderDash = optsAtIndex.tickBorderDash || [];\n            const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n            lineValue = getPixelForGridLine(this, i, offset);\n            if (lineValue === undefined) {\n                continue;\n            }\n            alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n            if (isHorizontal) {\n                tx1 = tx2 = x1 = x2 = alignedLineValue;\n            } else {\n                ty1 = ty2 = y1 = y2 = alignedLineValue;\n            }\n            items.push({\n                tx1,\n                ty1,\n                tx2,\n                ty2,\n                x1,\n                y1,\n                x2,\n                y2,\n                width: lineWidth,\n                color: lineColor,\n                borderDash,\n                borderDashOffset,\n                tickWidth,\n                tickColor,\n                tickBorderDash,\n                tickBorderDashOffset\n            });\n        }\n        this._ticksLength = ticksLength;\n        this._borderValue = borderValue;\n        return items;\n    }\n _computeLabelItems(chartArea) {\n        const axis = this.axis;\n        const options = this.options;\n        const { position , ticks: optionTicks  } = options;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const { align , crossAlign , padding , mirror  } = optionTicks;\n        const tl = getTickMarkLength(options.grid);\n        const tickAndPadding = tl + padding;\n        const hTickAndPadding = mirror ? -padding : tickAndPadding;\n        const rotation = -toRadians(this.labelRotation);\n        const items = [];\n        let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n        let textBaseline = 'middle';\n        if (position === 'top') {\n            y = this.bottom - hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'bottom') {\n            y = this.top + hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'left') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (position === 'right') {\n            const ret1 = this._getYAxisLabelAlignment(tl);\n            textAlign = ret1.textAlign;\n            x = ret1.x;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n            }\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID1 = Object.keys(position)[0];\n                const value1 = position[positionAxisID1];\n                x = this.chart.scales[positionAxisID1].getPixelForValue(value1);\n            }\n            textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n        }\n        if (axis === 'y') {\n            if (align === 'start') {\n                textBaseline = 'top';\n            } else if (align === 'end') {\n                textBaseline = 'bottom';\n            }\n        }\n        const labelSizes = this._getLabelSizes();\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            label = tick.label;\n            const optsAtIndex = optionTicks.setContext(this.getContext(i));\n            pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n            font = this._resolveTickFontOptions(i);\n            lineHeight = font.lineHeight;\n            lineCount = isArray(label) ? label.length : 1;\n            const halfCount = lineCount / 2;\n            const color = optsAtIndex.color;\n            const strokeColor = optsAtIndex.textStrokeColor;\n            const strokeWidth = optsAtIndex.textStrokeWidth;\n            let tickTextAlign = textAlign;\n            if (isHorizontal) {\n                x = pixel;\n                if (textAlign === 'inner') {\n                    if (i === ilen - 1) {\n                        tickTextAlign = !this.options.reverse ? 'right' : 'left';\n                    } else if (i === 0) {\n                        tickTextAlign = !this.options.reverse ? 'left' : 'right';\n                    } else {\n                        tickTextAlign = 'center';\n                    }\n                }\n                if (position === 'top') {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = -lineCount * lineHeight + lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n                    } else {\n                        textOffset = -labelSizes.highest.height + lineHeight / 2;\n                    }\n                } else {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n                    } else {\n                        textOffset = labelSizes.highest.height - lineCount * lineHeight;\n                    }\n                }\n                if (mirror) {\n                    textOffset *= -1;\n                }\n                if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n                    x += lineHeight / 2 * Math.sin(rotation);\n                }\n            } else {\n                y = pixel;\n                textOffset = (1 - lineCount) * lineHeight / 2;\n            }\n            let backdrop;\n            if (optsAtIndex.showLabelBackdrop) {\n                const labelPadding = toPadding(optsAtIndex.backdropPadding);\n                const height = labelSizes.heights[i];\n                const width = labelSizes.widths[i];\n                let top = textOffset - labelPadding.top;\n                let left = 0 - labelPadding.left;\n                switch(textBaseline){\n                    case 'middle':\n                        top -= height / 2;\n                        break;\n                    case 'bottom':\n                        top -= height;\n                        break;\n                }\n                switch(textAlign){\n                    case 'center':\n                        left -= width / 2;\n                        break;\n                    case 'right':\n                        left -= width;\n                        break;\n                }\n                backdrop = {\n                    left,\n                    top,\n                    width: width + labelPadding.width,\n                    height: height + labelPadding.height,\n                    color: optsAtIndex.backdropColor\n                };\n            }\n            items.push({\n                rotation,\n                label,\n                font,\n                color,\n                strokeColor,\n                strokeWidth,\n                textOffset,\n                textAlign: tickTextAlign,\n                textBaseline,\n                translation: [\n                    x,\n                    y\n                ],\n                backdrop\n            });\n        }\n        return items;\n    }\n    _getXAxisLabelAlignment() {\n        const { position , ticks  } = this.options;\n        const rotation = -toRadians(this.labelRotation);\n        if (rotation) {\n            return position === 'top' ? 'left' : 'right';\n        }\n        let align = 'center';\n        if (ticks.align === 'start') {\n            align = 'left';\n        } else if (ticks.align === 'end') {\n            align = 'right';\n        } else if (ticks.align === 'inner') {\n            align = 'inner';\n        }\n        return align;\n    }\n    _getYAxisLabelAlignment(tl) {\n        const { position , ticks: { crossAlign , mirror , padding  }  } = this.options;\n        const labelSizes = this._getLabelSizes();\n        const tickAndPadding = tl + padding;\n        const widest = labelSizes.widest.width;\n        let textAlign;\n        let x;\n        if (position === 'left') {\n            if (mirror) {\n                x = this.right + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x += widest;\n                }\n            } else {\n                x = this.right - tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x = this.left;\n                }\n            }\n        } else if (position === 'right') {\n            if (mirror) {\n                x = this.left + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x -= widest;\n                }\n            } else {\n                x = this.left + tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x = this.right;\n                }\n            }\n        } else {\n            textAlign = 'right';\n        }\n        return {\n            textAlign,\n            x\n        };\n    }\n _computeLabelArea() {\n        if (this.options.ticks.mirror) {\n            return;\n        }\n        const chart = this.chart;\n        const position = this.options.position;\n        if (position === 'left' || position === 'right') {\n            return {\n                top: 0,\n                left: this.left,\n                bottom: chart.height,\n                right: this.right\n            };\n        }\n        if (position === 'top' || position === 'bottom') {\n            return {\n                top: this.top,\n                left: 0,\n                bottom: this.bottom,\n                right: chart.width\n            };\n        }\n    }\n drawBackground() {\n        const { ctx , options: { backgroundColor  } , left , top , width , height  } = this;\n        if (backgroundColor) {\n            ctx.save();\n            ctx.fillStyle = backgroundColor;\n            ctx.fillRect(left, top, width, height);\n            ctx.restore();\n        }\n    }\n    getLineWidthForValue(value) {\n        const grid = this.options.grid;\n        if (!this._isVisible() || !grid.display) {\n            return 0;\n        }\n        const ticks = this.ticks;\n        const index = ticks.findIndex((t)=>t.value === value);\n        if (index >= 0) {\n            const opts = grid.setContext(this.getContext(index));\n            return opts.lineWidth;\n        }\n        return 0;\n    }\n drawGrid(chartArea) {\n        const grid = this.options.grid;\n        const ctx = this.ctx;\n        const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n        let i, ilen;\n        const drawLine = (p1, p2, style)=>{\n            if (!style.width || !style.color) {\n                return;\n            }\n            ctx.save();\n            ctx.lineWidth = style.width;\n            ctx.strokeStyle = style.color;\n            ctx.setLineDash(style.borderDash || []);\n            ctx.lineDashOffset = style.borderDashOffset;\n            ctx.beginPath();\n            ctx.moveTo(p1.x, p1.y);\n            ctx.lineTo(p2.x, p2.y);\n            ctx.stroke();\n            ctx.restore();\n        };\n        if (grid.display) {\n            for(i = 0, ilen = items.length; i < ilen; ++i){\n                const item = items[i];\n                if (grid.drawOnChartArea) {\n                    drawLine({\n                        x: item.x1,\n                        y: item.y1\n                    }, {\n                        x: item.x2,\n                        y: item.y2\n                    }, item);\n                }\n                if (grid.drawTicks) {\n                    drawLine({\n                        x: item.tx1,\n                        y: item.ty1\n                    }, {\n                        x: item.tx2,\n                        y: item.ty2\n                    }, {\n                        color: item.tickColor,\n                        width: item.tickWidth,\n                        borderDash: item.tickBorderDash,\n                        borderDashOffset: item.tickBorderDashOffset\n                    });\n                }\n            }\n        }\n    }\n drawBorder() {\n        const { chart , ctx , options: { border , grid  }  } = this;\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = border.display ? borderOpts.width : 0;\n        if (!axisWidth) {\n            return;\n        }\n        const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n        const borderValue = this._borderValue;\n        let x1, x2, y1, y2;\n        if (this.isHorizontal()) {\n            x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n            x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n            y1 = y2 = borderValue;\n        } else {\n            y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n            y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n            x1 = x2 = borderValue;\n        }\n        ctx.save();\n        ctx.lineWidth = borderOpts.width;\n        ctx.strokeStyle = borderOpts.color;\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x2, y2);\n        ctx.stroke();\n        ctx.restore();\n    }\n drawLabels(chartArea) {\n        const optionTicks = this.options.ticks;\n        if (!optionTicks.display) {\n            return;\n        }\n        const ctx = this.ctx;\n        const area = this._computeLabelArea();\n        if (area) {\n            clipArea(ctx, area);\n        }\n        const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n        let i, ilen;\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            const item = items[i];\n            const tickFont = item.font;\n            const label = item.label;\n            let y = item.textOffset;\n            renderText(ctx, label, 0, y, tickFont, item);\n        }\n        if (area) {\n            unclipArea(ctx);\n        }\n    }\n drawTitle() {\n        const { ctx , options: { position , title , reverse  }  } = this;\n        if (!title.display) {\n            return;\n        }\n        const font = toFont(title.font);\n        const padding = toPadding(title.padding);\n        const align = title.align;\n        let offset = font.lineHeight / 2;\n        if (position === 'bottom' || position === 'center' || isObject(position)) {\n            offset += padding.bottom;\n            if (isArray(title.text)) {\n                offset += font.lineHeight * (title.text.length - 1);\n            }\n        } else {\n            offset += padding.top;\n        }\n        const { titleX , titleY , maxWidth , rotation  } = titleArgs(this, offset, position, align);\n        renderText(ctx, title.text, 0, 0, font, {\n            color: title.color,\n            maxWidth,\n            rotation,\n            textAlign: titleAlign(align, position, reverse),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n    draw(chartArea) {\n        if (!this._isVisible()) {\n            return;\n        }\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawBorder();\n        this.drawTitle();\n        this.drawLabels(chartArea);\n    }\n _layers() {\n        const opts = this.options;\n        const tz = opts.ticks && opts.ticks.z || 0;\n        const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n        const bz = valueOrDefault(opts.border && opts.border.z, 0);\n        if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n            return [\n                {\n                    z: tz,\n                    draw: (chartArea)=>{\n                        this.draw(chartArea);\n                    }\n                }\n            ];\n        }\n        return [\n            {\n                z: gz,\n                draw: (chartArea)=>{\n                    this.drawBackground();\n                    this.drawGrid(chartArea);\n                    this.drawTitle();\n                }\n            },\n            {\n                z: bz,\n                draw: ()=>{\n                    this.drawBorder();\n                }\n            },\n            {\n                z: tz,\n                draw: (chartArea)=>{\n                    this.drawLabels(chartArea);\n                }\n            }\n        ];\n    }\n getMatchingVisibleMetas(type) {\n        const metas = this.chart.getSortedVisibleDatasetMetas();\n        const axisID = this.axis + 'AxisID';\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            const meta = metas[i];\n            if (meta[axisID] === this.id && (!type || meta.type === type)) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n _resolveTickFontOptions(index) {\n        const opts = this.options.ticks.setContext(this.getContext(index));\n        return toFont(opts.font);\n    }\n _maxDigits() {\n        const fontSize = this._resolveTickFontOptions(0).lineHeight;\n        return (this.isHorizontal() ? this.width : this.height) / fontSize;\n    }\n}\n\nclass TypedRegistry {\n    constructor(type, scope, override){\n        this.type = type;\n        this.scope = scope;\n        this.override = override;\n        this.items = Object.create(null);\n    }\n    isForType(type) {\n        return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n    }\n register(item) {\n        const proto = Object.getPrototypeOf(item);\n        let parentScope;\n        if (isIChartComponent(proto)) {\n            parentScope = this.register(proto);\n        }\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope + '.' + id;\n        if (!id) {\n            throw new Error('class does not have id: ' + item);\n        }\n        if (id in items) {\n            return scope;\n        }\n        items[id] = item;\n        registerDefaults(item, scope, parentScope);\n        if (this.override) {\n            defaults.override(item.id, item.overrides);\n        }\n        return scope;\n    }\n get(id) {\n        return this.items[id];\n    }\n unregister(item) {\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope;\n        if (id in items) {\n            delete items[id];\n        }\n        if (scope && id in defaults[scope]) {\n            delete defaults[scope][id];\n            if (this.override) {\n                delete overrides[id];\n            }\n        }\n    }\n}function registerDefaults(item, scope, parentScope) {\n    const itemDefaults = merge(Object.create(null), [\n        parentScope ? defaults.get(parentScope) : {},\n        defaults.get(scope),\n        item.defaults\n    ]);\n    defaults.set(scope, itemDefaults);\n    if (item.defaultRoutes) {\n        routeDefaults(scope, item.defaultRoutes);\n    }\n    if (item.descriptors) {\n        defaults.describe(scope, item.descriptors);\n    }\n}\nfunction routeDefaults(scope, routes) {\n    Object.keys(routes).forEach((property)=>{\n        const propertyParts = property.split('.');\n        const sourceName = propertyParts.pop();\n        const sourceScope = [\n            scope\n        ].concat(propertyParts).join('.');\n        const parts = routes[property].split('.');\n        const targetName = parts.pop();\n        const targetScope = parts.join('.');\n        defaults.route(sourceScope, sourceName, targetScope, targetName);\n    });\n}\nfunction isIChartComponent(proto) {\n    return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n    constructor(){\n        this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n        this.elements = new TypedRegistry(Element, 'elements');\n        this.plugins = new TypedRegistry(Object, 'plugins');\n        this.scales = new TypedRegistry(Scale, 'scales');\n        this._typedRegistries = [\n            this.controllers,\n            this.scales,\n            this.elements\n        ];\n    }\n add(...args) {\n        this._each('register', args);\n    }\n    remove(...args) {\n        this._each('unregister', args);\n    }\n addControllers(...args) {\n        this._each('register', args, this.controllers);\n    }\n addElements(...args) {\n        this._each('register', args, this.elements);\n    }\n addPlugins(...args) {\n        this._each('register', args, this.plugins);\n    }\n addScales(...args) {\n        this._each('register', args, this.scales);\n    }\n getController(id) {\n        return this._get(id, this.controllers, 'controller');\n    }\n getElement(id) {\n        return this._get(id, this.elements, 'element');\n    }\n getPlugin(id) {\n        return this._get(id, this.plugins, 'plugin');\n    }\n getScale(id) {\n        return this._get(id, this.scales, 'scale');\n    }\n removeControllers(...args) {\n        this._each('unregister', args, this.controllers);\n    }\n removeElements(...args) {\n        this._each('unregister', args, this.elements);\n    }\n removePlugins(...args) {\n        this._each('unregister', args, this.plugins);\n    }\n removeScales(...args) {\n        this._each('unregister', args, this.scales);\n    }\n _each(method, args, typedRegistry) {\n        [\n            ...args\n        ].forEach((arg)=>{\n            const reg = typedRegistry || this._getRegistryForType(arg);\n            if (typedRegistry || reg.isForType(arg) || reg === this.plugins && arg.id) {\n                this._exec(method, reg, arg);\n            } else {\n                each(arg, (item)=>{\n                    const itemReg = typedRegistry || this._getRegistryForType(item);\n                    this._exec(method, itemReg, item);\n                });\n            }\n        });\n    }\n _exec(method, registry, component) {\n        const camelMethod = _capitalize(method);\n        callback(component['before' + camelMethod], [], component);\n        registry[method](component);\n        callback(component['after' + camelMethod], [], component);\n    }\n _getRegistryForType(type) {\n        for(let i = 0; i < this._typedRegistries.length; i++){\n            const reg = this._typedRegistries[i];\n            if (reg.isForType(type)) {\n                return reg;\n            }\n        }\n        return this.plugins;\n    }\n _get(id, typedRegistry, type) {\n        const item = typedRegistry.get(id);\n        if (item === undefined) {\n            throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n        }\n        return item;\n    }\n}\nvar registry = /* #__PURE__ */ new Registry();\n\nclass PluginService {\n    constructor(){\n        this._init = [];\n    }\n notify(chart, hook, args, filter) {\n        if (hook === 'beforeInit') {\n            this._init = this._createDescriptors(chart, true);\n            this._notify(this._init, chart, 'install');\n        }\n        const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n        const result = this._notify(descriptors, chart, hook, args);\n        if (hook === 'afterDestroy') {\n            this._notify(descriptors, chart, 'stop');\n            this._notify(this._init, chart, 'uninstall');\n        }\n        return result;\n    }\n _notify(descriptors, chart, hook, args) {\n        args = args || {};\n        for (const descriptor of descriptors){\n            const plugin = descriptor.plugin;\n            const method = plugin[hook];\n            const params = [\n                chart,\n                args,\n                descriptor.options\n            ];\n            if (callback(method, params, plugin) === false && args.cancelable) {\n                return false;\n            }\n        }\n        return true;\n    }\n    invalidate() {\n        if (!isNullOrUndef(this._cache)) {\n            this._oldCache = this._cache;\n            this._cache = undefined;\n        }\n    }\n _descriptors(chart) {\n        if (this._cache) {\n            return this._cache;\n        }\n        const descriptors = this._cache = this._createDescriptors(chart);\n        this._notifyStateChanges(chart);\n        return descriptors;\n    }\n    _createDescriptors(chart, all) {\n        const config = chart && chart.config;\n        const options = valueOrDefault(config.options && config.options.plugins, {});\n        const plugins = allPlugins(config);\n        return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n    }\n _notifyStateChanges(chart) {\n        const previousDescriptors = this._oldCache || [];\n        const descriptors = this._cache;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.plugin.id === y.plugin.id));\n        this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n        this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n    }\n} function allPlugins(config) {\n    const localIds = {};\n    const plugins = [];\n    const keys = Object.keys(registry.plugins.items);\n    for(let i = 0; i < keys.length; i++){\n        plugins.push(registry.getPlugin(keys[i]));\n    }\n    const local = config.plugins || [];\n    for(let i1 = 0; i1 < local.length; i1++){\n        const plugin = local[i1];\n        if (plugins.indexOf(plugin) === -1) {\n            plugins.push(plugin);\n            localIds[plugin.id] = true;\n        }\n    }\n    return {\n        plugins,\n        localIds\n    };\n}\nfunction getOpts(options, all) {\n    if (!all && options === false) {\n        return null;\n    }\n    if (options === true) {\n        return {};\n    }\n    return options;\n}\nfunction createDescriptors(chart, { plugins , localIds  }, options, all) {\n    const result = [];\n    const context = chart.getContext();\n    for (const plugin of plugins){\n        const id = plugin.id;\n        const opts = getOpts(options[id], all);\n        if (opts === null) {\n            continue;\n        }\n        result.push({\n            plugin,\n            options: pluginOpts(chart.config, {\n                plugin,\n                local: localIds[id]\n            }, opts, context)\n        });\n    }\n    return result;\n}\nfunction pluginOpts(config, { plugin , local  }, opts, context) {\n    const keys = config.pluginScopeKeys(plugin);\n    const scopes = config.getOptionScopes(opts, keys);\n    if (local && plugin.defaults) {\n        scopes.push(plugin.defaults);\n    }\n    return config.createResolver(scopes, context, [\n        ''\n    ], {\n        scriptable: false,\n        indexable: false,\n        allKeys: true\n    });\n}\n\nfunction getIndexAxis(type, options) {\n    const datasetDefaults = defaults.datasets[type] || {};\n    const datasetOptions = (options.datasets || {})[type] || {};\n    return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n    let axis = id;\n    if (id === '_index_') {\n        axis = indexAxis;\n    } else if (id === '_value_') {\n        axis = indexAxis === 'x' ? 'y' : 'x';\n    }\n    return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n    return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction axisFromPosition(position) {\n    if (position === 'top' || position === 'bottom') {\n        return 'x';\n    }\n    if (position === 'left' || position === 'right') {\n        return 'y';\n    }\n}\nfunction determineAxis(id, scaleOptions) {\n    if (id === 'x' || id === 'y' || id === 'r') {\n        return id;\n    }\n    id = scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.length > 1 && determineAxis(id[0].toLowerCase(), scaleOptions);\n    if (id) {\n        return id;\n    }\n    throw new Error(`Cannot determine type of '${name}' axis. Please provide 'axis' or 'position' option.`);\n}\nfunction mergeScaleConfig(config, options) {\n    const chartDefaults = overrides[config.type] || {\n        scales: {}\n    };\n    const configScales = options.scales || {};\n    const chartIndexAxis = getIndexAxis(config.type, options);\n    const scales = Object.create(null);\n    Object.keys(configScales).forEach((id)=>{\n        const scaleConf = configScales[id];\n        if (!isObject(scaleConf)) {\n            return console.error(`Invalid scale configuration for scale: ${id}`);\n        }\n        if (scaleConf._proxy) {\n            return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n        }\n        const axis = determineAxis(id, scaleConf);\n        const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n        const defaultScaleOptions = chartDefaults.scales || {};\n        scales[id] = mergeIf(Object.create(null), [\n            {\n                axis\n            },\n            scaleConf,\n            defaultScaleOptions[axis],\n            defaultScaleOptions[defaultId]\n        ]);\n    });\n    config.data.datasets.forEach((dataset)=>{\n        const type = dataset.type || config.type;\n        const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n        const datasetDefaults = overrides[type] || {};\n        const defaultScaleOptions = datasetDefaults.scales || {};\n        Object.keys(defaultScaleOptions).forEach((defaultID)=>{\n            const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n            const id = dataset[axis + 'AxisID'] || axis;\n            scales[id] = scales[id] || Object.create(null);\n            mergeIf(scales[id], [\n                {\n                    axis\n                },\n                configScales[id],\n                defaultScaleOptions[defaultID]\n            ]);\n        });\n    });\n    Object.keys(scales).forEach((key)=>{\n        const scale = scales[key];\n        mergeIf(scale, [\n            defaults.scales[scale.type],\n            defaults.scale\n        ]);\n    });\n    return scales;\n}\nfunction initOptions(config) {\n    const options = config.options || (config.options = {});\n    options.plugins = valueOrDefault(options.plugins, {});\n    options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n    data = data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    return data;\n}\nfunction initConfig(config) {\n    config = config || {};\n    config.data = initData(config.data);\n    initOptions(config);\n    return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n    let keys = keyCache.get(cacheKey);\n    if (!keys) {\n        keys = generate();\n        keyCache.set(cacheKey, keys);\n        keysCached.add(keys);\n    }\n    return keys;\n}\nconst addIfFound = (set, obj, key)=>{\n    const opts = resolveObjectKey(obj, key);\n    if (opts !== undefined) {\n        set.add(opts);\n    }\n};\nclass Config {\n    constructor(config){\n        this._config = initConfig(config);\n        this._scopeCache = new Map();\n        this._resolverCache = new Map();\n    }\n    get platform() {\n        return this._config.platform;\n    }\n    get type() {\n        return this._config.type;\n    }\n    set type(type) {\n        this._config.type = type;\n    }\n    get data() {\n        return this._config.data;\n    }\n    set data(data) {\n        this._config.data = initData(data);\n    }\n    get options() {\n        return this._config.options;\n    }\n    set options(options) {\n        this._config.options = options;\n    }\n    get plugins() {\n        return this._config.plugins;\n    }\n    update() {\n        const config = this._config;\n        this.clearCache();\n        initOptions(config);\n    }\n    clearCache() {\n        this._scopeCache.clear();\n        this._resolverCache.clear();\n    }\n datasetScopeKeys(datasetType) {\n        return cachedKeys(datasetType, ()=>[\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetAnimationScopeKeys(datasetType, transition) {\n        return cachedKeys(`${datasetType}.transition.${transition}`, ()=>[\n                [\n                    `datasets.${datasetType}.transitions.${transition}`,\n                    `transitions.${transition}`,\n                ],\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetElementScopeKeys(datasetType, elementType) {\n        return cachedKeys(`${datasetType}-${elementType}`, ()=>[\n                [\n                    `datasets.${datasetType}.elements.${elementType}`,\n                    `datasets.${datasetType}`,\n                    `elements.${elementType}`,\n                    ''\n                ]\n            ]);\n    }\n pluginScopeKeys(plugin) {\n        const id = plugin.id;\n        const type = this.type;\n        return cachedKeys(`${type}-plugin-${id}`, ()=>[\n                [\n                    `plugins.${id}`,\n                    ...plugin.additionalOptionScopes || [],\n                ]\n            ]);\n    }\n _cachedScopes(mainScope, resetCache) {\n        const _scopeCache = this._scopeCache;\n        let cache = _scopeCache.get(mainScope);\n        if (!cache || resetCache) {\n            cache = new Map();\n            _scopeCache.set(mainScope, cache);\n        }\n        return cache;\n    }\n getOptionScopes(mainScope, keyLists, resetCache) {\n        const { options , type  } = this;\n        const cache = this._cachedScopes(mainScope, resetCache);\n        const cached = cache.get(keyLists);\n        if (cached) {\n            return cached;\n        }\n        const scopes = new Set();\n        keyLists.forEach((keys)=>{\n            if (mainScope) {\n                scopes.add(mainScope);\n                keys.forEach((key)=>addIfFound(scopes, mainScope, key));\n            }\n            keys.forEach((key)=>addIfFound(scopes, options, key));\n            keys.forEach((key)=>addIfFound(scopes, overrides[type] || {}, key));\n            keys.forEach((key)=>addIfFound(scopes, defaults, key));\n            keys.forEach((key)=>addIfFound(scopes, descriptors, key));\n        });\n        const array = Array.from(scopes);\n        if (array.length === 0) {\n            array.push(Object.create(null));\n        }\n        if (keysCached.has(keyLists)) {\n            cache.set(keyLists, array);\n        }\n        return array;\n    }\n chartOptionScopes() {\n        const { options , type  } = this;\n        return [\n            options,\n            overrides[type] || {},\n            defaults.datasets[type] || {},\n            {\n                type\n            },\n            defaults,\n            descriptors\n        ];\n    }\n resolveNamedOptions(scopes, names, context, prefixes = [\n        ''\n    ]) {\n        const result = {\n            $shared: true\n        };\n        const { resolver , subPrefixes  } = getResolver(this._resolverCache, scopes, prefixes);\n        let options = resolver;\n        if (needContext(resolver, names)) {\n            result.$shared = false;\n            context = isFunction(context) ? context() : context;\n            const subResolver = this.createResolver(scopes, context, subPrefixes);\n            options = _attachContext(resolver, context, subResolver);\n        }\n        for (const prop of names){\n            result[prop] = options[prop];\n        }\n        return result;\n    }\n createResolver(scopes, context, prefixes = [\n        ''\n    ], descriptorDefaults) {\n        const { resolver  } = getResolver(this._resolverCache, scopes, prefixes);\n        return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n    }\n}function getResolver(resolverCache, scopes, prefixes) {\n    let cache = resolverCache.get(scopes);\n    if (!cache) {\n        cache = new Map();\n        resolverCache.set(scopes, cache);\n    }\n    const cacheKey = prefixes.join();\n    let cached = cache.get(cacheKey);\n    if (!cached) {\n        const resolver = _createResolver(scopes, prefixes);\n        cached = {\n            resolver,\n            subPrefixes: prefixes.filter((p)=>!p.toLowerCase().includes('hover'))\n        };\n        cache.set(cacheKey, cached);\n    }\n    return cached;\n}\nconst hasFunction = (value)=>isObject(value) && Object.getOwnPropertyNames(value).reduce((acc, key)=>acc || isFunction(value[key]), false);\nfunction needContext(proxy, names) {\n    const { isScriptable , isIndexable  } = _descriptors(proxy);\n    for (const prop of names){\n        const scriptable = isScriptable(prop);\n        const indexable = isIndexable(prop);\n        const value = (indexable || scriptable) && proxy[prop];\n        if (scriptable && (isFunction(value) || hasFunction(value)) || indexable && isArray(value)) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar version = \"4.0.1\";\n\nconst KNOWN_POSITIONS = [\n    'top',\n    'bottom',\n    'left',\n    'right',\n    'chartArea'\n];\nfunction positionIsHorizontal(position, axis) {\n    return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\nfunction compare2Level(l1, l2) {\n    return function(a, b) {\n        return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n    };\n}\nfunction onAnimationsComplete(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    chart.notifyPlugins('afterRender');\n    callback(animationOptions && animationOptions.onComplete, [\n        context\n    ], chart);\n}\nfunction onAnimationProgress(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    callback(animationOptions && animationOptions.onProgress, [\n        context\n    ], chart);\n}\n function getCanvas(item) {\n    if (_isDomSupported() && typeof item === 'string') {\n        item = document.getElementById(item);\n    } else if (item && item.length) {\n        item = item[0];\n    }\n    if (item && item.canvas) {\n        item = item.canvas;\n    }\n    return item;\n}\nconst instances = {};\nconst getChart = (key)=>{\n    const canvas = getCanvas(key);\n    return Object.values(instances).filter((c)=>c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n    const keys = Object.keys(obj);\n    for (const key of keys){\n        const intKey = +key;\n        if (intKey >= start) {\n            const value = obj[key];\n            delete obj[key];\n            if (move > 0 || intKey > start) {\n                obj[intKey + move] = value;\n            }\n        }\n    }\n}\n function determineLastEvent(e, lastEvent, inChartArea, isClick) {\n    if (!inChartArea || e.type === 'mouseout') {\n        return null;\n    }\n    if (isClick) {\n        return lastEvent;\n    }\n    return e;\n}\nfunction getDatasetArea(meta) {\n    const { xScale , yScale  } = meta;\n    if (xScale && yScale) {\n        return {\n            left: xScale.left,\n            right: xScale.right,\n            top: yScale.top,\n            bottom: yScale.bottom\n        };\n    }\n}\nclass Chart {\n    static defaults = defaults;\n    static instances = instances;\n    static overrides = overrides;\n    static registry = registry;\n    static version = version;\n    static getChart = getChart;\n    static register(...items) {\n        registry.add(...items);\n        invalidatePlugins();\n    }\n    static unregister(...items) {\n        registry.remove(...items);\n        invalidatePlugins();\n    }\n    constructor(item, userConfig){\n        const config = this.config = new Config(userConfig);\n        const initialCanvas = getCanvas(item);\n        const existingChart = getChart(initialCanvas);\n        if (existingChart) {\n            throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.');\n        }\n        const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n        this.platform.updateConfig(config);\n        const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n        const canvas = context && context.canvas;\n        const height = canvas && canvas.height;\n        const width = canvas && canvas.width;\n        this.id = uid();\n        this.ctx = context;\n        this.canvas = canvas;\n        this.width = width;\n        this.height = height;\n        this._options = options;\n        this._aspectRatio = this.aspectRatio;\n        this._layers = [];\n        this._metasets = [];\n        this._stacks = undefined;\n        this.boxes = [];\n        this.currentDevicePixelRatio = undefined;\n        this.chartArea = undefined;\n        this._active = [];\n        this._lastEvent = undefined;\n        this._listeners = {};\n         this._responsiveListeners = undefined;\n        this._sortedMetasets = [];\n        this.scales = {};\n        this._plugins = new PluginService();\n        this.$proxies = {};\n        this._hiddenIndices = {};\n        this.attached = false;\n        this._animationsDisabled = undefined;\n        this.$context = undefined;\n        this._doResize = debounce((mode)=>this.update(mode), options.resizeDelay || 0);\n        this._dataChanges = [];\n        instances[this.id] = this;\n        if (!context || !canvas) {\n            console.error(\"Failed to create chart: can't acquire context from the given item\");\n            return;\n        }\n        animator.listen(this, 'complete', onAnimationsComplete);\n        animator.listen(this, 'progress', onAnimationProgress);\n        this._initialize();\n        if (this.attached) {\n            this.update();\n        }\n    }\n    get aspectRatio() {\n        const { options: { aspectRatio , maintainAspectRatio  } , width , height , _aspectRatio  } = this;\n        if (!isNullOrUndef(aspectRatio)) {\n            return aspectRatio;\n        }\n        if (maintainAspectRatio && _aspectRatio) {\n            return _aspectRatio;\n        }\n        return height ? width / height : null;\n    }\n    get data() {\n        return this.config.data;\n    }\n    set data(data) {\n        this.config.data = data;\n    }\n    get options() {\n        return this._options;\n    }\n    set options(options) {\n        this.config.options = options;\n    }\n    get registry() {\n        return registry;\n    }\n _initialize() {\n        this.notifyPlugins('beforeInit');\n        if (this.options.responsive) {\n            this.resize();\n        } else {\n            retinaScale(this, this.options.devicePixelRatio);\n        }\n        this.bindEvents();\n        this.notifyPlugins('afterInit');\n        return this;\n    }\n    clear() {\n        clearCanvas(this.canvas, this.ctx);\n        return this;\n    }\n    stop() {\n        animator.stop(this);\n        return this;\n    }\n resize(width, height) {\n        if (!animator.running(this)) {\n            this._resize(width, height);\n        } else {\n            this._resizeBeforeDraw = {\n                width,\n                height\n            };\n        }\n    }\n    _resize(width, height) {\n        const options = this.options;\n        const canvas = this.canvas;\n        const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n        const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n        const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n        const mode = this.width ? 'resize' : 'attach';\n        this.width = newSize.width;\n        this.height = newSize.height;\n        this._aspectRatio = this.aspectRatio;\n        if (!retinaScale(this, newRatio, true)) {\n            return;\n        }\n        this.notifyPlugins('resize', {\n            size: newSize\n        });\n        callback(options.onResize, [\n            this,\n            newSize\n        ], this);\n        if (this.attached) {\n            if (this._doResize(mode)) {\n                this.render();\n            }\n        }\n    }\n    ensureScalesHaveIDs() {\n        const options = this.options;\n        const scalesOptions = options.scales || {};\n        each(scalesOptions, (axisOptions, axisID)=>{\n            axisOptions.id = axisID;\n        });\n    }\n buildOrUpdateScales() {\n        const options = this.options;\n        const scaleOpts = options.scales;\n        const scales = this.scales;\n        const updated = Object.keys(scales).reduce((obj, id)=>{\n            obj[id] = false;\n            return obj;\n        }, {});\n        let items = [];\n        if (scaleOpts) {\n            items = items.concat(Object.keys(scaleOpts).map((id)=>{\n                const scaleOptions = scaleOpts[id];\n                const axis = determineAxis(id, scaleOptions);\n                const isRadial = axis === 'r';\n                const isHorizontal = axis === 'x';\n                return {\n                    options: scaleOptions,\n                    dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n                    dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n                };\n            }));\n        }\n        each(items, (item)=>{\n            const scaleOptions = item.options;\n            const id = scaleOptions.id;\n            const axis = determineAxis(id, scaleOptions);\n            const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n            if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n                scaleOptions.position = item.dposition;\n            }\n            updated[id] = true;\n            let scale = null;\n            if (id in scales && scales[id].type === scaleType) {\n                scale = scales[id];\n            } else {\n                const scaleClass = registry.getScale(scaleType);\n                scale = new scaleClass({\n                    id,\n                    type: scaleType,\n                    ctx: this.ctx,\n                    chart: this\n                });\n                scales[scale.id] = scale;\n            }\n            scale.init(scaleOptions, options);\n        });\n        each(updated, (hasUpdated, id)=>{\n            if (!hasUpdated) {\n                delete scales[id];\n            }\n        });\n        each(scales, (scale)=>{\n            layouts.configure(this, scale, scale.options);\n            layouts.addBox(this, scale);\n        });\n    }\n _updateMetasets() {\n        const metasets = this._metasets;\n        const numData = this.data.datasets.length;\n        const numMeta = metasets.length;\n        metasets.sort((a, b)=>a.index - b.index);\n        if (numMeta > numData) {\n            for(let i = numData; i < numMeta; ++i){\n                this._destroyDatasetMeta(i);\n            }\n            metasets.splice(numData, numMeta - numData);\n        }\n        this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n    }\n _removeUnreferencedMetasets() {\n        const { _metasets: metasets , data: { datasets  }  } = this;\n        if (metasets.length > datasets.length) {\n            delete this._stacks;\n        }\n        metasets.forEach((meta, index)=>{\n            if (datasets.filter((x)=>x === meta._dataset).length === 0) {\n                this._destroyDatasetMeta(index);\n            }\n        });\n    }\n    buildOrUpdateControllers() {\n        const newControllers = [];\n        const datasets = this.data.datasets;\n        let i, ilen;\n        this._removeUnreferencedMetasets();\n        for(i = 0, ilen = datasets.length; i < ilen; i++){\n            const dataset = datasets[i];\n            let meta = this.getDatasetMeta(i);\n            const type = dataset.type || this.config.type;\n            if (meta.type && meta.type !== type) {\n                this._destroyDatasetMeta(i);\n                meta = this.getDatasetMeta(i);\n            }\n            meta.type = type;\n            meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n            meta.order = dataset.order || 0;\n            meta.index = i;\n            meta.label = '' + dataset.label;\n            meta.visible = this.isDatasetVisible(i);\n            if (meta.controller) {\n                meta.controller.updateIndex(i);\n                meta.controller.linkScales();\n            } else {\n                const ControllerClass = registry.getController(type);\n                const { datasetElementType , dataElementType  } = defaults.datasets[type];\n                Object.assign(ControllerClass, {\n                    dataElementType: registry.getElement(dataElementType),\n                    datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n                });\n                meta.controller = new ControllerClass(this, i);\n                newControllers.push(meta.controller);\n            }\n        }\n        this._updateMetasets();\n        return newControllers;\n    }\n _resetElements() {\n        each(this.data.datasets, (dataset, datasetIndex)=>{\n            this.getDatasetMeta(datasetIndex).controller.reset();\n        }, this);\n    }\n reset() {\n        this._resetElements();\n        this.notifyPlugins('reset');\n    }\n    update(mode) {\n        const config = this.config;\n        config.update();\n        const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        const animsDisabled = this._animationsDisabled = !options.animation;\n        this._updateScales();\n        this._checkEventBindings();\n        this._updateHiddenIndices();\n        this._plugins.invalidate();\n        if (this.notifyPlugins('beforeUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const newControllers = this.buildOrUpdateControllers();\n        this.notifyPlugins('beforeElementsUpdate');\n        let minPadding = 0;\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; i++){\n            const { controller  } = this.getDatasetMeta(i);\n            const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n            controller.buildOrUpdateElements(reset);\n            minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n        }\n        minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n        this._updateLayout(minPadding);\n        if (!animsDisabled) {\n            each(newControllers, (controller)=>{\n                controller.reset();\n            });\n        }\n        this._updateDatasets(mode);\n        this.notifyPlugins('afterUpdate', {\n            mode\n        });\n        this._layers.sort(compare2Level('z', '_idx'));\n        const { _active , _lastEvent  } = this;\n        if (_lastEvent) {\n            this._eventHandler(_lastEvent, true);\n        } else if (_active.length) {\n            this._updateHoverStyles(_active, _active, true);\n        }\n        this.render();\n    }\n _updateScales() {\n        each(this.scales, (scale)=>{\n            layouts.removeBox(this, scale);\n        });\n        this.ensureScalesHaveIDs();\n        this.buildOrUpdateScales();\n    }\n _checkEventBindings() {\n        const options = this.options;\n        const existingEvents = new Set(Object.keys(this._listeners));\n        const newEvents = new Set(options.events);\n        if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n            this.unbindEvents();\n            this.bindEvents();\n        }\n    }\n _updateHiddenIndices() {\n        const { _hiddenIndices  } = this;\n        const changes = this._getUniformDataChanges() || [];\n        for (const { method , start , count  } of changes){\n            const move = method === '_removeElements' ? -count : count;\n            moveNumericKeys(_hiddenIndices, start, move);\n        }\n    }\n _getUniformDataChanges() {\n        const _dataChanges = this._dataChanges;\n        if (!_dataChanges || !_dataChanges.length) {\n            return;\n        }\n        this._dataChanges = [];\n        const datasetCount = this.data.datasets.length;\n        const makeSet = (idx)=>new Set(_dataChanges.filter((c)=>c[0] === idx).map((c, i)=>i + ',' + c.splice(1).join(',')));\n        const changeSet = makeSet(0);\n        for(let i = 1; i < datasetCount; i++){\n            if (!setsEqual(changeSet, makeSet(i))) {\n                return;\n            }\n        }\n        return Array.from(changeSet).map((c)=>c.split(',')).map((a)=>({\n                method: a[1],\n                start: +a[2],\n                count: +a[3]\n            }));\n    }\n _updateLayout(minPadding) {\n        if (this.notifyPlugins('beforeLayout', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        layouts.update(this, this.width, this.height, minPadding);\n        const area = this.chartArea;\n        const noArea = area.width <= 0 || area.height <= 0;\n        this._layers = [];\n        each(this.boxes, (box)=>{\n            if (noArea && box.position === 'chartArea') {\n                return;\n            }\n            if (box.configure) {\n                box.configure();\n            }\n            this._layers.push(...box._layers());\n        }, this);\n        this._layers.forEach((item, index)=>{\n            item._idx = index;\n        });\n        this.notifyPlugins('afterLayout');\n    }\n _updateDatasets(mode) {\n        if (this.notifyPlugins('beforeDatasetsUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this.getDatasetMeta(i).controller.configure();\n        }\n        for(let i1 = 0, ilen1 = this.data.datasets.length; i1 < ilen1; ++i1){\n            this._updateDataset(i1, isFunction(mode) ? mode({\n                datasetIndex: i1\n            }) : mode);\n        }\n        this.notifyPlugins('afterDatasetsUpdate', {\n            mode\n        });\n    }\n _updateDataset(index, mode) {\n        const meta = this.getDatasetMeta(index);\n        const args = {\n            meta,\n            index,\n            mode,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n            return;\n        }\n        meta.controller._update(mode);\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetUpdate', args);\n    }\n    render() {\n        if (this.notifyPlugins('beforeRender', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        if (animator.has(this)) {\n            if (this.attached && !animator.running(this)) {\n                animator.start(this);\n            }\n        } else {\n            this.draw();\n            onAnimationsComplete({\n                chart: this\n            });\n        }\n    }\n    draw() {\n        let i;\n        if (this._resizeBeforeDraw) {\n            const { width , height  } = this._resizeBeforeDraw;\n            this._resize(width, height);\n            this._resizeBeforeDraw = null;\n        }\n        this.clear();\n        if (this.width <= 0 || this.height <= 0) {\n            return;\n        }\n        if (this.notifyPlugins('beforeDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const layers = this._layers;\n        for(i = 0; i < layers.length && layers[i].z <= 0; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this._drawDatasets();\n        for(; i < layers.length; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this.notifyPlugins('afterDraw');\n    }\n _getSortedDatasetMetas(filterVisible) {\n        const metasets = this._sortedMetasets;\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metasets.length; i < ilen; ++i){\n            const meta = metasets[i];\n            if (!filterVisible || meta.visible) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n getSortedVisibleDatasetMetas() {\n        return this._getSortedDatasetMetas(true);\n    }\n _drawDatasets() {\n        if (this.notifyPlugins('beforeDatasetsDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const metasets = this.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            this._drawDataset(metasets[i]);\n        }\n        this.notifyPlugins('afterDatasetsDraw');\n    }\n _drawDataset(meta) {\n        const ctx = this.ctx;\n        const clip = meta._clip;\n        const useClip = !clip.disabled;\n        const area = getDatasetArea(meta) || this.chartArea;\n        const args = {\n            meta,\n            index: meta.index,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n            return;\n        }\n        if (useClip) {\n            clipArea(ctx, {\n                left: clip.left === false ? 0 : area.left - clip.left,\n                right: clip.right === false ? this.width : area.right + clip.right,\n                top: clip.top === false ? 0 : area.top - clip.top,\n                bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n            });\n        }\n        meta.controller.draw();\n        if (useClip) {\n            unclipArea(ctx);\n        }\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetDraw', args);\n    }\n isPointInArea(point) {\n        return _isPointInArea(point, this.chartArea, this._minPadding);\n    }\n    getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n        const method = Interaction.modes[mode];\n        if (typeof method === 'function') {\n            return method(this, e, options, useFinalPosition);\n        }\n        return [];\n    }\n    getDatasetMeta(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        const metasets = this._metasets;\n        let meta = metasets.filter((x)=>x && x._dataset === dataset).pop();\n        if (!meta) {\n            meta = {\n                type: null,\n                data: [],\n                dataset: null,\n                controller: null,\n                hidden: null,\n                xAxisID: null,\n                yAxisID: null,\n                order: dataset && dataset.order || 0,\n                index: datasetIndex,\n                _dataset: dataset,\n                _parsed: [],\n                _sorted: false\n            };\n            metasets.push(meta);\n        }\n        return meta;\n    }\n    getContext() {\n        return this.$context || (this.$context = createContext(null, {\n            chart: this,\n            type: 'chart'\n        }));\n    }\n    getVisibleDatasetCount() {\n        return this.getSortedVisibleDatasetMetas().length;\n    }\n    isDatasetVisible(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        if (!dataset) {\n            return false;\n        }\n        const meta = this.getDatasetMeta(datasetIndex);\n        return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n    }\n    setDatasetVisibility(datasetIndex, visible) {\n        const meta = this.getDatasetMeta(datasetIndex);\n        meta.hidden = !visible;\n    }\n    toggleDataVisibility(index) {\n        this._hiddenIndices[index] = !this._hiddenIndices[index];\n    }\n    getDataVisibility(index) {\n        return !this._hiddenIndices[index];\n    }\n _updateVisibility(datasetIndex, dataIndex, visible) {\n        const mode = visible ? 'show' : 'hide';\n        const meta = this.getDatasetMeta(datasetIndex);\n        const anims = meta.controller._resolveAnimations(undefined, mode);\n        if (defined(dataIndex)) {\n            meta.data[dataIndex].hidden = !visible;\n            this.update();\n        } else {\n            this.setDatasetVisibility(datasetIndex, visible);\n            anims.update(meta, {\n                visible\n            });\n            this.update((ctx)=>ctx.datasetIndex === datasetIndex ? mode : undefined);\n        }\n    }\n    hide(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, false);\n    }\n    show(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, true);\n    }\n _destroyDatasetMeta(datasetIndex) {\n        const meta = this._metasets[datasetIndex];\n        if (meta && meta.controller) {\n            meta.controller._destroy();\n        }\n        delete this._metasets[datasetIndex];\n    }\n    _stop() {\n        let i, ilen;\n        this.stop();\n        animator.remove(this);\n        for(i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._destroyDatasetMeta(i);\n        }\n    }\n    destroy() {\n        this.notifyPlugins('beforeDestroy');\n        const { canvas , ctx  } = this;\n        this._stop();\n        this.config.clearCache();\n        if (canvas) {\n            this.unbindEvents();\n            clearCanvas(canvas, ctx);\n            this.platform.releaseContext(ctx);\n            this.canvas = null;\n            this.ctx = null;\n        }\n        delete instances[this.id];\n        this.notifyPlugins('afterDestroy');\n    }\n    toBase64Image(...args) {\n        return this.canvas.toDataURL(...args);\n    }\n bindEvents() {\n        this.bindUserEvents();\n        if (this.options.responsive) {\n            this.bindResponsiveEvents();\n        } else {\n            this.attached = true;\n        }\n    }\n bindUserEvents() {\n        const listeners = this._listeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const listener = (e, x, y)=>{\n            e.offsetX = x;\n            e.offsetY = y;\n            this._eventHandler(e);\n        };\n        each(this.options.events, (type)=>_add(type, listener));\n    }\n bindResponsiveEvents() {\n        if (!this._responsiveListeners) {\n            this._responsiveListeners = {};\n        }\n        const listeners = this._responsiveListeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const _remove = (type, listener)=>{\n            if (listeners[type]) {\n                platform.removeEventListener(this, type, listener);\n                delete listeners[type];\n            }\n        };\n        const listener = (width, height)=>{\n            if (this.canvas) {\n                this.resize(width, height);\n            }\n        };\n        let detached;\n        const attached = ()=>{\n            _remove('attach', attached);\n            this.attached = true;\n            this.resize();\n            _add('resize', listener);\n            _add('detach', detached);\n        };\n        detached = ()=>{\n            this.attached = false;\n            _remove('resize', listener);\n            this._stop();\n            this._resize(0, 0);\n            _add('attach', attached);\n        };\n        if (platform.isAttached(this.canvas)) {\n            attached();\n        } else {\n            detached();\n        }\n    }\n unbindEvents() {\n        each(this._listeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._listeners = {};\n        each(this._responsiveListeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._responsiveListeners = undefined;\n    }\n    updateHoverStyle(items, mode, enabled) {\n        const prefix = enabled ? 'set' : 'remove';\n        let meta, item, i, ilen;\n        if (mode === 'dataset') {\n            meta = this.getDatasetMeta(items[0].datasetIndex);\n            meta.controller['_' + prefix + 'DatasetHoverStyle']();\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            item = items[i];\n            const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n            if (controller) {\n                controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n            }\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements) {\n        const lastActive = this._active || [];\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('No dataset found at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed) {\n            this._active = active;\n            this._lastEvent = null;\n            this._updateHoverStyles(active, lastActive);\n        }\n    }\n notifyPlugins(hook, args, filter) {\n        return this._plugins.notify(this, hook, args, filter);\n    }\n isPluginEnabled(pluginId) {\n        return this._plugins._cache.filter((p)=>p.plugin.id === pluginId).length === 1;\n    }\n _updateHoverStyles(active, lastActive, replay) {\n        const hoverOptions = this.options.hover;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.datasetIndex === y.datasetIndex && x.index === y.index));\n        const deactivated = diff(lastActive, active);\n        const activated = replay ? active : diff(active, lastActive);\n        if (deactivated.length) {\n            this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n        }\n        if (activated.length && hoverOptions.mode) {\n            this.updateHoverStyle(activated, hoverOptions.mode, true);\n        }\n    }\n _eventHandler(e, replay) {\n        const args = {\n            event: e,\n            replay,\n            cancelable: true,\n            inChartArea: this.isPointInArea(e)\n        };\n        const eventFilter = (plugin)=>(plugin.options.events || this.options.events).includes(e.native.type);\n        if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n            return;\n        }\n        const changed = this._handleEvent(e, replay, args.inChartArea);\n        args.cancelable = false;\n        this.notifyPlugins('afterEvent', args, eventFilter);\n        if (changed || args.changed) {\n            this.render();\n        }\n        return this;\n    }\n _handleEvent(e, replay, inChartArea) {\n        const { _active: lastActive = [] , options  } = this;\n        const useFinalPosition = replay;\n        const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n        const isClick = _isClickEvent(e);\n        const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n        if (inChartArea) {\n            this._lastEvent = null;\n            callback(options.onHover, [\n                e,\n                active,\n                this\n            ], this);\n            if (isClick) {\n                callback(options.onClick, [\n                    e,\n                    active,\n                    this\n                ], this);\n            }\n        }\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed || replay) {\n            this._active = active;\n            this._updateHoverStyles(active, lastActive, replay);\n        }\n        this._lastEvent = lastEvent;\n        return changed;\n    }\n _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive;\n        }\n        const hoverOptions = this.options.hover;\n        return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n    }\n}\nfunction invalidatePlugins() {\n    return each(Chart.instances, (chart)=>chart._plugins.invalidate());\n}\nvar Chart$1 = Chart;\n\nfunction clipArc(ctx, element, endAngle) {\n    const { startAngle , pixelMargin , x , y , outerRadius , innerRadius  } = element;\n    let angleMargin = pixelMargin / outerRadius;\n    // Draw an inner border by clipping the arc and drawing a double-width border\n    // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n    ctx.beginPath();\n    ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n    if (innerRadius > pixelMargin) {\n        angleMargin = pixelMargin / innerRadius;\n        ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n    } else {\n        ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n    }\n    ctx.closePath();\n    ctx.clip();\n}\nfunction toRadiusCorners(value) {\n    return _readValueToProps(value, [\n        'outerStart',\n        'outerEnd',\n        'innerStart',\n        'innerEnd'\n    ]);\n}\n/**\n * Parse border radius from the provided options\n */ function parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n    const o = toRadiusCorners(arc.options.borderRadius);\n    const halfThickness = (outerRadius - innerRadius) / 2;\n    const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n    // Outer limits are complicated. We want to compute the available angular distance at\n    // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n    // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n    //\n    // If the borderRadius is large, that value can become negative.\n    // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n    // we know that the thickness term will dominate and compute the limits at that point\n    const computeOuterLimit = (val)=>{\n        const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n        return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n    };\n    return {\n        outerStart: computeOuterLimit(o.outerStart),\n        outerEnd: computeOuterLimit(o.outerEnd),\n        innerStart: _limitValue(o.innerStart, 0, innerLimit),\n        innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n    };\n}\n/**\n * Convert (r, 𝜃) to (x, y)\n */ function rThetaToXY(r, theta, x, y) {\n    return {\n        x: x + r * Math.cos(theta),\n        y: y + r * Math.sin(theta)\n    };\n}\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */ function pathArc(ctx, element, offset, spacing, end, circular) {\n    const { x , y , startAngle: start , pixelMargin , innerRadius: innerR  } = element;\n    const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n    const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n    let spacingOffset = 0;\n    const alpha = end - start;\n    if (spacing) {\n        // When spacing is present, it is the same for all items\n        // So we adjust the start and end angle of the arc such that\n        // the distance is the same as it would be without the spacing\n        const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n        const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n        const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n        const adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n        spacingOffset = (alpha - adjustedAngle) / 2;\n    }\n    const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n    const angleOffset = (alpha - beta) / 2;\n    const startAngle = start + angleOffset + spacingOffset;\n    const endAngle = end - angleOffset - spacingOffset;\n    const { outerStart , outerEnd , innerStart , innerEnd  } = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n    const outerStartAdjustedRadius = outerRadius - outerStart;\n    const outerEndAdjustedRadius = outerRadius - outerEnd;\n    const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n    const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n    const innerStartAdjustedRadius = innerRadius + innerStart;\n    const innerEndAdjustedRadius = innerRadius + innerEnd;\n    const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n    const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n    ctx.beginPath();\n    if (circular) {\n        // The first arc segments from point 1 to point a to point 2\n        const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n        ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n        ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n        // The corner segment from point 2 to point 3\n        if (outerEnd > 0) {\n            const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n        }\n        // The line from point 3 to point 4\n        const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n        ctx.lineTo(p4.x, p4.y);\n        // The corner segment from point 4 to point 5\n        if (innerEnd > 0) {\n            const pCenter1 = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter1.x, pCenter1.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n        }\n        // The inner arc from point 5 to point b to point 6\n        const innerMidAdjustedAngle = (endAngle - innerEnd / innerRadius + (startAngle + innerStart / innerRadius)) / 2;\n        ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, innerMidAdjustedAngle, true);\n        ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + innerStart / innerRadius, true);\n        // The corner segment from point 6 to point 7\n        if (innerStart > 0) {\n            const pCenter2 = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter2.x, pCenter2.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n        }\n        // The line from point 7 to point 8\n        const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n        ctx.lineTo(p8.x, p8.y);\n        // The corner segment from point 8 to point 1\n        if (outerStart > 0) {\n            const pCenter3 = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter3.x, pCenter3.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n        }\n    } else {\n        ctx.moveTo(x, y);\n        const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n        const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerStartX, outerStartY);\n        const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n        const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerEndX, outerEndY);\n    }\n    ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference  } = element;\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.fill();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.fill();\n    return endAngle;\n}\nfunction drawBorder(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference , options  } = element;\n    const { borderWidth , borderJoinStyle  } = options;\n    const inner = options.borderAlign === 'inner';\n    if (!borderWidth) {\n        return;\n    }\n    if (inner) {\n        ctx.lineWidth = borderWidth * 2;\n        ctx.lineJoin = borderJoinStyle || 'round';\n    } else {\n        ctx.lineWidth = borderWidth;\n        ctx.lineJoin = borderJoinStyle || 'bevel';\n    }\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.stroke();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    if (inner) {\n        clipArc(ctx, element, endAngle);\n    }\n    if (!fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        ctx.stroke();\n    }\n}\nclass ArcElement extends Element {\n    static id = 'arc';\n    static defaults = {\n        borderAlign: 'center',\n        borderColor: '#fff',\n        borderJoinStyle: undefined,\n        borderRadius: 0,\n        borderWidth: 2,\n        offset: 0,\n        spacing: 0,\n        angle: undefined,\n        circular: true\n    };\n    static defaultRoutes = {\n        backgroundColor: 'backgroundColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.circumference = undefined;\n        this.startAngle = undefined;\n        this.endAngle = undefined;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.pixelMargin = 0;\n        this.fullCircles = 0;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(chartX, chartY, useFinalPosition) {\n        const point = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        const { angle , distance  } = getAngleFromPoint(point, {\n            x: chartX,\n            y: chartY\n        });\n        const { startAngle , endAngle , innerRadius , outerRadius , circumference  } = this.getProps([\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius',\n            'circumference'\n        ], useFinalPosition);\n        const rAdjust = this.options.spacing / 2;\n        const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n        const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n        const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n        return betweenAngles && withinRadius;\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , startAngle , endAngle , innerRadius , outerRadius  } = this.getProps([\n            'x',\n            'y',\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius',\n            'circumference', \n        ], useFinalPosition);\n        const { offset , spacing  } = this.options;\n        const halfAngle = (startAngle + endAngle) / 2;\n        const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n        return {\n            x: x + Math.cos(halfAngle) * halfRadius,\n            y: y + Math.sin(halfAngle) * halfRadius\n        };\n    }\n    tooltipPosition(useFinalPosition) {\n        return this.getCenterPoint(useFinalPosition);\n    }\n    draw(ctx) {\n        const { options , circumference  } = this;\n        const offset = (options.offset || 0) / 4;\n        const spacing = (options.spacing || 0) / 2;\n        const circular = options.circular;\n        this.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n        this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n        if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n            return;\n        }\n        ctx.save();\n        const halfAngle = (this.startAngle + this.endAngle) / 2;\n        ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n        const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n        const radiusOffset = offset * fix;\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        drawArc(ctx, this, radiusOffset, spacing, circular);\n        drawBorder(ctx, this, radiusOffset, spacing, circular);\n        ctx.restore();\n    }\n}\n\nfunction setStyle(ctx, options, style = options) {\n    ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n    ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n    ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n    ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n    ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n    ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n    ctx.lineTo(target.x, target.y);\n}\nfunction getLineMethod(options) {\n    if (options.stepped) {\n        return _steppedLineTo;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierCurveTo;\n    }\n    return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n    const count = points.length;\n    const { start: paramsStart = 0 , end: paramsEnd = count - 1  } = params;\n    const { start: segmentStart , end: segmentEnd  } = segment;\n    const start = Math.max(paramsStart, segmentStart);\n    const end = Math.min(paramsEnd, segmentEnd);\n    const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n    return {\n        count,\n        start,\n        loop: segment.loop,\n        ilen: end < start && !outside ? count + end - start : end - start\n    };\n}\n function pathSegment(ctx, line, segment, params) {\n    const { points , options  } = line;\n    const { count , start , loop , ilen  } = pathVars(points, segment, params);\n    const lineMethod = getLineMethod(options);\n    let { move =true , reverse  } = params || {};\n    let i, point, prev;\n    for(i = 0; i <= ilen; ++i){\n        point = points[(start + (reverse ? ilen - i : i)) % count];\n        if (point.skip) {\n            continue;\n        } else if (move) {\n            ctx.moveTo(point.x, point.y);\n            move = false;\n        } else {\n            lineMethod(ctx, prev, point, reverse, options.stepped);\n        }\n        prev = point;\n    }\n    if (loop) {\n        point = points[(start + (reverse ? ilen : 0)) % count];\n        lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    return !!loop;\n}\n function fastPathSegment(ctx, line, segment, params) {\n    const points = line.points;\n    const { count , start , ilen  } = pathVars(points, segment, params);\n    const { move =true , reverse  } = params || {};\n    let avgX = 0;\n    let countX = 0;\n    let i, point, prevX, minY, maxY, lastY;\n    const pointIndex = (index)=>(start + (reverse ? ilen - index : index)) % count;\n    const drawX = ()=>{\n        if (minY !== maxY) {\n            ctx.lineTo(avgX, maxY);\n            ctx.lineTo(avgX, minY);\n            ctx.lineTo(avgX, lastY);\n        }\n    };\n    if (move) {\n        point = points[pointIndex(0)];\n        ctx.moveTo(point.x, point.y);\n    }\n    for(i = 0; i <= ilen; ++i){\n        point = points[pointIndex(i)];\n        if (point.skip) {\n            continue;\n        }\n        const x = point.x;\n        const y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n            } else if (y > maxY) {\n                maxY = y;\n            }\n            avgX = (countX * avgX + x) / ++countX;\n        } else {\n            drawX();\n            ctx.lineTo(x, y);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n        }\n        lastY = y;\n    }\n    drawX();\n}\n function _getSegmentMethod(line) {\n    const opts = line.options;\n    const borderDash = opts.borderDash && opts.borderDash.length;\n    const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n    return useFastPath ? fastPathSegment : pathSegment;\n}\n function _getInterpolationMethod(options) {\n    if (options.stepped) {\n        return _steppedInterpolation;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierInterpolation;\n    }\n    return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n    let path = line._path;\n    if (!path) {\n        path = line._path = new Path2D();\n        if (line.path(path, start, count)) {\n            path.closePath();\n        }\n    }\n    setStyle(ctx, line.options);\n    ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n    const { segments , options  } = line;\n    const segmentMethod = _getSegmentMethod(line);\n    for (const segment of segments){\n        setStyle(ctx, options, segment.style);\n        ctx.beginPath();\n        if (segmentMethod(ctx, line, segment, {\n            start,\n            end: start + count - 1\n        })) {\n            ctx.closePath();\n        }\n        ctx.stroke();\n    }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n    if (usePath2D && !line.options.segment) {\n        strokePathWithCache(ctx, line, start, count);\n    } else {\n        strokePathDirect(ctx, line, start, count);\n    }\n}\nclass LineElement extends Element {\n    static id = 'line';\n static defaults = {\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: 'miter',\n        borderWidth: 3,\n        capBezierPoints: true,\n        cubicInterpolationMode: 'default',\n        fill: false,\n        spanGaps: false,\n        stepped: false,\n        tension: 0\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash' && name !== 'fill'\n    };\n    constructor(cfg){\n        super();\n        this.animated = true;\n        this.options = undefined;\n        this._chart = undefined;\n        this._loop = undefined;\n        this._fullLoop = undefined;\n        this._path = undefined;\n        this._points = undefined;\n        this._segments = undefined;\n        this._decimated = false;\n        this._pointsUpdated = false;\n        this._datasetIndex = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    updateControlPoints(chartArea, indexAxis) {\n        const options = this.options;\n        if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n            const loop = options.spanGaps ? this._loop : this._fullLoop;\n            _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n            this._pointsUpdated = true;\n        }\n    }\n    set points(points) {\n        this._points = points;\n        delete this._segments;\n        delete this._path;\n        this._pointsUpdated = false;\n    }\n    get points() {\n        return this._points;\n    }\n    get segments() {\n        return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n    }\n first() {\n        const segments = this.segments;\n        const points = this.points;\n        return segments.length && points[segments[0].start];\n    }\n last() {\n        const segments = this.segments;\n        const points = this.points;\n        const count = segments.length;\n        return count && points[segments[count - 1].end];\n    }\n interpolate(point, property) {\n        const options = this.options;\n        const value = point[property];\n        const points = this.points;\n        const segments = _boundSegments(this, {\n            property,\n            start: value,\n            end: value\n        });\n        if (!segments.length) {\n            return;\n        }\n        const result = [];\n        const _interpolate = _getInterpolationMethod(options);\n        let i, ilen;\n        for(i = 0, ilen = segments.length; i < ilen; ++i){\n            const { start , end  } = segments[i];\n            const p1 = points[start];\n            const p2 = points[end];\n            if (p1 === p2) {\n                result.push(p1);\n                continue;\n            }\n            const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n            const interpolated = _interpolate(p1, p2, t, options.stepped);\n            interpolated[property] = point[property];\n            result.push(interpolated);\n        }\n        return result.length === 1 ? result[0] : result;\n    }\n pathSegment(ctx, segment, params) {\n        const segmentMethod = _getSegmentMethod(this);\n        return segmentMethod(ctx, this, segment, params);\n    }\n path(ctx, start, count) {\n        const segments = this.segments;\n        const segmentMethod = _getSegmentMethod(this);\n        let loop = this._loop;\n        start = start || 0;\n        count = count || this.points.length - start;\n        for (const segment of segments){\n            loop &= segmentMethod(ctx, this, segment, {\n                start,\n                end: start + count - 1\n            });\n        }\n        return !!loop;\n    }\n draw(ctx, chartArea, start, count) {\n        const options = this.options || {};\n        const points = this.points || [];\n        if (points.length && options.borderWidth) {\n            ctx.save();\n            draw(ctx, this, start, count);\n            ctx.restore();\n        }\n        if (this.animated) {\n            this._pointsUpdated = false;\n            this._path = undefined;\n        }\n    }\n}\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n    const options = el.options;\n    const { [axis]: value  } = el.getProps([\n        axis\n    ], useFinalPosition);\n    return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\nclass PointElement extends Element {\n    static id = 'point';\n    /**\n   * @type {any}\n   */ static defaults = {\n        borderWidth: 1,\n        hitRadius: 1,\n        hoverBorderWidth: 1,\n        hoverRadius: 4,\n        pointStyle: 'circle',\n        radius: 3,\n        rotation: 0\n    };\n    /**\n   * @type {any}\n   */ static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.parsed = undefined;\n        this.skip = undefined;\n        this.stop = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        const options = this.options;\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange$1(this, mouseX, 'x', useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange$1(this, mouseY, 'y', useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    size(options) {\n        options = options || this.options || {};\n        let radius = options.radius || 0;\n        radius = Math.max(radius, radius && options.hoverRadius || 0);\n        const borderWidth = radius && options.borderWidth || 0;\n        return (radius + borderWidth) * 2;\n    }\n    draw(ctx, area) {\n        const options = this.options;\n        if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n            return;\n        }\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.fillStyle = options.backgroundColor;\n        drawPoint(ctx, options, this.x, this.y);\n    }\n    getRange() {\n        const options = this.options || {};\n        // @ts-expect-error Fallbacks should never be hit in practice\n        return options.radius + options.hitRadius;\n    }\n}\n\nfunction getBarBounds(bar, useFinalPosition) {\n    const { x , y , base , width , height  } =  bar.getProps([\n        'x',\n        'y',\n        'base',\n        'width',\n        'height'\n    ], useFinalPosition);\n    let left, right, top, bottom, half;\n    if (bar.horizontal) {\n        half = height / 2;\n        left = Math.min(x, base);\n        right = Math.max(x, base);\n        top = y - half;\n        bottom = y + half;\n    } else {\n        half = width / 2;\n        left = x - half;\n        right = x + half;\n        top = Math.min(y, base);\n        bottom = Math.max(y, base);\n    }\n    return {\n        left,\n        top,\n        right,\n        bottom\n    };\n}\nfunction skipOrLimit(skip, value, min, max) {\n    return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n    const value = bar.options.borderWidth;\n    const skip = bar.borderSkipped;\n    const o = toTRBL(value);\n    return {\n        t: skipOrLimit(skip.top, o.top, 0, maxH),\n        r: skipOrLimit(skip.right, o.right, 0, maxW),\n        b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n        l: skipOrLimit(skip.left, o.left, 0, maxW)\n    };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n    const { enableBorderRadius  } = bar.getProps([\n        'enableBorderRadius'\n    ]);\n    const value = bar.options.borderRadius;\n    const o = toTRBLCorners(value);\n    const maxR = Math.min(maxW, maxH);\n    const skip = bar.borderSkipped;\n    const enableBorder = enableBorderRadius || isObject(value);\n    return {\n        topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n        topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n        bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n        bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n    };\n}\nfunction boundingRects(bar) {\n    const bounds = getBarBounds(bar);\n    const width = bounds.right - bounds.left;\n    const height = bounds.bottom - bounds.top;\n    const border = parseBorderWidth(bar, width / 2, height / 2);\n    const radius = parseBorderRadius(bar, width / 2, height / 2);\n    return {\n        outer: {\n            x: bounds.left,\n            y: bounds.top,\n            w: width,\n            h: height,\n            radius\n        },\n        inner: {\n            x: bounds.left + border.l,\n            y: bounds.top + border.t,\n            w: width - border.l - border.r,\n            h: height - border.t - border.b,\n            radius: {\n                topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n                topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n                bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n                bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n            }\n        }\n    };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n    const skipX = x === null;\n    const skipY = y === null;\n    const skipBoth = skipX && skipY;\n    const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n    return bounds && (skipX || _isBetween(x, bounds.left, bounds.right)) && (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n    return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n function addNormalRectPath(ctx, rect) {\n    ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n    const x = rect.x !== refRect.x ? -amount : 0;\n    const y = rect.y !== refRect.y ? -amount : 0;\n    const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n    const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n    return {\n        x: rect.x + x,\n        y: rect.y + y,\n        w: rect.w + w,\n        h: rect.h + h,\n        radius: rect.radius\n    };\n}\nclass BarElement extends Element {\n    static id = 'bar';\n static defaults = {\n        borderSkipped: 'start',\n        borderWidth: 0,\n        borderRadius: 0,\n        inflateAmount: 'auto',\n        pointStyle: undefined\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.horizontal = undefined;\n        this.base = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.inflateAmount = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    draw(ctx) {\n        const { inflateAmount , options: { borderColor , backgroundColor  }  } = this;\n        const { inner , outer  } = boundingRects(this);\n        const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n        ctx.save();\n        if (outer.w !== inner.w || outer.h !== inner.h) {\n            ctx.beginPath();\n            addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n            ctx.clip();\n            addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n            ctx.fillStyle = borderColor;\n            ctx.fill('evenodd');\n        }\n        ctx.beginPath();\n        addRectPath(ctx, inflateRect(inner, inflateAmount));\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n        ctx.restore();\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        return inRange(this, mouseX, mouseY, useFinalPosition);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange(this, mouseX, null, useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange(this, null, mouseY, useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , base , horizontal  } =  this.getProps([\n            'x',\n            'y',\n            'base',\n            'horizontal'\n        ], useFinalPosition);\n        return {\n            x: horizontal ? (x + base) / 2 : x,\n            y: horizontal ? y : (y + base) / 2\n        };\n    }\n    getRange(axis) {\n        return axis === 'x' ? this.width / 2 : this.height / 2;\n    }\n}\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nLineElement: LineElement,\nPointElement: PointElement,\nBarElement: BarElement\n});\n\nconst BORDER_COLORS = [\n    'rgb(54, 162, 235)',\n    'rgb(255, 99, 132)',\n    'rgb(255, 159, 64)',\n    'rgb(255, 205, 86)',\n    'rgb(75, 192, 192)',\n    'rgb(153, 102, 255)',\n    'rgb(201, 203, 207)' // grey\n];\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map((color)=>color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\nfunction getBorderColor(i) {\n    return BORDER_COLORS[i % BORDER_COLORS.length];\n}\nfunction getBackgroundColor(i) {\n    return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\nfunction createDefaultDatasetColorizer() {\n    return (dataset, i)=>{\n        dataset.borderColor = getBorderColor(i);\n        dataset.backgroundColor = getBackgroundColor(i);\n    };\n}\nfunction createDoughnutDatasetColorizer() {\n    let i = 0;\n    return (dataset)=>{\n        dataset.backgroundColor = dataset.data.map(()=>getBorderColor(i++));\n    };\n}\nfunction createPolarAreaDatasetColorizer() {\n    let i = 0;\n    return (dataset)=>{\n        dataset.backgroundColor = dataset.data.map(()=>getBackgroundColor(i++));\n    };\n}\nfunction getColorizer(type) {\n    if (type === 'doughnut' || type === 'pie') {\n        return createDoughnutDatasetColorizer();\n    } else if (type === 'polarArea') {\n        return createPolarAreaDatasetColorizer();\n    }\n    return createDefaultDatasetColorizer();\n}\nfunction containsColorsDefinitions(descriptors) {\n    let k;\n    for(k in descriptors){\n        if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n            return true;\n        }\n    }\n    return false;\n}\nvar plugin_colors = {\n    id: 'colors',\n    defaults: {\n        enabled: true\n    },\n    beforeLayout (chart, _args, options) {\n        if (!options.enabled) {\n            return;\n        }\n        const { type , options: { elements  } , data: { datasets  }  } = chart.config;\n        if (containsColorsDefinitions(datasets) || elements && containsColorsDefinitions(elements)) {\n            return;\n        }\n        const colorizer = getColorizer(type);\n        datasets.forEach(colorizer);\n    }\n};\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n const samples = options.samples || availableWidth;\n    if (samples >= count) {\n        return data.slice(start, start + count);\n    }\n    const decimated = [];\n    const bucketWidth = (count - 2) / (samples - 2);\n    let sampledIndex = 0;\n    const endIndex = start + count - 1;\n    let a = start;\n    let i, maxAreaPoint, maxArea, area, nextA;\n    decimated[sampledIndex++] = data[a];\n    for(i = 0; i < samples - 2; i++){\n        let avgX = 0;\n        let avgY = 0;\n        let j;\n        const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n        const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n        const avgRangeLength = avgRangeEnd - avgRangeStart;\n        for(j = avgRangeStart; j < avgRangeEnd; j++){\n            avgX += data[j].x;\n            avgY += data[j].y;\n        }\n        avgX /= avgRangeLength;\n        avgY /= avgRangeLength;\n        const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n        const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n        const { x: pointAx , y: pointAy  } = data[a];\n        maxArea = area = -1;\n        for(j = rangeOffs; j < rangeTo; j++){\n            area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n            if (area > maxArea) {\n                maxArea = area;\n                maxAreaPoint = data[j];\n                nextA = j;\n            }\n        }\n        decimated[sampledIndex++] = maxAreaPoint;\n        a = nextA;\n    }\n    decimated[sampledIndex++] = data[endIndex];\n    return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n    let avgX = 0;\n    let countX = 0;\n    let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n    const decimated = [];\n    const endIndex = start + count - 1;\n    const xMin = data[start].x;\n    const xMax = data[endIndex].x;\n    const dx = xMax - xMin;\n    for(i = start; i < start + count; ++i){\n        point = data[i];\n        x = (point.x - xMin) / dx * availableWidth;\n        y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n                minIndex = i;\n            } else if (y > maxY) {\n                maxY = y;\n                maxIndex = i;\n            }\n            avgX = (countX * avgX + point.x) / ++countX;\n        } else {\n            const lastIndex = i - 1;\n            if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n                const intermediateIndex1 = Math.min(minIndex, maxIndex);\n                const intermediateIndex2 = Math.max(minIndex, maxIndex);\n                if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex1],\n                        x: avgX\n                    });\n                }\n                if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex2],\n                        x: avgX\n                    });\n                }\n            }\n            if (i > 0 && lastIndex !== startIndex) {\n                decimated.push(data[lastIndex]);\n            }\n            decimated.push(point);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n            minIndex = maxIndex = startIndex = i;\n        }\n    }\n    return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n    if (dataset._decimated) {\n        const data = dataset._data;\n        delete dataset._decimated;\n        delete dataset._data;\n        Object.defineProperty(dataset, 'data', {\n            value: data\n        });\n    }\n}\nfunction cleanDecimatedData(chart) {\n    chart.data.datasets.forEach((dataset)=>{\n        cleanDecimatedDataset(dataset);\n    });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n    const pointCount = points.length;\n    let start = 0;\n    let count;\n    const { iScale  } = meta;\n    const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n    if (minDefined) {\n        start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n    }\n    if (maxDefined) {\n        count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n    } else {\n        count = pointCount - start;\n    }\n    return {\n        start,\n        count\n    };\n}\nvar plugin_decimation = {\n    id: 'decimation',\n    defaults: {\n        algorithm: 'min-max',\n        enabled: false\n    },\n    beforeElementsUpdate: (chart, args, options)=>{\n        if (!options.enabled) {\n            cleanDecimatedData(chart);\n            return;\n        }\n        const availableWidth = chart.width;\n        chart.data.datasets.forEach((dataset, datasetIndex)=>{\n            const { _data , indexAxis  } = dataset;\n            const meta = chart.getDatasetMeta(datasetIndex);\n            const data = _data || dataset.data;\n            if (resolve([\n                indexAxis,\n                chart.options.indexAxis\n            ]) === 'y') {\n                return;\n            }\n            if (!meta.controller.supportsDecimation) {\n                return;\n            }\n            const xAxis = chart.scales[meta.xAxisID];\n            if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n                return;\n            }\n            if (chart.options.parsing) {\n                return;\n            }\n            let { start , count  } = getStartAndCountOfVisiblePointsSimplified(meta, data);\n            const threshold = options.threshold || 4 * availableWidth;\n            if (count <= threshold) {\n                cleanDecimatedDataset(dataset);\n                return;\n            }\n            if (isNullOrUndef(_data)) {\n                dataset._data = data;\n                delete dataset.data;\n                Object.defineProperty(dataset, 'data', {\n                    configurable: true,\n                    enumerable: true,\n                    get: function() {\n                        return this._decimated;\n                    },\n                    set: function(d) {\n                        this._data = d;\n                    }\n                });\n            }\n            let decimated;\n            switch(options.algorithm){\n                case 'lttb':\n                    decimated = lttbDecimation(data, start, count, availableWidth, options);\n                    break;\n                case 'min-max':\n                    decimated = minMaxDecimation(data, start, count, availableWidth);\n                    break;\n                default:\n                    throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n            }\n            dataset._decimated = decimated;\n        });\n    },\n    destroy (chart) {\n        cleanDecimatedData(chart);\n    }\n};\n\nfunction _segments(line, target, property) {\n    const segments = line.segments;\n    const points = line.points;\n    const tpoints = target.points;\n    const parts = [];\n    for (const segment of segments){\n        let { start , end  } = segment;\n        end = _findSegmentEnd(start, end, points);\n        const bounds = _getBounds(property, points[start], points[end], segment.loop);\n        if (!target.segments) {\n            parts.push({\n                source: segment,\n                target: bounds,\n                start: points[start],\n                end: points[end]\n            });\n            continue;\n        }\n        const targetSegments = _boundSegments(target, bounds);\n        for (const tgt of targetSegments){\n            const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n            const fillSources = _boundSegment(segment, points, subBounds);\n            for (const fillSource of fillSources){\n                parts.push({\n                    source: fillSource,\n                    target: tgt,\n                    start: {\n                        [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n                    },\n                    end: {\n                        [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n                    }\n                });\n            }\n        }\n    }\n    return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n    if (loop) {\n        return;\n    }\n    let start = first[property];\n    let end = last[property];\n    if (property === 'angle') {\n        start = _normalizeAngle(start);\n        end = _normalizeAngle(end);\n    }\n    return {\n        property,\n        start,\n        end\n    };\n}\nfunction _pointsFromSegments(boundary, line) {\n    const { x =null , y =null  } = boundary || {};\n    const linePoints = line.points;\n    const points = [];\n    line.segments.forEach(({ start , end  })=>{\n        end = _findSegmentEnd(start, end, linePoints);\n        const first = linePoints[start];\n        const last = linePoints[end];\n        if (y !== null) {\n            points.push({\n                x: first.x,\n                y\n            });\n            points.push({\n                x: last.x,\n                y\n            });\n        } else if (x !== null) {\n            points.push({\n                x,\n                y: first.y\n            });\n            points.push({\n                x,\n                y: last.y\n            });\n        }\n    });\n    return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n    for(; end > start; end--){\n        const point = points[end];\n        if (!isNaN(point.x) && !isNaN(point.y)) {\n            break;\n        }\n    }\n    return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n    if (a && b) {\n        return fn(a[prop], b[prop]);\n    }\n    return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n    let points = [];\n    let _loop = false;\n    if (isArray(boundary)) {\n        _loop = true;\n        points = boundary;\n    } else {\n        points = _pointsFromSegments(boundary, line);\n    }\n    return points.length ? new LineElement({\n        points,\n        options: {\n            tension: 0\n        },\n        _loop,\n        _fullLoop: _loop\n    }) : null;\n}\nfunction _shouldApplyFill(source) {\n    return source && source.fill !== false;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n    const source = sources[index];\n    let fill = source.fill;\n    const visited = [\n        index\n    ];\n    let target;\n    if (!propagate) {\n        return fill;\n    }\n    while(fill !== false && visited.indexOf(fill) === -1){\n        if (!isNumberFinite(fill)) {\n            return fill;\n        }\n        target = sources[fill];\n        if (!target) {\n            return false;\n        }\n        if (target.visible) {\n            return fill;\n        }\n        visited.push(fill);\n        fill = target.fill;\n    }\n    return false;\n}\n function _decodeFill(line, index, count) {\n     const fill = parseFillOption(line);\n    if (isObject(fill)) {\n        return isNaN(fill.value) ? false : fill;\n    }\n    let target = parseFloat(fill);\n    if (isNumberFinite(target) && Math.floor(target) === target) {\n        return decodeTargetIndex(fill[0], index, target, count);\n    }\n    return [\n        'origin',\n        'start',\n        'end',\n        'stack',\n        'shape'\n    ].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n    if (firstCh === '-' || firstCh === '+') {\n        target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n        return false;\n    }\n    return target;\n}\n function _getTargetPixel(fill, scale) {\n    let pixel = null;\n    if (fill === 'start') {\n        pixel = scale.bottom;\n    } else if (fill === 'end') {\n        pixel = scale.top;\n    } else if (isObject(fill)) {\n        pixel = scale.getPixelForValue(fill.value);\n    } else if (scale.getBasePixel) {\n        pixel = scale.getBasePixel();\n    }\n    return pixel;\n}\n function _getTargetValue(fill, scale, startValue) {\n    let value;\n    if (fill === 'start') {\n        value = startValue;\n    } else if (fill === 'end') {\n        value = scale.options.reverse ? scale.min : scale.max;\n    } else if (isObject(fill)) {\n        value = fill.value;\n    } else {\n        value = scale.getBaseValue();\n    }\n    return value;\n}\n function parseFillOption(line) {\n    const options = line.options;\n    const fillOption = options.fill;\n    let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n    if (fill === undefined) {\n        fill = !!options.backgroundColor;\n    }\n    if (fill === false || fill === null) {\n        return false;\n    }\n    if (fill === true) {\n        return 'origin';\n    }\n    return fill;\n}\n\nfunction _buildStackLine(source) {\n    const { scale , index , line  } = source;\n    const points = [];\n    const segments = line.segments;\n    const sourcePoints = line.points;\n    const linesBelow = getLinesBelow(scale, index);\n    linesBelow.push(_createBoundaryLine({\n        x: null,\n        y: scale.bottom\n    }, line));\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        for(let j = segment.start; j <= segment.end; j++){\n            addPointsBelow(points, sourcePoints[j], linesBelow);\n        }\n    }\n    return new LineElement({\n        points,\n        options: {}\n    });\n}\n function getLinesBelow(scale, index) {\n    const below = [];\n    const metas = scale.getMatchingVisibleMetas('line');\n    for(let i = 0; i < metas.length; i++){\n        const meta = metas[i];\n        if (meta.index === index) {\n            break;\n        }\n        if (!meta.hidden) {\n            below.unshift(meta.dataset);\n        }\n    }\n    return below;\n}\n function addPointsBelow(points, sourcePoint, linesBelow) {\n    const postponed = [];\n    for(let j = 0; j < linesBelow.length; j++){\n        const line = linesBelow[j];\n        const { first , last , point  } = findPoint(line, sourcePoint, 'x');\n        if (!point || first && last) {\n            continue;\n        }\n        if (first) {\n            postponed.unshift(point);\n        } else {\n            points.push(point);\n            if (!last) {\n                break;\n            }\n        }\n    }\n    points.push(...postponed);\n}\n function findPoint(line, sourcePoint, property) {\n    const point = line.interpolate(sourcePoint, property);\n    if (!point) {\n        return {};\n    }\n    const pointValue = point[property];\n    const segments = line.segments;\n    const linePoints = line.points;\n    let first = false;\n    let last = false;\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        const firstValue = linePoints[segment.start][property];\n        const lastValue = linePoints[segment.end][property];\n        if (_isBetween(pointValue, firstValue, lastValue)) {\n            first = pointValue === firstValue;\n            last = pointValue === lastValue;\n            break;\n        }\n    }\n    return {\n        first,\n        last,\n        point\n    };\n}\n\nclass simpleArc {\n    constructor(opts){\n        this.x = opts.x;\n        this.y = opts.y;\n        this.radius = opts.radius;\n    }\n    pathSegment(ctx, bounds, opts) {\n        const { x , y , radius  } = this;\n        bounds = bounds || {\n            start: 0,\n            end: TAU\n        };\n        ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n        return !opts.bounds;\n    }\n    interpolate(point) {\n        const { x , y , radius  } = this;\n        const angle = point.angle;\n        return {\n            x: x + Math.cos(angle) * radius,\n            y: y + Math.sin(angle) * radius,\n            angle\n        };\n    }\n}\n\nfunction _getTarget(source) {\n    const { chart , fill , line  } = source;\n    if (isNumberFinite(fill)) {\n        return getLineByIndex(chart, fill);\n    }\n    if (fill === 'stack') {\n        return _buildStackLine(source);\n    }\n    if (fill === 'shape') {\n        return true;\n    }\n    const boundary = computeBoundary(source);\n    if (boundary instanceof simpleArc) {\n        return boundary;\n    }\n    return _createBoundaryLine(boundary, line);\n}\n function getLineByIndex(chart, index) {\n    const meta = chart.getDatasetMeta(index);\n    const visible = meta && chart.isDatasetVisible(index);\n    return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n    const scale = source.scale || {};\n    if (scale.getPointPositionForValue) {\n        return computeCircularBoundary(source);\n    }\n    return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n    const { scale ={} , fill  } = source;\n    const pixel = _getTargetPixel(fill, scale);\n    if (isNumberFinite(pixel)) {\n        const horizontal = scale.isHorizontal();\n        return {\n            x: horizontal ? pixel : null,\n            y: horizontal ? null : pixel\n        };\n    }\n    return null;\n}\nfunction computeCircularBoundary(source) {\n    const { scale , fill  } = source;\n    const options = scale.options;\n    const length = scale.getLabels().length;\n    const start = options.reverse ? scale.max : scale.min;\n    const value = _getTargetValue(fill, scale, start);\n    const target = [];\n    if (options.grid.circular) {\n        const center = scale.getPointPositionForValue(0, start);\n        return new simpleArc({\n            x: center.x,\n            y: center.y,\n            radius: scale.getDistanceFromCenterForValue(value)\n        });\n    }\n    for(let i = 0; i < length; ++i){\n        target.push(scale.getPointPositionForValue(i, value));\n    }\n    return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n    const target = _getTarget(source);\n    const { line , scale , axis  } = source;\n    const lineOpts = line.options;\n    const fillOption = lineOpts.fill;\n    const color = lineOpts.backgroundColor;\n    const { above =color , below =color  } = fillOption || {};\n    if (target && line.points.length) {\n        clipArea(ctx, area);\n        doFill(ctx, {\n            line,\n            target,\n            above,\n            below,\n            area,\n            scale,\n            axis\n        });\n        unclipArea(ctx);\n    }\n}\nfunction doFill(ctx, cfg) {\n    const { line , target , above , below , area , scale  } = cfg;\n    const property = line._loop ? 'angle' : cfg.axis;\n    ctx.save();\n    if (property === 'x' && below !== above) {\n        clipVertical(ctx, target, area.top);\n        fill(ctx, {\n            line,\n            target,\n            color: above,\n            scale,\n            property\n        });\n        ctx.restore();\n        ctx.save();\n        clipVertical(ctx, target, area.bottom);\n    }\n    fill(ctx, {\n        line,\n        target,\n        color: below,\n        scale,\n        property\n    });\n    ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n    const { segments , points  } = target;\n    let first = true;\n    let lineLoop = false;\n    ctx.beginPath();\n    for (const segment of segments){\n        const { start , end  } = segment;\n        const firstPoint = points[start];\n        const lastPoint = points[_findSegmentEnd(start, end, points)];\n        if (first) {\n            ctx.moveTo(firstPoint.x, firstPoint.y);\n            first = false;\n        } else {\n            ctx.lineTo(firstPoint.x, clipY);\n            ctx.lineTo(firstPoint.x, firstPoint.y);\n        }\n        lineLoop = !!target.pathSegment(ctx, segment, {\n            move: lineLoop\n        });\n        if (lineLoop) {\n            ctx.closePath();\n        } else {\n            ctx.lineTo(lastPoint.x, clipY);\n        }\n    }\n    ctx.lineTo(target.first().x, clipY);\n    ctx.closePath();\n    ctx.clip();\n}\nfunction fill(ctx, cfg) {\n    const { line , target , property , color , scale  } = cfg;\n    const segments = _segments(line, target, property);\n    for (const { source: src , target: tgt , start , end  } of segments){\n        const { style: { backgroundColor =color  } = {}  } = src;\n        const notShape = target !== true;\n        ctx.save();\n        ctx.fillStyle = backgroundColor;\n        clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n        ctx.beginPath();\n        const lineLoop = !!line.pathSegment(ctx, src);\n        let loop;\n        if (notShape) {\n            if (lineLoop) {\n                ctx.closePath();\n            } else {\n                interpolatedLineTo(ctx, target, end, property);\n            }\n            const targetLoop = !!target.pathSegment(ctx, tgt, {\n                move: lineLoop,\n                reverse: true\n            });\n            loop = lineLoop && targetLoop;\n            if (!loop) {\n                interpolatedLineTo(ctx, target, start, property);\n            }\n        }\n        ctx.closePath();\n        ctx.fill(loop ? 'evenodd' : 'nonzero');\n        ctx.restore();\n    }\n}\nfunction clipBounds(ctx, scale, bounds) {\n    const { top , bottom  } = scale.chart.chartArea;\n    const { property , start , end  } = bounds || {};\n    if (property === 'x') {\n        ctx.beginPath();\n        ctx.rect(start, top, end - start, bottom - top);\n        ctx.clip();\n    }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n    const interpolatedPoint = target.interpolate(point, property);\n    if (interpolatedPoint) {\n        ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n    }\n}\n\nvar index = {\n    id: 'filler',\n    afterDatasetsUpdate (chart, _args, options) {\n        const count = (chart.data.datasets || []).length;\n        const sources = [];\n        let meta, i, line, source;\n        for(i = 0; i < count; ++i){\n            meta = chart.getDatasetMeta(i);\n            line = meta.dataset;\n            source = null;\n            if (line && line.options && line instanceof LineElement) {\n                source = {\n                    visible: chart.isDatasetVisible(i),\n                    index: i,\n                    fill: _decodeFill(line, i, count),\n                    chart,\n                    axis: meta.controller.options.indexAxis,\n                    scale: meta.vScale,\n                    line\n                };\n            }\n            meta.$filler = source;\n            sources.push(source);\n        }\n        for(i = 0; i < count; ++i){\n            source = sources[i];\n            if (!source || source.fill === false) {\n                continue;\n            }\n            source.fill = _resolveTarget(sources, i, options.propagate);\n        }\n    },\n    beforeDraw (chart, _args, options) {\n        const draw = options.drawTime === 'beforeDraw';\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        const area = chart.chartArea;\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (!source) {\n                continue;\n            }\n            source.line.updateControlPoints(area, source.axis);\n            if (draw && source.fill) {\n                _drawfill(chart.ctx, source, area);\n            }\n        }\n    },\n    beforeDatasetsDraw (chart, _args, options) {\n        if (options.drawTime !== 'beforeDatasetsDraw') {\n            return;\n        }\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (_shouldApplyFill(source)) {\n                _drawfill(chart.ctx, source, chart.chartArea);\n            }\n        }\n    },\n    beforeDatasetDraw (chart, args, options) {\n        const source = args.meta.$filler;\n        if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n            return;\n        }\n        _drawfill(chart.ctx, source, chart.chartArea);\n    },\n    defaults: {\n        propagate: true,\n        drawTime: 'beforeDatasetDraw'\n    }\n};\n\nconst getBoxSize = (labelOpts, fontSize)=>{\n    let { boxHeight =fontSize , boxWidth =fontSize  } = labelOpts;\n    if (labelOpts.usePointStyle) {\n        boxHeight = Math.min(boxHeight, fontSize);\n        boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n    }\n    return {\n        boxWidth,\n        boxHeight,\n        itemHeight: Math.max(fontSize, boxHeight)\n    };\n};\nconst itemsEqual = (a, b)=>a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n constructor(config){\n        super();\n        this._added = false;\n        this.legendHitBoxes = [];\n this._hoveredItem = null;\n        this.doughnutMode = false;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this.legendItems = undefined;\n        this.columnSizes = undefined;\n        this.lineWidths = undefined;\n        this.maxHeight = undefined;\n        this.maxWidth = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this._margins = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight, margins) {\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins;\n        this.setDimensions();\n        this.buildLabels();\n        this.fit();\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = this._margins.left;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = this._margins.top;\n            this.bottom = this.height;\n        }\n    }\n    buildLabels() {\n        const labelOpts = this.options.labels || {};\n        let legendItems = callback(labelOpts.generateLabels, [\n            this.chart\n        ], this) || [];\n        if (labelOpts.filter) {\n            legendItems = legendItems.filter((item)=>labelOpts.filter(item, this.chart.data));\n        }\n        if (labelOpts.sort) {\n            legendItems = legendItems.sort((a, b)=>labelOpts.sort(a, b, this.chart.data));\n        }\n        if (this.options.reverse) {\n            legendItems.reverse();\n        }\n        this.legendItems = legendItems;\n    }\n    fit() {\n        const { options , ctx  } = this;\n        if (!options.display) {\n            this.width = this.height = 0;\n            return;\n        }\n        const labelOpts = options.labels;\n        const labelFont = toFont(labelOpts.font);\n        const fontSize = labelFont.size;\n        const titleHeight = this._computeTitleHeight();\n        const { boxWidth , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        let width, height;\n        ctx.font = labelFont.string;\n        if (this.isHorizontal()) {\n            width = this.maxWidth;\n            height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n        } else {\n            height = this.maxHeight;\n            width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n        }\n        this.width = Math.min(width, options.maxWidth || this.maxWidth);\n        this.height = Math.min(height, options.maxHeight || this.maxHeight);\n    }\n _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n        const { ctx , maxWidth , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const lineWidths = this.lineWidths = [\n            0\n        ];\n        const lineHeight = itemHeight + padding;\n        let totalHeight = titleHeight;\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        let row = -1;\n        let top = -lineHeight;\n        this.legendItems.forEach((legendItem, i)=>{\n            const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n            if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n                totalHeight += lineHeight;\n                lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n                top += lineHeight;\n                row++;\n            }\n            hitboxes[i] = {\n                left: 0,\n                top,\n                row,\n                width: itemWidth,\n                height: itemHeight\n            };\n            lineWidths[lineWidths.length - 1] += itemWidth + padding;\n        });\n        return totalHeight;\n    }\n    _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n        const { ctx , maxHeight , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const columnSizes = this.columnSizes = [];\n        const heightLimit = maxHeight - titleHeight;\n        let totalWidth = padding;\n        let currentColWidth = 0;\n        let currentColHeight = 0;\n        let left = 0;\n        let col = 0;\n        this.legendItems.forEach((legendItem, i)=>{\n            const { itemWidth , itemHeight  } = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n            if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n                totalWidth += currentColWidth + padding;\n                columnSizes.push({\n                    width: currentColWidth,\n                    height: currentColHeight\n                });\n                left += currentColWidth + padding;\n                col++;\n                currentColWidth = currentColHeight = 0;\n            }\n            hitboxes[i] = {\n                left,\n                top: currentColHeight,\n                col,\n                width: itemWidth,\n                height: itemHeight\n            };\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight + padding;\n        });\n        totalWidth += currentColWidth;\n        columnSizes.push({\n            width: currentColWidth,\n            height: currentColHeight\n        });\n        return totalWidth;\n    }\n    adjustHitBoxes() {\n        if (!this.options.display) {\n            return;\n        }\n        const titleHeight = this._computeTitleHeight();\n        const { legendHitBoxes: hitboxes , options: { align , labels: { padding  } , rtl  }  } = this;\n        const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n        if (this.isHorizontal()) {\n            let row = 0;\n            let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n            for (const hitbox of hitboxes){\n                if (row !== hitbox.row) {\n                    row = hitbox.row;\n                    left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n                }\n                hitbox.top += this.top + titleHeight + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n                left += hitbox.width + padding;\n            }\n        } else {\n            let col = 0;\n            let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n            for (const hitbox1 of hitboxes){\n                if (hitbox1.col !== col) {\n                    col = hitbox1.col;\n                    top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n                }\n                hitbox1.top = top;\n                hitbox1.left += this.left + padding;\n                hitbox1.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox1.left), hitbox1.width);\n                top += hitbox1.height + padding;\n            }\n        }\n    }\n    isHorizontal() {\n        return this.options.position === 'top' || this.options.position === 'bottom';\n    }\n    draw() {\n        if (this.options.display) {\n            const ctx = this.ctx;\n            clipArea(ctx, this);\n            this._draw();\n            unclipArea(ctx);\n        }\n    }\n _draw() {\n        const { options: opts , columnSizes , lineWidths , ctx  } = this;\n        const { align , labels: labelOpts  } = opts;\n        const defaultColor = defaults.color;\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const labelFont = toFont(labelOpts.font);\n        const { padding  } = labelOpts;\n        const fontSize = labelFont.size;\n        const halfFontSize = fontSize / 2;\n        let cursor;\n        this.drawTitle();\n        ctx.textAlign = rtlHelper.textAlign('left');\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.font = labelFont.string;\n        const { boxWidth , boxHeight , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        const drawLegendBox = function(x, y, legendItem) {\n            if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n                return;\n            }\n            ctx.save();\n            const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n            ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n            ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n            ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n            ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n            ctx.lineWidth = lineWidth;\n            ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n            ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n            if (labelOpts.usePointStyle) {\n                const drawOptions = {\n                    radius: boxHeight * Math.SQRT2 / 2,\n                    pointStyle: legendItem.pointStyle,\n                    rotation: legendItem.rotation,\n                    borderWidth: lineWidth\n                };\n                const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n                const centerY = y + halfFontSize;\n                drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n            } else {\n                const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n                const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n                const borderRadius = toTRBLCorners(legendItem.borderRadius);\n                ctx.beginPath();\n                if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                    addRoundedRectPath(ctx, {\n                        x: xBoxLeft,\n                        y: yBoxTop,\n                        w: boxWidth,\n                        h: boxHeight,\n                        radius: borderRadius\n                    });\n                } else {\n                    ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n                }\n                ctx.fill();\n                if (lineWidth !== 0) {\n                    ctx.stroke();\n                }\n            }\n            ctx.restore();\n        };\n        const fillText = function(x, y, legendItem) {\n            renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n                strikethrough: legendItem.hidden,\n                textAlign: rtlHelper.textAlign(legendItem.textAlign)\n            });\n        };\n        const isHorizontal = this.isHorizontal();\n        const titleHeight = this._computeTitleHeight();\n        if (isHorizontal) {\n            cursor = {\n                x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n                y: this.top + padding + titleHeight,\n                line: 0\n            };\n        } else {\n            cursor = {\n                x: this.left + padding,\n                y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n                line: 0\n            };\n        }\n        overrideTextDirection(this.ctx, opts.textDirection);\n        const lineHeight = itemHeight + padding;\n        this.legendItems.forEach((legendItem, i)=>{\n            ctx.strokeStyle = legendItem.fontColor;\n            ctx.fillStyle = legendItem.fontColor;\n            const textWidth = ctx.measureText(legendItem.text).width;\n            const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n            const width = boxWidth + halfFontSize + textWidth;\n            let x = cursor.x;\n            let y = cursor.y;\n            rtlHelper.setWidth(this.width);\n            if (isHorizontal) {\n                if (i > 0 && x + width + padding > this.right) {\n                    y = cursor.y += lineHeight;\n                    cursor.line++;\n                    x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n                }\n            } else if (i > 0 && y + lineHeight > this.bottom) {\n                x = cursor.x = x + columnSizes[cursor.line].width + padding;\n                cursor.line++;\n                y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n            }\n            const realX = rtlHelper.x(x);\n            drawLegendBox(realX, y, legendItem);\n            x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n            fillText(rtlHelper.x(x), y, legendItem);\n            if (isHorizontal) {\n                cursor.x += width + padding;\n            } else if (typeof legendItem.text !== 'string') {\n                const fontLineHeight = labelFont.lineHeight;\n                cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight);\n            } else {\n                cursor.y += lineHeight;\n            }\n        });\n        restoreTextDirection(this.ctx, opts.textDirection);\n    }\n drawTitle() {\n        const opts = this.options;\n        const titleOpts = opts.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        if (!titleOpts.display) {\n            return;\n        }\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const ctx = this.ctx;\n        const position = titleOpts.position;\n        const halfFontSize = titleFont.size / 2;\n        const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n        let y;\n        let left = this.left;\n        let maxWidth = this.width;\n        if (this.isHorizontal()) {\n            maxWidth = Math.max(...this.lineWidths);\n            y = this.top + topPaddingPlusHalfFontSize;\n            left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n        } else {\n            const maxHeight = this.columnSizes.reduce((acc, size)=>Math.max(acc, size.height), 0);\n            y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n        }\n        const x = _alignStartEnd(position, left, left + maxWidth);\n        ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n        ctx.textBaseline = 'middle';\n        ctx.strokeStyle = titleOpts.color;\n        ctx.fillStyle = titleOpts.color;\n        ctx.font = titleFont.string;\n        renderText(ctx, titleOpts.text, x, y, titleFont);\n    }\n _computeTitleHeight() {\n        const titleOpts = this.options.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n    }\n _getLegendItemAt(x, y) {\n        let i, hitBox, lh;\n        if (_isBetween(x, this.left, this.right) && _isBetween(y, this.top, this.bottom)) {\n            lh = this.legendHitBoxes;\n            for(i = 0; i < lh.length; ++i){\n                hitBox = lh[i];\n                if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width) && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n                    return this.legendItems[i];\n                }\n            }\n        }\n        return null;\n    }\n handleEvent(e) {\n        const opts = this.options;\n        if (!isListened(e.type, opts)) {\n            return;\n        }\n        const hoveredItem = this._getLegendItemAt(e.x, e.y);\n        if (e.type === 'mousemove' || e.type === 'mouseout') {\n            const previous = this._hoveredItem;\n            const sameItem = itemsEqual(previous, hoveredItem);\n            if (previous && !sameItem) {\n                callback(opts.onLeave, [\n                    e,\n                    previous,\n                    this\n                ], this);\n            }\n            this._hoveredItem = hoveredItem;\n            if (hoveredItem && !sameItem) {\n                callback(opts.onHover, [\n                    e,\n                    hoveredItem,\n                    this\n                ], this);\n            }\n        } else if (hoveredItem) {\n            callback(opts.onClick, [\n                e,\n                hoveredItem,\n                this\n            ], this);\n        }\n    }\n}\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n    const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n    const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n    return {\n        itemWidth,\n        itemHeight\n    };\n}\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n    let legendItemText = legendItem.text;\n    if (legendItemText && typeof legendItemText !== 'string') {\n        legendItemText = legendItemText.reduce((a, b)=>a.length > b.length ? a : b);\n    }\n    return boxWidth + labelFont.size / 2 + ctx.measureText(legendItemText).width;\n}\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n    let itemHeight = _itemHeight;\n    if (typeof legendItem.text !== 'string') {\n        itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n    }\n    return itemHeight;\n}\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n    const labelHeight = legendItem.text ? legendItem.text.length + 0.5 : 0;\n    return fontLineHeight * labelHeight;\n}\nfunction isListened(type, opts) {\n    if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n        return true;\n    }\n    if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n        return true;\n    }\n    return false;\n}\nvar plugin_legend = {\n    id: 'legend',\n _element: Legend,\n    start (chart, _args, options) {\n        const legend = chart.legend = new Legend({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, legend, options);\n        layouts.addBox(chart, legend);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, chart.legend);\n        delete chart.legend;\n    },\n    beforeUpdate (chart, _args, options) {\n        const legend = chart.legend;\n        layouts.configure(chart, legend, options);\n        legend.options = options;\n    },\n    afterUpdate (chart) {\n        const legend = chart.legend;\n        legend.buildLabels();\n        legend.adjustHitBoxes();\n    },\n    afterEvent (chart, args) {\n        if (!args.replay) {\n            chart.legend.handleEvent(args.event);\n        }\n    },\n    defaults: {\n        display: true,\n        position: 'top',\n        align: 'center',\n        fullSize: true,\n        reverse: false,\n        weight: 1000,\n        onClick (e, legendItem, legend) {\n            const index = legendItem.datasetIndex;\n            const ci = legend.chart;\n            if (ci.isDatasetVisible(index)) {\n                ci.hide(index);\n                legendItem.hidden = true;\n            } else {\n                ci.show(index);\n                legendItem.hidden = false;\n            }\n        },\n        onHover: null,\n        onLeave: null,\n        labels: {\n            color: (ctx)=>ctx.chart.options.color,\n            boxWidth: 40,\n            padding: 10,\n            generateLabels (chart) {\n                const datasets = chart.data.datasets;\n                const { labels: { usePointStyle , pointStyle , textAlign , color , useBorderRadius , borderRadius  }  } = chart.legend.options;\n                return chart._getSortedDatasetMetas().map((meta)=>{\n                    const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n                    const borderWidth = toPadding(style.borderWidth);\n                    return {\n                        text: datasets[meta.index].label,\n                        fillStyle: style.backgroundColor,\n                        fontColor: color,\n                        hidden: !meta.visible,\n                        lineCap: style.borderCapStyle,\n                        lineDash: style.borderDash,\n                        lineDashOffset: style.borderDashOffset,\n                        lineJoin: style.borderJoinStyle,\n                        lineWidth: (borderWidth.width + borderWidth.height) / 4,\n                        strokeStyle: style.borderColor,\n                        pointStyle: pointStyle || style.pointStyle,\n                        rotation: style.rotation,\n                        textAlign: textAlign || style.textAlign,\n                        borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n                        datasetIndex: meta.index\n                    };\n                }, this);\n            }\n        },\n        title: {\n            color: (ctx)=>ctx.chart.options.color,\n            display: false,\n            position: 'center',\n            text: ''\n        }\n    },\n    descriptors: {\n        _scriptable: (name)=>!name.startsWith('on'),\n        labels: {\n            _scriptable: (name)=>![\n                    'generateLabels',\n                    'filter',\n                    'sort'\n                ].includes(name)\n        }\n    }\n};\n\nclass Title extends Element {\n constructor(config){\n        super();\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this._padding = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight) {\n        const opts = this.options;\n        this.left = 0;\n        this.top = 0;\n        if (!opts.display) {\n            this.width = this.height = this.right = this.bottom = 0;\n            return;\n        }\n        this.width = this.right = maxWidth;\n        this.height = this.bottom = maxHeight;\n        const lineCount = isArray(opts.text) ? opts.text.length : 1;\n        this._padding = toPadding(opts.padding);\n        const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n        if (this.isHorizontal()) {\n            this.height = textSize;\n        } else {\n            this.width = textSize;\n        }\n    }\n    isHorizontal() {\n        const pos = this.options.position;\n        return pos === 'top' || pos === 'bottom';\n    }\n    _drawArgs(offset) {\n        const { top , left , bottom , right , options  } = this;\n        const align = options.align;\n        let rotation = 0;\n        let maxWidth, titleX, titleY;\n        if (this.isHorizontal()) {\n            titleX = _alignStartEnd(align, left, right);\n            titleY = top + offset;\n            maxWidth = right - left;\n        } else {\n            if (options.position === 'left') {\n                titleX = left + offset;\n                titleY = _alignStartEnd(align, bottom, top);\n                rotation = PI * -0.5;\n            } else {\n                titleX = right - offset;\n                titleY = _alignStartEnd(align, top, bottom);\n                rotation = PI * 0.5;\n            }\n            maxWidth = bottom - top;\n        }\n        return {\n            titleX,\n            titleY,\n            maxWidth,\n            rotation\n        };\n    }\n    draw() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        if (!opts.display) {\n            return;\n        }\n        const fontOpts = toFont(opts.font);\n        const lineHeight = fontOpts.lineHeight;\n        const offset = lineHeight / 2 + this._padding.top;\n        const { titleX , titleY , maxWidth , rotation  } = this._drawArgs(offset);\n        renderText(ctx, opts.text, 0, 0, fontOpts, {\n            color: opts.color,\n            maxWidth,\n            rotation,\n            textAlign: _toLeftRightCenter(opts.align),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n}\nfunction createTitle(chart, titleOpts) {\n    const title = new Title({\n        ctx: chart.ctx,\n        options: titleOpts,\n        chart\n    });\n    layouts.configure(chart, title, titleOpts);\n    layouts.addBox(chart, title);\n    chart.titleBlock = title;\n}\nvar plugin_title = {\n    id: 'title',\n _element: Title,\n    start (chart, _args, options) {\n        createTitle(chart, options);\n    },\n    stop (chart) {\n        const titleBlock = chart.titleBlock;\n        layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = chart.titleBlock;\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'bold'\n        },\n        fullSize: true,\n        padding: 10,\n        position: 'top',\n        text: '',\n        weight: 2000\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n    id: 'subtitle',\n    start (chart, _args, options) {\n        const title = new Title({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, title, options);\n        layouts.addBox(chart, title);\n        map.set(chart, title);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, map.get(chart));\n        map.delete(chart);\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = map.get(chart);\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'normal'\n        },\n        fullSize: true,\n        padding: 0,\n        position: 'top',\n        text: '',\n        weight: 1500\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst positioners = {\n average (items) {\n        if (!items.length) {\n            return false;\n        }\n        let i, len;\n        let x = 0;\n        let y = 0;\n        let count = 0;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const pos = el.tooltipPosition();\n                x += pos.x;\n                y += pos.y;\n                ++count;\n            }\n        }\n        return {\n            x: x / count,\n            y: y / count\n        };\n    },\n nearest (items, eventPosition) {\n        if (!items.length) {\n            return false;\n        }\n        let x = eventPosition.x;\n        let y = eventPosition.y;\n        let minDistance = Number.POSITIVE_INFINITY;\n        let i, len, nearestElement;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const center = el.getCenterPoint();\n                const d = distanceBetweenPoints(eventPosition, center);\n                if (d < minDistance) {\n                    minDistance = d;\n                    nearestElement = el;\n                }\n            }\n        }\n        if (nearestElement) {\n            const tp = nearestElement.tooltipPosition();\n            x = tp.x;\n            y = tp.y;\n        }\n        return {\n            x,\n            y\n        };\n    }\n};\nfunction pushOrConcat(base, toPush) {\n    if (toPush) {\n        if (isArray(toPush)) {\n            Array.prototype.push.apply(base, toPush);\n        } else {\n            base.push(toPush);\n        }\n    }\n    return base;\n}\n function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n        return str.split('\\n');\n    }\n    return str;\n}\n function createTooltipItem(chart, item) {\n    const { element , datasetIndex , index  } = item;\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n    const { label , value  } = controller.getLabelAndValue(index);\n    return {\n        chart,\n        label,\n        parsed: controller.getParsed(index),\n        raw: chart.data.datasets[datasetIndex].data[index],\n        formattedValue: value,\n        dataset: controller.getDataset(),\n        dataIndex: index,\n        datasetIndex,\n        element\n    };\n}\n function getTooltipSize(tooltip, options) {\n    const ctx = tooltip.chart.ctx;\n    const { body , footer , title  } = tooltip;\n    const { boxWidth , boxHeight  } = options;\n    const bodyFont = toFont(options.bodyFont);\n    const titleFont = toFont(options.titleFont);\n    const footerFont = toFont(options.footerFont);\n    const titleLineCount = title.length;\n    const footerLineCount = footer.length;\n    const bodyLineItemCount = body.length;\n    const padding = toPadding(options.padding);\n    let height = padding.height;\n    let width = 0;\n    let combinedBodyLength = body.reduce((count, bodyItem)=>count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n    combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n    if (titleLineCount) {\n        height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n    }\n    if (combinedBodyLength) {\n        const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n        height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n    }\n    if (footerLineCount) {\n        height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n    }\n    let widthPadding = 0;\n    const maxLineWidth = function(line) {\n        width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n    ctx.save();\n    ctx.font = titleFont.string;\n    each(tooltip.title, maxLineWidth);\n    ctx.font = bodyFont.string;\n    each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n    widthPadding = options.displayColors ? boxWidth + 2 + options.boxPadding : 0;\n    each(body, (bodyItem)=>{\n        each(bodyItem.before, maxLineWidth);\n        each(bodyItem.lines, maxLineWidth);\n        each(bodyItem.after, maxLineWidth);\n    });\n    widthPadding = 0;\n    ctx.font = footerFont.string;\n    each(tooltip.footer, maxLineWidth);\n    ctx.restore();\n    width += padding.width;\n    return {\n        width,\n        height\n    };\n}\nfunction determineYAlign(chart, size) {\n    const { y , height  } = size;\n    if (y < height / 2) {\n        return 'top';\n    } else if (y > chart.height - height / 2) {\n        return 'bottom';\n    }\n    return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n    const { x , width  } = size;\n    const caret = options.caretSize + options.caretPadding;\n    if (xAlign === 'left' && x + width + caret > chart.width) {\n        return true;\n    }\n    if (xAlign === 'right' && x - width - caret < 0) {\n        return true;\n    }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n    const { x , width  } = size;\n    const { width: chartWidth , chartArea: { left , right  }  } = chart;\n    let xAlign = 'center';\n    if (yAlign === 'center') {\n        xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n    } else if (x <= width / 2) {\n        xAlign = 'left';\n    } else if (x >= chartWidth - width / 2) {\n        xAlign = 'right';\n    }\n    if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n        xAlign = 'center';\n    }\n    return xAlign;\n}\n function determineAlignment(chart, options, size) {\n    const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n    return {\n        xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n        yAlign\n    };\n}\nfunction alignX(size, xAlign) {\n    let { x , width  } = size;\n    if (xAlign === 'right') {\n        x -= width;\n    } else if (xAlign === 'center') {\n        x -= width / 2;\n    }\n    return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n    let { y , height  } = size;\n    if (yAlign === 'top') {\n        y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n        y -= height + paddingAndSize;\n    } else {\n        y -= height / 2;\n    }\n    return y;\n}\n function getBackgroundPoint(options, size, alignment, chart) {\n    const { caretSize , caretPadding , cornerRadius  } = options;\n    const { xAlign , yAlign  } = alignment;\n    const paddingAndSize = caretSize + caretPadding;\n    const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n    let x = alignX(size, xAlign);\n    const y = alignY(size, yAlign, paddingAndSize);\n    if (yAlign === 'center') {\n        if (xAlign === 'left') {\n            x += paddingAndSize;\n        } else if (xAlign === 'right') {\n            x -= paddingAndSize;\n        }\n    } else if (xAlign === 'left') {\n        x -= Math.max(topLeft, bottomLeft) + caretSize;\n    } else if (xAlign === 'right') {\n        x += Math.max(topRight, bottomRight) + caretSize;\n    }\n    return {\n        x: _limitValue(x, 0, chart.width - size.width),\n        y: _limitValue(y, 0, chart.height - size.height)\n    };\n}\nfunction getAlignedX(tooltip, align, options) {\n    const padding = toPadding(options.padding);\n    return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\n function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n    return createContext(parent, {\n        tooltip,\n        tooltipItems,\n        type: 'tooltip'\n    });\n}\nfunction overrideCallbacks(callbacks, context) {\n    const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n    return override ? callbacks.override(override) : callbacks;\n}\nconst defaultCallbacks = {\n    beforeTitle: noop,\n    title (tooltipItems) {\n        if (tooltipItems.length > 0) {\n            const item = tooltipItems[0];\n            const labels = item.chart.data.labels;\n            const labelCount = labels ? labels.length : 0;\n            if (this && this.options && this.options.mode === 'dataset') {\n                return item.dataset.label || '';\n            } else if (item.label) {\n                return item.label;\n            } else if (labelCount > 0 && item.dataIndex < labelCount) {\n                return labels[item.dataIndex];\n            }\n        }\n        return '';\n    },\n    afterTitle: noop,\n    beforeBody: noop,\n    beforeLabel: noop,\n    label (tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n            return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n            label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n            label += value;\n        }\n        return label;\n    },\n    labelColor (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            borderColor: options.borderColor,\n            backgroundColor: options.backgroundColor,\n            borderWidth: options.borderWidth,\n            borderDash: options.borderDash,\n            borderDashOffset: options.borderDashOffset,\n            borderRadius: 0\n        };\n    },\n    labelTextColor () {\n        return this.options.bodyColor;\n    },\n    labelPointStyle (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            pointStyle: options.pointStyle,\n            rotation: options.rotation\n        };\n    },\n    afterLabel: noop,\n    afterBody: noop,\n    beforeFooter: noop,\n    footer: noop,\n    afterFooter: noop\n};\n function invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n    const result = callbacks[name].call(ctx, arg);\n    if (typeof result === 'undefined') {\n        return defaultCallbacks[name].call(ctx, arg);\n    }\n    return result;\n}\nclass Tooltip extends Element {\n static positioners = positioners;\n    constructor(config){\n        super();\n        this.opacity = 0;\n        this._active = [];\n        this._eventPosition = undefined;\n        this._size = undefined;\n        this._cachedAnimations = undefined;\n        this._tooltipItems = [];\n        this.$animations = undefined;\n        this.$context = undefined;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.dataPoints = undefined;\n        this.title = undefined;\n        this.beforeBody = undefined;\n        this.body = undefined;\n        this.afterBody = undefined;\n        this.footer = undefined;\n        this.xAlign = undefined;\n        this.yAlign = undefined;\n        this.x = undefined;\n        this.y = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this.caretX = undefined;\n        this.caretY = undefined;\n        this.labelColors = undefined;\n        this.labelPointStyles = undefined;\n        this.labelTextColors = undefined;\n    }\n    initialize(options) {\n        this.options = options;\n        this._cachedAnimations = undefined;\n        this.$context = undefined;\n    }\n _resolveAnimations() {\n        const cached = this._cachedAnimations;\n        if (cached) {\n            return cached;\n        }\n        const chart = this.chart;\n        const options = this.options.setContext(this.getContext());\n        const opts = options.enabled && chart.options.animation && options.animations;\n        const animations = new Animations(this.chart, opts);\n        if (opts._cacheable) {\n            this._cachedAnimations = Object.freeze(animations);\n        }\n        return animations;\n    }\n getContext() {\n        return this.$context || (this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n    }\n    getTitle(context, options) {\n        const { callbacks  } = options;\n        const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n        const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n        const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n        lines = pushOrConcat(lines, splitNewlines(title));\n        lines = pushOrConcat(lines, splitNewlines(afterTitle));\n        return lines;\n    }\n    getBeforeBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems));\n    }\n    getBody(tooltipItems, options) {\n        const { callbacks  } = options;\n        const bodyItems = [];\n        each(tooltipItems, (context)=>{\n            const bodyItem = {\n                before: [],\n                lines: [],\n                after: []\n            };\n            const scoped = overrideCallbacks(callbacks, context);\n            pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n            pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n            pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n            bodyItems.push(bodyItem);\n        });\n        return bodyItems;\n    }\n    getAfterBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems));\n    }\n    getFooter(tooltipItems, options) {\n        const { callbacks  } = options;\n        const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n        const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n        const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n        lines = pushOrConcat(lines, splitNewlines(footer));\n        lines = pushOrConcat(lines, splitNewlines(afterFooter));\n        return lines;\n    }\n _createItems(options) {\n        const active = this._active;\n        const data = this.chart.data;\n        const labelColors = [];\n        const labelPointStyles = [];\n        const labelTextColors = [];\n        let tooltipItems = [];\n        let i, len;\n        for(i = 0, len = active.length; i < len; ++i){\n            tooltipItems.push(createTooltipItem(this.chart, active[i]));\n        }\n        if (options.filter) {\n            tooltipItems = tooltipItems.filter((element, index, array)=>options.filter(element, index, array, data));\n        }\n        if (options.itemSort) {\n            tooltipItems = tooltipItems.sort((a, b)=>options.itemSort(a, b, data));\n        }\n        each(tooltipItems, (context)=>{\n            const scoped = overrideCallbacks(options.callbacks, context);\n            labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n            labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n            labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n        });\n        this.labelColors = labelColors;\n        this.labelPointStyles = labelPointStyles;\n        this.labelTextColors = labelTextColors;\n        this.dataPoints = tooltipItems;\n        return tooltipItems;\n    }\n    update(changed, replay) {\n        const options = this.options.setContext(this.getContext());\n        const active = this._active;\n        let properties;\n        let tooltipItems = [];\n        if (!active.length) {\n            if (this.opacity !== 0) {\n                properties = {\n                    opacity: 0\n                };\n            }\n        } else {\n            const position = positioners[options.position].call(this, active, this._eventPosition);\n            tooltipItems = this._createItems(options);\n            this.title = this.getTitle(tooltipItems, options);\n            this.beforeBody = this.getBeforeBody(tooltipItems, options);\n            this.body = this.getBody(tooltipItems, options);\n            this.afterBody = this.getAfterBody(tooltipItems, options);\n            this.footer = this.getFooter(tooltipItems, options);\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, size);\n            const alignment = determineAlignment(this.chart, options, positionAndSize);\n            const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n            this.xAlign = alignment.xAlign;\n            this.yAlign = alignment.yAlign;\n            properties = {\n                opacity: 1,\n                x: backgroundPoint.x,\n                y: backgroundPoint.y,\n                width: size.width,\n                height: size.height,\n                caretX: position.x,\n                caretY: position.y\n            };\n        }\n        this._tooltipItems = tooltipItems;\n        this.$context = undefined;\n        if (properties) {\n            this._resolveAnimations().update(this, properties);\n        }\n        if (changed && options.external) {\n            options.external.call(this, {\n                chart: this.chart,\n                tooltip: this,\n                replay\n            });\n        }\n    }\n    drawCaret(tooltipPoint, ctx, size, options) {\n        const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n        ctx.lineTo(caretPosition.x1, caretPosition.y1);\n        ctx.lineTo(caretPosition.x2, caretPosition.y2);\n        ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    }\n    getCaretPosition(tooltipPoint, size, options) {\n        const { xAlign , yAlign  } = this;\n        const { caretSize , cornerRadius  } = options;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n        const { x: ptX , y: ptY  } = tooltipPoint;\n        const { width , height  } = size;\n        let x1, x2, x3, y1, y2, y3;\n        if (yAlign === 'center') {\n            y2 = ptY + height / 2;\n            if (xAlign === 'left') {\n                x1 = ptX;\n                x2 = x1 - caretSize;\n                y1 = y2 + caretSize;\n                y3 = y2 - caretSize;\n            } else {\n                x1 = ptX + width;\n                x2 = x1 + caretSize;\n                y1 = y2 - caretSize;\n                y3 = y2 + caretSize;\n            }\n            x3 = x1;\n        } else {\n            if (xAlign === 'left') {\n                x2 = ptX + Math.max(topLeft, bottomLeft) + caretSize;\n            } else if (xAlign === 'right') {\n                x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n            } else {\n                x2 = this.caretX;\n            }\n            if (yAlign === 'top') {\n                y1 = ptY;\n                y2 = y1 - caretSize;\n                x1 = x2 - caretSize;\n                x3 = x2 + caretSize;\n            } else {\n                y1 = ptY + height;\n                y2 = y1 + caretSize;\n                x1 = x2 + caretSize;\n                x3 = x2 - caretSize;\n            }\n            y3 = y1;\n        }\n        return {\n            x1,\n            x2,\n            x3,\n            y1,\n            y2,\n            y3\n        };\n    }\n    drawTitle(pt, ctx, options) {\n        const title = this.title;\n        const length = title.length;\n        let titleFont, titleSpacing, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.titleAlign, options);\n            ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n            ctx.textBaseline = 'middle';\n            titleFont = toFont(options.titleFont);\n            titleSpacing = options.titleSpacing;\n            ctx.fillStyle = options.titleColor;\n            ctx.font = titleFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n                pt.y += titleFont.lineHeight + titleSpacing;\n                if (i + 1 === length) {\n                    pt.y += options.titleMarginBottom - titleSpacing;\n                }\n            }\n        }\n    }\n _drawColorBox(ctx, pt, i, rtlHelper, options) {\n        const labelColors = this.labelColors[i];\n        const labelPointStyle = this.labelPointStyles[i];\n        const { boxHeight , boxWidth , boxPadding  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        const colorX = getAlignedX(this, 'left', options);\n        const rtlColorX = rtlHelper.x(colorX);\n        const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n        const colorY = pt.y + yOffSet;\n        if (options.usePointStyle) {\n            const drawOptions = {\n                radius: Math.min(boxWidth, boxHeight) / 2,\n                pointStyle: labelPointStyle.pointStyle,\n                rotation: labelPointStyle.rotation,\n                borderWidth: 1\n            };\n            const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n            const centerY = colorY + boxHeight / 2;\n            ctx.strokeStyle = options.multiKeyBackground;\n            ctx.fillStyle = options.multiKeyBackground;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n            ctx.strokeStyle = labelColors.borderColor;\n            ctx.fillStyle = labelColors.backgroundColor;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n        } else {\n            ctx.lineWidth = isObject(labelColors.borderWidth) ? Math.max(...Object.values(labelColors.borderWidth)) : labelColors.borderWidth || 1;\n            ctx.strokeStyle = labelColors.borderColor;\n            ctx.setLineDash(labelColors.borderDash || []);\n            ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n            const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth - boxPadding);\n            const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - boxPadding - 2);\n            const borderRadius = toTRBLCorners(labelColors.borderRadius);\n            if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                ctx.beginPath();\n                ctx.fillStyle = options.multiKeyBackground;\n                addRoundedRectPath(ctx, {\n                    x: outerX,\n                    y: colorY,\n                    w: boxWidth,\n                    h: boxHeight,\n                    radius: borderRadius\n                });\n                ctx.fill();\n                ctx.stroke();\n                ctx.fillStyle = labelColors.backgroundColor;\n                ctx.beginPath();\n                addRoundedRectPath(ctx, {\n                    x: innerX,\n                    y: colorY + 1,\n                    w: boxWidth - 2,\n                    h: boxHeight - 2,\n                    radius: borderRadius\n                });\n                ctx.fill();\n            } else {\n                ctx.fillStyle = options.multiKeyBackground;\n                ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.fillStyle = labelColors.backgroundColor;\n                ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n            }\n        }\n        ctx.fillStyle = this.labelTextColors[i];\n    }\n    drawBody(pt, ctx, options) {\n        const { body  } = this;\n        const { bodySpacing , bodyAlign , displayColors , boxHeight , boxWidth , boxPadding  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        let bodyLineHeight = bodyFont.lineHeight;\n        let xLinePadding = 0;\n        const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n        const fillLineOfText = function(line) {\n            ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n            pt.y += bodyLineHeight + bodySpacing;\n        };\n        const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n        let bodyItem, textColor, lines, i, j, ilen, jlen;\n        ctx.textAlign = bodyAlign;\n        ctx.textBaseline = 'middle';\n        ctx.font = bodyFont.string;\n        pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n        ctx.fillStyle = options.bodyColor;\n        each(this.beforeBody, fillLineOfText);\n        xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + boxPadding : boxWidth + 2 + boxPadding : 0;\n        for(i = 0, ilen = body.length; i < ilen; ++i){\n            bodyItem = body[i];\n            textColor = this.labelTextColors[i];\n            ctx.fillStyle = textColor;\n            each(bodyItem.before, fillLineOfText);\n            lines = bodyItem.lines;\n            if (displayColors && lines.length) {\n                this._drawColorBox(ctx, pt, i, rtlHelper, options);\n                bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n            }\n            for(j = 0, jlen = lines.length; j < jlen; ++j){\n                fillLineOfText(lines[j]);\n                bodyLineHeight = bodyFont.lineHeight;\n            }\n            each(bodyItem.after, fillLineOfText);\n        }\n        xLinePadding = 0;\n        bodyLineHeight = bodyFont.lineHeight;\n        each(this.afterBody, fillLineOfText);\n        pt.y -= bodySpacing;\n    }\n    drawFooter(pt, ctx, options) {\n        const footer = this.footer;\n        const length = footer.length;\n        let footerFont, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.footerAlign, options);\n            pt.y += options.footerMarginTop;\n            ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n            ctx.textBaseline = 'middle';\n            footerFont = toFont(options.footerFont);\n            ctx.fillStyle = options.footerColor;\n            ctx.font = footerFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n                pt.y += footerFont.lineHeight + options.footerSpacing;\n            }\n        }\n    }\n    drawBackground(pt, ctx, tooltipSize, options) {\n        const { xAlign , yAlign  } = this;\n        const { x , y  } = pt;\n        const { width , height  } = tooltipSize;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(options.cornerRadius);\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.beginPath();\n        ctx.moveTo(x + topLeft, y);\n        if (yAlign === 'top') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width - topRight, y);\n        ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n        if (yAlign === 'center' && xAlign === 'right') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width, y + height - bottomRight);\n        ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n        if (yAlign === 'bottom') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + bottomLeft, y + height);\n        ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n        if (yAlign === 'center' && xAlign === 'left') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x, y + topLeft);\n        ctx.quadraticCurveTo(x, y, x + topLeft, y);\n        ctx.closePath();\n        ctx.fill();\n        if (options.borderWidth > 0) {\n            ctx.stroke();\n        }\n    }\n _updateAnimationTarget(options) {\n        const chart = this.chart;\n        const anims = this.$animations;\n        const animX = anims && anims.x;\n        const animY = anims && anims.y;\n        if (animX || animY) {\n            const position = positioners[options.position].call(this, this._active, this._eventPosition);\n            if (!position) {\n                return;\n            }\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, this._size);\n            const alignment = determineAlignment(chart, options, positionAndSize);\n            const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n            if (animX._to !== point.x || animY._to !== point.y) {\n                this.xAlign = alignment.xAlign;\n                this.yAlign = alignment.yAlign;\n                this.width = size.width;\n                this.height = size.height;\n                this.caretX = position.x;\n                this.caretY = position.y;\n                this._resolveAnimations().update(this, point);\n            }\n        }\n    }\n _willRender() {\n        return !!this.opacity;\n    }\n    draw(ctx) {\n        const options = this.options.setContext(this.getContext());\n        let opacity = this.opacity;\n        if (!opacity) {\n            return;\n        }\n        this._updateAnimationTarget(options);\n        const tooltipSize = {\n            width: this.width,\n            height: this.height\n        };\n        const pt = {\n            x: this.x,\n            y: this.y\n        };\n        opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n        const padding = toPadding(options.padding);\n        const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n        if (options.enabled && hasTooltipContent) {\n            ctx.save();\n            ctx.globalAlpha = opacity;\n            this.drawBackground(pt, ctx, tooltipSize, options);\n            overrideTextDirection(ctx, options.textDirection);\n            pt.y += padding.top;\n            this.drawTitle(pt, ctx, options);\n            this.drawBody(pt, ctx, options);\n            this.drawFooter(pt, ctx, options);\n            restoreTextDirection(ctx, options.textDirection);\n            ctx.restore();\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements, eventPosition) {\n        const lastActive = this._active;\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.chart.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('Cannot find a dataset at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(lastActive, active);\n        const positionChanged = this._positionChanged(active, eventPosition);\n        if (changed || positionChanged) {\n            this._active = active;\n            this._eventPosition = eventPosition;\n            this._ignoreReplayEvents = true;\n            this.update(true);\n        }\n    }\n handleEvent(e, replay, inChartArea = true) {\n        if (replay && this._ignoreReplayEvents) {\n            return false;\n        }\n        this._ignoreReplayEvents = false;\n        const options = this.options;\n        const lastActive = this._active || [];\n        const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n        const positionChanged = this._positionChanged(active, e);\n        const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n        if (changed) {\n            this._active = active;\n            if (options.enabled || options.external) {\n                this._eventPosition = {\n                    x: e.x,\n                    y: e.y\n                };\n                this.update(true, replay);\n            }\n        }\n        return changed;\n    }\n _getActiveElements(e, lastActive, replay, inChartArea) {\n        const options = this.options;\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive;\n        }\n        const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n        if (options.reverse) {\n            active.reverse();\n        }\n        return active;\n    }\n _positionChanged(active, e) {\n        const { caretX , caretY , options  } = this;\n        const position = positioners[options.position].call(this, active, e);\n        return position !== false && (caretX !== position.x || caretY !== position.y);\n    }\n}\nvar plugin_tooltip = {\n    id: 'tooltip',\n    _element: Tooltip,\n    positioners,\n    afterInit (chart, _args, options) {\n        if (options) {\n            chart.tooltip = new Tooltip({\n                chart,\n                options\n            });\n        }\n    },\n    beforeUpdate (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    reset (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    afterDraw (chart) {\n        const tooltip = chart.tooltip;\n        if (tooltip && tooltip._willRender()) {\n            const args = {\n                tooltip\n            };\n            if (chart.notifyPlugins('beforeTooltipDraw', {\n                ...args,\n                cancelable: true\n            }) === false) {\n                return;\n            }\n            tooltip.draw(chart.ctx);\n            chart.notifyPlugins('afterTooltipDraw', args);\n        }\n    },\n    afterEvent (chart, args) {\n        if (chart.tooltip) {\n            const useFinalPosition = args.replay;\n            if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n                args.changed = true;\n            }\n        }\n    },\n    defaults: {\n        enabled: true,\n        external: null,\n        position: 'average',\n        backgroundColor: 'rgba(0,0,0,0.8)',\n        titleColor: '#fff',\n        titleFont: {\n            weight: 'bold'\n        },\n        titleSpacing: 2,\n        titleMarginBottom: 6,\n        titleAlign: 'left',\n        bodyColor: '#fff',\n        bodySpacing: 2,\n        bodyFont: {},\n        bodyAlign: 'left',\n        footerColor: '#fff',\n        footerSpacing: 2,\n        footerMarginTop: 6,\n        footerFont: {\n            weight: 'bold'\n        },\n        footerAlign: 'left',\n        padding: 6,\n        caretPadding: 2,\n        caretSize: 5,\n        cornerRadius: 6,\n        boxHeight: (ctx, opts)=>opts.bodyFont.size,\n        boxWidth: (ctx, opts)=>opts.bodyFont.size,\n        multiKeyBackground: '#fff',\n        displayColors: true,\n        boxPadding: 0,\n        borderColor: 'rgba(0,0,0,0)',\n        borderWidth: 0,\n        animation: {\n            duration: 400,\n            easing: 'easeOutQuart'\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'width',\n                    'height',\n                    'caretX',\n                    'caretY'\n                ]\n            },\n            opacity: {\n                easing: 'linear',\n                duration: 200\n            }\n        },\n        callbacks: defaultCallbacks\n    },\n    defaultRoutes: {\n        bodyFont: 'font',\n        footerFont: 'font',\n        titleFont: 'font'\n    },\n    descriptors: {\n        _scriptable: (name)=>name !== 'filter' && name !== 'itemSort' && name !== 'external',\n        _indexable: false,\n        callbacks: {\n            _scriptable: false,\n            _indexable: false\n        },\n        animation: {\n            _fallback: false\n        },\n        animations: {\n            _fallback: 'animation'\n        }\n    },\n    additionalOptionScopes: [\n        'interaction'\n    ]\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nColors: plugin_colors,\nDecimation: plugin_decimation,\nFiller: index,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels)=>{\n    if (typeof raw === 'string') {\n        index = labels.push(raw) - 1;\n        addedLabels.unshift({\n            index,\n            label: raw\n        });\n    } else if (isNaN(raw)) {\n        index = null;\n    }\n    return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n    const first = labels.indexOf(raw);\n    if (first === -1) {\n        return addIfString(labels, raw, index, addedLabels);\n    }\n    const last = labels.lastIndexOf(raw);\n    return first !== last ? index : first;\n}\nconst validIndex = (index, max)=>index === null ? null : _limitValue(Math.round(index), 0, max);\nfunction _getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n        return labels[value];\n    }\n    return value;\n}\nclass CategoryScale extends Scale {\n    static id = 'category';\n static defaults = {\n        ticks: {\n            callback: _getLabelForValue\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this._startValue = undefined;\n        this._valueRange = 0;\n        this._addedLabels = [];\n    }\n    init(scaleOptions) {\n        const added = this._addedLabels;\n        if (added.length) {\n            const labels = this.getLabels();\n            for (const { index , label  } of added){\n                if (labels[index] === label) {\n                    labels.splice(index, 1);\n                }\n            }\n            this._addedLabels = [];\n        }\n        super.init(scaleOptions);\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        const labels = this.getLabels();\n        index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n        return validIndex(index, labels.length - 1);\n    }\n    determineDataLimits() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this.getMinMax(true);\n        if (this.options.bounds === 'ticks') {\n            if (!minDefined) {\n                min = 0;\n            }\n            if (!maxDefined) {\n                max = this.getLabels().length - 1;\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const min = this.min;\n        const max = this.max;\n        const offset = this.options.offset;\n        const ticks = [];\n        let labels = this.getLabels();\n        labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n        this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n        this._startValue = this.min - (offset ? 0.5 : 0);\n        for(let value = min; value <= max; value++){\n            ticks.push({\n                value\n            });\n        }\n        return ticks;\n    }\n    getLabelForValue(value) {\n        return _getLabelForValue.call(this, value);\n    }\n configure() {\n        super.configure();\n        if (!this.isHorizontal()) {\n            this._reversePixels = !this._reversePixels;\n        }\n    }\n    getPixelForValue(value) {\n        if (typeof value !== 'number') {\n            value = this.parse(value);\n        }\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n    getValueForPixel(pixel) {\n        return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n    }\n    getBasePixel() {\n        return this.bottom;\n    }\n}\n\nfunction generateTicks$1(generationOptions, dataRange) {\n    const ticks = [];\n    const MIN_SPACING = 1e-14;\n    const { bounds , step , min , max , precision , count , maxTicks , maxDigits , includeBounds  } = generationOptions;\n    const unit = step || 1;\n    const maxSpaces = maxTicks - 1;\n    const { min: rmin , max: rmax  } = dataRange;\n    const minDefined = !isNullOrUndef(min);\n    const maxDefined = !isNullOrUndef(max);\n    const countDefined = !isNullOrUndef(count);\n    const minSpacing = (rmax - rmin) / (maxDigits + 1);\n    let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n    let factor, niceMin, niceMax, numSpaces;\n    if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n        return [\n            {\n                value: rmin\n            },\n            {\n                value: rmax\n            }\n        ];\n    }\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n    if (numSpaces > maxSpaces) {\n        spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n    }\n    if (!isNullOrUndef(precision)) {\n        factor = Math.pow(10, precision);\n        spacing = Math.ceil(spacing * factor) / factor;\n    }\n    if (bounds === 'ticks') {\n        niceMin = Math.floor(rmin / spacing) * spacing;\n        niceMax = Math.ceil(rmax / spacing) * spacing;\n    } else {\n        niceMin = rmin;\n        niceMax = rmax;\n    }\n    if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n        numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n        spacing = (max - min) / numSpaces;\n        niceMin = min;\n        niceMax = max;\n    } else if (countDefined) {\n        niceMin = minDefined ? min : niceMin;\n        niceMax = maxDefined ? max : niceMax;\n        numSpaces = count - 1;\n        spacing = (niceMax - niceMin) / numSpaces;\n    } else {\n        numSpaces = (niceMax - niceMin) / spacing;\n        if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n            numSpaces = Math.round(numSpaces);\n        } else {\n            numSpaces = Math.ceil(numSpaces);\n        }\n    }\n    const decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n    factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    let j = 0;\n    if (minDefined) {\n        if (includeBounds && niceMin !== min) {\n            ticks.push({\n                value: min\n            });\n            if (niceMin < min) {\n                j++;\n            }\n            if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n                j++;\n            }\n        } else if (niceMin < min) {\n            j++;\n        }\n    }\n    for(; j < numSpaces; ++j){\n        ticks.push({\n            value: Math.round((niceMin + j * spacing) * factor) / factor\n        });\n    }\n    if (maxDefined && includeBounds && niceMax !== max) {\n        if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n            ticks[ticks.length - 1].value = max;\n        } else {\n            ticks.push({\n                value: max\n            });\n        }\n    } else if (!maxDefined || niceMax === max) {\n        ticks.push({\n            value: niceMax\n        });\n    }\n    return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, { horizontal , minRotation  }) {\n    const rad = toRadians(minRotation);\n    const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n    const length = 0.75 * minSpacing * ('' + value).length;\n    return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n         this._endValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n            return null;\n        }\n        return +raw;\n    }\n    handleTickRangeOptions() {\n        const { beginAtZero  } = this.options;\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (beginAtZero) {\n            const minSign = sign(min);\n            const maxSign = sign(max);\n            if (minSign < 0 && maxSign < 0) {\n                setMax(0);\n            } else if (minSign > 0 && maxSign > 0) {\n                setMin(0);\n            }\n        }\n        if (min === max) {\n            let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n            setMax(max + offset);\n            if (!beginAtZero) {\n                setMin(min - offset);\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    getTickLimit() {\n        const tickOpts = this.options.ticks;\n        let { maxTicksLimit , stepSize  } = tickOpts;\n        let maxTicks;\n        if (stepSize) {\n            maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n            if (maxTicks > 1000) {\n                console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n                maxTicks = 1000;\n            }\n        } else {\n            maxTicks = this.computeTickLimit();\n            maxTicksLimit = maxTicksLimit || 11;\n        }\n        if (maxTicksLimit) {\n            maxTicks = Math.min(maxTicksLimit, maxTicks);\n        }\n        return maxTicks;\n    }\n computeTickLimit() {\n        return Number.POSITIVE_INFINITY;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        let maxTicks = this.getTickLimit();\n        maxTicks = Math.max(2, maxTicks);\n        const numericGeneratorOptions = {\n            maxTicks,\n            bounds: opts.bounds,\n            min: opts.min,\n            max: opts.max,\n            precision: tickOpts.precision,\n            step: tickOpts.stepSize,\n            count: tickOpts.count,\n            maxDigits: this._maxDigits(),\n            horizontal: this.isHorizontal(),\n            minRotation: tickOpts.minRotation || 0,\n            includeBounds: tickOpts.includeBounds !== false\n        };\n        const dataRange = this._range || this;\n        const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n configure() {\n        const ticks = this.ticks;\n        let start = this.min;\n        let end = this.max;\n        super.configure();\n        if (this.options.offset && ticks.length) {\n            const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n            start -= offset;\n            end += offset;\n        }\n        this._startValue = start;\n        this._endValue = end;\n        this._valueRange = end - start;\n    }\n    getLabelForValue(value) {\n        return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n}\n\nclass LinearScale extends LinearScaleBase {\n    static id = 'linear';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.numeric\n        }\n    };\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? min : 0;\n        this.max = isNumberFinite(max) ? max : 1;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        const horizontal = this.isHorizontal();\n        const length = horizontal ? this.width : this.height;\n        const minRotation = toRadians(this.options.ticks.minRotation);\n        const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n        const tickFont = this._resolveTickFontOptions(0);\n        return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n    }\n    getPixelForValue(value) {\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n    }\n}\n\nconst log10Floor = (v)=>Math.floor(log10(v));\nconst changeExponent = (v, m)=>Math.pow(10, log10Floor(v) + m);\nfunction isMajor(tickVal) {\n    const remain = tickVal / Math.pow(10, log10Floor(tickVal));\n    return remain === 1;\n}\nfunction steps(min, max, rangeExp) {\n    const rangeStep = Math.pow(10, rangeExp);\n    const start = Math.floor(min / rangeStep);\n    const end = Math.ceil(max / rangeStep);\n    return end - start;\n}\nfunction startExp(min, max) {\n    const range = max - min;\n    let rangeExp = log10Floor(range);\n    while(steps(min, max, rangeExp) > 10){\n        rangeExp++;\n    }\n    while(steps(min, max, rangeExp) < 10){\n        rangeExp--;\n    }\n    return Math.min(rangeExp, log10Floor(min));\n}\n function generateTicks(generationOptions, { min , max  }) {\n    min = finiteOrDefault(generationOptions.min, min);\n    const ticks = [];\n    const minExp = log10Floor(min);\n    let exp = startExp(min, max);\n    let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n    const stepSize = Math.pow(10, exp);\n    const base = minExp > exp ? Math.pow(10, minExp) : 0;\n    const start = Math.round((min - base) * precision) / precision;\n    const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n    let significand = Math.floor((start - offset) / Math.pow(10, exp));\n    let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n    while(value < max){\n        ticks.push({\n            value,\n            major: isMajor(value),\n            significand\n        });\n        if (significand >= 10) {\n            significand = significand < 15 ? 15 : 20;\n        } else {\n            significand++;\n        }\n        if (significand >= 20) {\n            exp++;\n            significand = 2;\n            precision = exp >= 0 ? 1 : precision;\n        }\n        value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n    }\n    const lastTick = finiteOrDefault(generationOptions.max, value);\n    ticks.push({\n        value: lastTick,\n        major: isMajor(lastTick),\n        significand\n    });\n    return ticks;\n}\nclass LogarithmicScale extends Scale {\n    static id = 'logarithmic';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.logarithmic,\n            major: {\n                enabled: true\n            }\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        const value = LinearScaleBase.prototype.parse.apply(this, [\n            raw,\n            index\n        ]);\n        if (value === 0) {\n            this._zero = true;\n            return undefined;\n        }\n        return isNumberFinite(value) && value > 0 ? value : null;\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n        this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n        if (this.options.beginAtZero) {\n            this._zero = true;\n        }\n        if (this._zero && this.min !== this._suggestedMin && !isNumberFinite(this._userMin)) {\n            this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n        }\n        this.handleTickRangeOptions();\n    }\n    handleTickRangeOptions() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let min = this.min;\n        let max = this.max;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (min === max) {\n            if (min <= 0) {\n                setMin(1);\n                setMax(10);\n            } else {\n                setMin(changeExponent(min, -1));\n                setMax(changeExponent(max, +1));\n            }\n        }\n        if (min <= 0) {\n            setMin(changeExponent(max, -1));\n        }\n        if (max <= 0) {\n            setMax(changeExponent(min, +1));\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const generationOptions = {\n            min: this._userMin,\n            max: this._userMax\n        };\n        const ticks = generateTicks(generationOptions, this);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n getLabelForValue(value) {\n        return value === undefined ? '0' : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n configure() {\n        const start = this.min;\n        super.configure();\n        this._startValue = log10(start);\n        this._valueRange = log10(this.max) - log10(start);\n    }\n    getPixelForValue(value) {\n        if (value === undefined || value === 0) {\n            value = this.min;\n        }\n        if (value === null || isNaN(value)) {\n            return NaN;\n        }\n        return this.getPixelForDecimal(value === this.min ? 0 : (log10(value) - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        const decimal = this.getDecimalForPixel(pixel);\n        return Math.pow(10, this._startValue + decimal * this._valueRange);\n    }\n}\n\nfunction getTickBackdropHeight(opts) {\n    const tickOpts = opts.ticks;\n    if (tickOpts.display && opts.display) {\n        const padding = toPadding(tickOpts.backdropPadding);\n        return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n    }\n    return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n    label = isArray(label) ? label : [\n        label\n    ];\n    return {\n        w: _longestText(ctx, font.string, label),\n        h: label.length * font.lineHeight\n    };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n        return {\n            start: pos - size / 2,\n            end: pos + size / 2\n        };\n    } else if (angle < min || angle > max) {\n        return {\n            start: pos - size,\n            end: pos\n        };\n    }\n    return {\n        start: pos,\n        end: pos + size\n    };\n}\n function fitWithPointLabels(scale) {\n    const orig = {\n        l: scale.left + scale._padding.left,\n        r: scale.right - scale._padding.right,\n        t: scale.top + scale._padding.top,\n        b: scale.bottom - scale._padding.bottom\n    };\n    const limits = Object.assign({}, orig);\n    const labelSizes = [];\n    const padding = [];\n    const valueCount = scale._pointLabels.length;\n    const pointLabelOpts = scale.options.pointLabels;\n    const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n    for(let i = 0; i < valueCount; i++){\n        const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n        padding[i] = opts.padding;\n        const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n        const plFont = toFont(opts.font);\n        const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n        labelSizes[i] = textSize;\n        const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n        const angle = Math.round(toDegrees(angleRadians));\n        const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n        const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n        updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n    }\n    scale.setCenterPoint(orig.l - limits.l, limits.r - orig.r, orig.t - limits.t, limits.b - orig.b);\n    scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n    const sin = Math.abs(Math.sin(angle));\n    const cos = Math.abs(Math.cos(angle));\n    let x = 0;\n    let y = 0;\n    if (hLimits.start < orig.l) {\n        x = (orig.l - hLimits.start) / sin;\n        limits.l = Math.min(limits.l, orig.l - x);\n    } else if (hLimits.end > orig.r) {\n        x = (hLimits.end - orig.r) / sin;\n        limits.r = Math.max(limits.r, orig.r + x);\n    }\n    if (vLimits.start < orig.t) {\n        y = (orig.t - vLimits.start) / cos;\n        limits.t = Math.min(limits.t, orig.t - y);\n    } else if (vLimits.end > orig.b) {\n        y = (vLimits.end - orig.b) / cos;\n        limits.b = Math.max(limits.b, orig.b + y);\n    }\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n    const items = [];\n    const valueCount = scale._pointLabels.length;\n    const opts = scale.options;\n    const extra = getTickBackdropHeight(opts) / 2;\n    const outerDistance = scale.drawingArea;\n    const additionalAngle = opts.pointLabels.centerPointLabels ? PI / valueCount : 0;\n    for(let i = 0; i < valueCount; i++){\n        const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i], additionalAngle);\n        const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n        const size = labelSizes[i];\n        const y = yForAngle(pointLabelPosition.y, size.h, angle);\n        const textAlign = getTextAlignForAngle(angle);\n        const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n        items.push({\n            x: pointLabelPosition.x,\n            y,\n            textAlign,\n            left,\n            top: y,\n            right: left + size.w,\n            bottom: y + size.h\n        });\n    }\n    return items;\n}\nfunction getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n        return 'center';\n    } else if (angle < 180) {\n        return 'left';\n    }\n    return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n    if (align === 'right') {\n        x -= w;\n    } else if (align === 'center') {\n        x -= w / 2;\n    }\n    return x;\n}\nfunction yForAngle(y, h, angle) {\n    if (angle === 90 || angle === 270) {\n        y -= h / 2;\n    } else if (angle > 270 || angle < 90) {\n        y -= h;\n    }\n    return y;\n}\nfunction drawPointLabels(scale, labelCount) {\n    const { ctx , options: { pointLabels  }  } = scale;\n    for(let i = labelCount - 1; i >= 0; i--){\n        const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n        const plFont = toFont(optsAtIndex.font);\n        const { x , y , textAlign , left , top , right , bottom  } = scale._pointLabelItems[i];\n        const { backdropColor  } = optsAtIndex;\n        if (!isNullOrUndef(backdropColor)) {\n            const borderRadius = toTRBLCorners(optsAtIndex.borderRadius);\n            const padding = toPadding(optsAtIndex.backdropPadding);\n            ctx.fillStyle = backdropColor;\n            const backdropLeft = left - padding.left;\n            const backdropTop = top - padding.top;\n            const backdropWidth = right - left + padding.width;\n            const backdropHeight = bottom - top + padding.height;\n            if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                ctx.beginPath();\n                addRoundedRectPath(ctx, {\n                    x: backdropLeft,\n                    y: backdropTop,\n                    w: backdropWidth,\n                    h: backdropHeight,\n                    radius: borderRadius\n                });\n                ctx.fill();\n            } else {\n                ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n            }\n        }\n        renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n            color: optsAtIndex.color,\n            textAlign: textAlign,\n            textBaseline: 'middle'\n        });\n    }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n    const { ctx  } = scale;\n    if (circular) {\n        ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n    } else {\n        let pointPosition = scale.getPointPosition(0, radius);\n        ctx.moveTo(pointPosition.x, pointPosition.y);\n        for(let i = 1; i < labelCount; i++){\n            pointPosition = scale.getPointPosition(i, radius);\n            ctx.lineTo(pointPosition.x, pointPosition.y);\n        }\n    }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n    const ctx = scale.ctx;\n    const circular = gridLineOpts.circular;\n    const { color , lineWidth  } = gridLineOpts;\n    if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n        return;\n    }\n    ctx.save();\n    ctx.strokeStyle = color;\n    ctx.lineWidth = lineWidth;\n    ctx.setLineDash(borderOpts.dash);\n    ctx.lineDashOffset = borderOpts.dashOffset;\n    ctx.beginPath();\n    pathRadiusLine(scale, radius, circular, labelCount);\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n    return createContext(parent, {\n        label,\n        index,\n        type: 'pointLabel'\n    });\n}\nclass RadialLinearScale extends LinearScaleBase {\n    static id = 'radialLinear';\n static defaults = {\n        display: true,\n        animate: true,\n        position: 'chartArea',\n        angleLines: {\n            display: true,\n            lineWidth: 1,\n            borderDash: [],\n            borderDashOffset: 0.0\n        },\n        grid: {\n            circular: false\n        },\n        startAngle: 0,\n        ticks: {\n            showLabelBackdrop: true,\n            callback: Ticks.formatters.numeric\n        },\n        pointLabels: {\n            backdropColor: undefined,\n            backdropPadding: 2,\n            display: true,\n            font: {\n                size: 10\n            },\n            callback (label) {\n                return label;\n            },\n            padding: 5,\n            centerPointLabels: false\n        }\n    };\n    static defaultRoutes = {\n        'angleLines.color': 'borderColor',\n        'pointLabels.color': 'color',\n        'ticks.color': 'color'\n    };\n    static descriptors = {\n        angleLines: {\n            _fallback: 'grid'\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.xCenter = undefined;\n         this.yCenter = undefined;\n         this.drawingArea = undefined;\n         this._pointLabels = [];\n        this._pointLabelItems = [];\n    }\n    setDimensions() {\n        const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n        const w = this.width = this.maxWidth - padding.width;\n        const h = this.height = this.maxHeight - padding.height;\n        this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n        this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n        this.drawingArea = Math.floor(Math.min(w, h) / 2);\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(false);\n        this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n        this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    }\n    generateTickLabels(ticks) {\n        LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n        this._pointLabels = this.getLabels().map((value, index)=>{\n            const label = callback(this.options.pointLabels.callback, [\n                value,\n                index\n            ], this);\n            return label || label === 0 ? label : '';\n        }).filter((v, i)=>this.chart.getDataVisibility(i));\n    }\n    fit() {\n        const opts = this.options;\n        if (opts.display && opts.pointLabels.display) {\n            fitWithPointLabels(this);\n        } else {\n            this.setCenterPoint(0, 0, 0, 0);\n        }\n    }\n    setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n        this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n        this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n        this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n    }\n    getIndexAngle(index) {\n        const angleMultiplier = TAU / (this._pointLabels.length || 1);\n        const startAngle = this.options.startAngle || 0;\n        return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n    }\n    getDistanceFromCenterForValue(value) {\n        if (isNullOrUndef(value)) {\n            return NaN;\n        }\n        const scalingFactor = this.drawingArea / (this.max - this.min);\n        if (this.options.reverse) {\n            return (this.max - value) * scalingFactor;\n        }\n        return (value - this.min) * scalingFactor;\n    }\n    getValueForDistanceFromCenter(distance) {\n        if (isNullOrUndef(distance)) {\n            return NaN;\n        }\n        const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n        return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n    }\n    getPointLabelContext(index) {\n        const pointLabels = this._pointLabels || [];\n        if (index >= 0 && index < pointLabels.length) {\n            const pointLabel = pointLabels[index];\n            return createPointLabelContext(this.getContext(), index, pointLabel);\n        }\n    }\n    getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n        const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n        return {\n            x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n            y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n            angle\n        };\n    }\n    getPointPositionForValue(index, value) {\n        return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    }\n    getBasePosition(index) {\n        return this.getPointPositionForValue(index || 0, this.getBaseValue());\n    }\n    getPointLabelPosition(index) {\n        const { left , top , right , bottom  } = this._pointLabelItems[index];\n        return {\n            left,\n            top,\n            right,\n            bottom\n        };\n    }\n drawBackground() {\n        const { backgroundColor , grid: { circular  }  } = this.options;\n        if (backgroundColor) {\n            const ctx = this.ctx;\n            ctx.save();\n            ctx.beginPath();\n            pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n            ctx.closePath();\n            ctx.fillStyle = backgroundColor;\n            ctx.fill();\n            ctx.restore();\n        }\n    }\n drawGrid() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const { angleLines , grid , border  } = opts;\n        const labelCount = this._pointLabels.length;\n        let i, offset, position;\n        if (opts.pointLabels.display) {\n            drawPointLabels(this, labelCount);\n        }\n        if (grid.display) {\n            this.ticks.forEach((tick, index)=>{\n                if (index !== 0) {\n                    offset = this.getDistanceFromCenterForValue(tick.value);\n                    const context = this.getContext(index);\n                    const optsAtIndex = grid.setContext(context);\n                    const optsAtIndexBorder = border.setContext(context);\n                    drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n                }\n            });\n        }\n        if (angleLines.display) {\n            ctx.save();\n            for(i = labelCount - 1; i >= 0; i--){\n                const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n                const { color , lineWidth  } = optsAtIndex;\n                if (!lineWidth || !color) {\n                    continue;\n                }\n                ctx.lineWidth = lineWidth;\n                ctx.strokeStyle = color;\n                ctx.setLineDash(optsAtIndex.borderDash);\n                ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n                offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n                position = this.getPointPosition(i, offset);\n                ctx.beginPath();\n                ctx.moveTo(this.xCenter, this.yCenter);\n                ctx.lineTo(position.x, position.y);\n                ctx.stroke();\n            }\n            ctx.restore();\n        }\n    }\n drawBorder() {}\n drawLabels() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        if (!tickOpts.display) {\n            return;\n        }\n        const startAngle = this.getIndexAngle(0);\n        let offset, width;\n        ctx.save();\n        ctx.translate(this.xCenter, this.yCenter);\n        ctx.rotate(startAngle);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        this.ticks.forEach((tick, index)=>{\n            if (index === 0 && !opts.reverse) {\n                return;\n            }\n            const optsAtIndex = tickOpts.setContext(this.getContext(index));\n            const tickFont = toFont(optsAtIndex.font);\n            offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n            if (optsAtIndex.showLabelBackdrop) {\n                ctx.font = tickFont.string;\n                width = ctx.measureText(tick.label).width;\n                ctx.fillStyle = optsAtIndex.backdropColor;\n                const padding = toPadding(optsAtIndex.backdropPadding);\n                ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n            }\n            renderText(ctx, tick.label, 0, -offset, tickFont, {\n                color: optsAtIndex.color\n            });\n        });\n        ctx.restore();\n    }\n drawTitle() {}\n}\n\nconst INTERVALS = {\n    millisecond: {\n        common: true,\n        size: 1,\n        steps: 1000\n    },\n    second: {\n        common: true,\n        size: 1000,\n        steps: 60\n    },\n    minute: {\n        common: true,\n        size: 60000,\n        steps: 60\n    },\n    hour: {\n        common: true,\n        size: 3600000,\n        steps: 24\n    },\n    day: {\n        common: true,\n        size: 86400000,\n        steps: 30\n    },\n    week: {\n        common: false,\n        size: 604800000,\n        steps: 4\n    },\n    month: {\n        common: true,\n        size: 2.628e9,\n        steps: 12\n    },\n    quarter: {\n        common: false,\n        size: 7.884e9,\n        steps: 4\n    },\n    year: {\n        common: true,\n        size: 3.154e10\n    }\n};\n const UNITS =  /* #__PURE__ */ Object.keys(INTERVALS);\n function sorter(a, b) {\n    return a - b;\n}\n function parse(scale, input) {\n    if (isNullOrUndef(input)) {\n        return null;\n    }\n    const adapter = scale._adapter;\n    const { parser , round , isoWeekday  } = scale._parseOpts;\n    let value = input;\n    if (typeof parser === 'function') {\n        value = parser(value);\n    }\n    if (!isNumberFinite(value)) {\n        value = typeof parser === 'string' ? adapter.parse(value,  (parser)) : adapter.parse(value);\n    }\n    if (value === null) {\n        return null;\n    }\n    if (round) {\n        value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n    }\n    return +value;\n}\n function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    const ilen = UNITS.length;\n    for(let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i){\n        const interval = INTERVALS[UNITS[i]];\n        const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n        if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n            return UNITS[i];\n        }\n    }\n    return UNITS[ilen - 1];\n}\n function determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n    for(let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--){\n        const unit = UNITS[i];\n        if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n            return unit;\n        }\n    }\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n function determineMajorUnit(unit) {\n    for(let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i){\n        if (INTERVALS[UNITS[i]].common) {\n            return UNITS[i];\n        }\n    }\n}\n function addTick(ticks, time, timestamps) {\n    if (!timestamps) {\n        ticks[time] = true;\n    } else if (timestamps.length) {\n        const { lo , hi  } = _lookup(timestamps, time);\n        const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n        ticks[timestamp] = true;\n    }\n}\n function setMajorTicks(scale, ticks, map, majorUnit) {\n    const adapter = scale._adapter;\n    const first = +adapter.startOf(ticks[0].value, majorUnit);\n    const last = ticks[ticks.length - 1].value;\n    let major, index;\n    for(major = first; major <= last; major = +adapter.add(major, 1, majorUnit)){\n        index = map[major];\n        if (index >= 0) {\n            ticks[index].major = true;\n        }\n    }\n    return ticks;\n}\n function ticksFromTimestamps(scale, values, majorUnit) {\n    const ticks = [];\n     const map = {};\n    const ilen = values.length;\n    let i, value;\n    for(i = 0; i < ilen; ++i){\n        value = values[i];\n        map[value] = i;\n        ticks.push({\n            value,\n            major: false\n        });\n    }\n    return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n    static id = 'time';\n static defaults = {\n bounds: 'data',\n        adapters: {},\n        time: {\n            parser: false,\n            unit: false,\n            round: false,\n            isoWeekday: false,\n            minUnit: 'millisecond',\n            displayFormats: {}\n        },\n        ticks: {\n source: 'auto',\n            callback: false,\n            major: {\n                enabled: false\n            }\n        }\n    };\n constructor(props){\n        super(props);\n         this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n         this._unit = 'day';\n         this._majorUnit = undefined;\n        this._offsets = {};\n        this._normalized = false;\n        this._parseOpts = undefined;\n    }\n    init(scaleOpts, opts = {}) {\n        const time = scaleOpts.time || (scaleOpts.time = {});\n         const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n        adapter.init(opts);\n        mergeIf(time.displayFormats, adapter.formats());\n        this._parseOpts = {\n            parser: time.parser,\n            round: time.round,\n            isoWeekday: time.isoWeekday\n        };\n        super.init(scaleOpts);\n        this._normalized = opts.normalized;\n    }\n parse(raw, index) {\n        if (raw === undefined) {\n            return null;\n        }\n        return parse(this, raw);\n    }\n    beforeLayout() {\n        super.beforeLayout();\n        this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n    }\n    determineDataLimits() {\n        const options = this.options;\n        const adapter = this._adapter;\n        const unit = options.time.unit || 'day';\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n function _applyBounds(bounds) {\n            if (!minDefined && !isNaN(bounds.min)) {\n                min = Math.min(min, bounds.min);\n            }\n            if (!maxDefined && !isNaN(bounds.max)) {\n                max = Math.max(max, bounds.max);\n            }\n        }\n        if (!minDefined || !maxDefined) {\n            _applyBounds(this._getLabelBounds());\n            if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n                _applyBounds(this.getMinMax(false));\n            }\n        }\n        min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n        max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n        this.min = Math.min(min, max - 1);\n        this.max = Math.max(min + 1, max);\n    }\n _getLabelBounds() {\n        const arr = this.getLabelTimestamps();\n        let min = Number.POSITIVE_INFINITY;\n        let max = Number.NEGATIVE_INFINITY;\n        if (arr.length) {\n            min = arr[0];\n            max = arr[arr.length - 1];\n        }\n        return {\n            min,\n            max\n        };\n    }\n buildTicks() {\n        const options = this.options;\n        const timeOpts = options.time;\n        const tickOpts = options.ticks;\n        const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n        if (options.bounds === 'ticks' && timestamps.length) {\n            this.min = this._userMin || timestamps[0];\n            this.max = this._userMax || timestamps[timestamps.length - 1];\n        }\n        const min = this.min;\n        const max = this.max;\n        const ticks = _filterBetween(timestamps, min, max);\n        this._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min)) : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n        this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined : determineMajorUnit(this._unit);\n        this.initOffsets(timestamps);\n        if (options.reverse) {\n            ticks.reverse();\n        }\n        return ticksFromTimestamps(this, ticks, this._majorUnit);\n    }\n    afterAutoSkip() {\n        if (this.options.offsetAfterAutoskip) {\n            this.initOffsets(this.ticks.map((tick)=>+tick.value));\n        }\n    }\n initOffsets(timestamps = []) {\n        let start = 0;\n        let end = 0;\n        let first, last;\n        if (this.options.offset && timestamps.length) {\n            first = this.getDecimalForValue(timestamps[0]);\n            if (timestamps.length === 1) {\n                start = 1 - first;\n            } else {\n                start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n            }\n            last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n            if (timestamps.length === 1) {\n                end = last;\n            } else {\n                end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n            }\n        }\n        const limit = timestamps.length < 3 ? 0.5 : 0.25;\n        start = _limitValue(start, 0, limit);\n        end = _limitValue(end, 0, limit);\n        this._offsets = {\n            start,\n            end,\n            factor: 1 / (start + 1 + end)\n        };\n    }\n _generate() {\n        const adapter = this._adapter;\n        const min = this.min;\n        const max = this.max;\n        const options = this.options;\n        const timeOpts = options.time;\n        const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n        const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n        const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n        const hasWeekday = isNumber(weekday) || weekday === true;\n        const ticks = {};\n        let first = min;\n        let time, count;\n        if (hasWeekday) {\n            first = +adapter.startOf(first, 'isoWeek', weekday);\n        }\n        first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n        if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n            throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n        }\n        const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n        for(time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++){\n            addTick(ticks, time, timestamps);\n        }\n        if (time === max || options.bounds === 'ticks' || count === 1) {\n            addTick(ticks, time, timestamps);\n        }\n        return Object.keys(ticks).sort((a, b)=>a - b).map((x)=>+x);\n    }\n getLabelForValue(value) {\n        const adapter = this._adapter;\n        const timeOpts = this.options.time;\n        if (timeOpts.tooltipFormat) {\n            return adapter.format(value, timeOpts.tooltipFormat);\n        }\n        return adapter.format(value, timeOpts.displayFormats.datetime);\n    }\n _tickFormatFunction(time, index, ticks, format) {\n        const options = this.options;\n        const formatter = options.ticks.callback;\n        if (formatter) {\n            return callback(formatter, [\n                time,\n                index,\n                ticks\n            ], this);\n        }\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const majorUnit = this._majorUnit;\n        const minorFormat = unit && formats[unit];\n        const majorFormat = majorUnit && formats[majorUnit];\n        const tick = ticks[index];\n        const major = majorUnit && majorFormat && tick && tick.major;\n        return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    }\n generateTickLabels(ticks) {\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            tick.label = this._tickFormatFunction(tick.value, i, ticks);\n        }\n    }\n getDecimalForValue(value) {\n        return value === null ? NaN : (value - this.min) / (this.max - this.min);\n    }\n getPixelForValue(value) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForValue(value);\n        return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return this.min + pos * (this.max - this.min);\n    }\n _getLabelSize(label) {\n        const ticksOpts = this.options.ticks;\n        const tickLabelWidth = this.ctx.measureText(label).width;\n        const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n        const cosRotation = Math.cos(angle);\n        const sinRotation = Math.sin(angle);\n        const tickFontSize = this._resolveTickFontOptions(0).size;\n        return {\n            w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n            h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n        };\n    }\n _getLabelCapacity(exampleTime) {\n        const timeOpts = this.options.time;\n        const displayFormats = timeOpts.displayFormats;\n        const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n        const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [\n            exampleTime\n        ], this._majorUnit), format);\n        const size = this._getLabelSize(exampleLabel);\n        const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n        return capacity > 0 ? capacity : 1;\n    }\n getDataTimestamps() {\n        let timestamps = this._cache.data || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const metas = this.getMatchingVisibleMetas();\n        if (this._normalized && metas.length) {\n            return this._cache.data = metas[0].controller.getAllParsedValues(this);\n        }\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n        }\n        return this._cache.data = this.normalize(timestamps);\n    }\n getLabelTimestamps() {\n        const timestamps = this._cache.labels || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const labels = this.getLabels();\n        for(i = 0, ilen = labels.length; i < ilen; ++i){\n            timestamps.push(parse(this, labels[i]));\n        }\n        return this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps);\n    }\n normalize(values) {\n        return _arrayUnique(values.sort(sorter));\n    }\n}\n\nfunction interpolate(table, val, reverse) {\n    let lo = 0;\n    let hi = table.length - 1;\n    let prevSource, nextSource, prevTarget, nextTarget;\n    if (reverse) {\n        if (val >= table[lo].pos && val <= table[hi].pos) {\n            ({ lo , hi  } = _lookupByKey(table, 'pos', val));\n        }\n        ({ pos: prevSource , time: prevTarget  } = table[lo]);\n        ({ pos: nextSource , time: nextTarget  } = table[hi]);\n    } else {\n        if (val >= table[lo].time && val <= table[hi].time) {\n            ({ lo , hi  } = _lookupByKey(table, 'time', val));\n        }\n        ({ time: prevSource , pos: prevTarget  } = table[lo]);\n        ({ time: nextSource , pos: nextTarget  } = table[hi]);\n    }\n    const span = nextSource - prevSource;\n    return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n    static id = 'timeseries';\n static defaults = TimeScale.defaults;\n constructor(props){\n        super(props);\n         this._table = [];\n         this._minPos = undefined;\n         this._tableRange = undefined;\n    }\n initOffsets() {\n        const timestamps = this._getTimestampsForTable();\n        const table = this._table = this.buildLookupTable(timestamps);\n        this._minPos = interpolate(table, this.min);\n        this._tableRange = interpolate(table, this.max) - this._minPos;\n        super.initOffsets(timestamps);\n    }\n buildLookupTable(timestamps) {\n        const { min , max  } = this;\n        const items = [];\n        const table = [];\n        let i, ilen, prev, curr, next;\n        for(i = 0, ilen = timestamps.length; i < ilen; ++i){\n            curr = timestamps[i];\n            if (curr >= min && curr <= max) {\n                items.push(curr);\n            }\n        }\n        if (items.length < 2) {\n            return [\n                {\n                    time: min,\n                    pos: 0\n                },\n                {\n                    time: max,\n                    pos: 1\n                }\n            ];\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            next = items[i + 1];\n            prev = items[i - 1];\n            curr = items[i];\n            if (Math.round((next + prev) / 2) !== curr) {\n                table.push({\n                    time: curr,\n                    pos: i / (ilen - 1)\n                });\n            }\n        }\n        return table;\n    }\n _getTimestampsForTable() {\n        let timestamps = this._cache.all || [];\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const data = this.getDataTimestamps();\n        const label = this.getLabelTimestamps();\n        if (data.length && label.length) {\n            timestamps = this.normalize(data.concat(label));\n        } else {\n            timestamps = data.length ? data : label;\n        }\n        timestamps = this._cache.all = timestamps;\n        return timestamps;\n    }\n getDecimalForValue(value) {\n        return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n    }\n}\nvar TimeSeriesScale$1 = TimeSeriesScale;\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale$1\n});\n\nconst registerables = [\n    controllers,\n    elements,\n    plugins,\n    scales, \n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart$1 as Chart, plugin_colors as Colors, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, TimeScale, TimeSeriesScale$1 as TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, elements, layouts, plugins, registerables, registry, scales };\n//# sourceMappingURL=chart.js.map\n","import {\n  displayTooltipTitle,\n  displayTooltipLabel,\n  displayTooltipLabelWithUnit,\n  displayTicksWithUnit,\n  showChartTooltip,\n} from '../utils/charty.js';\n\nimport {\n  Chart,\n  ArcElement,\n  BarElement,\n  BarController,\n  DoughnutController,\n  CategoryScale,\n  LinearScale,\n  LineController,\n  LineElement,\n  Legend,\n  Title,\n  Tooltip,\n} from 'chart.js';\n\nChart.register(\n  ArcElement,\n  BarElement,\n  BarController,\n  DoughnutController,\n  CategoryScale,\n  LinearScale,\n  LineController,\n  LineElement,\n  Legend,\n  Title,\n  Tooltip\n);\n\nexport default class Charty {\n  constructor(elem, APP) {\n    this.elem = elem;\n    this.canvas_arr = this.elem.querySelectorAll('.js-canvas');\n    this.chart_arr = [];\n    this.tableActionEnalbed = false;\n    this.tableRows;\n    this.balloonEnabled = false;\n    this.balloonElem;\n    this.balloonTextElem;\n    this.balloonData;\n  }\n\n  getJson(url) {\n    return new Promise((resolve, reject) => {\n      fetch(url)\n        .then((response) => {\n          return response.json();\n        })\n        .then((data) => resolve(data))\n        .catch((error) => reject(error));\n    });\n  }\n\n  getConfig(data) {\n    // const thisElem = this.elem;\n    const config = {\n      type: data.type,\n      data: data.data,\n      options: {\n        plugins: {\n          legend: {\n            display: false,\n          },\n          tooltip: {\n            callbacks: {\n              title: displayTooltipTitle,\n            },\n            enabled: false,\n            external: showChartTooltip,\n          },\n        },\n      },\n    };\n\n    if (data.options.scales) {\n      config.options.scales = data.options.scales;\n    }\n\n    if (data.options.aspectRatio) {\n      config.options.aspectRatio = data.options.aspectRatio;\n    }\n\n    if (data.options.cutout) {\n      config.options.cutout = data.options.cutout;\n    }\n\n    if (data.options.layout) {\n      config.options.layout = data.options.layout;\n    }\n\n    if (data.options.plugins) {\n      if (data.options.plugins.title) {\n        config.options.plugins.title = data.options.plugins.title;\n      }\n    }\n\n    if (data.unit) {\n      config.options.plugins.tooltip.callbacks.label =\n        displayTooltipLabelWithUnit;\n    } else {\n      config.options.plugins.tooltip.callbacks.label = displayTooltipLabel;\n    }\n\n    if (data.unit && data.type == 'bar') {\n      config.options.scales.y.ticks.callback = displayTicksWithUnit;\n    }\n\n    if (data.balloons || data.hasMatchedTable) {\n      config.options.onHover = this.mouseHandler;\n    }\n\n    // console.log(config);\n    return config;\n  }\n\n  createDonutTitle(dtitle, index) {\n    const title = dtitle.text || '';\n    const parent = this.canvas_arr[index].parentElement;\n    const titleElem = document.createElement('div');\n    titleElem.classList.add('charts-donut-title-container');\n    titleElem.innerHTML = `<div class=\"charts-donut-title\">${title}</div>`;\n    parent.insertBefore(titleElem, this.canvas_arr[index]);\n  }\n\n  enableBalloon(balloon_data) {\n    this.balloonData = balloon_data;\n    this.balloonElem = this.elem.querySelector('.js-charts-balloon');\n    this.balloonTextElem = this.elem.querySelector('.charts-balloon-text');\n\n    const closeBtn = this.elem.querySelector('.charts-balloon-close');\n\n    if (closeBtn) {\n      closeBtn.addEventListener('click', (e) => {\n        this.balloonElem.classList.remove('active');\n        this.balloonTextElem.innerHTML = '';\n      });\n    }\n\n    this.balloonEnabled = true;\n  }\n\n  enableTableAction() {\n    this.tableRows = this.elem.querySelectorAll('.charts-table tbody tr');\n\n    if (this.canvas_arr[0]) {\n      this.canvas_arr[0].addEventListener('mouseleave', () => {\n        this.updateTableRow(-1);\n      });\n    }\n\n    this.tableActionEnalbed = true;\n  }\n\n  updateBalloon(index) {\n    this.balloonElem.classList.add('active');\n\n    if (index !== -1) {\n      this.balloonTextElem.innerHTML = this.balloonData[index].text;\n    }\n  }\n\n  updateTableRow(index) {\n    this.tableRows.forEach((r, i) => {\n      r.classList[index == i ? 'add' : 'remove']('active');\n    });\n  }\n\n  mouseHandler = (evt) => {\n    let chartIndex = -1;\n\n    const points = this.chart_arr[0].getElementsAtEventForMode(\n      evt,\n      'nearest',\n      { intersect: true },\n      true\n    );\n\n    if (points.length) {\n      chartIndex = points[0].index;\n    }\n\n    if (this.balloonEnabled) this.updateBalloon(chartIndex);\n    if (this.tableActionEnalbed) this.updateTableRow(chartIndex);\n  };\n\n  createChart() {\n    const json_url = `/assets/json/charty/${this.elem.dataset.json}.json`;\n\n    this.getJson(json_url)\n      .then((data) => {\n        data.charts.forEach((chart, i) => {\n          const config = this.getConfig(chart);\n          const chart_obj = new Chart(this.canvas_arr[i], config);\n          this.chart_arr.push(chart_obj);\n\n          if (chart.type == 'doughnut') {\n            if (chart.options.plugins) {\n              if (chart.options.plugins.title) {\n                this.createDonutTitle(chart.options.plugins.title, i);\n              }\n            }\n          }\n\n          if (chart.balloons) {\n            this.enableBalloon(chart.balloons);\n          }\n\n          if (chart.hasMatchedTable) {\n            this.enableTableAction();\n          }\n        });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n\n  init() {\n    this.createChart();\n    console.log('charty');\n  }\n}\n","export default class Sticky {\n  constructor(elem) {\n    this.elem = elem;\n    // this.content = this.elem.querySelector('.js-sd-content');\n    this.slide1 = this.elem.querySelector('.slide1');\n    this.slide2 = this.elem.querySelector('.slide2');\n    this.slide3 = this.elem.querySelector('.slide3');\n    this.slide4 = this.elem.querySelector('.slide4');\n    this.orange = this.elem.querySelector('.sticky-bar-orange');\n    this.textArr = this.elem.querySelectorAll('.text');\n  }\n\n  stickyScrollHandler = () => {\n    // console.log('scroll');\n    // console.log(window.pageYOffset);\n\n    const slide1Top = this.slide1.offsetTop + this.elem.offsetTop;\n    const slide2Top = this.slide2.offsetTop + this.elem.offsetTop;\n    const slide3Top = this.slide3.offsetTop + this.elem.offsetTop;\n    const slide4Top = this.slide4.offsetTop + this.elem.offsetTop;\n    const contentBottom = slide1Top + this.elem.offsetHeight;\n    const windowBottom = window.pageYOffset + window.innerHeight;\n\n    let barWidth;\n    const menuWidth = window.innerWidth/4; \n\n    // console.log(slide1Top)\n\n    if(windowBottom >= slide1Top && windowBottom < slide2Top) {\n      // console.log(window.pageYOffset/this.slide1.offsetHeight*100)\n      barWidth = window.pageYOffset/this.slide1.offsetHeight;\n      this.orange.style.width = `${barWidth * menuWidth}px`;\n    } else if (windowBottom >= slide2Top && windowBottom < slide3Top) {\n      barWidth = (window.pageYOffset-this.slide2.offsetTop)/this.slide2.offsetHeight;\n      this.orange.style.width = `${menuWidth + barWidth * menuWidth}px`;\n    } else if (windowBottom >= slide3Top && windowBottom < slide4Top) {\n      barWidth = (window.pageYOffset-this.slide3.offsetTop)/this.slide3.offsetHeight;\n      this.orange.style.width = `${menuWidth*2 + barWidth * menuWidth}px`;\n    } else if (windowBottom >= slide4Top && windowBottom < contentBottom) {\n      barWidth = (window.pageYOffset-this.slide4.offsetTop)/this.slide4.offsetHeight;\n      this.orange.style.width = `${menuWidth*3 + barWidth * menuWidth}px`;\n    } else if (windowBottom > contentBottom) {\n      this.orange.style.width = `${window.innerWidth}px`;\n    }\n\n    // slide2 animation\n    if(windowBottom >= slide2Top && windowBottom < slide3Top+window.innerHeight) {\n      const pct = (window.pageYOffset-this.slide2.offsetTop)/(this.slide2.offsetHeight+window.innerHeight);\n      const targetDeg = 100*pct;\n      const targetArr= [];\n      this.textArr.forEach((t, i) => {\n        targetArr.push(240+targetDeg+i*30)\n      })\n\n      targetArr.reverse();\n\n      this.textArr.forEach((t, i)=>{\n        const leng = (window.pageYOffset-this.slide2.offsetTop)/this.slide2.offsetHeight;\n        t.style.transform = `rotateY(${targetArr[i]}deg) skewY(3deg)`; //300 - 410 //perspective(1000px) \n      })\n    }\n\n    // slide3 \n    if(window.pageYOffset >= slide3Top && window.pageYOffset < slide3Top+window.innerHeight) {\n      // console.log(this.elem.querySelectorAll('.mosaic1').length);34\n      const pct = (window.pageYOffset-this.slide3.offsetTop-window.innerHeight)/window.innerHeight;\n      console.log(window.pageYOffset, this.slide3.offsetTop);console.log(window.pageYOffset-this.slide3.offsetTop)\n      const t = pct * this.elem.querySelectorAll('.mosaic1').length;\n      this.elem.querySelectorAll('.mosaic1').forEach((e, i)=>{\n        if(i<t) {\n          e.style.opacity = '0.4';\n        } else {\n          e.style.opacity = '0';\n        }\n      })\n    }\n  }\n\n  setMosaics() {\n    const counts = Math.ceil(window.innerWidth/40);\n    const pattern = this.elem.querySelector('.slide3-pattern');\n    const img = this.elem.querySelector('.mosaic1');\n    for(let i=0; i<counts; i++) {\n      const copyImg = img.cloneNode(true);\n      const imgElem = pattern.appendChild(copyImg);\n      imgElem.style.left = `${(i+1) * 40}px`;\n    }\n  }\n\n  // width / 4\n  // slide1 height ==> total amount -- elem.innerHeight\n  // scroll amount ==> slide1 start ~ slide1 end -- window.pageYOffset + window.innerHeight\n  // slide1 start = this.slide1.offsetTop + this.elem.offsetTop \n\n\n  init() {\n    this.setMosaics();\n    window.addEventListener('scroll', this.stickyScrollHandler);\n  }\n}\n","import { initComponents } from \"./../utils/initComponents\";\nimport Header from \"./../components/Header\";\nimport Accordion from \"./../components/Accordion\";\nimport Charty from \"./../components/Charty\";\nimport Sticky from \"./../components/Sticky\";\n\nconst APP = {};\n\nAPP.helpers = {\n  initComponents: (elem) => initComponents(elem, APP),\n};\n\n/**\n * Page components\n * <elem data-component=\"<component name>\">\n */\nAPP.components = {\n  Header: (elem) => new Header(elem, APP).init(),\n  Accordion: (elem) => new Accordion(elem, APP).init(),\n  Charty: (elem) => new Charty(elem, APP).init(),\n  Sticky: (elem) => new Sticky(elem, APP).init(),\n};\n\nexport default APP;\n","export function initComponents(elem, APP) {\n  const jsComponents = [...elem.querySelectorAll(\"[data-component]\")];\n\n  // initialize components\n  const initComponent = (elem) => {\n    let componentList = elem.dataset.component;\n\n    if (!componentList) return;\n    componentList = componentList.split(\" \");\n\n    componentList.forEach((componentName) => {\n      if (APP.components[componentName]) {\n        const targetComponent = new APP.components[componentName](elem, APP);\n        if (targetComponent.init) {\n          targetComponent.init();\n        }\n      }\n    });\n  };\n\n  // get components\n  if (jsComponents) {\n    jsComponents.forEach((elem) => {\n      initComponent(elem);\n    });\n  }\n\n  // for body elem\n  initComponent(elem);\n}\n","import APP from \"./app/appObj\";\n\n/**\n * Get Document Ready\n */\ndocument.addEventListener(\"DOMContentLoaded\", (e) => {\n  APP.helpers.initComponents(document.body, APP);\n});\n"],"names":["t","n","Error","element","handler","this","key","e","options","Adapter","extend","defaults","adapter","callback","axis","horizontal","enabled","triggerPoint","group","Group","findOrCreate","name","context","Context","findOrCreateByElement","offsetAliases","offset","add","i","prototype","queueTrigger","trigger","apply","destroy","remove","disable","enable","refresh","next","previous","invokeAll","push","o","r","length","destroyAll","disableAll","enableAll","refreshAll","viewportHeight","window","innerHeight","document","documentElement","clientHeight","viewportWidth","clientWidth","adapters","continuous","outerHeight","innerWidth","outerWidth","Waypoint","setTimeout","didScroll","didResize","oldScroll","x","scrollLeft","y","scrollTop","waypoints","vertical","waypointContextKey","windowContext","createThrottledScrollHandler","createThrottledResizeHandler","onload","checkEmpty","isEmptyObject","off","handleResize","on","requestAnimationFrame","handleScroll","isTouch","newScroll","forward","backward","s","l","a","h","id","d","flushTriggers","contextOffset","left","contextScroll","contextDimension","offsetProp","top","p","f","c","w","g","parseFloat","indexOf","Math","ceil","floor","findByElement","mozRequestAnimationFrame","webkitRequestAnimationFrame","call","clearTriggerQueues","triggerQueues","up","down","right","sort","inArray","splice","first","last","defaultView","handlers","removeEventListener","split","ownerDocument","getBoundingClientRect","pageYOffset","clientTop","pageXOffset","clientLeft","addEventListener","getComputedStyle","parseInt","marginTop","marginBottom","marginLeft","marginRight","hasOwnProperty","Array","slice","arguments","Header","elem","APP","Accordion","tabs","querySelectorAll","panels","allowMultiple","index","tab","panel","panelHeight","querySelector","offsetHeight","classList","toggle","contains","style","height","setAttribute","forEach","togglePanel","targetHeight","setTabHandler","resizePanel","displayTooltipTitle","dataset","label","displayTooltipLabel","raw","displayTooltipLabelWithUnit","showChartTooltip","tooltipEl","getElementById","createElement","innerHTML","body","appendChild","tooltipModel","tooltip","opacity","yAlign","titleLines","title","bodyLines","map","bodyItem","lines","innerHtml","position","chart","canvas","caretX","caretY","pointerEvents","displayTicksWithUnit","value","ticks","noop","uid","isNullOrUndef","isArray","type","Object","toString","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toDimension","dimension","endsWith","fn","args","thisArg","each","loopable","reverse","len","keys","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","clone$1","source","target","create","klen","k","isValidKey","_merger","tval","sval","merge","sources","merger","current","mergeIf","_mergerIf","keyResolvers","v","resolveObjectKey","obj","resolver","parts","tmp","part","_splitKey","_getKeyResolver","_capitalize","str","charAt","toUpperCase","defined","isFunction","setsEqual","b","size","item","has","PI","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","almostEquals","epsilon","abs","niceNum","range","roundedRange","round","niceRange","pow","fraction","isNumber","isNaN","toRadians","degrees","_decimalPlaces","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","sqrt","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","min","max","_isBetween","_lookup","table","cmp","mid","hi","lo","_lookupByKey","ti","_rlookupByKey","arrayEvents","unlistenArrayEvents","array","listener","stub","_chartjs","listeners","requestAnimFrame","throttled","ticking","_toLeftRightCenter","align","_alignStartEnd","atEdge","elasticIn","sin","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","m","easeInOutBounce","effects$1","lim","p2b","n2b","b2n","n2p","map$1","A","B","C","D","E","F","hex","h1","h2","eq","HUE_RE","hsl2rgbn","hsv2rgbn","hwb2rgbn","rgb","rgb2hsl","hueValue","calln","hsl2rgb","hue","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","names","RGB_RE","to","from","modHSL","ratio","clone","proto","assign","fromObject","input","functionParse","exec","rgbParse","p1","p2","hwb2rgb","hsv2rgb","hueParse","Color","constructor","ret","unpacked","tkeys","j","ok","nk","replace","unpack","transparent","toLowerCase","nameParse","_rgb","_valid","valid","rgbString","undefined","hexString","isShort","alpha","hslString","mix","color","weight","c1","c2","w2","w1","interpolate","rgb1","rgb2","clearer","greyscale","val","opaquer","negate","lighten","darken","saturate","desaturate","rotate","deg","index_esm","isPatternOrGradient","getHoverColor","numbers","colors","intlCache","Map","formatNumber","num","locale","cacheKey","JSON","stringify","formatter","get","Intl","NumberFormat","set","getNumberFormat","format","formatters","values","numeric","tickValue","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","remain","significand","includes","Ticks","overrides","descriptors","getScope$1","node","root","scope","Defaults","_descriptors","_appliers","animation","backgroundColor","borderColor","datasets","devicePixelRatio","platform","getDevicePixelRatio","elements","events","font","family","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","includeInvisible","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scale","scales","showLine","drawActiveElementsOnTop","describe","override","route","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","enumerable","local","appliers","_scriptable","startsWith","_indexable","_fallback","delay","duration","easing","loop","properties","active","resize","show","animations","visible","hide","autoPadding","padding","bottom","display","beginAtZero","bounds","grace","grid","lineWidth","drawOnChartArea","drawTicks","tickLength","tickWidth","_ctx","tickColor","border","dash","dashOffset","width","text","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","minor","major","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","_measureText","data","gc","longest","string","textWidth","measureText","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","clearCanvas","getContext","save","resetTransform","clearRect","restore","drawPoint","drawPointLegend","xOffset","yOffset","cornerRadius","xOffsetW","yOffsetW","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","ellipse","arc","closePath","moveTo","lineTo","SQRT1_2","rect","fill","borderWidth","stroke","_isPointInArea","point","area","margin","clipArea","clip","unclipArea","_steppedLineTo","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","renderText","opts","strokeWidth","strokeColor","line","translation","fillStyle","textAlign","textBaseline","setRenderOpts","backdrop","drawBackdrop","strokeStyle","strokeText","maxWidth","fillText","decorateText","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","decorationWidth","oldColor","fillRect","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","LINE_HEIGHT","FONT_STYLE","toLineHeight","matches","match","_readValueToProps","props","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","console","warn","toFontString","resolve","inputs","info","cacheable","createContext","parentContext","_createResolver","scopes","prefixes","rootScopes","getTarget","_resolve","cache","Symbol","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","Proxy","deleteProperty","_keys","_cached","proxy","prefix","readKey","needsSubResolver","createSubResolver","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getPrototypeOf","getKeysFromAllScopes","ownKeys","storage","_storage","_attachContext","subProxy","descriptorDefaults","_proxy","_context","_subProxy","_stack","Set","setContext","receiver","isScriptable","join","delete","_resolveScriptable","isIndexable","arr","filter","_resolveArray","_resolveWithContext","allKeys","configurable","scriptable","indexable","_allKeys","resolveFallback","getScope","parent","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","EPSILON","getPoint","points","skip","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","d01","d12","s01","s12","fa","fb","capControlPoint","pt","_updateBezierControlPoints","controlPoints","spanGaps","cubicInterpolationMode","valueAxis","pointsLen","deltaK","mK","pointBefore","pointCurrent","pointAfter","slopeDelta","alphaK","betaK","tauK","squaredMagnitude","monotoneAdjust","iPixel","vPixel","monotoneCompute","splineCurveMonotone","prev","tension","capBezierPoints","inArea","inAreaPrev","inAreaNext","_isDomSupported","_getParentNode","domNode","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","positions","getPositionedStyle","styles","suffix","result","pos","getRelativePosition","event","borderBox","boxSizing","paddings","borders","box","touches","offsetX","offsetY","shadowRoot","useOffsetPos","clientX","clientY","getCanvasPosition","round1","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","readUsedSize","property","el","getPropertyValue","getStyle","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","getRtlAdapter","rtl","rectX","setWidth","xPlus","leftForLtr","itemWidth","getRightToLeftAdapter","_itemWidth","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","propertyFn","between","compare","normalize","normalizeSegment","count","_boundSegment","segment","startBound","endBound","getSegment","prevValue","inside","subStart","readStyle","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","styleChanged","prevStyle","Animator","_request","_charts","_running","_lastDate","_notify","anims","date","callbacks","numSteps","initial","currentStep","_refresh","_update","Date","now","remaining","running","items","draw","_active","_total","tick","pop","_getAnims","charts","complete","progress","listen","cb","reduce","acc","cur","_duration","stop","cancel","animator","interpolators","boolean","factor","c0","number","Animation","cfg","currentValue","_fn","_easing","_start","_loop","_target","_prop","_from","_to","_promises","update","elapsed","wait","promises","Promise","res","rej","resolved","method","Animations","config","_chart","_properties","configure","animationOptions","animatedProps","getOwnPropertyNames","option","_animateOptions","newOptions","$shared","$animations","resolveTargetOptions","_createAnimations","anim","all","awaitAll","then","scaleClip","allowedOverflow","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","applyStack","stack","dsIndex","singleMode","otherValue","isStacked","meta","stacked","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","parsed","_cachedMeta","_stacks","iScale","iAxis","vAxis","indexScale","valueScale","getStackKey","_top","_bottom","getFirstScaleId","shift","clearStacks","_parsed","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","static","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","dataElementType","initialize","linkScales","_stacked","addElements","isPluginEnabled","updateIndex","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","xScale","getScaleForId","yScale","rScale","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","_dataCheck","adata","convertObjectDataToArray","isExtensible","defineProperty","base","object","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","parse","sorted","_sorted","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","parsedValue","NaN","getMinMax","canStack","otherScale","hidden","createStack","NEGATIVE_INFINITY","otherMin","otherMax","minDefined","maxDefined","getUserBounds","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","getLabelForValue","_clip","disabled","toClip","defaultClip","chartArea","resolveDatasetElementOptions","resolveDataElementOptions","dataIndex","createDataContext","createDatasetContext","_resolveElementOptions","elementType","sharing","datasetElementScopeKeys","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_sync","_dataChanges","_onDataPush","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","computeMinSampleSize","_cache","$bar","visibleMetas","concat","_arrayUnique","getAllScaleValues","curr","_length","updateMinAndPrev","getPixelForValue","getPixelForTick","parseValue","entry","startValue","endValue","barStart","barEnd","_custom","parseFloatBar","parseArrayOrPrimitive","isFloatBar","custom","setBorderSkipped","edge","borderSkipped","borderProps","enableBorderRadius","parseEdge","orig","v2","startEnd","setInflateAmount","inflateAmount","binarySearch","metaset","lookupMethod","_reversePixels","getRange","evaluateInteractionItems","getSortedVisibleDatasetMetas","getIntersectItems","useFinalPosition","isPointInArea","inRange","getNearestItems","distanceMetric","useX","useY","deltaX","deltaY","getDistanceMetricForAxis","minDistance","center","getCenterPoint","getNearestCartesianItems","startAngle","endAngle","getProps","getNearestRadialItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","params","layout","getPadding","newWidth","newHeight","widthChanged","heightChanged","same","other","getMargins","marginForPositions","fitBoxes","boxes","refitBoxes","refit","changed","fullSize","setBoxDims","placeBoxes","userPadding","placed","stackWeight","height1","width1","layouts","addBox","_layers","z","removeBox","layoutItem","minPadding","availableWidth","availableHeight","layoutBoxes","isHorizontal","wrapBoxes","wrap","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","buildLayoutBoxes","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","total","vBoxMaxWidth","hBoxMaxHeight","buildStacks","setLayoutDims","updatePos","change","handleMaxPadding","BasePlatform","acquireContext","aspectRatio","releaseContext","getMaximumSize","isAttached","updateConfig","BasicPlatform","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","removeListener","nodeListContains","nodeList","createAttachObserver","observer","MutationObserver","entries","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","createResizeObserver","container","ResizeObserver","contentRect","listenDevicePixelRatioChanges","releaseObserver","disconnect","unlistenDevicePixelRatioChanges","createProxyAndListen","native","fromNativeEvent","addListener","DomPlatform","renderHeight","getAttribute","renderWidth","displayWidth","displayHeight","initCanvas","removeAttribute","proxies","$proxies","attach","detach","bbWidth","bbHeight","margins","maxHeight","containerSize","containerStyle","containerBorder","containerPadding","getContainerSize","isConnected","Element","tooltipPosition","hasValue","final","newTicks","spacing","majorStart","majorEnd","offsetFromEdge","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","_startPixel","_endPixel","lineValue","getTickMarkLength","getTitleHeight","titleAlign","reverseAlign","Scale","super","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_maxLength","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","init","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","beforeUpdate","tickOpts","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","minmax","keepZero","_addGrace","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","determinedMaxTicks","_tickSize","maxScale","maxChart","determineMaxTicks","ticksLimit","maxTicksLimit","majorIndices","getMajorIndices","numMajorIndices","skipMajors","evenMajorSpacing","diff","getEvenSpacing","factors","_factorize","calculateSpacing","avgMajorSpacing","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","startPixel","endPixel","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","minSize","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","caches","widths","heights","jlen","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","gcLen","garbageCollect","valueAt","idx","getValueForPixel","getPixelForDecimal","decimal","getDecimalForPixel","getBasePixel","getBaseValue","createTickContext","optionTicks","rot","_computeGridLineItems","ticksLength","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","positionAxisID","positionAxisID1","value1","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","tickBorderDash","tickBorderDashOffset","_computeLabelItems","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","ret1","halfCount","tickTextAlign","labelPadding","_computeLabelArea","drawBackground","getLineWidthForValue","findIndex","drawGrid","drawLine","setLineDash","lineDashOffset","drawBorder","lastLineWidth","drawLabels","drawTitle","titleX","titleY","titleArgs","tz","gz","bz","axisID","_maxDigits","fontSize","TypedRegistry","isForType","isPrototypeOf","register","parentScope","isIChartComponent","itemDefaults","defaultRoutes","routes","propertyParts","sourceName","sourceScope","routeDefaults","registerDefaults","unregister","Registry","controllers","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getElement","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","registry","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","localIds","i1","allPlugins","getOpts","pluginOpts","createDescriptors","previousDescriptors","some","pluginScopeKeys","getIndexAxis","datasetDefaults","determineAxis","scaleOptions","initOptions","chartDefaults","configScales","chartIndexAxis","scaleConf","error","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","defaultID","getAxisFromDefaultScaleID","mergeScaleConfig","initData","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","initConfig","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","subPrefixes","getResolver","hasFunction","needContext","resolverCache","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","instances","getChart","moveNumericKeys","intKey","Chart","invalidatePlugins","userConfig","initialCanvas","existingChart","OffscreenCanvas","_detectPlatform","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","timeout","clearTimeout","debounce","resizeDelay","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","_dataset","buildOrUpdateControllers","newControllers","order","isDatasetVisible","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","ilen1","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getDatasetArea","getElementsAtEventForMode","getVisibleDatasetCount","setDatasetVisibility","toggleDataVisibility","getDataVisibility","_updateVisibility","_stop","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","getActiveElements","setActiveElements","activeElements","lastActive","pluginId","replay","hoverOptions","deactivated","activated","inChartArea","eventFilter","_handleEvent","_getActiveElements","isClick","_isClickEvent","lastEvent","determineLastEvent","Chart$1","rThetaToXY","theta","pathArc","circular","pixelMargin","innerRadius","innerR","outerRadius","spacingOffset","avNogSpacingRadius","angleOffset","outerStart","outerEnd","innerStart","innerEnd","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","parseBorderRadius$1","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","pCenter1","innerMidAdjustedAngle","pCenter2","p8","pCenter3","outerStartX","outerStartY","outerEndX","outerEndY","setStyle","lineCap","lineJoin","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","stepped","getLineMethod","fastPathSegment","prevX","minY","maxY","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","_decimated","usePath2D","Path2D","getBarBounds","bar","half","skipOrLimit","skipX","skipY","addNormalRectPath","inflateRect","amount","refRect","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","generateLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","legendItem","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","legendItemText","calculateItemWidth","fontLineHeight","calculateLegendItemHeight","calculateItemHeight","calculateItemSize","adjustHitBoxes","rtlHelper","hitbox","hitbox1","_draw","defaultColor","halfFontSize","cursor","textDirection","fontColor","lineDash","drawOptions","SQRT2","centerX","yBoxTop","xBoxLeft","drawLegendBox","_textX","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","onLeave","isListened","hoveredItem","sameItem","plugin_legend","_element","_args","legend","afterEvent","ci","useBorderRadius","Title","_padding","textSize","_drawArgs","fontOpts","plugin_title","titleBlock","createTitle","WeakMap","positioners","average","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","formattedValue","getTooltipSize","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineXAlign","chartWidth","xAlign","caret","caretSize","caretPadding","doesNotFitWithAlign","determineAlignment","determineYAlign","getBackgroundPoint","alignment","paddingAndSize","alignX","alignY","getAlignedX","getBeforeAfterBodyLines","overrideCallbacks","defaultCallbacks","beforeTitle","tooltipItems","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","centerY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","afterInit","afterDraw","_getLabelForValue","relativeLabelSize","minSpacing","LinearScaleBase","_startValue","_endValue","_valueRange","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","maxTicks","stepSize","computeTickLimit","generationOptions","dataRange","precision","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","niceMin","niceMax","numSpaces","rounded","almostWhole","decimalPlaces","generateTicks$1","_setMinAndMaxByKey","LinearScale","borderAlign","circumference","fullCircles","chartX","chartY","rAdjust","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","drawArc","inner","angleMargin","clipArc","outer","maxW","maxH","parseBorderWidth","maxR","enableBorder","parseBorderRadius","boundingRects","addRectPath","mouseX","mouseY","inXRange","inYRange","categoryPercentage","barPercentage","grouped","_index_","_value_","iAxisKey","vAxisKey","bars","ruler","_getRuler","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","_getStacks","skipNull","_getStackCount","_getStackIndex","pixels","barThickness","stackCount","baseValue","minBarLength","actualBase","floating","barSign","halfGrid","maxBarThickness","Infinity","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","rects","animateRotate","animateScale","cutout","getter","_getRotation","_getCircumference","_getRotationExtents","arcs","getMaxBorderWidth","getMaxOffset","maxSize","chartWeight","_getRingWeight","ratioX","ratioY","startX","startY","endX","endY","calcMax","calcMin","maxX","minX","getRatioAndOffset","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","calculateTotal","_getRingWeightOffset","_circumference","calculateCircumference","animationOpts","metaData","hoverBorderWidth","hoverOffset","ringWeightOffset","_addedLabels","added","addedLabels","unshift","addIfString","lastIndexOf","findOrAddLabel","animationsDisabled","pointCount","_getStartAndCountOfVisiblePoints","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","_scaleRangesChanged","_datasetIndex","animated","maxGapLength","directUpdate","pointsCount","prevParsed","nullData","lastPoint","updateControlPoints","_fullLoop","_path","_points","_segments","_pointsUpdated","segments","segmentOptions","findStartAndEnd","chartContext","baseStyle","addStyle","st","dir","p0","p0DataIndex","p1DataIndex","doSplitByStyles","splitByStyles","solidSegments","_computeSegments","sub","_boundSegments","_interpolate","_getInterpolationMethod","interpolated","segmentMethod","path","strokePathWithCache","strokePathDirect","Charty","evt","chartIndex","chart_arr","balloonEnabled","updateBalloon","tableActionEnalbed","updateTableRow","canvas_arr","tableRows","balloonElem","balloonTextElem","balloonData","url","reject","fetch","response","json","balloons","hasMatchedTable","mouseHandler","dtitle","parentElement","titleElem","insertBefore","balloon_data","closeBtn","json_url","getJson","getConfig","chart_obj","createDonutTitle","enableBalloon","enableTableAction","log","createChart","Sticky","barWidth","slide1Top","slide1","offsetTop","slide2Top","slide2","slide3Top","slide3","slide4Top","slide4","contentBottom","windowBottom","menuWidth","orange","targetDeg","targetArr","textArr","transform","pct","counts","pattern","img","copyImg","cloneNode","setMosaics","stickyScrollHandler","helpers","initComponents","jsComponents","initComponent","componentList","componentName","components","targetComponent"],"sourceRoot":""}