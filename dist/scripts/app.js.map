{"version":3,"file":"app.js","mappings":"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","sources":["webpack://component-library/./app/scripts/vendors/noframework.waypoints.min.js","webpack://component-library/./app/scripts/components/header.js","webpack://component-library/./app/scripts/components/accordion.js","webpack://component-library/./app/scripts/components/sticky.js","webpack://component-library/./node_modules/chart.js/dist/chunks/helpers.segment.js","webpack://component-library/./node_modules/chart.js/dist/chart.js","webpack://component-library/./app/scripts/components/LineChart.js","webpack://component-library/./app/scripts/app/appObj.js","webpack://component-library/./app/scripts/utils/initComponents.js","webpack://component-library/./app/scripts/app.js"],"sourcesContent":["/*!\nWaypoints - 4.0.1\nCopyright © 2011-2016 Caleb Troughton\nLicensed under the MIT license.\nhttps://github.com/imakewebthings/waypoints/blob/master/licenses.txt\n*/\n!function(){\"use strict\";function t(n){if(!n)throw new Error(\"No options passed to Waypoint constructor\");if(!n.element)throw new Error(\"No element option passed to Waypoint constructor\");if(!n.handler)throw new Error(\"No handler option passed to Waypoint constructor\");this.key=\"waypoint-\"+e,this.options=t.Adapter.extend({},t.defaults,n),this.element=this.options.element,this.adapter=new t.Adapter(this.element),this.callback=n.handler,this.axis=this.options.horizontal?\"horizontal\":\"vertical\",this.enabled=this.options.enabled,this.triggerPoint=null,this.group=t.Group.findOrCreate({name:this.options.group,axis:this.axis}),this.context=t.Context.findOrCreateByElement(this.options.context),t.offsetAliases[this.options.offset]&&(this.options.offset=t.offsetAliases[this.options.offset]),this.group.add(this),this.context.add(this),i[this.key]=this,e+=1}var e=0,i={};t.prototype.queueTrigger=function(t){this.group.queueTrigger(this,t)},t.prototype.trigger=function(t){this.enabled&&this.callback&&this.callback.apply(this,t)},t.prototype.destroy=function(){this.context.remove(this),this.group.remove(this),delete i[this.key]},t.prototype.disable=function(){return this.enabled=!1,this},t.prototype.enable=function(){return this.context.refresh(),this.enabled=!0,this},t.prototype.next=function(){return this.group.next(this)},t.prototype.previous=function(){return this.group.previous(this)},t.invokeAll=function(t){var e=[];for(var n in i)e.push(i[n]);for(var o=0,r=e.length;r>o;o++)e[o][t]()},t.destroyAll=function(){t.invokeAll(\"destroy\")},t.disableAll=function(){t.invokeAll(\"disable\")},t.enableAll=function(){t.Context.refreshAll();for(var e in i)i[e].enabled=!0;return this},t.refreshAll=function(){t.Context.refreshAll()},t.viewportHeight=function(){return window.innerHeight||document.documentElement.clientHeight},t.viewportWidth=function(){return document.documentElement.clientWidth},t.adapters=[],t.defaults={context:window,continuous:!0,enabled:!0,group:\"default\",horizontal:!1,offset:0},t.offsetAliases={\"bottom-in-view\":function(){return this.context.innerHeight()-this.adapter.outerHeight()},\"right-in-view\":function(){return this.context.innerWidth()-this.adapter.outerWidth()}},window.Waypoint=t}(),function(){\"use strict\";function t(t){window.setTimeout(t,1e3/60)}function e(t){this.element=t,this.Adapter=o.Adapter,this.adapter=new this.Adapter(t),this.key=\"waypoint-context-\"+i,this.didScroll=!1,this.didResize=!1,this.oldScroll={x:this.adapter.scrollLeft(),y:this.adapter.scrollTop()},this.waypoints={vertical:{},horizontal:{}},t.waypointContextKey=this.key,n[t.waypointContextKey]=this,i+=1,o.windowContext||(o.windowContext=!0,o.windowContext=new e(window)),this.createThrottledScrollHandler(),this.createThrottledResizeHandler()}var i=0,n={},o=window.Waypoint,r=window.onload;e.prototype.add=function(t){var e=t.options.horizontal?\"horizontal\":\"vertical\";this.waypoints[e][t.key]=t,this.refresh()},e.prototype.checkEmpty=function(){var t=this.Adapter.isEmptyObject(this.waypoints.horizontal),e=this.Adapter.isEmptyObject(this.waypoints.vertical),i=this.element==this.element.window;t&&e&&!i&&(this.adapter.off(\".waypoints\"),delete n[this.key])},e.prototype.createThrottledResizeHandler=function(){function t(){e.handleResize(),e.didResize=!1}var e=this;this.adapter.on(\"resize.waypoints\",function(){e.didResize||(e.didResize=!0,o.requestAnimationFrame(t))})},e.prototype.createThrottledScrollHandler=function(){function t(){e.handleScroll(),e.didScroll=!1}var e=this;this.adapter.on(\"scroll.waypoints\",function(){(!e.didScroll||o.isTouch)&&(e.didScroll=!0,o.requestAnimationFrame(t))})},e.prototype.handleResize=function(){o.Context.refreshAll()},e.prototype.handleScroll=function(){var t={},e={horizontal:{newScroll:this.adapter.scrollLeft(),oldScroll:this.oldScroll.x,forward:\"right\",backward:\"left\"},vertical:{newScroll:this.adapter.scrollTop(),oldScroll:this.oldScroll.y,forward:\"down\",backward:\"up\"}};for(var i in e){var n=e[i],o=n.newScroll>n.oldScroll,r=o?n.forward:n.backward;for(var s in this.waypoints[i]){var l=this.waypoints[i][s];if(null!==l.triggerPoint){var a=n.oldScroll<l.triggerPoint,h=n.newScroll>=l.triggerPoint,p=a&&h,u=!a&&!h;(p||u)&&(l.queueTrigger(r),t[l.group.id]=l.group)}}}for(var d in t)t[d].flushTriggers();this.oldScroll={x:e.horizontal.newScroll,y:e.vertical.newScroll}},e.prototype.innerHeight=function(){return this.element==this.element.window?o.viewportHeight():this.adapter.innerHeight()},e.prototype.remove=function(t){delete this.waypoints[t.axis][t.key],this.checkEmpty()},e.prototype.innerWidth=function(){return this.element==this.element.window?o.viewportWidth():this.adapter.innerWidth()},e.prototype.destroy=function(){var t=[];for(var e in this.waypoints)for(var i in this.waypoints[e])t.push(this.waypoints[e][i]);for(var n=0,o=t.length;o>n;n++)t[n].destroy()},e.prototype.refresh=function(){var t,e=this.element==this.element.window,i=e?void 0:this.adapter.offset(),n={};this.handleScroll(),t={horizontal:{contextOffset:e?0:i.left,contextScroll:e?0:this.oldScroll.x,contextDimension:this.innerWidth(),oldScroll:this.oldScroll.x,forward:\"right\",backward:\"left\",offsetProp:\"left\"},vertical:{contextOffset:e?0:i.top,contextScroll:e?0:this.oldScroll.y,contextDimension:this.innerHeight(),oldScroll:this.oldScroll.y,forward:\"down\",backward:\"up\",offsetProp:\"top\"}};for(var r in t){var s=t[r];for(var l in this.waypoints[r]){var a,h,p,u,d,f=this.waypoints[r][l],c=f.options.offset,w=f.triggerPoint,y=0,g=null==w;f.element!==f.element.window&&(y=f.adapter.offset()[s.offsetProp]),\"function\"==typeof c?c=c.apply(f):\"string\"==typeof c&&(c=parseFloat(c),f.options.offset.indexOf(\"%\")>-1&&(c=Math.ceil(s.contextDimension*c/100))),a=s.contextScroll-s.contextOffset,f.triggerPoint=Math.floor(y+a-c),h=w<s.oldScroll,p=f.triggerPoint>=s.oldScroll,u=h&&p,d=!h&&!p,!g&&u?(f.queueTrigger(s.backward),n[f.group.id]=f.group):!g&&d?(f.queueTrigger(s.forward),n[f.group.id]=f.group):g&&s.oldScroll>=f.triggerPoint&&(f.queueTrigger(s.forward),n[f.group.id]=f.group)}}return o.requestAnimationFrame(function(){for(var t in n)n[t].flushTriggers()}),this},e.findOrCreateByElement=function(t){return e.findByElement(t)||new e(t)},e.refreshAll=function(){for(var t in n)n[t].refresh()},e.findByElement=function(t){return n[t.waypointContextKey]},window.onload=function(){r&&r(),e.refreshAll()},o.requestAnimationFrame=function(e){var i=window.requestAnimationFrame||window.mozRequestAnimationFrame||window.webkitRequestAnimationFrame||t;i.call(window,e)},o.Context=e}(),function(){\"use strict\";function t(t,e){return t.triggerPoint-e.triggerPoint}function e(t,e){return e.triggerPoint-t.triggerPoint}function i(t){this.name=t.name,this.axis=t.axis,this.id=this.name+\"-\"+this.axis,this.waypoints=[],this.clearTriggerQueues(),n[this.axis][this.name]=this}var n={vertical:{},horizontal:{}},o=window.Waypoint;i.prototype.add=function(t){this.waypoints.push(t)},i.prototype.clearTriggerQueues=function(){this.triggerQueues={up:[],down:[],left:[],right:[]}},i.prototype.flushTriggers=function(){for(var i in this.triggerQueues){var n=this.triggerQueues[i],o=\"up\"===i||\"left\"===i;n.sort(o?e:t);for(var r=0,s=n.length;s>r;r+=1){var l=n[r];(l.options.continuous||r===n.length-1)&&l.trigger([i])}}this.clearTriggerQueues()},i.prototype.next=function(e){this.waypoints.sort(t);var i=o.Adapter.inArray(e,this.waypoints),n=i===this.waypoints.length-1;return n?null:this.waypoints[i+1]},i.prototype.previous=function(e){this.waypoints.sort(t);var i=o.Adapter.inArray(e,this.waypoints);return i?this.waypoints[i-1]:null},i.prototype.queueTrigger=function(t,e){this.triggerQueues[e].push(t)},i.prototype.remove=function(t){var e=o.Adapter.inArray(t,this.waypoints);e>-1&&this.waypoints.splice(e,1)},i.prototype.first=function(){return this.waypoints[0]},i.prototype.last=function(){return this.waypoints[this.waypoints.length-1]},i.findOrCreate=function(t){return n[t.axis][t.name]||new i(t)},o.Group=i}(),function(){\"use strict\";function t(t){return t===t.window}function e(e){return t(e)?e:e.defaultView}function i(t){this.element=t,this.handlers={}}var n=window.Waypoint;i.prototype.innerHeight=function(){var e=t(this.element);return e?this.element.innerHeight:this.element.clientHeight},i.prototype.innerWidth=function(){var e=t(this.element);return e?this.element.innerWidth:this.element.clientWidth},i.prototype.off=function(t,e){function i(t,e,i){for(var n=0,o=e.length-1;o>n;n++){var r=e[n];i&&i!==r||t.removeEventListener(r)}}var n=t.split(\".\"),o=n[0],r=n[1],s=this.element;if(r&&this.handlers[r]&&o)i(s,this.handlers[r][o],e),this.handlers[r][o]=[];else if(o)for(var l in this.handlers)i(s,this.handlers[l][o]||[],e),this.handlers[l][o]=[];else if(r&&this.handlers[r]){for(var a in this.handlers[r])i(s,this.handlers[r][a],e);this.handlers[r]={}}},i.prototype.offset=function(){if(!this.element.ownerDocument)return null;var t=this.element.ownerDocument.documentElement,i=e(this.element.ownerDocument),n={top:0,left:0};return this.element.getBoundingClientRect&&(n=this.element.getBoundingClientRect()),{top:n.top+i.pageYOffset-t.clientTop,left:n.left+i.pageXOffset-t.clientLeft}},i.prototype.on=function(t,e){var i=t.split(\".\"),n=i[0],o=i[1]||\"__default\",r=this.handlers[o]=this.handlers[o]||{},s=r[n]=r[n]||[];s.push(e),this.element.addEventListener(n,e)},i.prototype.outerHeight=function(e){var i,n=this.innerHeight();return e&&!t(this.element)&&(i=window.getComputedStyle(this.element),n+=parseInt(i.marginTop,10),n+=parseInt(i.marginBottom,10)),n},i.prototype.outerWidth=function(e){var i,n=this.innerWidth();return e&&!t(this.element)&&(i=window.getComputedStyle(this.element),n+=parseInt(i.marginLeft,10),n+=parseInt(i.marginRight,10)),n},i.prototype.scrollLeft=function(){var t=e(this.element);return t?t.pageXOffset:this.element.scrollLeft},i.prototype.scrollTop=function(){var t=e(this.element);return t?t.pageYOffset:this.element.scrollTop},i.extend=function(){function t(t,e){if(\"object\"==typeof t&&\"object\"==typeof e)for(var i in e)e.hasOwnProperty(i)&&(t[i]=e[i]);return t}for(var e=Array.prototype.slice.call(arguments),i=1,n=e.length;n>i;i++)t(e[0],e[i]);return e[0]},i.inArray=function(t,e,i){return null==e?-1:e.indexOf(t,i)},i.isEmptyObject=function(t){for(var e in t)return!1;return!0},n.adapters.push({name:\"noframework\",Adapter:i}),n.Adapter=i}();","export default class Header {\n  constructor(elem, APP) {\n    this.elem = elem;\n  }\n\n  init() {}\n}\n","export default class Accordion {\n  constructor(elem, APP) {\n    this.elem = elem;\n    this.triggers = this.elem.querySelectorAll(\".js-trigger\");\n    this.panels = this.elem.querySelectorAll(\".js-panel\");\n    this.allowMultiple = false;\n  }\n\n  togglePanel(index, waypoint) {\n    const trigger = this.triggers[index];\n    const panel = this.panels[index];\n    const panelHeight = `${panel.querySelector(\".js-content\").offsetHeight}px`;\n\n    trigger.classList.toggle(\"expanded\");\n    panel.classList.toggle(\"expanded\");\n\n    if (panel.classList.contains(\"expanded\")) {\n      panel.classList.remove(\"animate-out\");\n      panel.classList.add(\"animate-in\");\n      panel.style.height = panelHeight;\n      trigger.setAttribute(\"aria-expanded\", true);\n      panel.setAttribute(\"aria-hidden\", false);\n    } else {\n      panel.classList.remove(\"animate-in\");\n      panel.classList.add(\"animate-out\");\n      panel.style.height = 0;\n      trigger.setAttribute(\"aria-expanded\", false);\n      panel.setAttribute(\"aria-hidden\", true);\n    }\n  }\n\n  setTriggerHandler() {\n    this.triggers.forEach((t, i) => {\n      t.addEventListener(\"click\", () => {\n        this.togglePanel(i);\n      });\n    });\n  }\n\n\n  resizePanel() {\n    this.panels.forEach((elem) => {\n      const targetHeight = elem.querySelector(\"div\").offsetHeight + \"px\";\n      elem.style.height = elem.classList.contains(\"expanded\")\n        ? targetHeight\n        : \"0\";\n    });\n  }\n\n  init() {\n    this.setTriggerHandler();\n\n    window.addEventListener(\"resize\", () => {\n      this.resizeAccordion();\n    });\n  }\n}\n","export default class Sticky {\n  constructor(elem) {\n    this.elem = elem;\n    // this.content = this.elem.querySelector('.js-sd-content');\n    this.slide1 = this.elem.querySelector('.slide1');\n    this.slide2 = this.elem.querySelector('.slide2');\n    this.slide3 = this.elem.querySelector('.slide3');\n    this.slide4 = this.elem.querySelector('.slide4');\n    this.orange = this.elem.querySelector('.sticky-bar-orange');\n    this.textArr = this.elem.querySelectorAll('.text');\n  }\n\n  stickyScrollHandler = () => {\n    // console.log('scroll');\n    // console.log(window.pageYOffset);\n\n    const slide1Top = this.slide1.offsetTop + this.elem.offsetTop;\n    const slide2Top = this.slide2.offsetTop + this.elem.offsetTop;\n    const slide3Top = this.slide3.offsetTop + this.elem.offsetTop;\n    const slide4Top = this.slide4.offsetTop + this.elem.offsetTop;\n    const contentBottom = slide1Top + this.elem.offsetHeight;\n    const windowBottom = window.pageYOffset + window.innerHeight;\n\n    let barWidth;\n    const menuWidth = window.innerWidth/4; \n\n    // console.log(slide1Top)\n\n    if(windowBottom >= slide1Top && windowBottom < slide2Top) {\n      // console.log(window.pageYOffset/this.slide1.offsetHeight*100)\n      barWidth = window.pageYOffset/this.slide1.offsetHeight;\n      this.orange.style.width = `${barWidth * menuWidth}px`;\n    } else if (windowBottom >= slide2Top && windowBottom < slide3Top) {\n      barWidth = (window.pageYOffset-this.slide2.offsetTop)/this.slide2.offsetHeight;\n      this.orange.style.width = `${menuWidth + barWidth * menuWidth}px`;\n    } else if (windowBottom >= slide3Top && windowBottom < slide4Top) {\n      barWidth = (window.pageYOffset-this.slide3.offsetTop)/this.slide3.offsetHeight;\n      this.orange.style.width = `${menuWidth*2 + barWidth * menuWidth}px`;\n    } else if (windowBottom >= slide4Top && windowBottom < contentBottom) {\n      barWidth = (window.pageYOffset-this.slide4.offsetTop)/this.slide4.offsetHeight;\n      this.orange.style.width = `${menuWidth*3 + barWidth * menuWidth}px`;\n    } else if (windowBottom > contentBottom) {\n      this.orange.style.width = `${window.innerWidth}px`;\n    }\n\n    // slide2 animation\n    if(windowBottom >= slide2Top && windowBottom < slide3Top+window.innerHeight) {\n      const pct = (window.pageYOffset-this.slide2.offsetTop)/(this.slide2.offsetHeight+window.innerHeight);\n      const targetDeg = 100*pct;\n      const targetArr= [];\n      this.textArr.forEach((t, i) => {\n        targetArr.push(240+targetDeg+i*30)\n      })\n\n      targetArr.reverse();\n\n      this.textArr.forEach((t, i)=>{\n        const leng = (window.pageYOffset-this.slide2.offsetTop)/this.slide2.offsetHeight;\n        t.style.transform = `rotateY(${targetArr[i]}deg) skewY(3deg)`; //300 - 410 //perspective(1000px) \n      })\n    }\n\n    // slide3 \n    if(window.pageYOffset >= slide3Top && window.pageYOffset < slide3Top+window.innerHeight) {\n      // console.log(this.elem.querySelectorAll('.mosaic1').length);34\n      const pct = (window.pageYOffset-this.slide3.offsetTop-window.innerHeight)/window.innerHeight;\n      console.log(window.pageYOffset, this.slide3.offsetTop);console.log(window.pageYOffset-this.slide3.offsetTop)\n      const t = pct * this.elem.querySelectorAll('.mosaic1').length;\n      this.elem.querySelectorAll('.mosaic1').forEach((e, i)=>{\n        if(i<t) {\n          e.style.opacity = '0.4';\n        } else {\n          e.style.opacity = '0';\n        }\n      })\n    }\n  }\n\n  setMosaics() {\n    const counts = Math.ceil(window.innerWidth/40);\n    const pattern = this.elem.querySelector('.slide3-pattern');\n    const img = this.elem.querySelector('.mosaic1');\n    for(let i=0; i<counts; i++) {\n      const copyImg = img.cloneNode(true);\n      const imgElem = pattern.appendChild(copyImg);\n      imgElem.style.left = `${(i+1) * 40}px`;\n    }\n  }\n\n  // width / 4\n  // slide1 height ==> total amount -- elem.innerHeight\n  // scroll amount ==> slide1 start ~ slide1 end -- window.pageYOffset + window.innerHeight\n  // slide1 start = this.slide1.offsetTop + this.elem.offsetTop \n\n\n  init() {\n    this.setMosaics();\n    window.addEventListener('scroll', this.stickyScrollHandler);\n  }\n}\n","/*!\n * Chart.js v4.0.1\n * https://www.chartjs.org\n * (c) 2022 Chart.js Contributors\n * Released under the MIT License\n */\n/**\n * @namespace Chart.helpers\n */ /**\n * An empty function that can be used, for example, for optional callback.\n */ function noop() {\n/* noop */ }\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */ const uid = (()=>{\n    let id = 0;\n    return ()=>id++;\n})();\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isNullOrUndef(value) {\n    return value === null || typeof value === 'undefined';\n}\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */ function isArray(value) {\n    if (Array.isArray && Array.isArray(value)) {\n        return true;\n    }\n    const type = Object.prototype.toString.call(value);\n    if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n        return true;\n    }\n    return false;\n}\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isObject(value) {\n    return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */ function isNumberFinite(value) {\n    return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */ function finiteOrDefault(value, defaultValue) {\n    return isNumberFinite(value) ? value : defaultValue;\n}\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */ function valueOrDefault(value, defaultValue) {\n    return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 : +value / dimension;\nconst toDimension = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 * dimension : +value;\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */ function callback(fn, args, thisArg) {\n    if (fn && typeof fn.call === 'function') {\n        return fn.apply(thisArg, args);\n    }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n    let i, len, keys;\n    if (isArray(loopable)) {\n        len = loopable.length;\n        if (reverse) {\n            for(i = len - 1; i >= 0; i--){\n                fn.call(thisArg, loopable[i], i);\n            }\n        } else {\n            for(i = 0; i < len; i++){\n                fn.call(thisArg, loopable[i], i);\n            }\n        }\n    } else if (isObject(loopable)) {\n        keys = Object.keys(loopable);\n        len = keys.length;\n        for(i = 0; i < len; i++){\n            fn.call(thisArg, loopable[keys[i]], keys[i]);\n        }\n    }\n}\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */ function _elementsEqual(a0, a1) {\n    let i, ilen, v0, v1;\n    if (!a0 || !a1 || a0.length !== a1.length) {\n        return false;\n    }\n    for(i = 0, ilen = a0.length; i < ilen; ++i){\n        v0 = a0[i];\n        v1 = a1[i];\n        if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */ function clone$1(source) {\n    if (isArray(source)) {\n        return source.map(clone$1);\n    }\n    if (isObject(source)) {\n        const target = Object.create(null);\n        const keys = Object.keys(source);\n        const klen = keys.length;\n        let k = 0;\n        for(; k < klen; ++k){\n            target[keys[k]] = clone$1(source[keys[k]]);\n        }\n        return target;\n    }\n    return source;\n}\nfunction isValidKey(key) {\n    return [\n        '__proto__',\n        'prototype',\n        'constructor'\n    ].indexOf(key) === -1;\n}\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */ function _merger(key, target, source, options) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        merge(tval, sval, options);\n    } else {\n        target[key] = clone$1(sval);\n    }\n}\nfunction merge(target, source, options) {\n    const sources = isArray(source) ? source : [\n        source\n    ];\n    const ilen = sources.length;\n    if (!isObject(target)) {\n        return target;\n    }\n    options = options || {};\n    const merger = options.merger || _merger;\n    let current;\n    for(let i = 0; i < ilen; ++i){\n        current = sources[i];\n        if (!isObject(current)) {\n            continue;\n        }\n        const keys = Object.keys(current);\n        for(let k = 0, klen = keys.length; k < klen; ++k){\n            merger(keys[k], target, current, options);\n        }\n    }\n    return target;\n}\nfunction mergeIf(target, source) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    return merge(target, source, {\n        merger: _mergerIf\n    });\n}\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */ function _mergerIf(key, target, source) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        mergeIf(tval, sval);\n    } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n        target[key] = clone$1(sval);\n    }\n}\n/**\n * @private\n */ function _deprecated(scope, value, previous, current) {\n    if (value !== undefined) {\n        console.warn(scope + ': \"' + previous + '\" is deprecated. Please use \"' + current + '\" instead');\n    }\n}\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n    // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n    '': (v)=>v,\n    // default resolvers\n    x: (o)=>o.x,\n    y: (o)=>o.y\n};\n/**\n * @private\n */ function _splitKey(key) {\n    const parts = key.split('.');\n    const keys = [];\n    let tmp = '';\n    for (const part of parts){\n        tmp += part;\n        if (tmp.endsWith('\\\\')) {\n            tmp = tmp.slice(0, -1) + '.';\n        } else {\n            keys.push(tmp);\n            tmp = '';\n        }\n    }\n    return keys;\n}\nfunction _getKeyResolver(key) {\n    const keys = _splitKey(key);\n    return (obj)=>{\n        for (const k of keys){\n            if (k === '') {\n                break;\n            }\n            obj = obj && obj[k];\n        }\n        return obj;\n    };\n}\nfunction resolveObjectKey(obj, key) {\n    const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n    return resolver(obj);\n}\n/**\n * @private\n */ function _capitalize(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value)=>typeof value !== 'undefined';\nconst isFunction = (value)=>typeof value === 'function';\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nconst setsEqual = (a, b)=>{\n    if (a.size !== b.size) {\n        return false;\n    }\n    for (const item of a){\n        if (!b.has(item)) {\n            return false;\n        }\n    }\n    return true;\n};\n/**\n * @param e - The event\n * @private\n */ function _isClickEvent(e) {\n    return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */ const PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction almostEquals(x, y, epsilon) {\n    return Math.abs(x - y) < epsilon;\n}\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */ function niceNum(range) {\n    const roundedRange = Math.round(range);\n    range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n    const niceRange = Math.pow(10, Math.floor(log10(range)));\n    const fraction = range / niceRange;\n    const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n    return niceFraction * niceRange;\n}\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */ function _factorize(value) {\n    const result = [];\n    const sqrt = Math.sqrt(value);\n    let i;\n    for(i = 1; i < sqrt; i++){\n        if (value % i === 0) {\n            result.push(i);\n            result.push(value / i);\n        }\n    }\n    if (sqrt === (sqrt | 0)) {\n        result.push(sqrt);\n    }\n    result.sort((a, b)=>a - b).pop();\n    return result;\n}\nfunction isNumber(n) {\n    return !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostWhole(x, epsilon) {\n    const rounded = Math.round(x);\n    return rounded - epsilon <= x && rounded + epsilon >= x;\n}\n/**\n * @private\n */ function _setMinAndMaxByKey(array, target, property) {\n    let i, ilen, value;\n    for(i = 0, ilen = array.length; i < ilen; i++){\n        value = array[i][property];\n        if (!isNaN(value)) {\n            target.min = Math.min(target.min, value);\n            target.max = Math.max(target.max, value);\n        }\n    }\n}\nfunction toRadians(degrees) {\n    return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n    return radians * (180 / PI);\n}\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */ function _decimalPlaces(x) {\n    if (!isNumberFinite(x)) {\n        return;\n    }\n    let e = 1;\n    let p = 0;\n    while(Math.round(x * e) / e !== x){\n        e *= 10;\n        p++;\n    }\n    return p;\n}\n// Gets the angle from vertical upright to the point about a centre.\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n    const distanceFromXCenter = anglePoint.x - centrePoint.x;\n    const distanceFromYCenter = anglePoint.y - centrePoint.y;\n    const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n    let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n    if (angle < -0.5 * PI) {\n        angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n    }\n    return {\n        angle,\n        distance: radialDistanceFromCenter\n    };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n    return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */ function _angleDiff(a, b) {\n    return (a - b + PITAU) % TAU - PI;\n}\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */ function _normalizeAngle(a) {\n    return (a % TAU + TAU) % TAU;\n}\n/**\n * @private\n */ function _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n    const a = _normalizeAngle(angle);\n    const s = _normalizeAngle(start);\n    const e = _normalizeAngle(end);\n    const angleToStart = _normalizeAngle(s - a);\n    const angleToEnd = _normalizeAngle(e - a);\n    const startToAngle = _normalizeAngle(a - s);\n    const endToAngle = _normalizeAngle(a - e);\n    return a === s || a === e || sameAngleIsFullCircle && s === e || angleToStart > angleToEnd && startToAngle < endToAngle;\n}\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */ function _limitValue(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n}\n/**\n * @param {number} value\n * @private\n */ function _int16Range(value) {\n    return _limitValue(value, -32768, 32767);\n}\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */ function _isBetween(value, start, end, epsilon = 1e-6) {\n    return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n\nfunction _lookup(table, value, cmp) {\n    cmp = cmp || ((index)=>table[index] < value);\n    let hi = table.length - 1;\n    let lo = 0;\n    let mid;\n    while(hi - lo > 1){\n        mid = lo + hi >> 1;\n        if (cmp(mid)) {\n            lo = mid;\n        } else {\n            hi = mid;\n        }\n    }\n    return {\n        lo,\n        hi\n    };\n}\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */ const _lookupByKey = (table, key, value, last)=>_lookup(table, value, last ? (index)=>{\n        const ti = table[index][key];\n        return ti < value || ti === value && table[index + 1][key] === value;\n    } : (index)=>table[index][key] < value);\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */ const _rlookupByKey = (table, key, value)=>_lookup(table, value, (index)=>table[index][key] >= value);\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */ function _filterBetween(values, min, max) {\n    let start = 0;\n    let end = values.length;\n    while(start < end && values[start] < min){\n        start++;\n    }\n    while(end > start && values[end - 1] > max){\n        end--;\n    }\n    return start > 0 || end < values.length ? values.slice(start, end) : values;\n}\nconst arrayEvents = [\n    'push',\n    'pop',\n    'shift',\n    'splice',\n    'unshift'\n];\nfunction listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n        array._chartjs.listeners.push(listener);\n        return;\n    }\n    Object.defineProperty(array, '_chartjs', {\n        configurable: true,\n        enumerable: false,\n        value: {\n            listeners: [\n                listener\n            ]\n        }\n    });\n    arrayEvents.forEach((key)=>{\n        const method = '_onData' + _capitalize(key);\n        const base = array[key];\n        Object.defineProperty(array, key, {\n            configurable: true,\n            enumerable: false,\n            value (...args) {\n                const res = base.apply(this, args);\n                array._chartjs.listeners.forEach((object)=>{\n                    if (typeof object[method] === 'function') {\n                        object[method](...args);\n                    }\n                });\n                return res;\n            }\n        });\n    });\n}\nfunction unlistenArrayEvents(array, listener) {\n    const stub = array._chartjs;\n    if (!stub) {\n        return;\n    }\n    const listeners = stub.listeners;\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n        listeners.splice(index, 1);\n    }\n    if (listeners.length > 0) {\n        return;\n    }\n    arrayEvents.forEach((key)=>{\n        delete array[key];\n    });\n    delete array._chartjs;\n}\n/**\n * @param items\n */ function _arrayUnique(items) {\n    const set = new Set();\n    let i, ilen;\n    for(i = 0, ilen = items.length; i < ilen; ++i){\n        set.add(items[i]);\n    }\n    if (set.size === ilen) {\n        return items;\n    }\n    return Array.from(set);\n}\n\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n    return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n/**\n* Request animation polyfill\n*/ const requestAnimFrame = function() {\n    if (typeof window === 'undefined') {\n        return function(callback) {\n            return callback();\n        };\n    }\n    return window.requestAnimationFrame;\n}();\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */ function throttled(fn, thisArg) {\n    let ticking = false;\n    return function(...args) {\n        if (!ticking) {\n            ticking = true;\n            requestAnimFrame.call(window, ()=>{\n                ticking = false;\n                fn.apply(thisArg, args);\n            });\n        }\n    };\n}\n/**\n * Debounces calling `fn` for `delay` ms\n */ function debounce(fn, delay) {\n    let timeout;\n    return function(...args) {\n        if (delay) {\n            clearTimeout(timeout);\n            timeout = setTimeout(fn, delay, args);\n        } else {\n            fn.apply(this, args);\n        }\n        return delay;\n    };\n}\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */ const _toLeftRightCenter = (align)=>align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */ const _alignStartEnd = (align, start, end)=>align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */ const _textX = (align, left, right, rtl)=>{\n    const check = rtl ? 'left' : 'right';\n    return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n/**\n * Return start and count of visible points.\n * @private\n */ function _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n    const pointCount = points.length;\n    let start = 0;\n    let count = pointCount;\n    if (meta._sorted) {\n        const { iScale , _parsed  } = meta;\n        const axis = iScale.axis;\n        const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n        if (minDefined) {\n            start = _limitValue(Math.min(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, iScale.axis, min).lo, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo), 0, pointCount - 1);\n        }\n        if (maxDefined) {\n            count = _limitValue(Math.max(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, iScale.axis, max, true).hi + 1, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1), start, pointCount) - start;\n        } else {\n            count = pointCount - start;\n        }\n    }\n    return {\n        start,\n        count\n    };\n}\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */ function _scaleRangesChanged(meta) {\n    const { xScale , yScale , _scaleRanges  } = meta;\n    const newRanges = {\n        xmin: xScale.min,\n        xmax: xScale.max,\n        ymin: yScale.min,\n        ymax: yScale.max\n    };\n    if (!_scaleRanges) {\n        meta._scaleRanges = newRanges;\n        return true;\n    }\n    const changed = _scaleRanges.xmin !== xScale.min || _scaleRanges.xmax !== xScale.max || _scaleRanges.ymin !== yScale.min || _scaleRanges.ymax !== yScale.max;\n    Object.assign(_scaleRanges, newRanges);\n    return changed;\n}\n\nconst atEdge = (t)=>t === 0 || t === 1;\nconst elasticIn = (t, s, p)=>-(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p)=>Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */ const effects = {\n    linear: (t)=>t,\n    easeInQuad: (t)=>t * t,\n    easeOutQuad: (t)=>-t * (t - 2),\n    easeInOutQuad: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t : -0.5 * (--t * (t - 2) - 1),\n    easeInCubic: (t)=>t * t * t,\n    easeOutCubic: (t)=>(t -= 1) * t * t + 1,\n    easeInOutCubic: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t : 0.5 * ((t -= 2) * t * t + 2),\n    easeInQuart: (t)=>t * t * t * t,\n    easeOutQuart: (t)=>-((t -= 1) * t * t * t - 1),\n    easeInOutQuart: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t : -0.5 * ((t -= 2) * t * t * t - 2),\n    easeInQuint: (t)=>t * t * t * t * t,\n    easeOutQuint: (t)=>(t -= 1) * t * t * t * t + 1,\n    easeInOutQuint: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t * t : 0.5 * ((t -= 2) * t * t * t * t + 2),\n    easeInSine: (t)=>-Math.cos(t * HALF_PI) + 1,\n    easeOutSine: (t)=>Math.sin(t * HALF_PI),\n    easeInOutSine: (t)=>-0.5 * (Math.cos(PI * t) - 1),\n    easeInExpo: (t)=>t === 0 ? 0 : Math.pow(2, 10 * (t - 1)),\n    easeOutExpo: (t)=>t === 1 ? 1 : -Math.pow(2, -10 * t) + 1,\n    easeInOutExpo: (t)=>atEdge(t) ? t : t < 0.5 ? 0.5 * Math.pow(2, 10 * (t * 2 - 1)) : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n    easeInCirc: (t)=>t >= 1 ? t : -(Math.sqrt(1 - t * t) - 1),\n    easeOutCirc: (t)=>Math.sqrt(1 - (t -= 1) * t),\n    easeInOutCirc: (t)=>(t /= 0.5) < 1 ? -0.5 * (Math.sqrt(1 - t * t) - 1) : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n    easeInElastic: (t)=>atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n    easeOutElastic: (t)=>atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n    easeInOutElastic (t) {\n        const s = 0.1125;\n        const p = 0.45;\n        return atEdge(t) ? t : t < 0.5 ? 0.5 * elasticIn(t * 2, s, p) : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n    },\n    easeInBack (t) {\n        const s = 1.70158;\n        return t * t * ((s + 1) * t - s);\n    },\n    easeOutBack (t) {\n        const s = 1.70158;\n        return (t -= 1) * t * ((s + 1) * t + s) + 1;\n    },\n    easeInOutBack (t) {\n        let s = 1.70158;\n        if ((t /= 0.5) < 1) {\n            return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n        }\n        return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n    easeInBounce: (t)=>1 - effects.easeOutBounce(1 - t),\n    easeOutBounce (t) {\n        const m = 7.5625;\n        const d = 2.75;\n        if (t < 1 / d) {\n            return m * t * t;\n        }\n        if (t < 2 / d) {\n            return m * (t -= 1.5 / d) * t + 0.75;\n        }\n        if (t < 2.5 / d) {\n            return m * (t -= 2.25 / d) * t + 0.9375;\n        }\n        return m * (t -= 2.625 / d) * t + 0.984375;\n    },\n    easeInOutBounce: (t)=>t < 0.5 ? effects.easeInBounce(t * 2) * 0.5 : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5\n};\nvar effects$1 = effects;\n\n/*!\n * @kurkle/color v0.2.1\n * https://github.com/kurkle/color#readme\n * (c) 2022 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\nconst map = {\n  x: 'dark',\n  Z: 'light',\n  Y: 're',\n  X: 'blu',\n  W: 'gr',\n  V: 'medium',\n  U: 'slate',\n  A: 'ee',\n  T: 'ol',\n  S: 'or',\n  B: 'ra',\n  C: 'lateg',\n  D: 'ights',\n  R: 'in',\n  Q: 'turquois',\n  E: 'hi',\n  P: 'ro',\n  O: 'al',\n  N: 'le',\n  M: 'de',\n  L: 'yello',\n  F: 'en',\n  K: 'ch',\n  G: 'arks',\n  H: 'ea',\n  I: 'ightg',\n  J: 'wh'\n};\nconst names$1 = {\n  OiceXe: 'f0f8ff',\n  antiquewEte: 'faebd7',\n  aqua: 'ffff',\n  aquamarRe: '7fffd4',\n  azuY: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '0',\n  blanKedOmond: 'ffebcd',\n  Xe: 'ff',\n  XeviTet: '8a2be2',\n  bPwn: 'a52a2a',\n  burlywood: 'deb887',\n  caMtXe: '5f9ea0',\n  KartYuse: '7fff00',\n  KocTate: 'd2691e',\n  cSO: 'ff7f50',\n  cSnflowerXe: '6495ed',\n  cSnsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: 'ffff',\n  xXe: '8b',\n  xcyan: '8b8b',\n  xgTMnPd: 'b8860b',\n  xWay: 'a9a9a9',\n  xgYF: '6400',\n  xgYy: 'a9a9a9',\n  xkhaki: 'bdb76b',\n  xmagFta: '8b008b',\n  xTivegYF: '556b2f',\n  xSange: 'ff8c00',\n  xScEd: '9932cc',\n  xYd: '8b0000',\n  xsOmon: 'e9967a',\n  xsHgYF: '8fbc8f',\n  xUXe: '483d8b',\n  xUWay: '2f4f4f',\n  xUgYy: '2f4f4f',\n  xQe: 'ced1',\n  xviTet: '9400d3',\n  dAppRk: 'ff1493',\n  dApskyXe: 'bfff',\n  dimWay: '696969',\n  dimgYy: '696969',\n  dodgerXe: '1e90ff',\n  fiYbrick: 'b22222',\n  flSOwEte: 'fffaf0',\n  foYstWAn: '228b22',\n  fuKsia: 'ff00ff',\n  gaRsbSo: 'dcdcdc',\n  ghostwEte: 'f8f8ff',\n  gTd: 'ffd700',\n  gTMnPd: 'daa520',\n  Way: '808080',\n  gYF: '8000',\n  gYFLw: 'adff2f',\n  gYy: '808080',\n  honeyMw: 'f0fff0',\n  hotpRk: 'ff69b4',\n  RdianYd: 'cd5c5c',\n  Rdigo: '4b0082',\n  ivSy: 'fffff0',\n  khaki: 'f0e68c',\n  lavFMr: 'e6e6fa',\n  lavFMrXsh: 'fff0f5',\n  lawngYF: '7cfc00',\n  NmoncEffon: 'fffacd',\n  ZXe: 'add8e6',\n  ZcSO: 'f08080',\n  Zcyan: 'e0ffff',\n  ZgTMnPdLw: 'fafad2',\n  ZWay: 'd3d3d3',\n  ZgYF: '90ee90',\n  ZgYy: 'd3d3d3',\n  ZpRk: 'ffb6c1',\n  ZsOmon: 'ffa07a',\n  ZsHgYF: '20b2aa',\n  ZskyXe: '87cefa',\n  ZUWay: '778899',\n  ZUgYy: '778899',\n  ZstAlXe: 'b0c4de',\n  ZLw: 'ffffe0',\n  lime: 'ff00',\n  limegYF: '32cd32',\n  lRF: 'faf0e6',\n  magFta: 'ff00ff',\n  maPon: '800000',\n  VaquamarRe: '66cdaa',\n  VXe: 'cd',\n  VScEd: 'ba55d3',\n  VpurpN: '9370db',\n  VsHgYF: '3cb371',\n  VUXe: '7b68ee',\n  VsprRggYF: 'fa9a',\n  VQe: '48d1cc',\n  VviTetYd: 'c71585',\n  midnightXe: '191970',\n  mRtcYam: 'f5fffa',\n  mistyPse: 'ffe4e1',\n  moccasR: 'ffe4b5',\n  navajowEte: 'ffdead',\n  navy: '80',\n  Tdlace: 'fdf5e6',\n  Tive: '808000',\n  TivedBb: '6b8e23',\n  Sange: 'ffa500',\n  SangeYd: 'ff4500',\n  ScEd: 'da70d6',\n  pOegTMnPd: 'eee8aa',\n  pOegYF: '98fb98',\n  pOeQe: 'afeeee',\n  pOeviTetYd: 'db7093',\n  papayawEp: 'ffefd5',\n  pHKpuff: 'ffdab9',\n  peru: 'cd853f',\n  pRk: 'ffc0cb',\n  plum: 'dda0dd',\n  powMrXe: 'b0e0e6',\n  purpN: '800080',\n  YbeccapurpN: '663399',\n  Yd: 'ff0000',\n  Psybrown: 'bc8f8f',\n  PyOXe: '4169e1',\n  saddNbPwn: '8b4513',\n  sOmon: 'fa8072',\n  sandybPwn: 'f4a460',\n  sHgYF: '2e8b57',\n  sHshell: 'fff5ee',\n  siFna: 'a0522d',\n  silver: 'c0c0c0',\n  skyXe: '87ceeb',\n  UXe: '6a5acd',\n  UWay: '708090',\n  UgYy: '708090',\n  snow: 'fffafa',\n  sprRggYF: 'ff7f',\n  stAlXe: '4682b4',\n  tan: 'd2b48c',\n  teO: '8080',\n  tEstN: 'd8bfd8',\n  tomato: 'ff6347',\n  Qe: '40e0d0',\n  viTet: 'ee82ee',\n  JHt: 'f5deb3',\n  wEte: 'ffffff',\n  wEtesmoke: 'f5f5f5',\n  Lw: 'ffff00',\n  LwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nfunction isPatternOrGradient(value) {\n    if (value && typeof value === 'object') {\n        const type = value.toString();\n        return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n    }\n    return false;\n}\nfunction color(value) {\n    return isPatternOrGradient(value) ? value : index_esm(value);\n}\nfunction getHoverColor(value) {\n    return isPatternOrGradient(value) ? value : index_esm(value).saturate(0.5).darken(0.1).hexString();\n}\n\nconst numbers = [\n    'x',\n    'y',\n    'borderWidth',\n    'radius',\n    'tension'\n];\nconst colors = [\n    'color',\n    'borderColor',\n    'backgroundColor'\n];\nfunction applyAnimationsDefaults(defaults) {\n    defaults.set('animation', {\n        delay: undefined,\n        duration: 1000,\n        easing: 'easeOutQuart',\n        fn: undefined,\n        from: undefined,\n        loop: undefined,\n        to: undefined,\n        type: undefined\n    });\n    defaults.describe('animation', {\n        _fallback: false,\n        _indexable: false,\n        _scriptable: (name)=>name !== 'onProgress' && name !== 'onComplete' && name !== 'fn'\n    });\n    defaults.set('animations', {\n        colors: {\n            type: 'color',\n            properties: colors\n        },\n        numbers: {\n            type: 'number',\n            properties: numbers\n        }\n    });\n    defaults.describe('animations', {\n        _fallback: 'animation'\n    });\n    defaults.set('transitions', {\n        active: {\n            animation: {\n                duration: 400\n            }\n        },\n        resize: {\n            animation: {\n                duration: 0\n            }\n        },\n        show: {\n            animations: {\n                colors: {\n                    from: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    duration: 0\n                }\n            }\n        },\n        hide: {\n            animations: {\n                colors: {\n                    to: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    easing: 'linear',\n                    fn: (v)=>v | 0\n                }\n            }\n        }\n    });\n}\n\nfunction applyLayoutsDefaults(defaults) {\n    defaults.set('layout', {\n        autoPadding: true,\n        padding: {\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0\n        }\n    });\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n    options = options || {};\n    const cacheKey = locale + JSON.stringify(options);\n    let formatter = intlCache.get(cacheKey);\n    if (!formatter) {\n        formatter = new Intl.NumberFormat(locale, options);\n        intlCache.set(cacheKey, formatter);\n    }\n    return formatter;\n}\nfunction formatNumber(num, locale, options) {\n    return getNumberFormat(locale, options).format(num);\n}\n\nconst formatters = {\n values (value) {\n        return isArray(value) ?  (value) : '' + value;\n    },\n numeric (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const locale = this.chart.options.locale;\n        let notation;\n        let delta = tickValue;\n        if (ticks.length > 1) {\n            const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n            if (maxTick < 1e-4 || maxTick > 1e+15) {\n                notation = 'scientific';\n            }\n            delta = calculateDelta(tickValue, ticks);\n        }\n        const logDelta = log10(Math.abs(delta));\n        const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n        const options = {\n            notation,\n            minimumFractionDigits: numDecimal,\n            maximumFractionDigits: numDecimal\n        };\n        Object.assign(options, this.options.ticks.format);\n        return formatNumber(tickValue, locale, options);\n    },\n logarithmic (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const remain = ticks[index].significand || tickValue / Math.pow(10, Math.floor(log10(tickValue)));\n        if ([\n            1,\n            2,\n            3,\n            5,\n            10,\n            15\n        ].includes(remain) || index > 0.8 * ticks.length) {\n            return formatters.numeric.call(this, tickValue, index, ticks);\n        }\n        return '';\n    }\n};\nfunction calculateDelta(tickValue, ticks) {\n    let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n    if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n        delta = tickValue - Math.floor(tickValue);\n    }\n    return delta;\n}\n var Ticks = {\n    formatters\n};\n\nfunction applyScaleDefaults(defaults) {\n    defaults.set('scale', {\n        display: true,\n        offset: false,\n        reverse: false,\n        beginAtZero: false,\n bounds: 'ticks',\n grace: 0,\n        grid: {\n            display: true,\n            lineWidth: 1,\n            drawOnChartArea: true,\n            drawTicks: true,\n            tickLength: 8,\n            tickWidth: (_ctx, options)=>options.lineWidth,\n            tickColor: (_ctx, options)=>options.color,\n            offset: false\n        },\n        border: {\n            display: true,\n            dash: [],\n            dashOffset: 0.0,\n            width: 1\n        },\n        title: {\n            display: false,\n            text: '',\n            padding: {\n                top: 4,\n                bottom: 4\n            }\n        },\n        ticks: {\n            minRotation: 0,\n            maxRotation: 50,\n            mirror: false,\n            textStrokeWidth: 0,\n            textStrokeColor: '',\n            padding: 3,\n            display: true,\n            autoSkip: true,\n            autoSkipPadding: 3,\n            labelOffset: 0,\n            callback: Ticks.formatters.values,\n            minor: {},\n            major: {},\n            align: 'center',\n            crossAlign: 'near',\n            showLabelBackdrop: false,\n            backdropColor: 'rgba(255, 255, 255, 0.75)',\n            backdropPadding: 2\n        }\n    });\n    defaults.route('scale.ticks', 'color', '', 'color');\n    defaults.route('scale.grid', 'color', '', 'borderColor');\n    defaults.route('scale.border', 'color', '', 'borderColor');\n    defaults.route('scale.title', 'color', '', 'color');\n    defaults.describe('scale', {\n        _fallback: false,\n        _scriptable: (name)=>!name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n        _indexable: (name)=>name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash'\n    });\n    defaults.describe('scales', {\n        _fallback: 'scale'\n    });\n    defaults.describe('scale.ticks', {\n        _scriptable: (name)=>name !== 'backdropPadding' && name !== 'callback',\n        _indexable: (name)=>name !== 'backdropPadding'\n    });\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\n function getScope$1(node, key) {\n    if (!key) {\n        return node;\n    }\n    const keys = key.split('.');\n    for(let i = 0, n = keys.length; i < n; ++i){\n        const k = keys[i];\n        node = node[k] || (node[k] = Object.create(null));\n    }\n    return node;\n}\nfunction set(root, scope, values) {\n    if (typeof scope === 'string') {\n        return merge(getScope$1(root, scope), values);\n    }\n    return merge(getScope$1(root, ''), scope);\n}\n class Defaults {\n    constructor(_descriptors, _appliers){\n        this.animation = undefined;\n        this.backgroundColor = 'rgba(0,0,0,0.1)';\n        this.borderColor = 'rgba(0,0,0,0.1)';\n        this.color = '#666';\n        this.datasets = {};\n        this.devicePixelRatio = (context)=>context.chart.platform.getDevicePixelRatio();\n        this.elements = {};\n        this.events = [\n            'mousemove',\n            'mouseout',\n            'click',\n            'touchstart',\n            'touchmove'\n        ];\n        this.font = {\n            family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n            size: 12,\n            style: 'normal',\n            lineHeight: 1.2,\n            weight: null\n        };\n        this.hover = {};\n        this.hoverBackgroundColor = (ctx, options)=>getHoverColor(options.backgroundColor);\n        this.hoverBorderColor = (ctx, options)=>getHoverColor(options.borderColor);\n        this.hoverColor = (ctx, options)=>getHoverColor(options.color);\n        this.indexAxis = 'x';\n        this.interaction = {\n            mode: 'nearest',\n            intersect: true,\n            includeInvisible: false\n        };\n        this.maintainAspectRatio = true;\n        this.onHover = null;\n        this.onClick = null;\n        this.parsing = true;\n        this.plugins = {};\n        this.responsive = true;\n        this.scale = undefined;\n        this.scales = {};\n        this.showLine = true;\n        this.drawActiveElementsOnTop = true;\n        this.describe(_descriptors);\n        this.apply(_appliers);\n    }\n set(scope, values) {\n        return set(this, scope, values);\n    }\n get(scope) {\n        return getScope$1(this, scope);\n    }\n describe(scope, values) {\n        return set(descriptors, scope, values);\n    }\n    override(scope, values) {\n        return set(overrides, scope, values);\n    }\n route(scope, name, targetScope, targetName) {\n        const scopeObject = getScope$1(this, scope);\n        const targetScopeObject = getScope$1(this, targetScope);\n        const privateName = '_' + name;\n        Object.defineProperties(scopeObject, {\n            [privateName]: {\n                value: scopeObject[name],\n                writable: true\n            },\n            [name]: {\n                enumerable: true,\n                get () {\n                    const local = this[privateName];\n                    const target = targetScopeObject[targetName];\n                    if (isObject(local)) {\n                        return Object.assign({}, target, local);\n                    }\n                    return valueOrDefault(local, target);\n                },\n                set (value) {\n                    this[privateName] = value;\n                }\n            }\n        });\n    }\n    apply(appliers) {\n        appliers.forEach((apply)=>apply(this));\n    }\n}\nvar defaults = /* #__PURE__ */ new Defaults({\n    _scriptable: (name)=>!name.startsWith('on'),\n    _indexable: (name)=>name !== 'events',\n    hover: {\n        _fallback: 'interaction'\n    },\n    interaction: {\n        _scriptable: false,\n        _indexable: false\n    }\n}, [\n    applyAnimationsDefaults,\n    applyLayoutsDefaults,\n    applyScaleDefaults\n]);\n\nfunction toFontString(font) {\n    if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n        return null;\n    }\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n}\n function _measureText(ctx, data, gc, longest, string) {\n    let textWidth = data[string];\n    if (!textWidth) {\n        textWidth = data[string] = ctx.measureText(string).width;\n        gc.push(string);\n    }\n    if (textWidth > longest) {\n        longest = textWidth;\n    }\n    return longest;\n}\n function _longestText(ctx, font, arrayOfThings, cache) {\n    cache = cache || {};\n    let data = cache.data = cache.data || {};\n    let gc = cache.garbageCollect = cache.garbageCollect || [];\n    if (cache.font !== font) {\n        data = cache.data = {};\n        gc = cache.garbageCollect = [];\n        cache.font = font;\n    }\n    ctx.save();\n    ctx.font = font;\n    let longest = 0;\n    const ilen = arrayOfThings.length;\n    let i, j, jlen, thing, nestedThing;\n    for(i = 0; i < ilen; i++){\n        thing = arrayOfThings[i];\n        if (thing !== undefined && thing !== null && isArray(thing) !== true) {\n            longest = _measureText(ctx, data, gc, longest, thing);\n        } else if (isArray(thing)) {\n            for(j = 0, jlen = thing.length; j < jlen; j++){\n                nestedThing = thing[j];\n                if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n                    longest = _measureText(ctx, data, gc, longest, nestedThing);\n                }\n            }\n        }\n    }\n    ctx.restore();\n    const gcLen = gc.length / 2;\n    if (gcLen > arrayOfThings.length) {\n        for(i = 0; i < gcLen; i++){\n            delete data[gc[i]];\n        }\n        gc.splice(0, gcLen);\n    }\n    return longest;\n}\n function _alignPixel(chart, pixel, width) {\n    const devicePixelRatio = chart.currentDevicePixelRatio;\n    const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n    return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n function clearCanvas(canvas, ctx) {\n    ctx = ctx || canvas.getContext('2d');\n    ctx.save();\n    ctx.resetTransform();\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n    drawPointLegend(ctx, options, x, y, null);\n}\nfunction drawPointLegend(ctx, options, x, y, w) {\n    let type, xOffset, yOffset, size, cornerRadius, width, xOffsetW, yOffsetW;\n    const style = options.pointStyle;\n    const rotation = options.rotation;\n    const radius = options.radius;\n    let rad = (rotation || 0) * RAD_PER_DEG;\n    if (style && typeof style === 'object') {\n        type = style.toString();\n        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n            ctx.save();\n            ctx.translate(x, y);\n            ctx.rotate(rad);\n            ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n            ctx.restore();\n            return;\n        }\n    }\n    if (isNaN(radius) || radius <= 0) {\n        return;\n    }\n    ctx.beginPath();\n    switch(style){\n        default:\n            if (w) {\n                ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n            } else {\n                ctx.arc(x, y, radius, 0, TAU);\n            }\n            ctx.closePath();\n            break;\n        case 'triangle':\n            width = w ? w / 2 : radius;\n            ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            ctx.closePath();\n            break;\n        case 'rectRounded':\n            cornerRadius = radius * 0.516;\n            size = radius - cornerRadius;\n            xOffset = Math.cos(rad + QUARTER_PI) * size;\n            xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            yOffset = Math.sin(rad + QUARTER_PI) * size;\n            yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n            ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n            ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n            ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n            ctx.closePath();\n            break;\n        case 'rect':\n            if (!rotation) {\n                size = Math.SQRT1_2 * radius;\n                width = w ? w / 2 : size;\n                ctx.rect(x - width, y - size, 2 * width, 2 * size);\n                break;\n            }\n            rad += QUARTER_PI;\n         case 'rectRot':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            ctx.closePath();\n            break;\n        case 'crossRot':\n            rad += QUARTER_PI;\n         case 'cross':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'star':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            rad += QUARTER_PI;\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'line':\n            xOffset = w ? w / 2 : Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            ctx.moveTo(x - xOffset, y - yOffset);\n            ctx.lineTo(x + xOffset, y + yOffset);\n            break;\n        case 'dash':\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n            break;\n    }\n    ctx.fill();\n    if (options.borderWidth > 0) {\n        ctx.stroke();\n    }\n}\n function _isPointInArea(point, area, margin) {\n    margin = margin || 0.5;\n    return !area || point && point.x > area.left - margin && point.x < area.right + margin && point.y > area.top - margin && point.y < area.bottom + margin;\n}\nfunction clipArea(ctx, area) {\n    ctx.save();\n    ctx.beginPath();\n    ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n    ctx.clip();\n}\nfunction unclipArea(ctx) {\n    ctx.restore();\n}\n function _steppedLineTo(ctx, previous, target, flip, mode) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    if (mode === 'middle') {\n        const midpoint = (previous.x + target.x) / 2.0;\n        ctx.lineTo(midpoint, previous.y);\n        ctx.lineTo(midpoint, target.y);\n    } else if (mode === 'after' !== !!flip) {\n        ctx.lineTo(previous.x, target.y);\n    } else {\n        ctx.lineTo(target.x, previous.y);\n    }\n    ctx.lineTo(target.x, target.y);\n}\n function _bezierCurveTo(ctx, previous, target, flip) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    ctx.bezierCurveTo(flip ? previous.cp1x : previous.cp2x, flip ? previous.cp1y : previous.cp2y, flip ? target.cp2x : target.cp1x, flip ? target.cp2y : target.cp1y, target.x, target.y);\n}\n function renderText(ctx, text, x, y, font, opts = {}) {\n    const lines = isArray(text) ? text : [\n        text\n    ];\n    const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n    let i, line;\n    ctx.save();\n    ctx.font = font.string;\n    setRenderOpts(ctx, opts);\n    for(i = 0; i < lines.length; ++i){\n        line = lines[i];\n        if (opts.backdrop) {\n            drawBackdrop(ctx, opts.backdrop);\n        }\n        if (stroke) {\n            if (opts.strokeColor) {\n                ctx.strokeStyle = opts.strokeColor;\n            }\n            if (!isNullOrUndef(opts.strokeWidth)) {\n                ctx.lineWidth = opts.strokeWidth;\n            }\n            ctx.strokeText(line, x, y, opts.maxWidth);\n        }\n        ctx.fillText(line, x, y, opts.maxWidth);\n        decorateText(ctx, x, y, line, opts);\n        y += font.lineHeight;\n    }\n    ctx.restore();\n}\nfunction setRenderOpts(ctx, opts) {\n    if (opts.translation) {\n        ctx.translate(opts.translation[0], opts.translation[1]);\n    }\n    if (!isNullOrUndef(opts.rotation)) {\n        ctx.rotate(opts.rotation);\n    }\n    if (opts.color) {\n        ctx.fillStyle = opts.color;\n    }\n    if (opts.textAlign) {\n        ctx.textAlign = opts.textAlign;\n    }\n    if (opts.textBaseline) {\n        ctx.textBaseline = opts.textBaseline;\n    }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n    if (opts.strikethrough || opts.underline) {\n const metrics = ctx.measureText(line);\n        const left = x - metrics.actualBoundingBoxLeft;\n        const right = x + metrics.actualBoundingBoxRight;\n        const top = y - metrics.actualBoundingBoxAscent;\n        const bottom = y + metrics.actualBoundingBoxDescent;\n        const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n        ctx.strokeStyle = ctx.fillStyle;\n        ctx.beginPath();\n        ctx.lineWidth = opts.decorationWidth || 2;\n        ctx.moveTo(left, yDecoration);\n        ctx.lineTo(right, yDecoration);\n        ctx.stroke();\n    }\n}\nfunction drawBackdrop(ctx, opts) {\n    const oldColor = ctx.fillStyle;\n    ctx.fillStyle = opts.color;\n    ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n    ctx.fillStyle = oldColor;\n}\n function addRoundedRectPath(ctx, rect) {\n    const { x , y , w , h , radius  } = rect;\n    ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, -HALF_PI, PI, true);\n    ctx.lineTo(x, y + h - radius.bottomLeft);\n    ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n    ctx.lineTo(x + w - radius.bottomRight, y + h);\n    ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n    ctx.lineTo(x + w, y + radius.topRight);\n    ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n    ctx.lineTo(x + radius.topLeft, y);\n}\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n/**\n * @alias Chart.helpers.options\n * @namespace\n */ /**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */ function toLineHeight(value, size) {\n    const matches = ('' + value).match(LINE_HEIGHT);\n    if (!matches || matches[1] === 'normal') {\n        return size * 1.2;\n    }\n    value = +matches[2];\n    switch(matches[3]){\n        case 'px':\n            return value;\n        case '%':\n            value /= 100;\n            break;\n    }\n    return size * value;\n}\nconst numberOrZero = (v)=>+v || 0;\nfunction _readValueToProps(value, props) {\n    const ret = {};\n    const objProps = isObject(props);\n    const keys = objProps ? Object.keys(props) : props;\n    const read = isObject(value) ? objProps ? (prop)=>valueOrDefault(value[prop], value[props[prop]]) : (prop)=>value[prop] : ()=>value;\n    for (const prop of keys){\n        ret[prop] = numberOrZero(read(prop));\n    }\n    return ret;\n}\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */ function toTRBL(value) {\n    return _readValueToProps(value, {\n        top: 'y',\n        right: 'x',\n        bottom: 'y',\n        left: 'x'\n    });\n}\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */ function toTRBLCorners(value) {\n    return _readValueToProps(value, [\n        'topLeft',\n        'topRight',\n        'bottomLeft',\n        'bottomRight'\n    ]);\n}\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */ function toPadding(value) {\n    const obj = toTRBL(value);\n    obj.width = obj.left + obj.right;\n    obj.height = obj.top + obj.bottom;\n    return obj;\n}\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */ function toFont(options, fallback) {\n    options = options || {};\n    fallback = fallback || defaults.font;\n    let size = valueOrDefault(options.size, fallback.size);\n    if (typeof size === 'string') {\n        size = parseInt(size, 10);\n    }\n    let style = valueOrDefault(options.style, fallback.style);\n    if (style && !('' + style).match(FONT_STYLE)) {\n        console.warn('Invalid font style specified: \"' + style + '\"');\n        style = undefined;\n    }\n    const font = {\n        family: valueOrDefault(options.family, fallback.family),\n        lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n        size,\n        style,\n        weight: valueOrDefault(options.weight, fallback.weight),\n        string: ''\n    };\n    font.string = toFontString(font);\n    return font;\n}\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */ function resolve(inputs, context, index, info) {\n    let cacheable = true;\n    let i, ilen, value;\n    for(i = 0, ilen = inputs.length; i < ilen; ++i){\n        value = inputs[i];\n        if (value === undefined) {\n            continue;\n        }\n        if (context !== undefined && typeof value === 'function') {\n            value = value(context);\n            cacheable = false;\n        }\n        if (index !== undefined && isArray(value)) {\n            value = value[index % value.length];\n            cacheable = false;\n        }\n        if (value !== undefined) {\n            if (info && !cacheable) {\n                info.cacheable = false;\n            }\n            return value;\n        }\n    }\n}\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */ function _addGrace(minmax, grace, beginAtZero) {\n    const { min , max  } = minmax;\n    const change = toDimension(grace, (max - min) / 2);\n    const keepZero = (value, add)=>beginAtZero && value === 0 ? 0 : value + add;\n    return {\n        min: keepZero(min, -Math.abs(change)),\n        max: keepZero(max, change)\n    };\n}\n/**\n * Create a context inheriting parentContext\n * @param parentContext\n * @param context\n * @returns\n */ function createContext(parentContext, context) {\n    return Object.assign(Object.create(parentContext), context);\n}\n\nfunction _createResolver(scopes, prefixes = [\n    ''\n], rootScopes = scopes, fallback, getTarget = ()=>scopes[0]) {\n    if (!defined(fallback)) {\n        fallback = _resolve('_fallback', scopes);\n    }\n    const cache = {\n        [Symbol.toStringTag]: 'Object',\n        _cacheable: true,\n        _scopes: scopes,\n        _rootScopes: rootScopes,\n        _fallback: fallback,\n        _getTarget: getTarget,\n        override: (scope)=>_createResolver([\n                scope,\n                ...scopes\n            ], prefixes, rootScopes, fallback)\n    };\n    return new Proxy(cache, {\n deleteProperty (target, prop) {\n            delete target[prop];\n            delete target._keys;\n            delete scopes[0][prop];\n            return true;\n        },\n get (target, prop) {\n            return _cached(target, prop, ()=>_resolveWithPrefixes(prop, prefixes, scopes, target));\n        },\n getOwnPropertyDescriptor (target, prop) {\n            return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n        },\n getPrototypeOf () {\n            return Reflect.getPrototypeOf(scopes[0]);\n        },\n has (target, prop) {\n            return getKeysFromAllScopes(target).includes(prop);\n        },\n ownKeys (target) {\n            return getKeysFromAllScopes(target);\n        },\n set (target, prop, value) {\n            const storage = target._storage || (target._storage = getTarget());\n            target[prop] = storage[prop] = value;\n            delete target._keys;\n            return true;\n        }\n    });\n}\n function _attachContext(proxy, context, subProxy, descriptorDefaults) {\n    const cache = {\n        _cacheable: false,\n        _proxy: proxy,\n        _context: context,\n        _subProxy: subProxy,\n        _stack: new Set(),\n        _descriptors: _descriptors(proxy, descriptorDefaults),\n        setContext: (ctx)=>_attachContext(proxy, ctx, subProxy, descriptorDefaults),\n        override: (scope)=>_attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n    };\n    return new Proxy(cache, {\n deleteProperty (target, prop) {\n            delete target[prop];\n            delete proxy[prop];\n            return true;\n        },\n get (target, prop, receiver) {\n            return _cached(target, prop, ()=>_resolveWithContext(target, prop, receiver));\n        },\n getOwnPropertyDescriptor (target, prop) {\n            return target._descriptors.allKeys ? Reflect.has(proxy, prop) ? {\n                enumerable: true,\n                configurable: true\n            } : undefined : Reflect.getOwnPropertyDescriptor(proxy, prop);\n        },\n getPrototypeOf () {\n            return Reflect.getPrototypeOf(proxy);\n        },\n has (target, prop) {\n            return Reflect.has(proxy, prop);\n        },\n ownKeys () {\n            return Reflect.ownKeys(proxy);\n        },\n set (target, prop, value) {\n            proxy[prop] = value;\n            delete target[prop];\n            return true;\n        }\n    });\n}\n function _descriptors(proxy, defaults = {\n    scriptable: true,\n    indexable: true\n}) {\n    const { _scriptable =defaults.scriptable , _indexable =defaults.indexable , _allKeys =defaults.allKeys  } = proxy;\n    return {\n        allKeys: _allKeys,\n        scriptable: _scriptable,\n        indexable: _indexable,\n        isScriptable: isFunction(_scriptable) ? _scriptable : ()=>_scriptable,\n        isIndexable: isFunction(_indexable) ? _indexable : ()=>_indexable\n    };\n}\nconst readKey = (prefix, name)=>prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value)=>isObject(value) && prop !== 'adapters' && (Object.getPrototypeOf(value) === null || value.constructor === Object);\nfunction _cached(target, prop, resolve) {\n    if (Object.prototype.hasOwnProperty.call(target, prop)) {\n        return target[prop];\n    }\n    const value = resolve();\n    target[prop] = value;\n    return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    let value = _proxy[prop];\n    if (isFunction(value) && descriptors.isScriptable(prop)) {\n        value = _resolveScriptable(prop, value, target, receiver);\n    }\n    if (isArray(value) && value.length) {\n        value = _resolveArray(prop, value, target, descriptors.isIndexable);\n    }\n    if (needsSubResolver(prop, value)) {\n        value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n    }\n    return value;\n}\nfunction _resolveScriptable(prop, value, target, receiver) {\n    const { _proxy , _context , _subProxy , _stack  } = target;\n    if (_stack.has(prop)) {\n        throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n    }\n    _stack.add(prop);\n    value = value(_context, _subProxy || receiver);\n    _stack.delete(prop);\n    if (needsSubResolver(prop, value)) {\n        value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n    }\n    return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    if (defined(_context.index) && isIndexable(prop)) {\n        value = value[_context.index % value.length];\n    } else if (isObject(value[0])) {\n        const arr = value;\n        const scopes = _proxy._scopes.filter((s)=>s !== arr);\n        value = [];\n        for (const item of arr){\n            const resolver = createSubResolver(scopes, _proxy, prop, item);\n            value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n        }\n    }\n    return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n    return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent)=>key === true ? parent : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n    for (const parent of parentScopes){\n        const scope = getScope(key, parent);\n        if (scope) {\n            set.add(scope);\n            const fallback = resolveFallback(scope._fallback, key, value);\n            if (defined(fallback) && fallback !== key && fallback !== parentFallback) {\n                return fallback;\n            }\n        } else if (scope === false && defined(parentFallback) && key !== parentFallback) {\n            return null;\n        }\n    }\n    return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n    const rootScopes = resolver._rootScopes;\n    const fallback = resolveFallback(resolver._fallback, prop, value);\n    const allScopes = [\n        ...parentScopes,\n        ...rootScopes\n    ];\n    const set = new Set();\n    set.add(value);\n    let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n    if (key === null) {\n        return false;\n    }\n    if (defined(fallback) && fallback !== prop) {\n        key = addScopesFromKey(set, allScopes, fallback, key, value);\n        if (key === null) {\n            return false;\n        }\n    }\n    return _createResolver(Array.from(set), [\n        ''\n    ], rootScopes, fallback, ()=>subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n    while(key){\n        key = addScopes(set, allScopes, key, fallback, item);\n    }\n    return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n    const parent = resolver._getTarget();\n    if (!(prop in parent)) {\n        parent[prop] = {};\n    }\n    const target = parent[prop];\n    if (isArray(target) && isObject(value)) {\n        return value;\n    }\n    return target || {};\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n    let value;\n    for (const prefix of prefixes){\n        value = _resolve(readKey(prefix, prop), scopes);\n        if (defined(value)) {\n            return needsSubResolver(prop, value) ? createSubResolver(scopes, proxy, prop, value) : value;\n        }\n    }\n}\nfunction _resolve(key, scopes) {\n    for (const scope of scopes){\n        if (!scope) {\n            continue;\n        }\n        const value = scope[key];\n        if (defined(value)) {\n            return value;\n        }\n    }\n}\nfunction getKeysFromAllScopes(target) {\n    let keys = target._keys;\n    if (!keys) {\n        keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n    }\n    return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n    const set = new Set();\n    for (const scope of scopes){\n        for (const key of Object.keys(scope).filter((k)=>!k.startsWith('_'))){\n            set.add(key);\n        }\n    }\n    return Array.from(set);\n}\nfunction _parseObjectDataRadialScale(meta, data, start, count) {\n    const { iScale  } = meta;\n    const { key ='r'  } = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for(i = 0, ilen = count; i < ilen; ++i){\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n            r: iScale.parse(resolveObjectKey(item, key), index)\n        };\n    }\n    return parsed;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i)=>i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis)=>indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n    // Props to Rob Spencer at scaled innovation for his post on splining between points\n    // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n    // This function must also respect \"skipped\" points\n    const previous = firstPoint.skip ? middlePoint : firstPoint;\n    const current = middlePoint;\n    const next = afterPoint.skip ? middlePoint : afterPoint;\n    const d01 = distanceBetweenPoints(current, previous);\n    const d12 = distanceBetweenPoints(next, current);\n    let s01 = d01 / (d01 + d12);\n    let s12 = d12 / (d01 + d12);\n    // If all points are the same, s01 & s02 will be inf\n    s01 = isNaN(s01) ? 0 : s01;\n    s12 = isNaN(s12) ? 0 : s12;\n    const fa = t * s01; // scaling factor for triangle Ta\n    const fb = t * s12;\n    return {\n        previous: {\n            x: current.x - fa * (next.x - previous.x),\n            y: current.y - fa * (next.y - previous.y)\n        },\n        next: {\n            x: current.x + fb * (next.x - previous.x),\n            y: current.y + fb * (next.y - previous.y)\n        }\n    };\n}\n/**\n * Adjust tangents to ensure monotonic properties\n */ function monotoneAdjust(points, deltaK, mK) {\n    const pointsLen = points.length;\n    let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen - 1; ++i){\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent || !pointAfter) {\n            continue;\n        }\n        if (almostEquals(deltaK[i], 0, EPSILON)) {\n            mK[i] = mK[i + 1] = 0;\n            continue;\n        }\n        alphaK = mK[i] / deltaK[i];\n        betaK = mK[i + 1] / deltaK[i];\n        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n        if (squaredMagnitude <= 9) {\n            continue;\n        }\n        tauK = 3 / Math.sqrt(squaredMagnitude);\n        mK[i] = alphaK * tauK * deltaK[i];\n        mK[i + 1] = betaK * tauK * deltaK[i];\n    }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    let delta, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        const iPixel = pointCurrent[indexAxis];\n        const vPixel = pointCurrent[valueAxis];\n        if (pointBefore) {\n            delta = (iPixel - pointBefore[indexAxis]) / 3;\n            pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n            pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n        }\n        if (pointAfter) {\n            delta = (pointAfter[indexAxis] - iPixel) / 3;\n            pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n            pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n        }\n    }\n}\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */ function splineCurveMonotone(points, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    const deltaK = Array(pointsLen).fill(0);\n    const mK = Array(pointsLen);\n    // Calculate slopes (deltaK) and initialize tangents (mK)\n    let i, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        if (pointAfter) {\n            const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n            // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n            deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n        }\n        mK[i] = !pointBefore ? deltaK[i] : !pointAfter ? deltaK[i - 1] : sign(deltaK[i - 1]) !== sign(deltaK[i]) ? 0 : (deltaK[i - 1] + deltaK[i]) / 2;\n    }\n    monotoneAdjust(points, deltaK, mK);\n    monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n    return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n    let i, ilen, point, inArea, inAreaPrev;\n    let inAreaNext = _isPointInArea(points[0], area);\n    for(i = 0, ilen = points.length; i < ilen; ++i){\n        inAreaPrev = inArea;\n        inArea = inAreaNext;\n        inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n        if (!inArea) {\n            continue;\n        }\n        point = points[i];\n        if (inAreaPrev) {\n            point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n            point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n        }\n        if (inAreaNext) {\n            point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n            point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n        }\n    }\n}\n/**\n * @private\n */ function _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n    let i, ilen, point, controlPoints;\n    // Only consider points that are drawn in case the spanGaps option is used\n    if (options.spanGaps) {\n        points = points.filter((pt)=>!pt.skip);\n    }\n    if (options.cubicInterpolationMode === 'monotone') {\n        splineCurveMonotone(points, indexAxis);\n    } else {\n        let prev = loop ? points[points.length - 1] : points[0];\n        for(i = 0, ilen = points.length; i < ilen; ++i){\n            point = points[i];\n            controlPoints = splineCurve(prev, point, points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen], options.tension);\n            point.cp1x = controlPoints.previous.x;\n            point.cp1y = controlPoints.previous.y;\n            point.cp2x = controlPoints.next.x;\n            point.cp2y = controlPoints.next.y;\n            prev = point;\n        }\n    }\n    if (options.capBezierPoints) {\n        capBezierPoints(points, area);\n    }\n}\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `dom` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import(\"../core/core.controller\").default } dom.Chart\n * @typedef { import('../../types').ChartEvent } ChartEvent\n */ /**\n * @private\n */ function _isDomSupported() {\n    return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n/**\n * @private\n */ function _getParentNode(domNode) {\n    let parent = domNode.parentNode;\n    if (parent && parent.toString() === '[object ShadowRoot]') {\n        parent = parent.host;\n    }\n    return parent;\n}\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */ function parseMaxStyle(styleValue, node, parentProperty) {\n    let valueInPixels;\n    if (typeof styleValue === 'string') {\n        valueInPixels = parseInt(styleValue, 10);\n        if (styleValue.indexOf('%') !== -1) {\n            // percentage * size in dimension\n            valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n        }\n    } else {\n        valueInPixels = styleValue;\n    }\n    return valueInPixels;\n}\nconst getComputedStyle = (element)=>element.ownerDocument.defaultView.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n    return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = [\n    'top',\n    'right',\n    'bottom',\n    'left'\n];\nfunction getPositionedStyle(styles, style, suffix) {\n    const result = {};\n    suffix = suffix ? '-' + suffix : '';\n    for(let i = 0; i < 4; i++){\n        const pos = positions[i];\n        result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n    }\n    result.width = result.left + result.right;\n    result.height = result.top + result.bottom;\n    return result;\n}\nconst useOffsetPos = (x, y, target)=>(x > 0 || y > 0) && (!target || !target.shadowRoot);\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */ function getCanvasPosition(e, canvas) {\n    const touches = e.touches;\n    const source = touches && touches.length ? touches[0] : e;\n    const { offsetX , offsetY  } = source;\n    let box = false;\n    let x, y;\n    if (useOffsetPos(offsetX, offsetY, e.target)) {\n        x = offsetX;\n        y = offsetY;\n    } else {\n        const rect = canvas.getBoundingClientRect();\n        x = source.clientX - rect.left;\n        y = source.clientY - rect.top;\n        box = true;\n    }\n    return {\n        x,\n        y,\n        box\n    };\n}\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */ function getRelativePosition(event, chart) {\n    if ('native' in event) {\n        return event;\n    }\n    const { canvas , currentDevicePixelRatio  } = chart;\n    const style = getComputedStyle(canvas);\n    const borderBox = style.boxSizing === 'border-box';\n    const paddings = getPositionedStyle(style, 'padding');\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const { x , y , box  } = getCanvasPosition(event, canvas);\n    const xOffset = paddings.left + (box && borders.left);\n    const yOffset = paddings.top + (box && borders.top);\n    let { width , height  } = chart;\n    if (borderBox) {\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    return {\n        x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n        y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n    };\n}\nfunction getContainerSize(canvas, width, height) {\n    let maxWidth, maxHeight;\n    if (width === undefined || height === undefined) {\n        const container = _getParentNode(canvas);\n        if (!container) {\n            width = canvas.clientWidth;\n            height = canvas.clientHeight;\n        } else {\n            const rect = container.getBoundingClientRect(); // this is the border box of the container\n            const containerStyle = getComputedStyle(container);\n            const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n            const containerPadding = getPositionedStyle(containerStyle, 'padding');\n            width = rect.width - containerPadding.width - containerBorder.width;\n            height = rect.height - containerPadding.height - containerBorder.height;\n            maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n            maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n        }\n    }\n    return {\n        width,\n        height,\n        maxWidth: maxWidth || INFINITY,\n        maxHeight: maxHeight || INFINITY\n    };\n}\nconst round1 = (v)=>Math.round(v * 10) / 10;\n// eslint-disable-next-line complexity\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n    const style = getComputedStyle(canvas);\n    const margins = getPositionedStyle(style, 'margin');\n    const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n    const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n    const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n    let { width , height  } = containerSize;\n    if (style.boxSizing === 'content-box') {\n        const borders = getPositionedStyle(style, 'border', 'width');\n        const paddings = getPositionedStyle(style, 'padding');\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    width = Math.max(0, width - margins.width);\n    height = Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height - margins.height);\n    width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n    height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n    if (width && !height) {\n        // https://github.com/chartjs/Chart.js/issues/4659\n        // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n        height = round1(width / 2);\n    }\n    const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n    if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n        height = containerSize.height;\n        width = round1(Math.floor(height * aspectRatio));\n    }\n    return {\n        width,\n        height\n    };\n}\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */ function retinaScale(chart, forceRatio, forceStyle) {\n    const pixelRatio = forceRatio || 1;\n    const deviceHeight = Math.floor(chart.height * pixelRatio);\n    const deviceWidth = Math.floor(chart.width * pixelRatio);\n    chart.height = deviceHeight / pixelRatio;\n    chart.width = deviceWidth / pixelRatio;\n    const canvas = chart.canvas;\n    // If no style has been set on the canvas, the render size is used as display size,\n    // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n    // See https://github.com/chartjs/Chart.js/issues/3575\n    if (canvas.style && (forceStyle || !canvas.style.height && !canvas.style.width)) {\n        canvas.style.height = `${chart.height}px`;\n        canvas.style.width = `${chart.width}px`;\n    }\n    if (chart.currentDevicePixelRatio !== pixelRatio || canvas.height !== deviceHeight || canvas.width !== deviceWidth) {\n        chart.currentDevicePixelRatio = pixelRatio;\n        canvas.height = deviceHeight;\n        canvas.width = deviceWidth;\n        chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n        return true;\n    }\n    return false;\n}\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */ const supportsEventListenerOptions = function() {\n    let passiveSupported = false;\n    try {\n        const options = {\n            get passive () {\n                passiveSupported = true;\n                return false;\n            }\n        };\n        window.addEventListener('test', null, options);\n        window.removeEventListener('test', null, options);\n    } catch (e) {\n    // continue regardless of error\n    }\n    return passiveSupported;\n}();\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */ function readUsedSize(element, property) {\n    const value = getStyle(element, property);\n    const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? +matches[1] : undefined;\n}\n\n/**\n * @private\n */ function _pointInLine(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: p1.y + t * (p2.y - p1.y)\n    };\n}\n/**\n * @private\n */ function _steppedInterpolation(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y : mode === 'after' ? t < 1 ? p1.y : p2.y : t > 0 ? p2.y : p1.y\n    };\n}\n/**\n * @private\n */ function _bezierInterpolation(p1, p2, t, mode) {\n    const cp1 = {\n        x: p1.cp2x,\n        y: p1.cp2y\n    };\n    const cp2 = {\n        x: p2.cp1x,\n        y: p2.cp1y\n    };\n    const a = _pointInLine(p1, cp1, t);\n    const b = _pointInLine(cp1, cp2, t);\n    const c = _pointInLine(cp2, p2, t);\n    const d = _pointInLine(a, b, t);\n    const e = _pointInLine(b, c, t);\n    return _pointInLine(d, e, t);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n    return {\n        x (x) {\n            return rectX + rectX + width - x;\n        },\n        setWidth (w) {\n            width = w;\n        },\n        textAlign (align) {\n            if (align === 'center') {\n                return align;\n            }\n            return align === 'right' ? 'left' : 'right';\n        },\n        xPlus (x, value) {\n            return x - value;\n        },\n        leftForLtr (x, itemWidth) {\n            return x - itemWidth;\n        }\n    };\n};\nconst getLeftToRightAdapter = function() {\n    return {\n        x (x) {\n            return x;\n        },\n        setWidth (w) {},\n        textAlign (align) {\n            return align;\n        },\n        xPlus (x, value) {\n            return x + value;\n        },\n        leftForLtr (x, _itemWidth) {\n            return x;\n        }\n    };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n    return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n    let style, original;\n    if (direction === 'ltr' || direction === 'rtl') {\n        style = ctx.canvas.style;\n        original = [\n            style.getPropertyValue('direction'),\n            style.getPropertyPriority('direction'), \n        ];\n        style.setProperty('direction', direction, 'important');\n        ctx.prevTextDirection = original;\n    }\n}\nfunction restoreTextDirection(ctx, original) {\n    if (original !== undefined) {\n        delete ctx.prevTextDirection;\n        ctx.canvas.style.setProperty('direction', original[0], original[1]);\n    }\n}\n\nfunction propertyFn(property) {\n    if (property === 'angle') {\n        return {\n            between: _angleBetween,\n            compare: _angleDiff,\n            normalize: _normalizeAngle\n        };\n    }\n    return {\n        between: _isBetween,\n        compare: (a, b)=>a - b,\n        normalize: (x)=>x\n    };\n}\nfunction normalizeSegment({ start , end , count , loop , style  }) {\n    return {\n        start: start % count,\n        end: end % count,\n        loop: loop && (end - start + 1) % count === 0,\n        style\n    };\n}\nfunction getSegment(segment, points, bounds) {\n    const { property , start: startBound , end: endBound  } = bounds;\n    const { between , normalize  } = propertyFn(property);\n    const count = points.length;\n    let { start , end , loop  } = segment;\n    let i, ilen;\n    if (loop) {\n        start += count;\n        end += count;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n                break;\n            }\n            start--;\n            end--;\n        }\n        start %= count;\n        end %= count;\n    }\n    if (end < start) {\n        end += count;\n    }\n    return {\n        start,\n        end,\n        loop,\n        style: segment.style\n    };\n}\n function _boundSegment(segment, points, bounds) {\n    if (!bounds) {\n        return [\n            segment\n        ];\n    }\n    const { property , start: startBound , end: endBound  } = bounds;\n    const count = points.length;\n    const { compare , between , normalize  } = propertyFn(property);\n    const { start , end , loop , style  } = getSegment(segment, points, bounds);\n    const result = [];\n    let inside = false;\n    let subStart = null;\n    let value, point, prevValue;\n    const startIsBefore = ()=>between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n    const endIsBefore = ()=>compare(endBound, value) === 0 || between(endBound, prevValue, value);\n    const shouldStart = ()=>inside || startIsBefore();\n    const shouldStop = ()=>!inside || endIsBefore();\n    for(let i = start, prev = start; i <= end; ++i){\n        point = points[i % count];\n        if (point.skip) {\n            continue;\n        }\n        value = normalize(point[property]);\n        if (value === prevValue) {\n            continue;\n        }\n        inside = between(value, startBound, endBound);\n        if (subStart === null && shouldStart()) {\n            subStart = compare(value, startBound) === 0 ? i : prev;\n        }\n        if (subStart !== null && shouldStop()) {\n            result.push(normalizeSegment({\n                start: subStart,\n                end: i,\n                loop,\n                count,\n                style\n            }));\n            subStart = null;\n        }\n        prev = i;\n        prevValue = value;\n    }\n    if (subStart !== null) {\n        result.push(normalizeSegment({\n            start: subStart,\n            end,\n            loop,\n            count,\n            style\n        }));\n    }\n    return result;\n}\n function _boundSegments(line, bounds) {\n    const result = [];\n    const segments = line.segments;\n    for(let i = 0; i < segments.length; i++){\n        const sub = _boundSegment(segments[i], line.points, bounds);\n        if (sub.length) {\n            result.push(...sub);\n        }\n    }\n    return result;\n}\n function findStartAndEnd(points, count, loop, spanGaps) {\n    let start = 0;\n    let end = count - 1;\n    if (loop && !spanGaps) {\n        while(start < count && !points[start].skip){\n            start++;\n        }\n    }\n    while(start < count && points[start].skip){\n        start++;\n    }\n    start %= count;\n    if (loop) {\n        end += start;\n    }\n    while(end > start && points[end % count].skip){\n        end--;\n    }\n    end %= count;\n    return {\n        start,\n        end\n    };\n}\n function solidSegments(points, start, max, loop) {\n    const count = points.length;\n    const result = [];\n    let last = start;\n    let prev = points[start];\n    let end;\n    for(end = start + 1; end <= max; ++end){\n        const cur = points[end % count];\n        if (cur.skip || cur.stop) {\n            if (!prev.skip) {\n                loop = false;\n                result.push({\n                    start: start % count,\n                    end: (end - 1) % count,\n                    loop\n                });\n                start = last = cur.stop ? end : null;\n            }\n        } else {\n            last = end;\n            if (prev.skip) {\n                start = end;\n            }\n        }\n        prev = cur;\n    }\n    if (last !== null) {\n        result.push({\n            start: start % count,\n            end: last % count,\n            loop\n        });\n    }\n    return result;\n}\n function _computeSegments(line, segmentOptions) {\n    const points = line.points;\n    const spanGaps = line.options.spanGaps;\n    const count = points.length;\n    if (!count) {\n        return [];\n    }\n    const loop = !!line._loop;\n    const { start , end  } = findStartAndEnd(points, count, loop, spanGaps);\n    if (spanGaps === true) {\n        return splitByStyles(line, [\n            {\n                start,\n                end,\n                loop\n            }\n        ], points, segmentOptions);\n    }\n    const max = end < start ? end + count : end;\n    const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n    return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n function splitByStyles(line, segments, points, segmentOptions) {\n    if (!segmentOptions || !segmentOptions.setContext || !points) {\n        return segments;\n    }\n    return doSplitByStyles(line, segments, points, segmentOptions);\n}\n function doSplitByStyles(line, segments, points, segmentOptions) {\n    const chartContext = line._chart.getContext();\n    const baseStyle = readStyle(line.options);\n    const { _datasetIndex: datasetIndex , options: { spanGaps  }  } = line;\n    const count = points.length;\n    const result = [];\n    let prevStyle = baseStyle;\n    let start = segments[0].start;\n    let i = start;\n    function addStyle(s, e, l, st) {\n        const dir = spanGaps ? -1 : 1;\n        if (s === e) {\n            return;\n        }\n        s += count;\n        while(points[s % count].skip){\n            s -= dir;\n        }\n        while(points[e % count].skip){\n            e += dir;\n        }\n        if (s % count !== e % count) {\n            result.push({\n                start: s % count,\n                end: e % count,\n                loop: l,\n                style: st\n            });\n            prevStyle = st;\n            start = e % count;\n        }\n    }\n    for (const segment of segments){\n        start = spanGaps ? start : segment.start;\n        let prev = points[start % count];\n        let style;\n        for(i = start + 1; i <= segment.end; i++){\n            const pt = points[i % count];\n            style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n                type: 'segment',\n                p0: prev,\n                p1: pt,\n                p0DataIndex: (i - 1) % count,\n                p1DataIndex: i % count,\n                datasetIndex\n            })));\n            if (styleChanged(style, prevStyle)) {\n                addStyle(start, i - 1, segment.loop, prevStyle);\n            }\n            prev = pt;\n            prevStyle = style;\n        }\n        if (start < i - 1) {\n            addStyle(start, i - 1, segment.loop, prevStyle);\n        }\n    }\n    return result;\n}\nfunction readStyle(options) {\n    return {\n        backgroundColor: options.backgroundColor,\n        borderCapStyle: options.borderCapStyle,\n        borderDash: options.borderDash,\n        borderDashOffset: options.borderDashOffset,\n        borderJoinStyle: options.borderJoinStyle,\n        borderWidth: options.borderWidth,\n        borderColor: options.borderColor\n    };\n}\nfunction styleChanged(style, prevStyle) {\n    return prevStyle && JSON.stringify(style) !== JSON.stringify(prevStyle);\n}\n\nexport { unclipArea as $, _rlookupByKey as A, _lookupByKey as B, _isPointInArea as C, getAngleFromPoint as D, toPadding as E, each as F, getMaximumSize as G, HALF_PI as H, _getParentNode as I, readUsedSize as J, supportsEventListenerOptions as K, throttled as L, _isDomSupported as M, _factorize as N, finiteOrDefault as O, PI as P, callback as Q, _addGrace as R, _limitValue as S, TAU as T, toDegrees as U, _measureText as V, _int16Range as W, _alignPixel as X, clipArea as Y, renderText as Z, _arrayUnique as _, resolve as a, fontString as a$, toFont as a0, _toLeftRightCenter as a1, _alignStartEnd as a2, overrides as a3, merge as a4, _capitalize as a5, descriptors as a6, isFunction as a7, _attachContext as a8, _createResolver as a9, overrideTextDirection as aA, _textX as aB, restoreTextDirection as aC, drawPointLegend as aD, distanceBetweenPoints as aE, noop as aF, _setMinAndMaxByKey as aG, niceNum as aH, almostWhole as aI, almostEquals as aJ, _decimalPlaces as aK, Ticks as aL, log10 as aM, _longestText as aN, _filterBetween as aO, _lookup as aP, isPatternOrGradient as aQ, getHoverColor as aR, clone$1 as aS, _merger as aT, _mergerIf as aU, _deprecated as aV, _splitKey as aW, toFontString as aX, splineCurve as aY, splineCurveMonotone as aZ, getStyle as a_, _descriptors as aa, mergeIf as ab, uid as ac, debounce as ad, retinaScale as ae, clearCanvas as af, setsEqual as ag, _elementsEqual as ah, _isClickEvent as ai, _isBetween as aj, _readValueToProps as ak, _updateBezierControlPoints as al, _computeSegments as am, _boundSegments as an, _steppedInterpolation as ao, _bezierInterpolation as ap, _pointInLine as aq, _steppedLineTo as ar, _bezierCurveTo as as, drawPoint as at, addRoundedRectPath as au, toTRBL as av, toTRBLCorners as aw, _boundSegment as ax, _normalizeAngle as ay, getRtlAdapter as az, isArray as b, toLineHeight as b0, PITAU as b1, INFINITY as b2, RAD_PER_DEG as b3, QUARTER_PI as b4, TWO_THIRDS_PI as b5, _angleDiff as b6, color as c, defaults as d, effects$1 as e, resolveObjectKey as f, isNumberFinite as g, defined as h, isObject as i, createContext as j, isNullOrUndef as k, listenArrayEvents as l, toPercentage as m, toDimension as n, formatNumber as o, _angleBetween as p, _getStartAndCountOfVisiblePoints as q, requestAnimFrame as r, sign as s, toRadians as t, unlistenArrayEvents as u, valueOrDefault as v, _scaleRangesChanged as w, isNumber as x, _parseObjectDataRadialScale as y, getRelativePosition as z };\n//# sourceMappingURL=helpers.segment.js.map\n","/*!\n * Chart.js v4.0.1\n * https://www.chartjs.org\n * (c) 2022 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, i as isObject, d as defaults, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as createContext, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, T as TAU, m as toPercentage, n as toDimension, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as _getStartAndCountOfVisiblePoints, w as _scaleRangesChanged, x as isNumber, y as _parseObjectDataRadialScale, z as getRelativePosition, A as _rlookupByKey, B as _lookupByKey, C as _isPointInArea, D as getAngleFromPoint, E as toPadding, F as each, G as getMaximumSize, I as _getParentNode, J as readUsedSize, K as supportsEventListenerOptions, L as throttled, M as _isDomSupported, N as _factorize, O as finiteOrDefault, Q as callback, R as _addGrace, S as _limitValue, U as toDegrees, V as _measureText, W as _int16Range, X as _alignPixel, Y as clipArea, Z as renderText, $ as unclipArea, a0 as toFont, a1 as _toLeftRightCenter, a2 as _alignStartEnd, a3 as overrides, a4 as merge, a5 as _capitalize, a6 as descriptors, a7 as isFunction, a8 as _attachContext, a9 as _createResolver, aa as _descriptors, ab as mergeIf, ac as uid, ad as debounce, ae as retinaScale, af as clearCanvas, ag as setsEqual, ah as _elementsEqual, ai as _isClickEvent, aj as _isBetween, ak as _readValueToProps, al as _updateBezierControlPoints, am as _computeSegments, an as _boundSegments, ao as _steppedInterpolation, ap as _bezierInterpolation, aq as _pointInLine, ar as _steppedLineTo, as as _bezierCurveTo, at as drawPoint, au as addRoundedRectPath, av as toTRBL, aw as toTRBLCorners, ax as _boundSegment, ay as _normalizeAngle, az as getRtlAdapter, aA as overrideTextDirection, aB as _textX, aC as restoreTextDirection, aD as drawPointLegend, aE as distanceBetweenPoints, aF as noop, aG as _setMinAndMaxByKey, aH as niceNum, aI as almostWhole, aJ as almostEquals, aK as _decimalPlaces, aL as Ticks, aM as log10, aN as _longestText, aO as _filterBetween, aP as _lookup } from './chunks/helpers.segment.js';\nexport { aL as Ticks, d as defaults } from './chunks/helpers.segment.js';\n\nclass Animator {\n    constructor(){\n        this._request = null;\n        this._charts = new Map();\n        this._running = false;\n        this._lastDate = undefined;\n    }\n _notify(chart, anims, date, type) {\n        const callbacks = anims.listeners[type];\n        const numSteps = anims.duration;\n        callbacks.forEach((fn)=>fn({\n                chart,\n                initial: anims.initial,\n                numSteps,\n                currentStep: Math.min(date - anims.start, numSteps)\n            }));\n    }\n _refresh() {\n        if (this._request) {\n            return;\n        }\n        this._running = true;\n        this._request = requestAnimFrame.call(window, ()=>{\n            this._update();\n            this._request = null;\n            if (this._running) {\n                this._refresh();\n            }\n        });\n    }\n _update(date = Date.now()) {\n        let remaining = 0;\n        this._charts.forEach((anims, chart)=>{\n            if (!anims.running || !anims.items.length) {\n                return;\n            }\n            const items = anims.items;\n            let i = items.length - 1;\n            let draw = false;\n            let item;\n            for(; i >= 0; --i){\n                item = items[i];\n                if (item._active) {\n                    if (item._total > anims.duration) {\n                        anims.duration = item._total;\n                    }\n                    item.tick(date);\n                    draw = true;\n                } else {\n                    items[i] = items[items.length - 1];\n                    items.pop();\n                }\n            }\n            if (draw) {\n                chart.draw();\n                this._notify(chart, anims, date, 'progress');\n            }\n            if (!items.length) {\n                anims.running = false;\n                this._notify(chart, anims, date, 'complete');\n                anims.initial = false;\n            }\n            remaining += items.length;\n        });\n        this._lastDate = date;\n        if (remaining === 0) {\n            this._running = false;\n        }\n    }\n _getAnims(chart) {\n        const charts = this._charts;\n        let anims = charts.get(chart);\n        if (!anims) {\n            anims = {\n                running: false,\n                initial: true,\n                items: [],\n                listeners: {\n                    complete: [],\n                    progress: []\n                }\n            };\n            charts.set(chart, anims);\n        }\n        return anims;\n    }\n listen(chart, event, cb) {\n        this._getAnims(chart).listeners[event].push(cb);\n    }\n add(chart, items) {\n        if (!items || !items.length) {\n            return;\n        }\n        this._getAnims(chart).items.push(...items);\n    }\n has(chart) {\n        return this._getAnims(chart).items.length > 0;\n    }\n start(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims) {\n            return;\n        }\n        anims.running = true;\n        anims.start = Date.now();\n        anims.duration = anims.items.reduce((acc, cur)=>Math.max(acc, cur._duration), 0);\n        this._refresh();\n    }\n    running(chart) {\n        if (!this._running) {\n            return false;\n        }\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.running || !anims.items.length) {\n            return false;\n        }\n        return true;\n    }\n stop(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.items.length) {\n            return;\n        }\n        const items = anims.items;\n        let i = items.length - 1;\n        for(; i >= 0; --i){\n            items[i].cancel();\n        }\n        anims.items = [];\n        this._notify(chart, anims, Date.now(), 'complete');\n    }\n remove(chart) {\n        return this._charts.delete(chart);\n    }\n}\nvar animator = /* #__PURE__ */ new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n    boolean (from, to, factor) {\n        return factor > 0.5 ? to : from;\n    },\n color (from, to, factor) {\n        const c0 = color(from || transparent);\n        const c1 = c0.valid && color(to || transparent);\n        return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n    },\n    number (from, to, factor) {\n        return from + (to - from) * factor;\n    }\n};\nclass Animation {\n    constructor(cfg, target, prop, to){\n        const currentValue = target[prop];\n        to = resolve([\n            cfg.to,\n            to,\n            currentValue,\n            cfg.from\n        ]);\n        const from = resolve([\n            cfg.from,\n            currentValue,\n            to\n        ]);\n        this._active = true;\n        this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n        this._easing = effects[cfg.easing] || effects.linear;\n        this._start = Math.floor(Date.now() + (cfg.delay || 0));\n        this._duration = this._total = Math.floor(cfg.duration);\n        this._loop = !!cfg.loop;\n        this._target = target;\n        this._prop = prop;\n        this._from = from;\n        this._to = to;\n        this._promises = undefined;\n    }\n    active() {\n        return this._active;\n    }\n    update(cfg, to, date) {\n        if (this._active) {\n            this._notify(false);\n            const currentValue = this._target[this._prop];\n            const elapsed = date - this._start;\n            const remain = this._duration - elapsed;\n            this._start = date;\n            this._duration = Math.floor(Math.max(remain, cfg.duration));\n            this._total += elapsed;\n            this._loop = !!cfg.loop;\n            this._to = resolve([\n                cfg.to,\n                to,\n                currentValue,\n                cfg.from\n            ]);\n            this._from = resolve([\n                cfg.from,\n                currentValue,\n                to\n            ]);\n        }\n    }\n    cancel() {\n        if (this._active) {\n            this.tick(Date.now());\n            this._active = false;\n            this._notify(false);\n        }\n    }\n    tick(date) {\n        const elapsed = date - this._start;\n        const duration = this._duration;\n        const prop = this._prop;\n        const from = this._from;\n        const loop = this._loop;\n        const to = this._to;\n        let factor;\n        this._active = from !== to && (loop || elapsed < duration);\n        if (!this._active) {\n            this._target[prop] = to;\n            this._notify(true);\n            return;\n        }\n        if (elapsed < 0) {\n            this._target[prop] = from;\n            return;\n        }\n        factor = elapsed / duration % 2;\n        factor = loop && factor > 1 ? 2 - factor : factor;\n        factor = this._easing(Math.min(1, Math.max(0, factor)));\n        this._target[prop] = this._fn(from, to, factor);\n    }\n    wait() {\n        const promises = this._promises || (this._promises = []);\n        return new Promise((res, rej)=>{\n            promises.push({\n                res,\n                rej\n            });\n        });\n    }\n    _notify(resolved) {\n        const method = resolved ? 'res' : 'rej';\n        const promises = this._promises || [];\n        for(let i = 0; i < promises.length; i++){\n            promises[i][method]();\n        }\n    }\n}\n\nclass Animations {\n    constructor(chart, config){\n        this._chart = chart;\n        this._properties = new Map();\n        this.configure(config);\n    }\n    configure(config) {\n        if (!isObject(config)) {\n            return;\n        }\n        const animationOptions = Object.keys(defaults.animation);\n        const animatedProps = this._properties;\n        Object.getOwnPropertyNames(config).forEach((key)=>{\n            const cfg = config[key];\n            if (!isObject(cfg)) {\n                return;\n            }\n            const resolved = {};\n            for (const option of animationOptions){\n                resolved[option] = cfg[option];\n            }\n            (isArray(cfg.properties) && cfg.properties || [\n                key\n            ]).forEach((prop)=>{\n                if (prop === key || !animatedProps.has(prop)) {\n                    animatedProps.set(prop, resolved);\n                }\n            });\n        });\n    }\n _animateOptions(target, values) {\n        const newOptions = values.options;\n        const options = resolveTargetOptions(target, newOptions);\n        if (!options) {\n            return [];\n        }\n        const animations = this._createAnimations(options, newOptions);\n        if (newOptions.$shared) {\n            awaitAll(target.options.$animations, newOptions).then(()=>{\n                target.options = newOptions;\n            }, ()=>{\n            });\n        }\n        return animations;\n    }\n _createAnimations(target, values) {\n        const animatedProps = this._properties;\n        const animations = [];\n        const running = target.$animations || (target.$animations = {});\n        const props = Object.keys(values);\n        const date = Date.now();\n        let i;\n        for(i = props.length - 1; i >= 0; --i){\n            const prop = props[i];\n            if (prop.charAt(0) === '$') {\n                continue;\n            }\n            if (prop === 'options') {\n                animations.push(...this._animateOptions(target, values));\n                continue;\n            }\n            const value = values[prop];\n            let animation = running[prop];\n            const cfg = animatedProps.get(prop);\n            if (animation) {\n                if (cfg && animation.active()) {\n                    animation.update(cfg, value, date);\n                    continue;\n                } else {\n                    animation.cancel();\n                }\n            }\n            if (!cfg || !cfg.duration) {\n                target[prop] = value;\n                continue;\n            }\n            running[prop] = animation = new Animation(cfg, target, prop, value);\n            animations.push(animation);\n        }\n        return animations;\n    }\n update(target, values) {\n        if (this._properties.size === 0) {\n            Object.assign(target, values);\n            return;\n        }\n        const animations = this._createAnimations(target, values);\n        if (animations.length) {\n            animator.add(this._chart, animations);\n            return true;\n        }\n    }\n}function awaitAll(animations, properties) {\n    const running = [];\n    const keys = Object.keys(properties);\n    for(let i = 0; i < keys.length; i++){\n        const anim = animations[keys[i]];\n        if (anim && anim.active()) {\n            running.push(anim.wait());\n        }\n    }\n    return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n    if (!newOptions) {\n        return;\n    }\n    let options = target.options;\n    if (!options) {\n        target.options = newOptions;\n        return;\n    }\n    if (options.$shared) {\n        target.options = options = Object.assign({}, options, {\n            $shared: false,\n            $animations: {}\n        });\n    }\n    return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n    const opts = scale && scale.options || {};\n    const reverse = opts.reverse;\n    const min = opts.min === undefined ? allowedOverflow : 0;\n    const max = opts.max === undefined ? allowedOverflow : 0;\n    return {\n        start: reverse ? max : min,\n        end: reverse ? min : max\n    };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n    if (allowedOverflow === false) {\n        return false;\n    }\n    const x = scaleClip(xScale, allowedOverflow);\n    const y = scaleClip(yScale, allowedOverflow);\n    return {\n        top: y.end,\n        right: x.end,\n        bottom: y.start,\n        left: x.start\n    };\n}\nfunction toClip(value) {\n    let t, r, b, l;\n    if (isObject(value)) {\n        t = value.top;\n        r = value.right;\n        b = value.bottom;\n        l = value.left;\n    } else {\n        t = r = b = l = value;\n    }\n    return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        disabled: value === false\n    };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n    const keys = [];\n    const metasets = chart._getSortedDatasetMetas(filterVisible);\n    let i, ilen;\n    for(i = 0, ilen = metasets.length; i < ilen; ++i){\n        keys.push(metasets[i].index);\n    }\n    return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n    const keys = stack.keys;\n    const singleMode = options.mode === 'single';\n    let i, ilen, datasetIndex, otherValue;\n    if (value === null) {\n        return;\n    }\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        datasetIndex = +keys[i];\n        if (datasetIndex === dsIndex) {\n            if (options.all) {\n                continue;\n            }\n            break;\n        }\n        otherValue = stack.values[datasetIndex];\n        if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n            value += otherValue;\n        }\n    }\n    return value;\n}\nfunction convertObjectDataToArray(data) {\n    const keys = Object.keys(data);\n    const adata = new Array(keys.length);\n    let i, ilen, key;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        key = keys[i];\n        adata[i] = {\n            x: key,\n            y: data[key]\n        };\n    }\n    return adata;\n}\nfunction isStacked(scale, meta) {\n    const stacked = scale && scale.options.stacked;\n    return stacked || stacked === undefined && meta.stack !== undefined;\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n    return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n    const { min , max , minDefined , maxDefined  } = scale.getUserBounds();\n    return {\n        min: minDefined ? min : Number.NEGATIVE_INFINITY,\n        max: maxDefined ? max : Number.POSITIVE_INFINITY\n    };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n    const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n    return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n    for (const meta of vScale.getMatchingVisibleMetas(type).reverse()){\n        const value = stack[meta.index];\n        if (positive && value > 0 || !positive && value < 0) {\n            return meta.index;\n        }\n    }\n    return null;\n}\nfunction updateStacks(controller, parsed) {\n    const { chart , _cachedMeta: meta  } = controller;\n    const stacks = chart._stacks || (chart._stacks = {});\n    const { iScale , vScale , index: datasetIndex  } = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const key = getStackKey(iScale, vScale, meta);\n    const ilen = parsed.length;\n    let stack;\n    for(let i = 0; i < ilen; ++i){\n        const item = parsed[i];\n        const { [iAxis]: index , [vAxis]: value  } = item;\n        const itemStacks = item._stacks || (item._stacks = {});\n        stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n        stack[datasetIndex] = value;\n        stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n        stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n    }\n}\nfunction getFirstScaleId(chart, axis) {\n    const scales = chart.scales;\n    return Object.keys(scales).filter((key)=>scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n    return createContext(parent, {\n        active: false,\n        dataset: undefined,\n        datasetIndex: index,\n        index,\n        mode: 'default',\n        type: 'dataset'\n    });\n}\nfunction createDataContext(parent, index, element) {\n    return createContext(parent, {\n        active: false,\n        dataIndex: index,\n        parsed: undefined,\n        raw: undefined,\n        element,\n        index,\n        mode: 'default',\n        type: 'data'\n    });\n}\nfunction clearStacks(meta, items) {\n    const datasetIndex = meta.controller.index;\n    const axis = meta.vScale && meta.vScale.axis;\n    if (!axis) {\n        return;\n    }\n    items = items || meta._parsed;\n    for (const parsed of items){\n        const stacks = parsed._stacks;\n        if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n            return;\n        }\n        delete stacks[axis][datasetIndex];\n    }\n}\nconst isDirectUpdateMode = (mode)=>mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared)=>shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart)=>canStack && !meta.hidden && meta._stacked && {\n        keys: getSortedDatasetIndices(chart, true),\n        values: null\n    };\nclass DatasetController {\n static defaults = {};\n static datasetElementType = null;\n static dataElementType = null;\n constructor(chart, datasetIndex){\n        this.chart = chart;\n        this._ctx = chart.ctx;\n        this.index = datasetIndex;\n        this._cachedDataOpts = {};\n        this._cachedMeta = this.getMeta();\n        this._type = this._cachedMeta.type;\n        this.options = undefined;\n         this._parsing = false;\n        this._data = undefined;\n        this._objectData = undefined;\n        this._sharedOptions = undefined;\n        this._drawStart = undefined;\n        this._drawCount = undefined;\n        this.enableOptionSharing = false;\n        this.supportsDecimation = false;\n        this.$context = undefined;\n        this._syncList = [];\n        this.datasetElementType = new.target.datasetElementType;\n        this.dataElementType = new.target.dataElementType;\n        this.initialize();\n    }\n    initialize() {\n        const meta = this._cachedMeta;\n        this.configure();\n        this.linkScales();\n        meta._stacked = isStacked(meta.vScale, meta);\n        this.addElements();\n        if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n            console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n        }\n    }\n    updateIndex(datasetIndex) {\n        if (this.index !== datasetIndex) {\n            clearStacks(this._cachedMeta);\n        }\n        this.index = datasetIndex;\n    }\n    linkScales() {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        const chooseId = (axis, x, y, r)=>axis === 'x' ? x : axis === 'r' ? r : y;\n        const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n        const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n        const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n        const indexAxis = meta.indexAxis;\n        const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n        const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n        meta.xScale = this.getScaleForId(xid);\n        meta.yScale = this.getScaleForId(yid);\n        meta.rScale = this.getScaleForId(rid);\n        meta.iScale = this.getScaleForId(iid);\n        meta.vScale = this.getScaleForId(vid);\n    }\n    getDataset() {\n        return this.chart.data.datasets[this.index];\n    }\n    getMeta() {\n        return this.chart.getDatasetMeta(this.index);\n    }\n getScaleForId(scaleID) {\n        return this.chart.scales[scaleID];\n    }\n _getOtherScale(scale) {\n        const meta = this._cachedMeta;\n        return scale === meta.iScale ? meta.vScale : meta.iScale;\n    }\n    reset() {\n        this._update('reset');\n    }\n _destroy() {\n        const meta = this._cachedMeta;\n        if (this._data) {\n            unlistenArrayEvents(this._data, this);\n        }\n        if (meta._stacked) {\n            clearStacks(meta);\n        }\n    }\n _dataCheck() {\n        const dataset = this.getDataset();\n        const data = dataset.data || (dataset.data = []);\n        const _data = this._data;\n        if (isObject(data)) {\n            this._data = convertObjectDataToArray(data);\n        } else if (_data !== data) {\n            if (_data) {\n                unlistenArrayEvents(_data, this);\n                const meta = this._cachedMeta;\n                clearStacks(meta);\n                meta._parsed = [];\n            }\n            if (data && Object.isExtensible(data)) {\n                listenArrayEvents(data, this);\n            }\n            this._syncList = [];\n            this._data = data;\n        }\n    }\n    addElements() {\n        const meta = this._cachedMeta;\n        this._dataCheck();\n        if (this.datasetElementType) {\n            meta.dataset = new this.datasetElementType();\n        }\n    }\n    buildOrUpdateElements(resetNewElements) {\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        let stackChanged = false;\n        this._dataCheck();\n        const oldStacked = meta._stacked;\n        meta._stacked = isStacked(meta.vScale, meta);\n        if (meta.stack !== dataset.stack) {\n            stackChanged = true;\n            clearStacks(meta);\n            meta.stack = dataset.stack;\n        }\n        this._resyncElements(resetNewElements);\n        if (stackChanged || oldStacked !== meta._stacked) {\n            updateStacks(this, meta._parsed);\n        }\n    }\n configure() {\n        const config = this.chart.config;\n        const scopeKeys = config.datasetScopeKeys(this._type);\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n        this.options = config.createResolver(scopes, this.getContext());\n        this._parsing = this.options.parsing;\n        this._cachedDataOpts = {};\n    }\n parse(start, count) {\n        const { _cachedMeta: meta , _data: data  } = this;\n        const { iScale , _stacked  } = meta;\n        const iAxis = iScale.axis;\n        let sorted = start === 0 && count === data.length ? true : meta._sorted;\n        let prev = start > 0 && meta._parsed[start - 1];\n        let i, cur, parsed;\n        if (this._parsing === false) {\n            meta._parsed = data;\n            meta._sorted = true;\n            parsed = data;\n        } else {\n            if (isArray(data[start])) {\n                parsed = this.parseArrayData(meta, data, start, count);\n            } else if (isObject(data[start])) {\n                parsed = this.parseObjectData(meta, data, start, count);\n            } else {\n                parsed = this.parsePrimitiveData(meta, data, start, count);\n            }\n            const isNotInOrderComparedToPrev = ()=>cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n            for(i = 0; i < count; ++i){\n                meta._parsed[i + start] = cur = parsed[i];\n                if (sorted) {\n                    if (isNotInOrderComparedToPrev()) {\n                        sorted = false;\n                    }\n                    prev = cur;\n                }\n            }\n            meta._sorted = sorted;\n        }\n        if (_stacked) {\n            updateStacks(this, parsed);\n        }\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const labels = iScale.getLabels();\n        const singleScale = iScale === vScale;\n        const parsed = new Array(count);\n        let i, ilen, index;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            parsed[i] = {\n                [iAxis]: singleScale || iScale.parse(labels[index], index),\n                [vAxis]: vScale.parse(data[index], index)\n            };\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(item[0], index),\n                y: yScale.parse(item[1], index)\n            };\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n                y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n            };\n        }\n        return parsed;\n    }\n getParsed(index) {\n        return this._cachedMeta._parsed[index];\n    }\n getDataElement(index) {\n        return this._cachedMeta.data[index];\n    }\n applyStack(scale, parsed, mode) {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const value = parsed[scale.axis];\n        const stack = {\n            keys: getSortedDatasetIndices(chart, true),\n            values: parsed._stacks[scale.axis]\n        };\n        return applyStack(stack, value, meta.index, {\n            mode\n        });\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        const parsedValue = parsed[scale.axis];\n        let value = parsedValue === null ? NaN : parsedValue;\n        const values = stack && parsed._stacks[scale.axis];\n        if (stack && values) {\n            stack.values = values;\n            value = applyStack(stack, parsedValue, this._cachedMeta.index);\n        }\n        range.min = Math.min(range.min, value);\n        range.max = Math.max(range.max, value);\n    }\n getMinMax(scale, canStack) {\n        const meta = this._cachedMeta;\n        const _parsed = meta._parsed;\n        const sorted = meta._sorted && scale === meta.iScale;\n        const ilen = _parsed.length;\n        const otherScale = this._getOtherScale(scale);\n        const stack = createStack(canStack, meta, this.chart);\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        const { min: otherMin , max: otherMax  } = getUserBounds(otherScale);\n        let i, parsed;\n        function _skip() {\n            parsed = _parsed[i];\n            const otherValue = parsed[otherScale.axis];\n            return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n        }\n        for(i = 0; i < ilen; ++i){\n            if (_skip()) {\n                continue;\n            }\n            this.updateRangeFromParsed(range, scale, parsed, stack);\n            if (sorted) {\n                break;\n            }\n        }\n        if (sorted) {\n            for(i = ilen - 1; i >= 0; --i){\n                if (_skip()) {\n                    continue;\n                }\n                this.updateRangeFromParsed(range, scale, parsed, stack);\n                break;\n            }\n        }\n        return range;\n    }\n    getAllParsedValues(scale) {\n        const parsed = this._cachedMeta._parsed;\n        const values = [];\n        let i, ilen, value;\n        for(i = 0, ilen = parsed.length; i < ilen; ++i){\n            value = parsed[i][scale.axis];\n            if (isNumberFinite(value)) {\n                values.push(value);\n            }\n        }\n        return values;\n    }\n getMaxOverflow() {\n        return false;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const vScale = meta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n            value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n        };\n    }\n _update(mode) {\n        const meta = this._cachedMeta;\n        this.update(mode || 'default');\n        meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n    }\n update(mode) {}\n    draw() {\n        const ctx = this._ctx;\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const elements = meta.data || [];\n        const area = chart.chartArea;\n        const active = [];\n        const start = this._drawStart || 0;\n        const count = this._drawCount || elements.length - start;\n        const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n        let i;\n        if (meta.dataset) {\n            meta.dataset.draw(ctx, area, start, count);\n        }\n        for(i = start; i < start + count; ++i){\n            const element = elements[i];\n            if (element.hidden) {\n                continue;\n            }\n            if (element.active && drawActiveElementsOnTop) {\n                active.push(element);\n            } else {\n                element.draw(ctx, area);\n            }\n        }\n        for(i = 0; i < active.length; ++i){\n            active[i].draw(ctx, area);\n        }\n    }\n getStyle(index, active) {\n        const mode = active ? 'active' : 'default';\n        return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n    }\n getContext(index, active, mode) {\n        const dataset = this.getDataset();\n        let context;\n        if (index >= 0 && index < this._cachedMeta.data.length) {\n            const element = this._cachedMeta.data[index];\n            context = element.$context || (element.$context = createDataContext(this.getContext(), index, element));\n            context.parsed = this.getParsed(index);\n            context.raw = dataset.data[index];\n            context.index = context.dataIndex = index;\n        } else {\n            context = this.$context || (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n            context.dataset = dataset;\n            context.index = context.datasetIndex = this.index;\n        }\n        context.active = !!active;\n        context.mode = mode;\n        return context;\n    }\n resolveDatasetElementOptions(mode) {\n        return this._resolveElementOptions(this.datasetElementType.id, mode);\n    }\n resolveDataElementOptions(index, mode) {\n        return this._resolveElementOptions(this.dataElementType.id, mode, index);\n    }\n _resolveElementOptions(elementType, mode = 'default', index) {\n        const active = mode === 'active';\n        const cache = this._cachedDataOpts;\n        const cacheKey = elementType + '-' + mode;\n        const cached = cache[cacheKey];\n        const sharing = this.enableOptionSharing && defined(index);\n        if (cached) {\n            return cloneIfNotShared(cached, sharing);\n        }\n        const config = this.chart.config;\n        const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n        const prefixes = active ? [\n            `${elementType}Hover`,\n            'hover',\n            elementType,\n            ''\n        ] : [\n            elementType,\n            ''\n        ];\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n        const names = Object.keys(defaults.elements[elementType]);\n        const context = ()=>this.getContext(index, active);\n        const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n        if (values.$shared) {\n            values.$shared = sharing;\n            cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n        }\n        return values;\n    }\n _resolveAnimations(index, transition, active) {\n        const chart = this.chart;\n        const cache = this._cachedDataOpts;\n        const cacheKey = `animation-${transition}`;\n        const cached = cache[cacheKey];\n        if (cached) {\n            return cached;\n        }\n        let options;\n        if (chart.options.animation !== false) {\n            const config = this.chart.config;\n            const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n            const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n            options = config.createResolver(scopes, this.getContext(index, active, transition));\n        }\n        const animations = new Animations(chart, options && options.animations);\n        if (options && options._cacheable) {\n            cache[cacheKey] = Object.freeze(animations);\n        }\n        return animations;\n    }\n getSharedOptions(options) {\n        if (!options.$shared) {\n            return;\n        }\n        return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n    }\n includeOptions(mode, sharedOptions) {\n        return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n    }\n _getSharedOptions(start, mode) {\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const previouslySharedOptions = this._sharedOptions;\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions) || sharedOptions !== previouslySharedOptions;\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n        return {\n            sharedOptions,\n            includeOptions\n        };\n    }\n updateElement(element, index, properties, mode) {\n        if (isDirectUpdateMode(mode)) {\n            Object.assign(element, properties);\n        } else {\n            this._resolveAnimations(index, mode).update(element, properties);\n        }\n    }\n updateSharedOptions(sharedOptions, mode, newOptions) {\n        if (sharedOptions && !isDirectUpdateMode(mode)) {\n            this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n        }\n    }\n _setStyle(element, index, mode, active) {\n        element.active = active;\n        const options = this.getStyle(index, active);\n        this._resolveAnimations(index, mode, active).update(element, {\n            options: !active && this.getSharedOptions(options) || options\n        });\n    }\n    removeHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', false);\n    }\n    setHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', true);\n    }\n _removeDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', false);\n        }\n    }\n _setDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', true);\n        }\n    }\n _resyncElements(resetNewElements) {\n        const data = this._data;\n        const elements = this._cachedMeta.data;\n        for (const [method, arg1, arg2] of this._syncList){\n            this[method](arg1, arg2);\n        }\n        this._syncList = [];\n        const numMeta = elements.length;\n        const numData = data.length;\n        const count = Math.min(numData, numMeta);\n        if (count) {\n            this.parse(0, count);\n        }\n        if (numData > numMeta) {\n            this._insertElements(numMeta, numData - numMeta, resetNewElements);\n        } else if (numData < numMeta) {\n            this._removeElements(numData, numMeta - numData);\n        }\n    }\n _insertElements(start, count, resetNewElements = true) {\n        const meta = this._cachedMeta;\n        const data = meta.data;\n        const end = start + count;\n        let i;\n        const move = (arr)=>{\n            arr.length += count;\n            for(i = arr.length - 1; i >= end; i--){\n                arr[i] = arr[i - count];\n            }\n        };\n        move(data);\n        for(i = start; i < end; ++i){\n            data[i] = new this.dataElementType();\n        }\n        if (this._parsing) {\n            move(meta._parsed);\n        }\n        this.parse(start, count);\n        if (resetNewElements) {\n            this.updateElements(data, start, count, 'reset');\n        }\n    }\n    updateElements(element, start, count, mode) {}\n _removeElements(start, count) {\n        const meta = this._cachedMeta;\n        if (this._parsing) {\n            const removed = meta._parsed.splice(start, count);\n            if (meta._stacked) {\n                clearStacks(meta, removed);\n            }\n        }\n        meta.data.splice(start, count);\n    }\n _sync(args) {\n        if (this._parsing) {\n            this._syncList.push(args);\n        } else {\n            const [method, arg1, arg2] = args;\n            this[method](arg1, arg2);\n        }\n        this.chart._dataChanges.push([\n            this.index,\n            ...args\n        ]);\n    }\n    _onDataPush() {\n        const count = arguments.length;\n        this._sync([\n            '_insertElements',\n            this.getDataset().data.length - count,\n            count\n        ]);\n    }\n    _onDataPop() {\n        this._sync([\n            '_removeElements',\n            this._cachedMeta.data.length - 1,\n            1\n        ]);\n    }\n    _onDataShift() {\n        this._sync([\n            '_removeElements',\n            0,\n            1\n        ]);\n    }\n    _onDataSplice(start, count) {\n        if (count) {\n            this._sync([\n                '_removeElements',\n                start,\n                count\n            ]);\n        }\n        const newCount = arguments.length - 2;\n        if (newCount) {\n            this._sync([\n                '_insertElements',\n                start,\n                newCount\n            ]);\n        }\n    }\n    _onDataUnshift() {\n        this._sync([\n            '_insertElements',\n            0,\n            arguments.length\n        ]);\n    }\n}\n\nfunction getAllScaleValues(scale, type) {\n    if (!scale._cache.$bar) {\n        const visibleMetas = scale.getMatchingVisibleMetas(type);\n        let values = [];\n        for(let i = 0, ilen = visibleMetas.length; i < ilen; i++){\n            values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n        }\n        scale._cache.$bar = _arrayUnique(values.sort((a, b)=>a - b));\n    }\n    return scale._cache.$bar;\n}\n function computeMinSampleSize(meta) {\n    const scale = meta.iScale;\n    const values = getAllScaleValues(scale, meta.type);\n    let min = scale._length;\n    let i, ilen, curr, prev;\n    const updateMinAndPrev = ()=>{\n        if (curr === 32767 || curr === -32768) {\n            return;\n        }\n        if (defined(prev)) {\n            min = Math.min(min, Math.abs(curr - prev) || min);\n        }\n        prev = curr;\n    };\n    for(i = 0, ilen = values.length; i < ilen; ++i){\n        curr = scale.getPixelForValue(values[i]);\n        updateMinAndPrev();\n    }\n    prev = undefined;\n    for(i = 0, ilen = scale.ticks.length; i < ilen; ++i){\n        curr = scale.getPixelForTick(i);\n        updateMinAndPrev();\n    }\n    return min;\n}\n function computeFitCategoryTraits(index, ruler, options, stackCount) {\n    const thickness = options.barThickness;\n    let size, ratio;\n    if (isNullOrUndef(thickness)) {\n        size = ruler.min * options.categoryPercentage;\n        ratio = options.barPercentage;\n    } else {\n        size = thickness * stackCount;\n        ratio = 1;\n    }\n    return {\n        chunk: size / stackCount,\n        ratio,\n        start: ruler.pixels[index] - size / 2\n    };\n}\n function computeFlexCategoryTraits(index, ruler, options, stackCount) {\n    const pixels = ruler.pixels;\n    const curr = pixels[index];\n    let prev = index > 0 ? pixels[index - 1] : null;\n    let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    const percent = options.categoryPercentage;\n    if (prev === null) {\n        prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n    if (next === null) {\n        next = curr + curr - prev;\n    }\n    const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    const size = Math.abs(next - prev) / 2 * percent;\n    return {\n        chunk: size / stackCount,\n        ratio: options.barPercentage,\n        start\n    };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n    const startValue = vScale.parse(entry[0], i);\n    const endValue = vScale.parse(entry[1], i);\n    const min = Math.min(startValue, endValue);\n    const max = Math.max(startValue, endValue);\n    let barStart = min;\n    let barEnd = max;\n    if (Math.abs(min) > Math.abs(max)) {\n        barStart = max;\n        barEnd = min;\n    }\n    item[vScale.axis] = barEnd;\n    item._custom = {\n        barStart,\n        barEnd,\n        start: startValue,\n        end: endValue,\n        min,\n        max\n    };\n}\nfunction parseValue(entry, item, vScale, i) {\n    if (isArray(entry)) {\n        parseFloatBar(entry, item, vScale, i);\n    } else {\n        item[vScale.axis] = vScale.parse(entry, i);\n    }\n    return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = [];\n    let i, ilen, item, entry;\n    for(i = start, ilen = start + count; i < ilen; ++i){\n        entry = data[i];\n        item = {};\n        item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n        parsed.push(parseValue(entry, item, vScale, i));\n    }\n    return parsed;\n}\nfunction isFloatBar(custom) {\n    return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n    if (size !== 0) {\n        return sign(size);\n    }\n    return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n    let reverse, start, end, top, bottom;\n    if (properties.horizontal) {\n        reverse = properties.base > properties.x;\n        start = 'left';\n        end = 'right';\n    } else {\n        reverse = properties.base < properties.y;\n        start = 'bottom';\n        end = 'top';\n    }\n    if (reverse) {\n        top = 'end';\n        bottom = 'start';\n    } else {\n        top = 'start';\n        bottom = 'end';\n    }\n    return {\n        start,\n        end,\n        reverse,\n        top,\n        bottom\n    };\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n    let edge = options.borderSkipped;\n    const res = {};\n    if (!edge) {\n        properties.borderSkipped = res;\n        return;\n    }\n    if (edge === true) {\n        properties.borderSkipped = {\n            top: true,\n            right: true,\n            bottom: true,\n            left: true\n        };\n        return;\n    }\n    const { start , end , reverse , top , bottom  } = borderProps(properties);\n    if (edge === 'middle' && stack) {\n        properties.enableBorderRadius = true;\n        if ((stack._top || 0) === index) {\n            edge = top;\n        } else if ((stack._bottom || 0) === index) {\n            edge = bottom;\n        } else {\n            res[parseEdge(bottom, start, end, reverse)] = true;\n            edge = top;\n        }\n    }\n    res[parseEdge(edge, start, end, reverse)] = true;\n    properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n    if (reverse) {\n        edge = swap(edge, a, b);\n        edge = startEnd(edge, b, a);\n    } else {\n        edge = startEnd(edge, a, b);\n    }\n    return edge;\n}\nfunction swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n    return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, { inflateAmount  }, ratio) {\n    properties.inflateAmount = inflateAmount === 'auto' ? ratio === 1 ? 0.33 : 0 : inflateAmount;\n}\nclass BarController extends DatasetController {\n    static id = 'bar';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'bar',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        grouped: true,\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'base',\n                    'width',\n                    'height'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category',\n                offset: true,\n                grid: {\n                    offset: true\n                }\n            },\n            _value_: {\n                type: 'linear',\n                beginAtZero: true\n            }\n        }\n    };\n parsePrimitiveData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseArrayData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseObjectData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const parsed = [];\n        let i, ilen, item, obj;\n        for(i = start, ilen = start + count; i < ilen; ++i){\n            obj = data[i];\n            item = {};\n            item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n            parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n        }\n        return parsed;\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        super.updateRangeFromParsed(range, scale, parsed, stack);\n        const custom = parsed._custom;\n        if (custom && scale === this._cachedMeta.vScale) {\n            range.min = Math.min(range.min, custom.min);\n            range.max = Math.max(range.max, custom.max);\n        }\n    }\n getMaxOverflow() {\n        return 0;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const { iScale , vScale  } = meta;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n        return {\n            label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n            value\n        };\n    }\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n        const meta = this._cachedMeta;\n        meta.stack = this.getDataset().stack;\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        this.updateElements(meta.data, 0, meta.data.length, mode);\n    }\n    updateElements(bars, start, count, mode) {\n        const reset = mode === 'reset';\n        const { index , _cachedMeta: { vScale  }  } = this;\n        const base = vScale.getBasePixel();\n        const horizontal = vScale.isHorizontal();\n        const ruler = this._getRuler();\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        for(let i = start; i < start + count; i++){\n            const parsed = this.getParsed(i);\n            const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n                base,\n                head: base\n            } : this._calculateBarValuePixels(i);\n            const ipixels = this._calculateBarIndexPixels(i, ruler);\n            const stack = (parsed._stacks || {})[vScale.axis];\n            const properties = {\n                horizontal,\n                base: vpixels.base,\n                enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n                x: horizontal ? vpixels.head : ipixels.center,\n                y: horizontal ? ipixels.center : vpixels.head,\n                height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n                width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n            }\n            const options = properties.options || bars[i].options;\n            setBorderSkipped(properties, options, stack, index);\n            setInflateAmount(properties, options, ruler.ratio);\n            this.updateElement(bars[i], i, properties, mode);\n        }\n    }\n _getStacks(last, dataIndex) {\n        const { iScale  } = this._cachedMeta;\n        const metasets = iScale.getMatchingVisibleMetas(this._type).filter((meta)=>meta.controller.options.grouped);\n        const stacked = iScale.options.stacked;\n        const stacks = [];\n        const skipNull = (meta)=>{\n            const parsed = meta.controller.getParsed(dataIndex);\n            const val = parsed && parsed[meta.vScale.axis];\n            if (isNullOrUndef(val) || isNaN(val)) {\n                return true;\n            }\n        };\n        for (const meta of metasets){\n            if (dataIndex !== undefined && skipNull(meta)) {\n                continue;\n            }\n            if (stacked === false || stacks.indexOf(meta.stack) === -1 || stacked === undefined && meta.stack === undefined) {\n                stacks.push(meta.stack);\n            }\n            if (meta.index === last) {\n                break;\n            }\n        }\n        if (!stacks.length) {\n            stacks.push(undefined);\n        }\n        return stacks;\n    }\n _getStackCount(index) {\n        return this._getStacks(undefined, index).length;\n    }\n _getStackIndex(datasetIndex, name, dataIndex) {\n        const stacks = this._getStacks(datasetIndex, dataIndex);\n        const index = name !== undefined ? stacks.indexOf(name) : -1;\n        return index === -1 ? stacks.length - 1 : index;\n    }\n _getRuler() {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const pixels = [];\n        let i, ilen;\n        for(i = 0, ilen = meta.data.length; i < ilen; ++i){\n            pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n        }\n        const barThickness = opts.barThickness;\n        const min = barThickness || computeMinSampleSize(meta);\n        return {\n            min,\n            pixels,\n            start: iScale._startPixel,\n            end: iScale._endPixel,\n            stackCount: this._getStackCount(),\n            scale: iScale,\n            grouped: opts.grouped,\n            ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n        };\n    }\n _calculateBarValuePixels(index) {\n        const { _cachedMeta: { vScale , _stacked  } , options: { base: baseValue , minBarLength  }  } = this;\n        const actualBase = baseValue || 0;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const floating = isFloatBar(custom);\n        let value = parsed[vScale.axis];\n        let start = 0;\n        let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n        let head, size;\n        if (length !== value) {\n            start = length - value;\n            length = value;\n        }\n        if (floating) {\n            value = custom.barStart;\n            length = custom.barEnd - custom.barStart;\n            if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n                start = 0;\n            }\n            start += value;\n        }\n        const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n        let base = vScale.getPixelForValue(startValue);\n        if (this.chart.getDataVisibility(index)) {\n            head = vScale.getPixelForValue(start + length);\n        } else {\n            head = base;\n        }\n        size = head - base;\n        if (Math.abs(size) < minBarLength) {\n            size = barSign(size, vScale, actualBase) * minBarLength;\n            if (value === actualBase) {\n                base -= size / 2;\n            }\n            const startPixel = vScale.getPixelForDecimal(0);\n            const endPixel = vScale.getPixelForDecimal(1);\n            const min = Math.min(startPixel, endPixel);\n            const max = Math.max(startPixel, endPixel);\n            base = Math.max(Math.min(base, max), min);\n            head = base + size;\n        }\n        if (base === vScale.getPixelForValue(actualBase)) {\n            const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n            base += halfGrid;\n            size -= halfGrid;\n        }\n        return {\n            size,\n            base,\n            head,\n            center: head + size / 2\n        };\n    }\n _calculateBarIndexPixels(index, ruler) {\n        const scale = ruler.scale;\n        const options = this.options;\n        const skipNull = options.skipNull;\n        const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n        let center, size;\n        if (ruler.grouped) {\n            const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n            const range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount) : computeFitCategoryTraits(index, ruler, options, stackCount);\n            const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n            center = range.start + range.chunk * stackIndex + range.chunk / 2;\n            size = Math.min(maxBarThickness, range.chunk * range.ratio);\n        } else {\n            center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n            size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n        }\n        return {\n            base: center - size / 2,\n            head: center + size / 2,\n            center,\n            size\n        };\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        const vScale = meta.vScale;\n        const rects = meta.data;\n        const ilen = rects.length;\n        let i = 0;\n        for(; i < ilen; ++i){\n            if (this.getParsed(i)[vScale.axis] !== null) {\n                rects[i].draw(this._ctx);\n            }\n        }\n    }\n}\n\nclass BubbleController extends DatasetController {\n    static id = 'bubble';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'borderWidth',\n                    'radius'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const parsed = super.parsePrimitiveData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const parsed = super.parseArrayData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const parsed = super.parseObjectData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n getMaxOverflow() {\n        const data = this._cachedMeta.data;\n        let max = 0;\n        for(let i = data.length - 1; i >= 0; --i){\n            max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n        }\n        return max > 0 && max;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        const r = parsed._custom;\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n        };\n    }\n    update(mode) {\n        const points = this._cachedMeta.data;\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const parsed = !reset && this.getParsed(i);\n            const properties = {};\n            const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n            const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel);\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n                if (reset) {\n                    properties.options.radius = 0;\n                }\n            }\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n resolveDataElementOptions(index, mode) {\n        const parsed = this.getParsed(index);\n        let values = super.resolveDataElementOptions(index, mode);\n        if (values.$shared) {\n            values = Object.assign({}, values, {\n                $shared: false\n            });\n        }\n        const radius = values.radius;\n        if (mode !== 'active') {\n            values.radius = 0;\n        }\n        values.radius += valueOrDefault(parsed && parsed._custom, radius);\n        return values;\n    }\n}\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n    let ratioX = 1;\n    let ratioY = 1;\n    let offsetX = 0;\n    let offsetY = 0;\n    if (circumference < TAU) {\n        const startAngle = rotation;\n        const endAngle = startAngle + circumference;\n        const startX = Math.cos(startAngle);\n        const startY = Math.sin(startAngle);\n        const endX = Math.cos(endAngle);\n        const endY = Math.sin(endAngle);\n        const calcMax = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n        const calcMin = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n        const maxX = calcMax(0, startX, endX);\n        const maxY = calcMax(HALF_PI, startY, endY);\n        const minX = calcMin(PI, startX, endX);\n        const minY = calcMin(PI + HALF_PI, startY, endY);\n        ratioX = (maxX - minX) / 2;\n        ratioY = (maxY - minY) / 2;\n        offsetX = -(maxX + minX) / 2;\n        offsetY = -(maxY + minY) / 2;\n    }\n    return {\n        ratioX,\n        ratioY,\n        offsetX,\n        offsetY\n    };\n}\nclass DoughnutController extends DatasetController {\n    static id = 'doughnut';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: false\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'circumference',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius',\n                    'startAngle',\n                    'x',\n                    'y',\n                    'offset',\n                    'borderWidth',\n                    'spacing'\n                ]\n            }\n        },\n        cutout: '50%',\n        rotation: 0,\n        circumference: 360,\n        radius: '100%',\n        spacing: 0,\n        indexAxis: 'r'\n    };\n    static descriptors = {\n        _scriptable: (name)=>name !== 'spacing',\n        _indexable: (name)=>name !== 'spacing'\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.enableOptionSharing = true;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.offsetX = undefined;\n        this.offsetY = undefined;\n    }\n    linkScales() {}\n parse(start, count) {\n        const data = this.getDataset().data;\n        const meta = this._cachedMeta;\n        if (this._parsing === false) {\n            meta._parsed = data;\n        } else {\n            let getter = (i)=>+data[i];\n            if (isObject(data[start])) {\n                const { key ='value'  } = this._parsing;\n                getter = (i)=>+resolveObjectKey(data[i], key);\n            }\n            let i, ilen;\n            for(i = start, ilen = start + count; i < ilen; ++i){\n                meta._parsed[i] = getter(i);\n            }\n        }\n    }\n _getRotation() {\n        return toRadians(this.options.rotation - 90);\n    }\n _getCircumference() {\n        return toRadians(this.options.circumference);\n    }\n _getRotationExtents() {\n        let min = TAU;\n        let max = -TAU;\n        for(let i = 0; i < this.chart.data.datasets.length; ++i){\n            if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n                const controller = this.chart.getDatasetMeta(i).controller;\n                const rotation = controller._getRotation();\n                const circumference = controller._getCircumference();\n                min = Math.min(min, rotation);\n                max = Math.max(max, rotation + circumference);\n            }\n        }\n        return {\n            rotation: min,\n            circumference: max - min\n        };\n    }\n update(mode) {\n        const chart = this.chart;\n        const { chartArea  } = chart;\n        const meta = this._cachedMeta;\n        const arcs = meta.data;\n        const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n        const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n        const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n        const chartWeight = this._getRingWeight(this.index);\n        const { circumference , rotation  } = this._getRotationExtents();\n        const { ratioX , ratioY , offsetX , offsetY  } = getRatioAndOffset(rotation, circumference, cutout);\n        const maxWidth = (chartArea.width - spacing) / ratioX;\n        const maxHeight = (chartArea.height - spacing) / ratioY;\n        const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n        const outerRadius = toDimension(this.options.radius, maxRadius);\n        const innerRadius = Math.max(outerRadius * cutout, 0);\n        const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n        this.offsetX = offsetX * outerRadius;\n        this.offsetY = offsetY * outerRadius;\n        meta.total = this.calculateTotal();\n        this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n        this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n _circumference(i, reset) {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const circumference = this._getCircumference();\n        if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n            return 0;\n        }\n        return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const centerX = (chartArea.left + chartArea.right) / 2;\n        const centerY = (chartArea.top + chartArea.bottom) / 2;\n        const animateScale = reset && animationOpts.animateScale;\n        const innerRadius = animateScale ? 0 : this.innerRadius;\n        const outerRadius = animateScale ? 0 : this.outerRadius;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        let startAngle = this._getRotation();\n        let i;\n        for(i = 0; i < start; ++i){\n            startAngle += this._circumference(i, reset);\n        }\n        for(i = start; i < start + count; ++i){\n            const circumference = this._circumference(i, reset);\n            const arc = arcs[i];\n            const properties = {\n                x: centerX + this.offsetX,\n                y: centerY + this.offsetY,\n                startAngle,\n                endAngle: startAngle + circumference,\n                circumference,\n                outerRadius,\n                innerRadius\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n            }\n            startAngle += circumference;\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    calculateTotal() {\n        const meta = this._cachedMeta;\n        const metaData = meta.data;\n        let total = 0;\n        let i;\n        for(i = 0; i < metaData.length; i++){\n            const value = meta._parsed[i];\n            if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n                total += Math.abs(value);\n            }\n        }\n        return total;\n    }\n    calculateCircumference(value) {\n        const total = this._cachedMeta.total;\n        if (total > 0 && !isNaN(value)) {\n            return TAU * (Math.abs(value) / total);\n        }\n        return 0;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index], chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    getMaxBorderWidth(arcs) {\n        let max = 0;\n        const chart = this.chart;\n        let i, ilen, meta, controller, options;\n        if (!arcs) {\n            for(i = 0, ilen = chart.data.datasets.length; i < ilen; ++i){\n                if (chart.isDatasetVisible(i)) {\n                    meta = chart.getDatasetMeta(i);\n                    arcs = meta.data;\n                    controller = meta.controller;\n                    break;\n                }\n            }\n        }\n        if (!arcs) {\n            return 0;\n        }\n        for(i = 0, ilen = arcs.length; i < ilen; ++i){\n            options = controller.resolveDataElementOptions(i);\n            if (options.borderAlign !== 'inner') {\n                max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n            }\n        }\n        return max;\n    }\n    getMaxOffset(arcs) {\n        let max = 0;\n        for(let i = 0, ilen = arcs.length; i < ilen; ++i){\n            const options = this.resolveDataElementOptions(i);\n            max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n        }\n        return max;\n    }\n _getRingWeightOffset(datasetIndex) {\n        let ringWeightOffset = 0;\n        for(let i = 0; i < datasetIndex; ++i){\n            if (this.chart.isDatasetVisible(i)) {\n                ringWeightOffset += this._getRingWeight(i);\n            }\n        }\n        return ringWeightOffset;\n    }\n _getRingWeight(datasetIndex) {\n        return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n    }\n _getVisibleDatasetWeightTotal() {\n        return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n    }\n}\n\nclass LineController extends DatasetController {\n    static id = 'line';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        showLine: true,\n        spanGaps: false\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category'\n            },\n            _value_: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        this.supportsDecimation = true;\n        super.initialize();\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { dataset: line , data: points = [] , _dataset  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        line._chart = this.chart;\n        line._datasetIndex = this.index;\n        line._decimated = !!_dataset._decimated;\n        line.points = points;\n        const options = this.resolveDatasetElementOptions(mode);\n        if (!this.options.showLine) {\n            options.borderWidth = 0;\n        }\n        options.segment = this.options.segment;\n        this.updateElement(line, undefined, {\n            animated: !animationsDisabled,\n            options\n        }, mode);\n        this.updateElements(points, start, count, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        const end = start + count;\n        const pointsCount = points.length;\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = 0; i < pointsCount; ++i){\n            const point = points[i];\n            const properties = directUpdate ? point : {};\n            if (i < start || i >= end) {\n                properties.skip = true;\n                continue;\n            }\n            const parsed = this.getParsed(i);\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        const data = meta.data || [];\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n        super.draw();\n    }\n}\n\nclass PolarAreaController extends DatasetController {\n    static id = 'polarArea';\n static defaults = {\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: true\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'startAngle',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius'\n                ]\n            }\n        },\n        indexAxis: 'r',\n        startAngle: 0\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        },\n        scales: {\n            r: {\n                type: 'radialLinear',\n                angleLines: {\n                    display: false\n                },\n                beginAtZero: true,\n                grid: {\n                    circular: true\n                },\n                pointLabels: {\n                    display: false\n                },\n                startAngle: 0\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const arcs = this._cachedMeta.data;\n        this._updateRadius();\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n getMinMax() {\n        const meta = this._cachedMeta;\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        meta.data.forEach((element, index)=>{\n            const parsed = this.getParsed(index).r;\n            if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n                if (parsed < range.min) {\n                    range.min = parsed;\n                }\n                if (parsed > range.max) {\n                    range.max = parsed;\n                }\n            }\n        });\n        return range;\n    }\n _updateRadius() {\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n        const outerRadius = Math.max(minSize / 2, 0);\n        const innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n        const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n        this.outerRadius = outerRadius - radiusLength * this.index;\n        this.innerRadius = this.outerRadius - radiusLength;\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const scale = this._cachedMeta.rScale;\n        const centerX = scale.xCenter;\n        const centerY = scale.yCenter;\n        const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n        let angle = datasetStartAngle;\n        let i;\n        const defaultAngle = 360 / this.countVisibleElements();\n        for(i = 0; i < start; ++i){\n            angle += this._computeAngle(i, mode, defaultAngle);\n        }\n        for(i = start; i < start + count; i++){\n            const arc = arcs[i];\n            let startAngle = angle;\n            let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n            let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n            angle = endAngle;\n            if (reset) {\n                if (animationOpts.animateScale) {\n                    outerRadius = 0;\n                }\n                if (animationOpts.animateRotate) {\n                    startAngle = endAngle = datasetStartAngle;\n                }\n            }\n            const properties = {\n                x: centerX,\n                y: centerY,\n                innerRadius: 0,\n                outerRadius,\n                startAngle,\n                endAngle,\n                options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n            };\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    countVisibleElements() {\n        const meta = this._cachedMeta;\n        let count = 0;\n        meta.data.forEach((element, index)=>{\n            if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n                count++;\n            }\n        });\n        return count;\n    }\n _computeAngle(index, mode, defaultAngle) {\n        return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n    }\n}\n\nclass PieController extends DoughnutController {\n    static id = 'pie';\n static defaults = {\n        cutout: 0,\n        rotation: 0,\n        circumference: 360,\n        radius: '100%'\n    };\n}\n\nclass RadarController extends DatasetController {\n    static id = 'radar';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        indexAxis: 'r',\n        showLine: true,\n        elements: {\n            line: {\n                fill: 'start'\n            }\n        }\n    };\n static overrides = {\n        aspectRatio: 1,\n        scales: {\n            r: {\n                type: 'radialLinear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const vScale = this._cachedMeta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: vScale.getLabels()[index],\n            value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const line = meta.dataset;\n        const points = meta.data || [];\n        const labels = meta.iScale.getLabels();\n        line.points = points;\n        if (mode !== 'resize') {\n            const options = this.resolveDatasetElementOptions(mode);\n            if (!this.options.showLine) {\n                options.borderWidth = 0;\n            }\n            const properties = {\n                _loop: true,\n                _fullLoop: labels.length === points.length,\n                options\n            };\n            this.updateElement(line, undefined, properties, mode);\n        }\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const scale = this._cachedMeta.rScale;\n        const reset = mode === 'reset';\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n            const x = reset ? scale.xCenter : pointPosition.x;\n            const y = reset ? scale.yCenter : pointPosition.y;\n            const properties = {\n                x,\n                y,\n                angle: pointPosition.angle,\n                skip: isNaN(x) || isNaN(y),\n                options\n            };\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n}\n\nclass ScatterController extends DatasetController {\n    static id = 'scatter';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        showLine: false,\n        fill: false\n    };\n static overrides = {\n        interaction: {\n            mode: 'point'\n        },\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + ')'\n        };\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { data: points = []  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        if (this.options.showLine) {\n            const { dataset: line , _dataset  } = meta;\n            line._chart = this.chart;\n            line._datasetIndex = this.index;\n            line._decimated = !!_dataset._decimated;\n            line.points = points;\n            const options = this.resolveDatasetElementOptions(mode);\n            options.segment = this.options.segment;\n            this.updateElement(line, undefined, {\n                animated: !animationsDisabled,\n                options\n            }, mode);\n        }\n        this.updateElements(points, start, count, mode);\n    }\n    addElements() {\n        const { showLine  } = this.options;\n        if (!this.datasetElementType && showLine) {\n            this.datasetElementType = this.chart.registry.getElement('line');\n        }\n        super.addElements();\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = start; i < start + count; ++i){\n            const point = points[i];\n            const parsed = this.getParsed(i);\n            const properties = directUpdate ? point : {};\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const data = meta.data || [];\n        if (!this.options.showLine) {\n            let max = 0;\n            for(let i = data.length - 1; i >= 0; --i){\n                max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n            }\n            return max > 0 && max;\n        }\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n}\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPolarAreaController: PolarAreaController,\nPieController: PieController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\n/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */ function abstract() {\n    throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */ class DateAdapterBase {\n    /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */ static override(members) {\n        Object.assign(DateAdapterBase.prototype, members);\n    }\n    constructor(options){\n        this.options = options || {};\n    }\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    init() {}\n    formats() {\n        return abstract();\n    }\n    parse() {\n        return abstract();\n    }\n    format() {\n        return abstract();\n    }\n    add() {\n        return abstract();\n    }\n    diff() {\n        return abstract();\n    }\n    startOf() {\n        return abstract();\n    }\n    endOf() {\n        return abstract();\n    }\n}\nvar adapters = {\n    _date: DateAdapterBase\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n    const { controller , data , _sorted  } = metaset;\n    const iScale = controller._cachedMeta.iScale;\n    if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n        const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n        if (!intersect) {\n            return lookupMethod(data, axis, value);\n        } else if (controller._sharedOptions) {\n            const el = data[0];\n            const range = typeof el.getRange === 'function' && el.getRange(axis);\n            if (range) {\n                const start = lookupMethod(data, axis, value - range);\n                const end = lookupMethod(data, axis, value + range);\n                return {\n                    lo: start.lo,\n                    hi: end.hi\n                };\n            }\n        }\n    }\n    return {\n        lo: 0,\n        hi: data.length - 1\n    };\n}\n function evaluateInteractionItems(chart, axis, position, handler, intersect) {\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const value = position[axis];\n    for(let i = 0, ilen = metasets.length; i < ilen; ++i){\n        const { index , data  } = metasets[i];\n        const { lo , hi  } = binarySearch(metasets[i], axis, value, intersect);\n        for(let j = lo; j <= hi; ++j){\n            const element = data[j];\n            if (!element.skip) {\n                handler(element, index, j);\n            }\n        }\n    }\n}\n function getDistanceMetricForAxis(axis) {\n    const useX = axis.indexOf('x') !== -1;\n    const useY = axis.indexOf('y') !== -1;\n    return function(pt1, pt2) {\n        const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n        const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n        return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n}\n function getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n    const items = [];\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return items;\n    }\n    const evaluationFunc = function(element, datasetIndex, index) {\n        if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n            return;\n        }\n        if (element.inRange(position.x, position.y, useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    };\n    evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n    return items;\n}\n function getNearestRadialItems(chart, position, axis, useFinalPosition) {\n    let items = [];\n    function evaluationFunc(element, datasetIndex, index) {\n        const { startAngle , endAngle  } = element.getProps([\n            'startAngle',\n            'endAngle'\n        ], useFinalPosition);\n        const { angle  } = getAngleFromPoint(element, {\n            x: position.x,\n            y: position.y\n        });\n        if (_angleBetween(angle, startAngle, endAngle)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    let items = [];\n    const distanceMetric = getDistanceMetricForAxis(axis);\n    let minDistance = Number.POSITIVE_INFINITY;\n    function evaluationFunc(element, datasetIndex, index) {\n        const inRange = element.inRange(position.x, position.y, useFinalPosition);\n        if (intersect && !inRange) {\n            return;\n        }\n        const center = element.getCenterPoint(useFinalPosition);\n        const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n        if (!pointInArea && !inRange) {\n            return;\n        }\n        const distance = distanceMetric(position, center);\n        if (distance < minDistance) {\n            items = [\n                {\n                    element,\n                    datasetIndex,\n                    index\n                }\n            ];\n            minDistance = distance;\n        } else if (distance === minDistance) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return [];\n    }\n    return axis === 'r' && !intersect ? getNearestRadialItems(chart, position, axis, useFinalPosition) : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n function getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n    const items = [];\n    const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n    let intersectsItem = false;\n    evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index)=>{\n        if (element[rangeMethod](position[axis], useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n            intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n        }\n    });\n    if (intersect && !intersectsItem) {\n        return [];\n    }\n    return items;\n}\n var Interaction = {\n    evaluateInteractionItems,\n    modes: {\n index (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'x';\n            const includeInvisible = options.includeInvisible || false;\n            const items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            const elements = [];\n            if (!items.length) {\n                return [];\n            }\n            chart.getSortedVisibleDatasetMetas().forEach((meta)=>{\n                const index = items[0].index;\n                const element = meta.data[index];\n                if (element && !element.skip) {\n                    elements.push({\n                        element,\n                        datasetIndex: meta.index,\n                        index\n                    });\n                }\n            });\n            return elements;\n        },\n dataset (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            let items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            if (items.length > 0) {\n                const datasetIndex = items[0].datasetIndex;\n                const data = chart.getDatasetMeta(datasetIndex).data;\n                items = [];\n                for(let i = 0; i < data.length; ++i){\n                    items.push({\n                        element: data[i],\n                        datasetIndex,\n                        index: i\n                    });\n                }\n            }\n            return items;\n        },\n point (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n        },\n nearest (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n        },\n x (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n        },\n y (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n        }\n    }\n};\n\nconst STATIC_POSITIONS = [\n    'left',\n    'top',\n    'right',\n    'bottom'\n];\nfunction filterByPosition(array, position) {\n    return array.filter((v)=>v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n    return array.filter((v)=>STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n    return array.sort((a, b)=>{\n        const v0 = reverse ? b : a;\n        const v1 = reverse ? a : b;\n        return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n    });\n}\nfunction wrapBoxes(boxes) {\n    const layoutBoxes = [];\n    let i, ilen, box, pos, stack, stackWeight;\n    for(i = 0, ilen = (boxes || []).length; i < ilen; ++i){\n        box = boxes[i];\n        ({ position: pos , options: { stack , stackWeight =1  }  } = box);\n        layoutBoxes.push({\n            index: i,\n            box,\n            pos,\n            horizontal: box.isHorizontal(),\n            weight: box.weight,\n            stack: stack && pos + stack,\n            stackWeight\n        });\n    }\n    return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n    const stacks = {};\n    for (const wrap of layouts){\n        const { stack , pos , stackWeight  } = wrap;\n        if (!stack || !STATIC_POSITIONS.includes(pos)) {\n            continue;\n        }\n        const _stack = stacks[stack] || (stacks[stack] = {\n            count: 0,\n            placed: 0,\n            weight: 0,\n            size: 0\n        });\n        _stack.count++;\n        _stack.weight += stackWeight;\n    }\n    return stacks;\n}\n function setLayoutDims(layouts, params) {\n    const stacks = buildStacks(layouts);\n    const { vBoxMaxWidth , hBoxMaxHeight  } = params;\n    let i, ilen, layout;\n    for(i = 0, ilen = layouts.length; i < ilen; ++i){\n        layout = layouts[i];\n        const { fullSize  } = layout.box;\n        const stack = stacks[layout.stack];\n        const factor = stack && layout.stackWeight / stack.weight;\n        if (layout.horizontal) {\n            layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n            layout.height = hBoxMaxHeight;\n        } else {\n            layout.width = vBoxMaxWidth;\n            layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n        }\n    }\n    return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n    const layoutBoxes = wrapBoxes(boxes);\n    const fullSize = sortByWeight(layoutBoxes.filter((wrap)=>wrap.box.fullSize), true);\n    const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n    const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n    const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n    const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n    const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n    const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n    return {\n        fullSize,\n        leftAndTop: left.concat(top),\n        rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n        chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n        vertical: left.concat(right).concat(centerVertical),\n        horizontal: top.concat(bottom).concat(centerHorizontal)\n    };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n    return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n    maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n    maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n    maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n    maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n    const { pos , box  } = layout;\n    const maxPadding = chartArea.maxPadding;\n    if (!isObject(pos)) {\n        if (layout.size) {\n            chartArea[pos] -= layout.size;\n        }\n        const stack = stacks[layout.stack] || {\n            size: 0,\n            count: 1\n        };\n        stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n        layout.size = stack.size / stack.count;\n        chartArea[pos] += layout.size;\n    }\n    if (box.getPadding) {\n        updateMaxPadding(maxPadding, box.getPadding());\n    }\n    const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n    const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n    const widthChanged = newWidth !== chartArea.w;\n    const heightChanged = newHeight !== chartArea.h;\n    chartArea.w = newWidth;\n    chartArea.h = newHeight;\n    return layout.horizontal ? {\n        same: widthChanged,\n        other: heightChanged\n    } : {\n        same: heightChanged,\n        other: widthChanged\n    };\n}\nfunction handleMaxPadding(chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function updatePos(pos) {\n        const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n        chartArea[pos] += change;\n        return change;\n    }\n    chartArea.y += updatePos('top');\n    chartArea.x += updatePos('left');\n    updatePos('right');\n    updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function marginForPositions(positions) {\n        const margin = {\n            left: 0,\n            top: 0,\n            right: 0,\n            bottom: 0\n        };\n        positions.forEach((pos)=>{\n            margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n        });\n        return margin;\n    }\n    return horizontal ? marginForPositions([\n        'left',\n        'right'\n    ]) : marginForPositions([\n        'top',\n        'bottom'\n    ]);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n    const refitBoxes = [];\n    let i, ilen, layout, box, refit, changed;\n    for(i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i){\n        layout = boxes[i];\n        box = layout.box;\n        box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n        const { same , other  } = updateDims(chartArea, params, layout, stacks);\n        refit |= same && refitBoxes.length;\n        changed = changed || other;\n        if (!box.fullSize) {\n            refitBoxes.push(layout);\n        }\n    }\n    return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n    box.top = top;\n    box.left = left;\n    box.right = left + width;\n    box.bottom = top + height;\n    box.width = width;\n    box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n    const userPadding = params.padding;\n    let { x , y  } = chartArea;\n    for (const layout of boxes){\n        const box = layout.box;\n        const stack = stacks[layout.stack] || {\n            count: 1,\n            placed: 0,\n            weight: 1\n        };\n        const weight = layout.stackWeight / stack.weight || 1;\n        if (layout.horizontal) {\n            const width = chartArea.w * weight;\n            const height = stack.size || box.height;\n            if (defined(stack.start)) {\n                y = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n            } else {\n                setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n            }\n            stack.start = y;\n            stack.placed += width;\n            y = box.bottom;\n        } else {\n            const height1 = chartArea.h * weight;\n            const width1 = stack.size || box.width;\n            if (defined(stack.start)) {\n                x = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, x, userPadding.top, width1, params.outerHeight - userPadding.bottom - userPadding.top);\n            } else {\n                setBoxDims(box, x, chartArea.top + stack.placed, width1, height1);\n            }\n            stack.start = x;\n            stack.placed += height1;\n            x = box.right;\n        }\n    }\n    chartArea.x = x;\n    chartArea.y = y;\n}\nvar layouts = {\n addBox (chart, item) {\n        if (!chart.boxes) {\n            chart.boxes = [];\n        }\n        item.fullSize = item.fullSize || false;\n        item.position = item.position || 'top';\n        item.weight = item.weight || 0;\n        item._layers = item._layers || function() {\n            return [\n                {\n                    z: 0,\n                    draw (chartArea) {\n                        item.draw(chartArea);\n                    }\n                }\n            ];\n        };\n        chart.boxes.push(item);\n    },\n removeBox (chart, layoutItem) {\n        const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n        if (index !== -1) {\n            chart.boxes.splice(index, 1);\n        }\n    },\n configure (chart, item, options) {\n        item.fullSize = options.fullSize;\n        item.position = options.position;\n        item.weight = options.weight;\n    },\n update (chart, width, height, minPadding) {\n        if (!chart) {\n            return;\n        }\n        const padding = toPadding(chart.options.layout.padding);\n        const availableWidth = Math.max(width - padding.width, 0);\n        const availableHeight = Math.max(height - padding.height, 0);\n        const boxes = buildLayoutBoxes(chart.boxes);\n        const verticalBoxes = boxes.vertical;\n        const horizontalBoxes = boxes.horizontal;\n        each(chart.boxes, (box)=>{\n            if (typeof box.beforeLayout === 'function') {\n                box.beforeLayout();\n            }\n        });\n        const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap)=>wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n        const params = Object.freeze({\n            outerWidth: width,\n            outerHeight: height,\n            padding,\n            availableWidth,\n            availableHeight,\n            vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n            hBoxMaxHeight: availableHeight / 2\n        });\n        const maxPadding = Object.assign({}, padding);\n        updateMaxPadding(maxPadding, toPadding(minPadding));\n        const chartArea = Object.assign({\n            maxPadding,\n            w: availableWidth,\n            h: availableHeight,\n            x: padding.left,\n            y: padding.top\n        }, padding);\n        const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n        fitBoxes(boxes.fullSize, chartArea, params, stacks);\n        fitBoxes(verticalBoxes, chartArea, params, stacks);\n        if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n            fitBoxes(verticalBoxes, chartArea, params, stacks);\n        }\n        handleMaxPadding(chartArea);\n        placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n        chartArea.x += chartArea.w;\n        chartArea.y += chartArea.h;\n        placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n        chart.chartArea = {\n            left: chartArea.left,\n            top: chartArea.top,\n            right: chartArea.left + chartArea.w,\n            bottom: chartArea.top + chartArea.h,\n            height: chartArea.h,\n            width: chartArea.w\n        };\n        each(boxes.chartArea, (layout)=>{\n            const box = layout.box;\n            Object.assign(box, chart.chartArea);\n            box.update(chartArea.w, chartArea.h, {\n                left: 0,\n                top: 0,\n                right: 0,\n                bottom: 0\n            });\n        });\n    }\n};\n\nclass BasePlatform {\n acquireContext(canvas, aspectRatio) {}\n releaseContext(context) {\n        return false;\n    }\n addEventListener(chart, type, listener) {}\n removeEventListener(chart, type, listener) {}\n getDevicePixelRatio() {\n        return 1;\n    }\n getMaximumSize(element, width, height, aspectRatio) {\n        width = Math.max(0, width || element.width);\n        height = height || element.height;\n        return {\n            width,\n            height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n        };\n    }\n isAttached(canvas) {\n        return true;\n    }\n updateConfig(config) {\n    }\n}\n\nclass BasicPlatform extends BasePlatform {\n    acquireContext(item) {\n        return item && item.getContext && item.getContext('2d') || null;\n    }\n    updateConfig(config) {\n        config.options.animation = false;\n    }\n}\n\nconst EXPANDO_KEY = '$chartjs';\n const EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n};\nconst isNullOrEmpty = (value)=>value === null || value === '';\n function initCanvas(canvas, aspectRatio) {\n    const style = canvas.style;\n    const renderHeight = canvas.getAttribute('height');\n    const renderWidth = canvas.getAttribute('width');\n    canvas[EXPANDO_KEY] = {\n        initial: {\n            height: renderHeight,\n            width: renderWidth,\n            style: {\n                display: style.display,\n                height: style.height,\n                width: style.width\n            }\n        }\n    };\n    style.display = style.display || 'block';\n    style.boxSizing = style.boxSizing || 'border-box';\n    if (isNullOrEmpty(renderWidth)) {\n        const displayWidth = readUsedSize(canvas, 'width');\n        if (displayWidth !== undefined) {\n            canvas.width = displayWidth;\n        }\n    }\n    if (isNullOrEmpty(renderHeight)) {\n        if (canvas.style.height === '') {\n            canvas.height = canvas.width / (aspectRatio || 2);\n        } else {\n            const displayHeight = readUsedSize(canvas, 'height');\n            if (displayHeight !== undefined) {\n                canvas.height = displayHeight;\n            }\n        }\n    }\n    return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n} : false;\nfunction addListener(node, type, listener) {\n    node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n    chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n    const type = EVENT_TYPES[event.type] || event.type;\n    const { x , y  } = getRelativePosition(event, chart);\n    return {\n        type,\n        chart,\n        native: event,\n        x: x !== undefined ? x : null,\n        y: y !== undefined ? y : null\n    };\n}\nfunction nodeListContains(nodeList, canvas) {\n    for (const node of nodeList){\n        if (node === canvas || node.contains(canvas)) {\n            return true;\n        }\n    }\n}\nfunction createAttachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n    const dpr = window.devicePixelRatio;\n    if (dpr === oldDevicePixelRatio) {\n        return;\n    }\n    oldDevicePixelRatio = dpr;\n    drpListeningCharts.forEach((resize, chart)=>{\n        if (chart.currentDevicePixelRatio !== dpr) {\n            resize();\n        }\n    });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n    if (!drpListeningCharts.size) {\n        window.addEventListener('resize', onWindowResize);\n    }\n    drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n    drpListeningCharts.delete(chart);\n    if (!drpListeningCharts.size) {\n        window.removeEventListener('resize', onWindowResize);\n    }\n}\nfunction createResizeObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const container = canvas && _getParentNode(canvas);\n    if (!container) {\n        return;\n    }\n    const resize = throttled((width, height)=>{\n        const w = container.clientWidth;\n        listener(width, height);\n        if (w < container.clientWidth) {\n            listener();\n        }\n    }, window);\n    const observer = new ResizeObserver((entries)=>{\n        const entry = entries[0];\n        const width = entry.contentRect.width;\n        const height = entry.contentRect.height;\n        if (width === 0 && height === 0) {\n            return;\n        }\n        resize(width, height);\n    });\n    observer.observe(container);\n    listenDevicePixelRatioChanges(chart, resize);\n    return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n    if (observer) {\n        observer.disconnect();\n    }\n    if (type === 'resize') {\n        unlistenDevicePixelRatioChanges(chart);\n    }\n}\nfunction createProxyAndListen(chart, type, listener) {\n    const canvas = chart.canvas;\n    const proxy = throttled((event)=>{\n        if (chart.ctx !== null) {\n            listener(fromNativeEvent(event, chart));\n        }\n    }, chart);\n    addListener(canvas, type, proxy);\n    return proxy;\n}\n class DomPlatform extends BasePlatform {\n acquireContext(canvas, aspectRatio) {\n        const context = canvas && canvas.getContext && canvas.getContext('2d');\n        if (context && context.canvas === canvas) {\n            initCanvas(canvas, aspectRatio);\n            return context;\n        }\n        return null;\n    }\n releaseContext(context) {\n        const canvas = context.canvas;\n        if (!canvas[EXPANDO_KEY]) {\n            return false;\n        }\n        const initial = canvas[EXPANDO_KEY].initial;\n        [\n            'height',\n            'width'\n        ].forEach((prop)=>{\n            const value = initial[prop];\n            if (isNullOrUndef(value)) {\n                canvas.removeAttribute(prop);\n            } else {\n                canvas.setAttribute(prop, value);\n            }\n        });\n        const style = initial.style || {};\n        Object.keys(style).forEach((key)=>{\n            canvas.style[key] = style[key];\n        });\n        canvas.width = canvas.width;\n        delete canvas[EXPANDO_KEY];\n        return true;\n    }\n addEventListener(chart, type, listener) {\n        this.removeEventListener(chart, type);\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const handlers = {\n            attach: createAttachObserver,\n            detach: createDetachObserver,\n            resize: createResizeObserver\n        };\n        const handler = handlers[type] || createProxyAndListen;\n        proxies[type] = handler(chart, type, listener);\n    }\n removeEventListener(chart, type) {\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const proxy = proxies[type];\n        if (!proxy) {\n            return;\n        }\n        const handlers = {\n            attach: releaseObserver,\n            detach: releaseObserver,\n            resize: releaseObserver\n        };\n        const handler = handlers[type] || removeListener;\n        handler(chart, type, proxy);\n        proxies[type] = undefined;\n    }\n    getDevicePixelRatio() {\n        return window.devicePixelRatio;\n    }\n getMaximumSize(canvas, width, height, aspectRatio) {\n        return getMaximumSize(canvas, width, height, aspectRatio);\n    }\n isAttached(canvas) {\n        const container = _getParentNode(canvas);\n        return !!(container && container.isConnected);\n    }\n}\n\nfunction _detectPlatform(canvas) {\n    if (!_isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n        return BasicPlatform;\n    }\n    return DomPlatform;\n}\n\nclass Element {\n    static defaults = {};\n    static defaultRoutes = undefined;\n    active = false;\n    tooltipPosition(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    hasValue() {\n        return isNumber(this.x) && isNumber(this.y);\n    }\n    getProps(props, final) {\n        const anims = this.$animations;\n        if (!final || !anims) {\n            // let's not create an object, if not needed\n            return this;\n        }\n        const ret = {};\n        props.forEach((prop)=>{\n            ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n        });\n        return ret;\n    }\n}\n\nfunction autoSkip(scale, ticks) {\n    const tickOpts = scale.options.ticks;\n    const determinedMaxTicks = determineMaxTicks(scale);\n    const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n    const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n    const numMajorIndices = majorIndices.length;\n    const first = majorIndices[0];\n    const last = majorIndices[numMajorIndices - 1];\n    const newTicks = [];\n    if (numMajorIndices > ticksLimit) {\n        skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n        return newTicks;\n    }\n    const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n    if (numMajorIndices > 0) {\n        let i, ilen;\n        const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n        skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n        for(i = 0, ilen = numMajorIndices - 1; i < ilen; i++){\n            skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n        }\n        skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n        return newTicks;\n    }\n    skip(ticks, newTicks, spacing);\n    return newTicks;\n}\nfunction determineMaxTicks(scale) {\n    const offset = scale.options.offset;\n    const tickLength = scale._tickSize();\n    const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n    const maxChart = scale._maxLength / tickLength;\n    return Math.floor(Math.min(maxScale, maxChart));\n}\n function calculateSpacing(majorIndices, ticks, ticksLimit) {\n    const evenMajorSpacing = getEvenSpacing(majorIndices);\n    const spacing = ticks.length / ticksLimit;\n    if (!evenMajorSpacing) {\n        return Math.max(spacing, 1);\n    }\n    const factors = _factorize(evenMajorSpacing);\n    for(let i = 0, ilen = factors.length - 1; i < ilen; i++){\n        const factor = factors[i];\n        if (factor > spacing) {\n            return factor;\n        }\n    }\n    return Math.max(spacing, 1);\n}\n function getMajorIndices(ticks) {\n    const result = [];\n    let i, ilen;\n    for(i = 0, ilen = ticks.length; i < ilen; i++){\n        if (ticks[i].major) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n function skipMajors(ticks, newTicks, majorIndices, spacing) {\n    let count = 0;\n    let next = majorIndices[0];\n    let i;\n    spacing = Math.ceil(spacing);\n    for(i = 0; i < ticks.length; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = majorIndices[count * spacing];\n        }\n    }\n}\n function skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n    const start = valueOrDefault(majorStart, 0);\n    const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n    let count = 0;\n    let length, i, next;\n    spacing = Math.ceil(spacing);\n    if (majorEnd) {\n        length = majorEnd - majorStart;\n        spacing = length / Math.floor(length / spacing);\n    }\n    next = start;\n    while(next < 0){\n        count++;\n        next = Math.round(start + count * spacing);\n    }\n    for(i = Math.max(start, 0); i < end; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = Math.round(start + count * spacing);\n        }\n    }\n}\n function getEvenSpacing(arr) {\n    const len = arr.length;\n    let i, diff;\n    if (len < 2) {\n        return false;\n    }\n    for(diff = arr[0], i = 1; i < len; ++i){\n        if (arr[i] - arr[i - 1] !== diff) {\n            return false;\n        }\n    }\n    return diff;\n}\n\nconst reverseAlign = (align)=>align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset)=>edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\n function sample(arr, numItems) {\n    const result = [];\n    const increment = arr.length / numItems;\n    const len = arr.length;\n    let i = 0;\n    for(; i < len; i += increment){\n        result.push(arr[Math.floor(i)]);\n    }\n    return result;\n}\n function getPixelForGridLine(scale, index, offsetGridLines) {\n    const length = scale.ticks.length;\n    const validIndex = Math.min(index, length - 1);\n    const start = scale._startPixel;\n    const end = scale._endPixel;\n    const epsilon = 1e-6;\n    let lineValue = scale.getPixelForTick(validIndex);\n    let offset;\n    if (offsetGridLines) {\n        if (length === 1) {\n            offset = Math.max(lineValue - start, end - lineValue);\n        } else if (index === 0) {\n            offset = (scale.getPixelForTick(1) - lineValue) / 2;\n        } else {\n            offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n        }\n        lineValue += validIndex < index ? offset : -offset;\n        if (lineValue < start - epsilon || lineValue > end + epsilon) {\n            return;\n        }\n    }\n    return lineValue;\n}\n function garbageCollect(caches, length) {\n    each(caches, (cache)=>{\n        const gc = cache.gc;\n        const gcLen = gc.length / 2;\n        let i;\n        if (gcLen > length) {\n            for(i = 0; i < gcLen; ++i){\n                delete cache.data[gc[i]];\n            }\n            gc.splice(0, gcLen);\n        }\n    });\n}\n function getTickMarkLength(options) {\n    return options.drawTicks ? options.tickLength : 0;\n}\n function getTitleHeight(options, fallback) {\n    if (!options.display) {\n        return 0;\n    }\n    const font = toFont(options.font, fallback);\n    const padding = toPadding(options.padding);\n    const lines = isArray(options.text) ? options.text.length : 1;\n    return lines * font.lineHeight + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n    return createContext(parent, {\n        scale,\n        type: 'scale'\n    });\n}\nfunction createTickContext(parent, index, tick) {\n    return createContext(parent, {\n        tick,\n        index,\n        type: 'tick'\n    });\n}\nfunction titleAlign(align, position, reverse) {\n    let ret = _toLeftRightCenter(align);\n    if (reverse && position !== 'right' || !reverse && position === 'right') {\n        ret = reverseAlign(ret);\n    }\n    return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n    const { top , left , bottom , right , chart  } = scale;\n    const { chartArea , scales  } = chart;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    const height = bottom - top;\n    const width = right - left;\n    if (scale.isHorizontal()) {\n        titleX = _alignStartEnd(align, left, right);\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n        } else if (position === 'center') {\n            titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n        } else {\n            titleY = offsetFromEdge(scale, position, offset);\n        }\n        maxWidth = right - left;\n    } else {\n        if (isObject(position)) {\n            const positionAxisID1 = Object.keys(position)[0];\n            const value1 = position[positionAxisID1];\n            titleX = scales[positionAxisID1].getPixelForValue(value1) - width + offset;\n        } else if (position === 'center') {\n            titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n        } else {\n            titleX = offsetFromEdge(scale, position, offset);\n        }\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = position === 'left' ? -HALF_PI : HALF_PI;\n    }\n    return {\n        titleX,\n        titleY,\n        maxWidth,\n        rotation\n    };\n}\nclass Scale extends Element {\n    constructor(cfg){\n        super();\n         this.id = cfg.id;\n         this.type = cfg.type;\n         this.options = undefined;\n         this.ctx = cfg.ctx;\n         this.chart = cfg.chart;\n         this.top = undefined;\n         this.bottom = undefined;\n         this.left = undefined;\n         this.right = undefined;\n         this.width = undefined;\n         this.height = undefined;\n        this._margins = {\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        };\n         this.maxWidth = undefined;\n         this.maxHeight = undefined;\n         this.paddingTop = undefined;\n         this.paddingBottom = undefined;\n         this.paddingLeft = undefined;\n         this.paddingRight = undefined;\n         this.axis = undefined;\n         this.labelRotation = undefined;\n        this.min = undefined;\n        this.max = undefined;\n        this._range = undefined;\n         this.ticks = [];\n         this._gridLineItems = null;\n         this._labelItems = null;\n         this._labelSizes = null;\n        this._length = 0;\n        this._maxLength = 0;\n        this._longestTextCache = {};\n         this._startPixel = undefined;\n         this._endPixel = undefined;\n        this._reversePixels = false;\n        this._userMax = undefined;\n        this._userMin = undefined;\n        this._suggestedMax = undefined;\n        this._suggestedMin = undefined;\n        this._ticksLength = 0;\n        this._borderValue = 0;\n        this._cache = {};\n        this._dataLimitsCached = false;\n        this.$context = undefined;\n    }\n init(options) {\n        this.options = options.setContext(this.getContext());\n        this.axis = options.axis;\n        this._userMin = this.parse(options.min);\n        this._userMax = this.parse(options.max);\n        this._suggestedMin = this.parse(options.suggestedMin);\n        this._suggestedMax = this.parse(options.suggestedMax);\n    }\n parse(raw, index) {\n        return raw;\n    }\n getUserBounds() {\n        let { _userMin , _userMax , _suggestedMin , _suggestedMax  } = this;\n        _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n        _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n        _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n        _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n        return {\n            min: finiteOrDefault(_userMin, _suggestedMin),\n            max: finiteOrDefault(_userMax, _suggestedMax),\n            minDefined: isNumberFinite(_userMin),\n            maxDefined: isNumberFinite(_userMax)\n        };\n    }\n getMinMax(canStack) {\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n        let range;\n        if (minDefined && maxDefined) {\n            return {\n                min,\n                max\n            };\n        }\n        const metas = this.getMatchingVisibleMetas();\n        for(let i = 0, ilen = metas.length; i < ilen; ++i){\n            range = metas[i].controller.getMinMax(this, canStack);\n            if (!minDefined) {\n                min = Math.min(min, range.min);\n            }\n            if (!maxDefined) {\n                max = Math.max(max, range.max);\n            }\n        }\n        min = maxDefined && min > max ? max : min;\n        max = minDefined && min > max ? min : max;\n        return {\n            min: finiteOrDefault(min, finiteOrDefault(max, min)),\n            max: finiteOrDefault(max, finiteOrDefault(min, max))\n        };\n    }\n getPadding() {\n        return {\n            left: this.paddingLeft || 0,\n            top: this.paddingTop || 0,\n            right: this.paddingRight || 0,\n            bottom: this.paddingBottom || 0\n        };\n    }\n getTicks() {\n        return this.ticks;\n    }\n getLabels() {\n        const data = this.chart.data;\n        return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n    }\n    beforeLayout() {\n        this._cache = {};\n        this._dataLimitsCached = false;\n    }\n    beforeUpdate() {\n        callback(this.options.beforeUpdate, [\n            this\n        ]);\n    }\n update(maxWidth, maxHeight, margins) {\n        const { beginAtZero , grace , ticks: tickOpts  } = this.options;\n        const sampleSize = tickOpts.sampleSize;\n        this.beforeUpdate();\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins = Object.assign({\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        }, margins);\n        this.ticks = null;\n        this._labelSizes = null;\n        this._gridLineItems = null;\n        this._labelItems = null;\n        this.beforeSetDimensions();\n        this.setDimensions();\n        this.afterSetDimensions();\n        this._maxLength = this.isHorizontal() ? this.width + margins.left + margins.right : this.height + margins.top + margins.bottom;\n        if (!this._dataLimitsCached) {\n            this.beforeDataLimits();\n            this.determineDataLimits();\n            this.afterDataLimits();\n            this._range = _addGrace(this, grace, beginAtZero);\n            this._dataLimitsCached = true;\n        }\n        this.beforeBuildTicks();\n        this.ticks = this.buildTicks() || [];\n        this.afterBuildTicks();\n        const samplingEnabled = sampleSize < this.ticks.length;\n        this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n        this.configure();\n        this.beforeCalculateLabelRotation();\n        this.calculateLabelRotation();\n        this.afterCalculateLabelRotation();\n        if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n            this.ticks = autoSkip(this, this.ticks);\n            this._labelSizes = null;\n            this.afterAutoSkip();\n        }\n        if (samplingEnabled) {\n            this._convertTicksToLabels(this.ticks);\n        }\n        this.beforeFit();\n        this.fit();\n        this.afterFit();\n        this.afterUpdate();\n    }\n configure() {\n        let reversePixels = this.options.reverse;\n        let startPixel, endPixel;\n        if (this.isHorizontal()) {\n            startPixel = this.left;\n            endPixel = this.right;\n        } else {\n            startPixel = this.top;\n            endPixel = this.bottom;\n            reversePixels = !reversePixels;\n        }\n        this._startPixel = startPixel;\n        this._endPixel = endPixel;\n        this._reversePixels = reversePixels;\n        this._length = endPixel - startPixel;\n        this._alignToPixels = this.options.alignToPixels;\n    }\n    afterUpdate() {\n        callback(this.options.afterUpdate, [\n            this\n        ]);\n    }\n    beforeSetDimensions() {\n        callback(this.options.beforeSetDimensions, [\n            this\n        ]);\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = 0;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = 0;\n            this.bottom = this.height;\n        }\n        this.paddingLeft = 0;\n        this.paddingTop = 0;\n        this.paddingRight = 0;\n        this.paddingBottom = 0;\n    }\n    afterSetDimensions() {\n        callback(this.options.afterSetDimensions, [\n            this\n        ]);\n    }\n    _callHooks(name) {\n        this.chart.notifyPlugins(name, this.getContext());\n        callback(this.options[name], [\n            this\n        ]);\n    }\n    beforeDataLimits() {\n        this._callHooks('beforeDataLimits');\n    }\n    determineDataLimits() {}\n    afterDataLimits() {\n        this._callHooks('afterDataLimits');\n    }\n    beforeBuildTicks() {\n        this._callHooks('beforeBuildTicks');\n    }\n buildTicks() {\n        return [];\n    }\n    afterBuildTicks() {\n        this._callHooks('afterBuildTicks');\n    }\n    beforeTickToLabelConversion() {\n        callback(this.options.beforeTickToLabelConversion, [\n            this\n        ]);\n    }\n generateTickLabels(ticks) {\n        const tickOpts = this.options.ticks;\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            tick = ticks[i];\n            tick.label = callback(tickOpts.callback, [\n                tick.value,\n                i,\n                ticks\n            ], this);\n        }\n    }\n    afterTickToLabelConversion() {\n        callback(this.options.afterTickToLabelConversion, [\n            this\n        ]);\n    }\n    beforeCalculateLabelRotation() {\n        callback(this.options.beforeCalculateLabelRotation, [\n            this\n        ]);\n    }\n    calculateLabelRotation() {\n        const options = this.options;\n        const tickOpts = options.ticks;\n        const numTicks = this.ticks.length;\n        const minRotation = tickOpts.minRotation || 0;\n        const maxRotation = tickOpts.maxRotation;\n        let labelRotation = minRotation;\n        let tickWidth, maxHeight, maxLabelDiagonal;\n        if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n            this.labelRotation = minRotation;\n            return;\n        }\n        const labelSizes = this._getLabelSizes();\n        const maxLabelWidth = labelSizes.widest.width;\n        const maxLabelHeight = labelSizes.highest.height;\n        const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n        tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n        if (maxLabelWidth + 6 > tickWidth) {\n            tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n            maxHeight = this.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n            maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n            labelRotation = toDegrees(Math.min(Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n            labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n        }\n        this.labelRotation = labelRotation;\n    }\n    afterCalculateLabelRotation() {\n        callback(this.options.afterCalculateLabelRotation, [\n            this\n        ]);\n    }\n    afterAutoSkip() {}\n    beforeFit() {\n        callback(this.options.beforeFit, [\n            this\n        ]);\n    }\n    fit() {\n        const minSize = {\n            width: 0,\n            height: 0\n        };\n        const { chart , options: { ticks: tickOpts , title: titleOpts , grid: gridOpts  }  } = this;\n        const display = this._isVisible();\n        const isHorizontal = this.isHorizontal();\n        if (display) {\n            const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n            if (isHorizontal) {\n                minSize.width = this.maxWidth;\n                minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n            } else {\n                minSize.height = this.maxHeight;\n                minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n            }\n            if (tickOpts.display && this.ticks.length) {\n                const { first , last , widest , highest  } = this._getLabelSizes();\n                const tickPadding = tickOpts.padding * 2;\n                const angleRadians = toRadians(this.labelRotation);\n                const cos = Math.cos(angleRadians);\n                const sin = Math.sin(angleRadians);\n                if (isHorizontal) {\n                    const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n                    minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n                } else {\n                    const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n                    minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n                }\n                this._calculatePadding(first, last, sin, cos);\n            }\n        }\n        this._handleMargins();\n        if (isHorizontal) {\n            this.width = this._length = chart.width - this._margins.left - this._margins.right;\n            this.height = minSize.height;\n        } else {\n            this.width = minSize.width;\n            this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n        }\n    }\n    _calculatePadding(first, last, sin, cos) {\n        const { ticks: { align , padding  } , position  } = this.options;\n        const isRotated = this.labelRotation !== 0;\n        const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n        if (this.isHorizontal()) {\n            const offsetLeft = this.getPixelForTick(0) - this.left;\n            const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n            let paddingLeft = 0;\n            let paddingRight = 0;\n            if (isRotated) {\n                if (labelsBelowTicks) {\n                    paddingLeft = cos * first.width;\n                    paddingRight = sin * last.height;\n                } else {\n                    paddingLeft = sin * first.height;\n                    paddingRight = cos * last.width;\n                }\n            } else if (align === 'start') {\n                paddingRight = last.width;\n            } else if (align === 'end') {\n                paddingLeft = first.width;\n            } else if (align !== 'inner') {\n                paddingLeft = first.width / 2;\n                paddingRight = last.width / 2;\n            }\n            this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n            this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n        } else {\n            let paddingTop = last.height / 2;\n            let paddingBottom = first.height / 2;\n            if (align === 'start') {\n                paddingTop = 0;\n                paddingBottom = first.height;\n            } else if (align === 'end') {\n                paddingTop = last.height;\n                paddingBottom = 0;\n            }\n            this.paddingTop = paddingTop + padding;\n            this.paddingBottom = paddingBottom + padding;\n        }\n    }\n _handleMargins() {\n        if (this._margins) {\n            this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n            this._margins.top = Math.max(this.paddingTop, this._margins.top);\n            this._margins.right = Math.max(this.paddingRight, this._margins.right);\n            this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n        }\n    }\n    afterFit() {\n        callback(this.options.afterFit, [\n            this\n        ]);\n    }\n isHorizontal() {\n        const { axis , position  } = this.options;\n        return position === 'top' || position === 'bottom' || axis === 'x';\n    }\n isFullSize() {\n        return this.options.fullSize;\n    }\n _convertTicksToLabels(ticks) {\n        this.beforeTickToLabelConversion();\n        this.generateTickLabels(ticks);\n        let i, ilen;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            if (isNullOrUndef(ticks[i].label)) {\n                ticks.splice(i, 1);\n                ilen--;\n                i--;\n            }\n        }\n        this.afterTickToLabelConversion();\n    }\n _getLabelSizes() {\n        let labelSizes = this._labelSizes;\n        if (!labelSizes) {\n            const sampleSize = this.options.ticks.sampleSize;\n            let ticks = this.ticks;\n            if (sampleSize < ticks.length) {\n                ticks = sample(ticks, sampleSize);\n            }\n            this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length);\n        }\n        return labelSizes;\n    }\n _computeLabelSizes(ticks, length) {\n        const { ctx , _longestTextCache: caches  } = this;\n        const widths = [];\n        const heights = [];\n        let widestLabelSize = 0;\n        let highestLabelSize = 0;\n        let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n        for(i = 0; i < length; ++i){\n            label = ticks[i].label;\n            tickFont = this._resolveTickFontOptions(i);\n            ctx.font = fontString = tickFont.string;\n            cache = caches[fontString] = caches[fontString] || {\n                data: {},\n                gc: []\n            };\n            lineHeight = tickFont.lineHeight;\n            width = height = 0;\n            if (!isNullOrUndef(label) && !isArray(label)) {\n                width = _measureText(ctx, cache.data, cache.gc, width, label);\n                height = lineHeight;\n            } else if (isArray(label)) {\n                for(j = 0, jlen = label.length; j < jlen; ++j){\n                    nestedLabel = label[j];\n                    if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n                        width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n                        height += lineHeight;\n                    }\n                }\n            }\n            widths.push(width);\n            heights.push(height);\n            widestLabelSize = Math.max(width, widestLabelSize);\n            highestLabelSize = Math.max(height, highestLabelSize);\n        }\n        garbageCollect(caches, length);\n        const widest = widths.indexOf(widestLabelSize);\n        const highest = heights.indexOf(highestLabelSize);\n        const valueAt = (idx)=>({\n                width: widths[idx] || 0,\n                height: heights[idx] || 0\n            });\n        return {\n            first: valueAt(0),\n            last: valueAt(length - 1),\n            widest: valueAt(widest),\n            highest: valueAt(highest),\n            widths,\n            heights\n        };\n    }\n getLabelForValue(value) {\n        return value;\n    }\n getPixelForValue(value, index) {\n        return NaN;\n    }\n getValueForPixel(pixel) {}\n getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n getPixelForDecimal(decimal) {\n        if (this._reversePixels) {\n            decimal = 1 - decimal;\n        }\n        const pixel = this._startPixel + decimal * this._length;\n        return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n    }\n getDecimalForPixel(pixel) {\n        const decimal = (pixel - this._startPixel) / this._length;\n        return this._reversePixels ? 1 - decimal : decimal;\n    }\n getBasePixel() {\n        return this.getPixelForValue(this.getBaseValue());\n    }\n getBaseValue() {\n        const { min , max  } = this;\n        return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    }\n getContext(index) {\n        const ticks = this.ticks || [];\n        if (index >= 0 && index < ticks.length) {\n            const tick = ticks[index];\n            return tick.$context || (tick.$context = createTickContext(this.getContext(), index, tick));\n        }\n        return this.$context || (this.$context = createScaleContext(this.chart.getContext(), this));\n    }\n _tickSize() {\n        const optionTicks = this.options.ticks;\n        const rot = toRadians(this.labelRotation);\n        const cos = Math.abs(Math.cos(rot));\n        const sin = Math.abs(Math.sin(rot));\n        const labelSizes = this._getLabelSizes();\n        const padding = optionTicks.autoSkipPadding || 0;\n        const w = labelSizes ? labelSizes.widest.width + padding : 0;\n        const h = labelSizes ? labelSizes.highest.height + padding : 0;\n        return this.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    }\n _isVisible() {\n        const display = this.options.display;\n        if (display !== 'auto') {\n            return !!display;\n        }\n        return this.getMatchingVisibleMetas().length > 0;\n    }\n _computeGridLineItems(chartArea) {\n        const axis = this.axis;\n        const chart = this.chart;\n        const options = this.options;\n        const { grid , position , border  } = options;\n        const offset = grid.offset;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const ticksLength = ticks.length + (offset ? 1 : 0);\n        const tl = getTickMarkLength(grid);\n        const items = [];\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = borderOpts.display ? borderOpts.width : 0;\n        const axisHalfWidth = axisWidth / 2;\n        const alignBorderValue = function(pixel) {\n            return _alignPixel(chart, pixel, axisWidth);\n        };\n        let borderValue, i, lineValue, alignedLineValue;\n        let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n        if (position === 'top') {\n            borderValue = alignBorderValue(this.bottom);\n            ty1 = this.bottom - tl;\n            ty2 = borderValue - axisHalfWidth;\n            y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n            y2 = chartArea.bottom;\n        } else if (position === 'bottom') {\n            borderValue = alignBorderValue(this.top);\n            y1 = chartArea.top;\n            y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = this.top + tl;\n        } else if (position === 'left') {\n            borderValue = alignBorderValue(this.right);\n            tx1 = this.right - tl;\n            tx2 = borderValue - axisHalfWidth;\n            x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n            x2 = chartArea.right;\n        } else if (position === 'right') {\n            borderValue = alignBorderValue(this.left);\n            x1 = chartArea.left;\n            x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n            tx1 = borderValue + axisHalfWidth;\n            tx2 = this.left + tl;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            y1 = chartArea.top;\n            y2 = chartArea.bottom;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = ty1 + tl;\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n            } else if (isObject(position)) {\n                const positionAxisID1 = Object.keys(position)[0];\n                const value1 = position[positionAxisID1];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID1].getPixelForValue(value1));\n            }\n            tx1 = borderValue - axisHalfWidth;\n            tx2 = tx1 - tl;\n            x1 = chartArea.left;\n            x2 = chartArea.right;\n        }\n        const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n        const step = Math.max(1, Math.ceil(ticksLength / limit));\n        for(i = 0; i < ticksLength; i += step){\n            const context = this.getContext(i);\n            const optsAtIndex = grid.setContext(context);\n            const optsAtIndexBorder = border.setContext(context);\n            const lineWidth = optsAtIndex.lineWidth;\n            const lineColor = optsAtIndex.color;\n            const borderDash = optsAtIndexBorder.dash || [];\n            const borderDashOffset = optsAtIndexBorder.dashOffset;\n            const tickWidth = optsAtIndex.tickWidth;\n            const tickColor = optsAtIndex.tickColor;\n            const tickBorderDash = optsAtIndex.tickBorderDash || [];\n            const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n            lineValue = getPixelForGridLine(this, i, offset);\n            if (lineValue === undefined) {\n                continue;\n            }\n            alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n            if (isHorizontal) {\n                tx1 = tx2 = x1 = x2 = alignedLineValue;\n            } else {\n                ty1 = ty2 = y1 = y2 = alignedLineValue;\n            }\n            items.push({\n                tx1,\n                ty1,\n                tx2,\n                ty2,\n                x1,\n                y1,\n                x2,\n                y2,\n                width: lineWidth,\n                color: lineColor,\n                borderDash,\n                borderDashOffset,\n                tickWidth,\n                tickColor,\n                tickBorderDash,\n                tickBorderDashOffset\n            });\n        }\n        this._ticksLength = ticksLength;\n        this._borderValue = borderValue;\n        return items;\n    }\n _computeLabelItems(chartArea) {\n        const axis = this.axis;\n        const options = this.options;\n        const { position , ticks: optionTicks  } = options;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const { align , crossAlign , padding , mirror  } = optionTicks;\n        const tl = getTickMarkLength(options.grid);\n        const tickAndPadding = tl + padding;\n        const hTickAndPadding = mirror ? -padding : tickAndPadding;\n        const rotation = -toRadians(this.labelRotation);\n        const items = [];\n        let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n        let textBaseline = 'middle';\n        if (position === 'top') {\n            y = this.bottom - hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'bottom') {\n            y = this.top + hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'left') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (position === 'right') {\n            const ret1 = this._getYAxisLabelAlignment(tl);\n            textAlign = ret1.textAlign;\n            x = ret1.x;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n            }\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID1 = Object.keys(position)[0];\n                const value1 = position[positionAxisID1];\n                x = this.chart.scales[positionAxisID1].getPixelForValue(value1);\n            }\n            textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n        }\n        if (axis === 'y') {\n            if (align === 'start') {\n                textBaseline = 'top';\n            } else if (align === 'end') {\n                textBaseline = 'bottom';\n            }\n        }\n        const labelSizes = this._getLabelSizes();\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            label = tick.label;\n            const optsAtIndex = optionTicks.setContext(this.getContext(i));\n            pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n            font = this._resolveTickFontOptions(i);\n            lineHeight = font.lineHeight;\n            lineCount = isArray(label) ? label.length : 1;\n            const halfCount = lineCount / 2;\n            const color = optsAtIndex.color;\n            const strokeColor = optsAtIndex.textStrokeColor;\n            const strokeWidth = optsAtIndex.textStrokeWidth;\n            let tickTextAlign = textAlign;\n            if (isHorizontal) {\n                x = pixel;\n                if (textAlign === 'inner') {\n                    if (i === ilen - 1) {\n                        tickTextAlign = !this.options.reverse ? 'right' : 'left';\n                    } else if (i === 0) {\n                        tickTextAlign = !this.options.reverse ? 'left' : 'right';\n                    } else {\n                        tickTextAlign = 'center';\n                    }\n                }\n                if (position === 'top') {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = -lineCount * lineHeight + lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n                    } else {\n                        textOffset = -labelSizes.highest.height + lineHeight / 2;\n                    }\n                } else {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n                    } else {\n                        textOffset = labelSizes.highest.height - lineCount * lineHeight;\n                    }\n                }\n                if (mirror) {\n                    textOffset *= -1;\n                }\n                if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n                    x += lineHeight / 2 * Math.sin(rotation);\n                }\n            } else {\n                y = pixel;\n                textOffset = (1 - lineCount) * lineHeight / 2;\n            }\n            let backdrop;\n            if (optsAtIndex.showLabelBackdrop) {\n                const labelPadding = toPadding(optsAtIndex.backdropPadding);\n                const height = labelSizes.heights[i];\n                const width = labelSizes.widths[i];\n                let top = textOffset - labelPadding.top;\n                let left = 0 - labelPadding.left;\n                switch(textBaseline){\n                    case 'middle':\n                        top -= height / 2;\n                        break;\n                    case 'bottom':\n                        top -= height;\n                        break;\n                }\n                switch(textAlign){\n                    case 'center':\n                        left -= width / 2;\n                        break;\n                    case 'right':\n                        left -= width;\n                        break;\n                }\n                backdrop = {\n                    left,\n                    top,\n                    width: width + labelPadding.width,\n                    height: height + labelPadding.height,\n                    color: optsAtIndex.backdropColor\n                };\n            }\n            items.push({\n                rotation,\n                label,\n                font,\n                color,\n                strokeColor,\n                strokeWidth,\n                textOffset,\n                textAlign: tickTextAlign,\n                textBaseline,\n                translation: [\n                    x,\n                    y\n                ],\n                backdrop\n            });\n        }\n        return items;\n    }\n    _getXAxisLabelAlignment() {\n        const { position , ticks  } = this.options;\n        const rotation = -toRadians(this.labelRotation);\n        if (rotation) {\n            return position === 'top' ? 'left' : 'right';\n        }\n        let align = 'center';\n        if (ticks.align === 'start') {\n            align = 'left';\n        } else if (ticks.align === 'end') {\n            align = 'right';\n        } else if (ticks.align === 'inner') {\n            align = 'inner';\n        }\n        return align;\n    }\n    _getYAxisLabelAlignment(tl) {\n        const { position , ticks: { crossAlign , mirror , padding  }  } = this.options;\n        const labelSizes = this._getLabelSizes();\n        const tickAndPadding = tl + padding;\n        const widest = labelSizes.widest.width;\n        let textAlign;\n        let x;\n        if (position === 'left') {\n            if (mirror) {\n                x = this.right + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x += widest;\n                }\n            } else {\n                x = this.right - tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x = this.left;\n                }\n            }\n        } else if (position === 'right') {\n            if (mirror) {\n                x = this.left + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x -= widest;\n                }\n            } else {\n                x = this.left + tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x = this.right;\n                }\n            }\n        } else {\n            textAlign = 'right';\n        }\n        return {\n            textAlign,\n            x\n        };\n    }\n _computeLabelArea() {\n        if (this.options.ticks.mirror) {\n            return;\n        }\n        const chart = this.chart;\n        const position = this.options.position;\n        if (position === 'left' || position === 'right') {\n            return {\n                top: 0,\n                left: this.left,\n                bottom: chart.height,\n                right: this.right\n            };\n        }\n        if (position === 'top' || position === 'bottom') {\n            return {\n                top: this.top,\n                left: 0,\n                bottom: this.bottom,\n                right: chart.width\n            };\n        }\n    }\n drawBackground() {\n        const { ctx , options: { backgroundColor  } , left , top , width , height  } = this;\n        if (backgroundColor) {\n            ctx.save();\n            ctx.fillStyle = backgroundColor;\n            ctx.fillRect(left, top, width, height);\n            ctx.restore();\n        }\n    }\n    getLineWidthForValue(value) {\n        const grid = this.options.grid;\n        if (!this._isVisible() || !grid.display) {\n            return 0;\n        }\n        const ticks = this.ticks;\n        const index = ticks.findIndex((t)=>t.value === value);\n        if (index >= 0) {\n            const opts = grid.setContext(this.getContext(index));\n            return opts.lineWidth;\n        }\n        return 0;\n    }\n drawGrid(chartArea) {\n        const grid = this.options.grid;\n        const ctx = this.ctx;\n        const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n        let i, ilen;\n        const drawLine = (p1, p2, style)=>{\n            if (!style.width || !style.color) {\n                return;\n            }\n            ctx.save();\n            ctx.lineWidth = style.width;\n            ctx.strokeStyle = style.color;\n            ctx.setLineDash(style.borderDash || []);\n            ctx.lineDashOffset = style.borderDashOffset;\n            ctx.beginPath();\n            ctx.moveTo(p1.x, p1.y);\n            ctx.lineTo(p2.x, p2.y);\n            ctx.stroke();\n            ctx.restore();\n        };\n        if (grid.display) {\n            for(i = 0, ilen = items.length; i < ilen; ++i){\n                const item = items[i];\n                if (grid.drawOnChartArea) {\n                    drawLine({\n                        x: item.x1,\n                        y: item.y1\n                    }, {\n                        x: item.x2,\n                        y: item.y2\n                    }, item);\n                }\n                if (grid.drawTicks) {\n                    drawLine({\n                        x: item.tx1,\n                        y: item.ty1\n                    }, {\n                        x: item.tx2,\n                        y: item.ty2\n                    }, {\n                        color: item.tickColor,\n                        width: item.tickWidth,\n                        borderDash: item.tickBorderDash,\n                        borderDashOffset: item.tickBorderDashOffset\n                    });\n                }\n            }\n        }\n    }\n drawBorder() {\n        const { chart , ctx , options: { border , grid  }  } = this;\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = border.display ? borderOpts.width : 0;\n        if (!axisWidth) {\n            return;\n        }\n        const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n        const borderValue = this._borderValue;\n        let x1, x2, y1, y2;\n        if (this.isHorizontal()) {\n            x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n            x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n            y1 = y2 = borderValue;\n        } else {\n            y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n            y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n            x1 = x2 = borderValue;\n        }\n        ctx.save();\n        ctx.lineWidth = borderOpts.width;\n        ctx.strokeStyle = borderOpts.color;\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x2, y2);\n        ctx.stroke();\n        ctx.restore();\n    }\n drawLabels(chartArea) {\n        const optionTicks = this.options.ticks;\n        if (!optionTicks.display) {\n            return;\n        }\n        const ctx = this.ctx;\n        const area = this._computeLabelArea();\n        if (area) {\n            clipArea(ctx, area);\n        }\n        const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n        let i, ilen;\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            const item = items[i];\n            const tickFont = item.font;\n            const label = item.label;\n            let y = item.textOffset;\n            renderText(ctx, label, 0, y, tickFont, item);\n        }\n        if (area) {\n            unclipArea(ctx);\n        }\n    }\n drawTitle() {\n        const { ctx , options: { position , title , reverse  }  } = this;\n        if (!title.display) {\n            return;\n        }\n        const font = toFont(title.font);\n        const padding = toPadding(title.padding);\n        const align = title.align;\n        let offset = font.lineHeight / 2;\n        if (position === 'bottom' || position === 'center' || isObject(position)) {\n            offset += padding.bottom;\n            if (isArray(title.text)) {\n                offset += font.lineHeight * (title.text.length - 1);\n            }\n        } else {\n            offset += padding.top;\n        }\n        const { titleX , titleY , maxWidth , rotation  } = titleArgs(this, offset, position, align);\n        renderText(ctx, title.text, 0, 0, font, {\n            color: title.color,\n            maxWidth,\n            rotation,\n            textAlign: titleAlign(align, position, reverse),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n    draw(chartArea) {\n        if (!this._isVisible()) {\n            return;\n        }\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawBorder();\n        this.drawTitle();\n        this.drawLabels(chartArea);\n    }\n _layers() {\n        const opts = this.options;\n        const tz = opts.ticks && opts.ticks.z || 0;\n        const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n        const bz = valueOrDefault(opts.border && opts.border.z, 0);\n        if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n            return [\n                {\n                    z: tz,\n                    draw: (chartArea)=>{\n                        this.draw(chartArea);\n                    }\n                }\n            ];\n        }\n        return [\n            {\n                z: gz,\n                draw: (chartArea)=>{\n                    this.drawBackground();\n                    this.drawGrid(chartArea);\n                    this.drawTitle();\n                }\n            },\n            {\n                z: bz,\n                draw: ()=>{\n                    this.drawBorder();\n                }\n            },\n            {\n                z: tz,\n                draw: (chartArea)=>{\n                    this.drawLabels(chartArea);\n                }\n            }\n        ];\n    }\n getMatchingVisibleMetas(type) {\n        const metas = this.chart.getSortedVisibleDatasetMetas();\n        const axisID = this.axis + 'AxisID';\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            const meta = metas[i];\n            if (meta[axisID] === this.id && (!type || meta.type === type)) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n _resolveTickFontOptions(index) {\n        const opts = this.options.ticks.setContext(this.getContext(index));\n        return toFont(opts.font);\n    }\n _maxDigits() {\n        const fontSize = this._resolveTickFontOptions(0).lineHeight;\n        return (this.isHorizontal() ? this.width : this.height) / fontSize;\n    }\n}\n\nclass TypedRegistry {\n    constructor(type, scope, override){\n        this.type = type;\n        this.scope = scope;\n        this.override = override;\n        this.items = Object.create(null);\n    }\n    isForType(type) {\n        return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n    }\n register(item) {\n        const proto = Object.getPrototypeOf(item);\n        let parentScope;\n        if (isIChartComponent(proto)) {\n            parentScope = this.register(proto);\n        }\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope + '.' + id;\n        if (!id) {\n            throw new Error('class does not have id: ' + item);\n        }\n        if (id in items) {\n            return scope;\n        }\n        items[id] = item;\n        registerDefaults(item, scope, parentScope);\n        if (this.override) {\n            defaults.override(item.id, item.overrides);\n        }\n        return scope;\n    }\n get(id) {\n        return this.items[id];\n    }\n unregister(item) {\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope;\n        if (id in items) {\n            delete items[id];\n        }\n        if (scope && id in defaults[scope]) {\n            delete defaults[scope][id];\n            if (this.override) {\n                delete overrides[id];\n            }\n        }\n    }\n}function registerDefaults(item, scope, parentScope) {\n    const itemDefaults = merge(Object.create(null), [\n        parentScope ? defaults.get(parentScope) : {},\n        defaults.get(scope),\n        item.defaults\n    ]);\n    defaults.set(scope, itemDefaults);\n    if (item.defaultRoutes) {\n        routeDefaults(scope, item.defaultRoutes);\n    }\n    if (item.descriptors) {\n        defaults.describe(scope, item.descriptors);\n    }\n}\nfunction routeDefaults(scope, routes) {\n    Object.keys(routes).forEach((property)=>{\n        const propertyParts = property.split('.');\n        const sourceName = propertyParts.pop();\n        const sourceScope = [\n            scope\n        ].concat(propertyParts).join('.');\n        const parts = routes[property].split('.');\n        const targetName = parts.pop();\n        const targetScope = parts.join('.');\n        defaults.route(sourceScope, sourceName, targetScope, targetName);\n    });\n}\nfunction isIChartComponent(proto) {\n    return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n    constructor(){\n        this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n        this.elements = new TypedRegistry(Element, 'elements');\n        this.plugins = new TypedRegistry(Object, 'plugins');\n        this.scales = new TypedRegistry(Scale, 'scales');\n        this._typedRegistries = [\n            this.controllers,\n            this.scales,\n            this.elements\n        ];\n    }\n add(...args) {\n        this._each('register', args);\n    }\n    remove(...args) {\n        this._each('unregister', args);\n    }\n addControllers(...args) {\n        this._each('register', args, this.controllers);\n    }\n addElements(...args) {\n        this._each('register', args, this.elements);\n    }\n addPlugins(...args) {\n        this._each('register', args, this.plugins);\n    }\n addScales(...args) {\n        this._each('register', args, this.scales);\n    }\n getController(id) {\n        return this._get(id, this.controllers, 'controller');\n    }\n getElement(id) {\n        return this._get(id, this.elements, 'element');\n    }\n getPlugin(id) {\n        return this._get(id, this.plugins, 'plugin');\n    }\n getScale(id) {\n        return this._get(id, this.scales, 'scale');\n    }\n removeControllers(...args) {\n        this._each('unregister', args, this.controllers);\n    }\n removeElements(...args) {\n        this._each('unregister', args, this.elements);\n    }\n removePlugins(...args) {\n        this._each('unregister', args, this.plugins);\n    }\n removeScales(...args) {\n        this._each('unregister', args, this.scales);\n    }\n _each(method, args, typedRegistry) {\n        [\n            ...args\n        ].forEach((arg)=>{\n            const reg = typedRegistry || this._getRegistryForType(arg);\n            if (typedRegistry || reg.isForType(arg) || reg === this.plugins && arg.id) {\n                this._exec(method, reg, arg);\n            } else {\n                each(arg, (item)=>{\n                    const itemReg = typedRegistry || this._getRegistryForType(item);\n                    this._exec(method, itemReg, item);\n                });\n            }\n        });\n    }\n _exec(method, registry, component) {\n        const camelMethod = _capitalize(method);\n        callback(component['before' + camelMethod], [], component);\n        registry[method](component);\n        callback(component['after' + camelMethod], [], component);\n    }\n _getRegistryForType(type) {\n        for(let i = 0; i < this._typedRegistries.length; i++){\n            const reg = this._typedRegistries[i];\n            if (reg.isForType(type)) {\n                return reg;\n            }\n        }\n        return this.plugins;\n    }\n _get(id, typedRegistry, type) {\n        const item = typedRegistry.get(id);\n        if (item === undefined) {\n            throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n        }\n        return item;\n    }\n}\nvar registry = /* #__PURE__ */ new Registry();\n\nclass PluginService {\n    constructor(){\n        this._init = [];\n    }\n notify(chart, hook, args, filter) {\n        if (hook === 'beforeInit') {\n            this._init = this._createDescriptors(chart, true);\n            this._notify(this._init, chart, 'install');\n        }\n        const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n        const result = this._notify(descriptors, chart, hook, args);\n        if (hook === 'afterDestroy') {\n            this._notify(descriptors, chart, 'stop');\n            this._notify(this._init, chart, 'uninstall');\n        }\n        return result;\n    }\n _notify(descriptors, chart, hook, args) {\n        args = args || {};\n        for (const descriptor of descriptors){\n            const plugin = descriptor.plugin;\n            const method = plugin[hook];\n            const params = [\n                chart,\n                args,\n                descriptor.options\n            ];\n            if (callback(method, params, plugin) === false && args.cancelable) {\n                return false;\n            }\n        }\n        return true;\n    }\n    invalidate() {\n        if (!isNullOrUndef(this._cache)) {\n            this._oldCache = this._cache;\n            this._cache = undefined;\n        }\n    }\n _descriptors(chart) {\n        if (this._cache) {\n            return this._cache;\n        }\n        const descriptors = this._cache = this._createDescriptors(chart);\n        this._notifyStateChanges(chart);\n        return descriptors;\n    }\n    _createDescriptors(chart, all) {\n        const config = chart && chart.config;\n        const options = valueOrDefault(config.options && config.options.plugins, {});\n        const plugins = allPlugins(config);\n        return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n    }\n _notifyStateChanges(chart) {\n        const previousDescriptors = this._oldCache || [];\n        const descriptors = this._cache;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.plugin.id === y.plugin.id));\n        this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n        this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n    }\n} function allPlugins(config) {\n    const localIds = {};\n    const plugins = [];\n    const keys = Object.keys(registry.plugins.items);\n    for(let i = 0; i < keys.length; i++){\n        plugins.push(registry.getPlugin(keys[i]));\n    }\n    const local = config.plugins || [];\n    for(let i1 = 0; i1 < local.length; i1++){\n        const plugin = local[i1];\n        if (plugins.indexOf(plugin) === -1) {\n            plugins.push(plugin);\n            localIds[plugin.id] = true;\n        }\n    }\n    return {\n        plugins,\n        localIds\n    };\n}\nfunction getOpts(options, all) {\n    if (!all && options === false) {\n        return null;\n    }\n    if (options === true) {\n        return {};\n    }\n    return options;\n}\nfunction createDescriptors(chart, { plugins , localIds  }, options, all) {\n    const result = [];\n    const context = chart.getContext();\n    for (const plugin of plugins){\n        const id = plugin.id;\n        const opts = getOpts(options[id], all);\n        if (opts === null) {\n            continue;\n        }\n        result.push({\n            plugin,\n            options: pluginOpts(chart.config, {\n                plugin,\n                local: localIds[id]\n            }, opts, context)\n        });\n    }\n    return result;\n}\nfunction pluginOpts(config, { plugin , local  }, opts, context) {\n    const keys = config.pluginScopeKeys(plugin);\n    const scopes = config.getOptionScopes(opts, keys);\n    if (local && plugin.defaults) {\n        scopes.push(plugin.defaults);\n    }\n    return config.createResolver(scopes, context, [\n        ''\n    ], {\n        scriptable: false,\n        indexable: false,\n        allKeys: true\n    });\n}\n\nfunction getIndexAxis(type, options) {\n    const datasetDefaults = defaults.datasets[type] || {};\n    const datasetOptions = (options.datasets || {})[type] || {};\n    return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n    let axis = id;\n    if (id === '_index_') {\n        axis = indexAxis;\n    } else if (id === '_value_') {\n        axis = indexAxis === 'x' ? 'y' : 'x';\n    }\n    return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n    return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction axisFromPosition(position) {\n    if (position === 'top' || position === 'bottom') {\n        return 'x';\n    }\n    if (position === 'left' || position === 'right') {\n        return 'y';\n    }\n}\nfunction determineAxis(id, scaleOptions) {\n    if (id === 'x' || id === 'y' || id === 'r') {\n        return id;\n    }\n    id = scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.length > 1 && determineAxis(id[0].toLowerCase(), scaleOptions);\n    if (id) {\n        return id;\n    }\n    throw new Error(`Cannot determine type of '${name}' axis. Please provide 'axis' or 'position' option.`);\n}\nfunction mergeScaleConfig(config, options) {\n    const chartDefaults = overrides[config.type] || {\n        scales: {}\n    };\n    const configScales = options.scales || {};\n    const chartIndexAxis = getIndexAxis(config.type, options);\n    const scales = Object.create(null);\n    Object.keys(configScales).forEach((id)=>{\n        const scaleConf = configScales[id];\n        if (!isObject(scaleConf)) {\n            return console.error(`Invalid scale configuration for scale: ${id}`);\n        }\n        if (scaleConf._proxy) {\n            return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n        }\n        const axis = determineAxis(id, scaleConf);\n        const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n        const defaultScaleOptions = chartDefaults.scales || {};\n        scales[id] = mergeIf(Object.create(null), [\n            {\n                axis\n            },\n            scaleConf,\n            defaultScaleOptions[axis],\n            defaultScaleOptions[defaultId]\n        ]);\n    });\n    config.data.datasets.forEach((dataset)=>{\n        const type = dataset.type || config.type;\n        const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n        const datasetDefaults = overrides[type] || {};\n        const defaultScaleOptions = datasetDefaults.scales || {};\n        Object.keys(defaultScaleOptions).forEach((defaultID)=>{\n            const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n            const id = dataset[axis + 'AxisID'] || axis;\n            scales[id] = scales[id] || Object.create(null);\n            mergeIf(scales[id], [\n                {\n                    axis\n                },\n                configScales[id],\n                defaultScaleOptions[defaultID]\n            ]);\n        });\n    });\n    Object.keys(scales).forEach((key)=>{\n        const scale = scales[key];\n        mergeIf(scale, [\n            defaults.scales[scale.type],\n            defaults.scale\n        ]);\n    });\n    return scales;\n}\nfunction initOptions(config) {\n    const options = config.options || (config.options = {});\n    options.plugins = valueOrDefault(options.plugins, {});\n    options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n    data = data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    return data;\n}\nfunction initConfig(config) {\n    config = config || {};\n    config.data = initData(config.data);\n    initOptions(config);\n    return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n    let keys = keyCache.get(cacheKey);\n    if (!keys) {\n        keys = generate();\n        keyCache.set(cacheKey, keys);\n        keysCached.add(keys);\n    }\n    return keys;\n}\nconst addIfFound = (set, obj, key)=>{\n    const opts = resolveObjectKey(obj, key);\n    if (opts !== undefined) {\n        set.add(opts);\n    }\n};\nclass Config {\n    constructor(config){\n        this._config = initConfig(config);\n        this._scopeCache = new Map();\n        this._resolverCache = new Map();\n    }\n    get platform() {\n        return this._config.platform;\n    }\n    get type() {\n        return this._config.type;\n    }\n    set type(type) {\n        this._config.type = type;\n    }\n    get data() {\n        return this._config.data;\n    }\n    set data(data) {\n        this._config.data = initData(data);\n    }\n    get options() {\n        return this._config.options;\n    }\n    set options(options) {\n        this._config.options = options;\n    }\n    get plugins() {\n        return this._config.plugins;\n    }\n    update() {\n        const config = this._config;\n        this.clearCache();\n        initOptions(config);\n    }\n    clearCache() {\n        this._scopeCache.clear();\n        this._resolverCache.clear();\n    }\n datasetScopeKeys(datasetType) {\n        return cachedKeys(datasetType, ()=>[\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetAnimationScopeKeys(datasetType, transition) {\n        return cachedKeys(`${datasetType}.transition.${transition}`, ()=>[\n                [\n                    `datasets.${datasetType}.transitions.${transition}`,\n                    `transitions.${transition}`,\n                ],\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetElementScopeKeys(datasetType, elementType) {\n        return cachedKeys(`${datasetType}-${elementType}`, ()=>[\n                [\n                    `datasets.${datasetType}.elements.${elementType}`,\n                    `datasets.${datasetType}`,\n                    `elements.${elementType}`,\n                    ''\n                ]\n            ]);\n    }\n pluginScopeKeys(plugin) {\n        const id = plugin.id;\n        const type = this.type;\n        return cachedKeys(`${type}-plugin-${id}`, ()=>[\n                [\n                    `plugins.${id}`,\n                    ...plugin.additionalOptionScopes || [],\n                ]\n            ]);\n    }\n _cachedScopes(mainScope, resetCache) {\n        const _scopeCache = this._scopeCache;\n        let cache = _scopeCache.get(mainScope);\n        if (!cache || resetCache) {\n            cache = new Map();\n            _scopeCache.set(mainScope, cache);\n        }\n        return cache;\n    }\n getOptionScopes(mainScope, keyLists, resetCache) {\n        const { options , type  } = this;\n        const cache = this._cachedScopes(mainScope, resetCache);\n        const cached = cache.get(keyLists);\n        if (cached) {\n            return cached;\n        }\n        const scopes = new Set();\n        keyLists.forEach((keys)=>{\n            if (mainScope) {\n                scopes.add(mainScope);\n                keys.forEach((key)=>addIfFound(scopes, mainScope, key));\n            }\n            keys.forEach((key)=>addIfFound(scopes, options, key));\n            keys.forEach((key)=>addIfFound(scopes, overrides[type] || {}, key));\n            keys.forEach((key)=>addIfFound(scopes, defaults, key));\n            keys.forEach((key)=>addIfFound(scopes, descriptors, key));\n        });\n        const array = Array.from(scopes);\n        if (array.length === 0) {\n            array.push(Object.create(null));\n        }\n        if (keysCached.has(keyLists)) {\n            cache.set(keyLists, array);\n        }\n        return array;\n    }\n chartOptionScopes() {\n        const { options , type  } = this;\n        return [\n            options,\n            overrides[type] || {},\n            defaults.datasets[type] || {},\n            {\n                type\n            },\n            defaults,\n            descriptors\n        ];\n    }\n resolveNamedOptions(scopes, names, context, prefixes = [\n        ''\n    ]) {\n        const result = {\n            $shared: true\n        };\n        const { resolver , subPrefixes  } = getResolver(this._resolverCache, scopes, prefixes);\n        let options = resolver;\n        if (needContext(resolver, names)) {\n            result.$shared = false;\n            context = isFunction(context) ? context() : context;\n            const subResolver = this.createResolver(scopes, context, subPrefixes);\n            options = _attachContext(resolver, context, subResolver);\n        }\n        for (const prop of names){\n            result[prop] = options[prop];\n        }\n        return result;\n    }\n createResolver(scopes, context, prefixes = [\n        ''\n    ], descriptorDefaults) {\n        const { resolver  } = getResolver(this._resolverCache, scopes, prefixes);\n        return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n    }\n}function getResolver(resolverCache, scopes, prefixes) {\n    let cache = resolverCache.get(scopes);\n    if (!cache) {\n        cache = new Map();\n        resolverCache.set(scopes, cache);\n    }\n    const cacheKey = prefixes.join();\n    let cached = cache.get(cacheKey);\n    if (!cached) {\n        const resolver = _createResolver(scopes, prefixes);\n        cached = {\n            resolver,\n            subPrefixes: prefixes.filter((p)=>!p.toLowerCase().includes('hover'))\n        };\n        cache.set(cacheKey, cached);\n    }\n    return cached;\n}\nconst hasFunction = (value)=>isObject(value) && Object.getOwnPropertyNames(value).reduce((acc, key)=>acc || isFunction(value[key]), false);\nfunction needContext(proxy, names) {\n    const { isScriptable , isIndexable  } = _descriptors(proxy);\n    for (const prop of names){\n        const scriptable = isScriptable(prop);\n        const indexable = isIndexable(prop);\n        const value = (indexable || scriptable) && proxy[prop];\n        if (scriptable && (isFunction(value) || hasFunction(value)) || indexable && isArray(value)) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar version = \"4.0.1\";\n\nconst KNOWN_POSITIONS = [\n    'top',\n    'bottom',\n    'left',\n    'right',\n    'chartArea'\n];\nfunction positionIsHorizontal(position, axis) {\n    return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\nfunction compare2Level(l1, l2) {\n    return function(a, b) {\n        return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n    };\n}\nfunction onAnimationsComplete(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    chart.notifyPlugins('afterRender');\n    callback(animationOptions && animationOptions.onComplete, [\n        context\n    ], chart);\n}\nfunction onAnimationProgress(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    callback(animationOptions && animationOptions.onProgress, [\n        context\n    ], chart);\n}\n function getCanvas(item) {\n    if (_isDomSupported() && typeof item === 'string') {\n        item = document.getElementById(item);\n    } else if (item && item.length) {\n        item = item[0];\n    }\n    if (item && item.canvas) {\n        item = item.canvas;\n    }\n    return item;\n}\nconst instances = {};\nconst getChart = (key)=>{\n    const canvas = getCanvas(key);\n    return Object.values(instances).filter((c)=>c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n    const keys = Object.keys(obj);\n    for (const key of keys){\n        const intKey = +key;\n        if (intKey >= start) {\n            const value = obj[key];\n            delete obj[key];\n            if (move > 0 || intKey > start) {\n                obj[intKey + move] = value;\n            }\n        }\n    }\n}\n function determineLastEvent(e, lastEvent, inChartArea, isClick) {\n    if (!inChartArea || e.type === 'mouseout') {\n        return null;\n    }\n    if (isClick) {\n        return lastEvent;\n    }\n    return e;\n}\nfunction getDatasetArea(meta) {\n    const { xScale , yScale  } = meta;\n    if (xScale && yScale) {\n        return {\n            left: xScale.left,\n            right: xScale.right,\n            top: yScale.top,\n            bottom: yScale.bottom\n        };\n    }\n}\nclass Chart {\n    static defaults = defaults;\n    static instances = instances;\n    static overrides = overrides;\n    static registry = registry;\n    static version = version;\n    static getChart = getChart;\n    static register(...items) {\n        registry.add(...items);\n        invalidatePlugins();\n    }\n    static unregister(...items) {\n        registry.remove(...items);\n        invalidatePlugins();\n    }\n    constructor(item, userConfig){\n        const config = this.config = new Config(userConfig);\n        const initialCanvas = getCanvas(item);\n        const existingChart = getChart(initialCanvas);\n        if (existingChart) {\n            throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.');\n        }\n        const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n        this.platform.updateConfig(config);\n        const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n        const canvas = context && context.canvas;\n        const height = canvas && canvas.height;\n        const width = canvas && canvas.width;\n        this.id = uid();\n        this.ctx = context;\n        this.canvas = canvas;\n        this.width = width;\n        this.height = height;\n        this._options = options;\n        this._aspectRatio = this.aspectRatio;\n        this._layers = [];\n        this._metasets = [];\n        this._stacks = undefined;\n        this.boxes = [];\n        this.currentDevicePixelRatio = undefined;\n        this.chartArea = undefined;\n        this._active = [];\n        this._lastEvent = undefined;\n        this._listeners = {};\n         this._responsiveListeners = undefined;\n        this._sortedMetasets = [];\n        this.scales = {};\n        this._plugins = new PluginService();\n        this.$proxies = {};\n        this._hiddenIndices = {};\n        this.attached = false;\n        this._animationsDisabled = undefined;\n        this.$context = undefined;\n        this._doResize = debounce((mode)=>this.update(mode), options.resizeDelay || 0);\n        this._dataChanges = [];\n        instances[this.id] = this;\n        if (!context || !canvas) {\n            console.error(\"Failed to create chart: can't acquire context from the given item\");\n            return;\n        }\n        animator.listen(this, 'complete', onAnimationsComplete);\n        animator.listen(this, 'progress', onAnimationProgress);\n        this._initialize();\n        if (this.attached) {\n            this.update();\n        }\n    }\n    get aspectRatio() {\n        const { options: { aspectRatio , maintainAspectRatio  } , width , height , _aspectRatio  } = this;\n        if (!isNullOrUndef(aspectRatio)) {\n            return aspectRatio;\n        }\n        if (maintainAspectRatio && _aspectRatio) {\n            return _aspectRatio;\n        }\n        return height ? width / height : null;\n    }\n    get data() {\n        return this.config.data;\n    }\n    set data(data) {\n        this.config.data = data;\n    }\n    get options() {\n        return this._options;\n    }\n    set options(options) {\n        this.config.options = options;\n    }\n    get registry() {\n        return registry;\n    }\n _initialize() {\n        this.notifyPlugins('beforeInit');\n        if (this.options.responsive) {\n            this.resize();\n        } else {\n            retinaScale(this, this.options.devicePixelRatio);\n        }\n        this.bindEvents();\n        this.notifyPlugins('afterInit');\n        return this;\n    }\n    clear() {\n        clearCanvas(this.canvas, this.ctx);\n        return this;\n    }\n    stop() {\n        animator.stop(this);\n        return this;\n    }\n resize(width, height) {\n        if (!animator.running(this)) {\n            this._resize(width, height);\n        } else {\n            this._resizeBeforeDraw = {\n                width,\n                height\n            };\n        }\n    }\n    _resize(width, height) {\n        const options = this.options;\n        const canvas = this.canvas;\n        const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n        const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n        const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n        const mode = this.width ? 'resize' : 'attach';\n        this.width = newSize.width;\n        this.height = newSize.height;\n        this._aspectRatio = this.aspectRatio;\n        if (!retinaScale(this, newRatio, true)) {\n            return;\n        }\n        this.notifyPlugins('resize', {\n            size: newSize\n        });\n        callback(options.onResize, [\n            this,\n            newSize\n        ], this);\n        if (this.attached) {\n            if (this._doResize(mode)) {\n                this.render();\n            }\n        }\n    }\n    ensureScalesHaveIDs() {\n        const options = this.options;\n        const scalesOptions = options.scales || {};\n        each(scalesOptions, (axisOptions, axisID)=>{\n            axisOptions.id = axisID;\n        });\n    }\n buildOrUpdateScales() {\n        const options = this.options;\n        const scaleOpts = options.scales;\n        const scales = this.scales;\n        const updated = Object.keys(scales).reduce((obj, id)=>{\n            obj[id] = false;\n            return obj;\n        }, {});\n        let items = [];\n        if (scaleOpts) {\n            items = items.concat(Object.keys(scaleOpts).map((id)=>{\n                const scaleOptions = scaleOpts[id];\n                const axis = determineAxis(id, scaleOptions);\n                const isRadial = axis === 'r';\n                const isHorizontal = axis === 'x';\n                return {\n                    options: scaleOptions,\n                    dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n                    dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n                };\n            }));\n        }\n        each(items, (item)=>{\n            const scaleOptions = item.options;\n            const id = scaleOptions.id;\n            const axis = determineAxis(id, scaleOptions);\n            const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n            if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n                scaleOptions.position = item.dposition;\n            }\n            updated[id] = true;\n            let scale = null;\n            if (id in scales && scales[id].type === scaleType) {\n                scale = scales[id];\n            } else {\n                const scaleClass = registry.getScale(scaleType);\n                scale = new scaleClass({\n                    id,\n                    type: scaleType,\n                    ctx: this.ctx,\n                    chart: this\n                });\n                scales[scale.id] = scale;\n            }\n            scale.init(scaleOptions, options);\n        });\n        each(updated, (hasUpdated, id)=>{\n            if (!hasUpdated) {\n                delete scales[id];\n            }\n        });\n        each(scales, (scale)=>{\n            layouts.configure(this, scale, scale.options);\n            layouts.addBox(this, scale);\n        });\n    }\n _updateMetasets() {\n        const metasets = this._metasets;\n        const numData = this.data.datasets.length;\n        const numMeta = metasets.length;\n        metasets.sort((a, b)=>a.index - b.index);\n        if (numMeta > numData) {\n            for(let i = numData; i < numMeta; ++i){\n                this._destroyDatasetMeta(i);\n            }\n            metasets.splice(numData, numMeta - numData);\n        }\n        this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n    }\n _removeUnreferencedMetasets() {\n        const { _metasets: metasets , data: { datasets  }  } = this;\n        if (metasets.length > datasets.length) {\n            delete this._stacks;\n        }\n        metasets.forEach((meta, index)=>{\n            if (datasets.filter((x)=>x === meta._dataset).length === 0) {\n                this._destroyDatasetMeta(index);\n            }\n        });\n    }\n    buildOrUpdateControllers() {\n        const newControllers = [];\n        const datasets = this.data.datasets;\n        let i, ilen;\n        this._removeUnreferencedMetasets();\n        for(i = 0, ilen = datasets.length; i < ilen; i++){\n            const dataset = datasets[i];\n            let meta = this.getDatasetMeta(i);\n            const type = dataset.type || this.config.type;\n            if (meta.type && meta.type !== type) {\n                this._destroyDatasetMeta(i);\n                meta = this.getDatasetMeta(i);\n            }\n            meta.type = type;\n            meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n            meta.order = dataset.order || 0;\n            meta.index = i;\n            meta.label = '' + dataset.label;\n            meta.visible = this.isDatasetVisible(i);\n            if (meta.controller) {\n                meta.controller.updateIndex(i);\n                meta.controller.linkScales();\n            } else {\n                const ControllerClass = registry.getController(type);\n                const { datasetElementType , dataElementType  } = defaults.datasets[type];\n                Object.assign(ControllerClass, {\n                    dataElementType: registry.getElement(dataElementType),\n                    datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n                });\n                meta.controller = new ControllerClass(this, i);\n                newControllers.push(meta.controller);\n            }\n        }\n        this._updateMetasets();\n        return newControllers;\n    }\n _resetElements() {\n        each(this.data.datasets, (dataset, datasetIndex)=>{\n            this.getDatasetMeta(datasetIndex).controller.reset();\n        }, this);\n    }\n reset() {\n        this._resetElements();\n        this.notifyPlugins('reset');\n    }\n    update(mode) {\n        const config = this.config;\n        config.update();\n        const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        const animsDisabled = this._animationsDisabled = !options.animation;\n        this._updateScales();\n        this._checkEventBindings();\n        this._updateHiddenIndices();\n        this._plugins.invalidate();\n        if (this.notifyPlugins('beforeUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const newControllers = this.buildOrUpdateControllers();\n        this.notifyPlugins('beforeElementsUpdate');\n        let minPadding = 0;\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; i++){\n            const { controller  } = this.getDatasetMeta(i);\n            const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n            controller.buildOrUpdateElements(reset);\n            minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n        }\n        minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n        this._updateLayout(minPadding);\n        if (!animsDisabled) {\n            each(newControllers, (controller)=>{\n                controller.reset();\n            });\n        }\n        this._updateDatasets(mode);\n        this.notifyPlugins('afterUpdate', {\n            mode\n        });\n        this._layers.sort(compare2Level('z', '_idx'));\n        const { _active , _lastEvent  } = this;\n        if (_lastEvent) {\n            this._eventHandler(_lastEvent, true);\n        } else if (_active.length) {\n            this._updateHoverStyles(_active, _active, true);\n        }\n        this.render();\n    }\n _updateScales() {\n        each(this.scales, (scale)=>{\n            layouts.removeBox(this, scale);\n        });\n        this.ensureScalesHaveIDs();\n        this.buildOrUpdateScales();\n    }\n _checkEventBindings() {\n        const options = this.options;\n        const existingEvents = new Set(Object.keys(this._listeners));\n        const newEvents = new Set(options.events);\n        if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n            this.unbindEvents();\n            this.bindEvents();\n        }\n    }\n _updateHiddenIndices() {\n        const { _hiddenIndices  } = this;\n        const changes = this._getUniformDataChanges() || [];\n        for (const { method , start , count  } of changes){\n            const move = method === '_removeElements' ? -count : count;\n            moveNumericKeys(_hiddenIndices, start, move);\n        }\n    }\n _getUniformDataChanges() {\n        const _dataChanges = this._dataChanges;\n        if (!_dataChanges || !_dataChanges.length) {\n            return;\n        }\n        this._dataChanges = [];\n        const datasetCount = this.data.datasets.length;\n        const makeSet = (idx)=>new Set(_dataChanges.filter((c)=>c[0] === idx).map((c, i)=>i + ',' + c.splice(1).join(',')));\n        const changeSet = makeSet(0);\n        for(let i = 1; i < datasetCount; i++){\n            if (!setsEqual(changeSet, makeSet(i))) {\n                return;\n            }\n        }\n        return Array.from(changeSet).map((c)=>c.split(',')).map((a)=>({\n                method: a[1],\n                start: +a[2],\n                count: +a[3]\n            }));\n    }\n _updateLayout(minPadding) {\n        if (this.notifyPlugins('beforeLayout', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        layouts.update(this, this.width, this.height, minPadding);\n        const area = this.chartArea;\n        const noArea = area.width <= 0 || area.height <= 0;\n        this._layers = [];\n        each(this.boxes, (box)=>{\n            if (noArea && box.position === 'chartArea') {\n                return;\n            }\n            if (box.configure) {\n                box.configure();\n            }\n            this._layers.push(...box._layers());\n        }, this);\n        this._layers.forEach((item, index)=>{\n            item._idx = index;\n        });\n        this.notifyPlugins('afterLayout');\n    }\n _updateDatasets(mode) {\n        if (this.notifyPlugins('beforeDatasetsUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this.getDatasetMeta(i).controller.configure();\n        }\n        for(let i1 = 0, ilen1 = this.data.datasets.length; i1 < ilen1; ++i1){\n            this._updateDataset(i1, isFunction(mode) ? mode({\n                datasetIndex: i1\n            }) : mode);\n        }\n        this.notifyPlugins('afterDatasetsUpdate', {\n            mode\n        });\n    }\n _updateDataset(index, mode) {\n        const meta = this.getDatasetMeta(index);\n        const args = {\n            meta,\n            index,\n            mode,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n            return;\n        }\n        meta.controller._update(mode);\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetUpdate', args);\n    }\n    render() {\n        if (this.notifyPlugins('beforeRender', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        if (animator.has(this)) {\n            if (this.attached && !animator.running(this)) {\n                animator.start(this);\n            }\n        } else {\n            this.draw();\n            onAnimationsComplete({\n                chart: this\n            });\n        }\n    }\n    draw() {\n        let i;\n        if (this._resizeBeforeDraw) {\n            const { width , height  } = this._resizeBeforeDraw;\n            this._resize(width, height);\n            this._resizeBeforeDraw = null;\n        }\n        this.clear();\n        if (this.width <= 0 || this.height <= 0) {\n            return;\n        }\n        if (this.notifyPlugins('beforeDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const layers = this._layers;\n        for(i = 0; i < layers.length && layers[i].z <= 0; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this._drawDatasets();\n        for(; i < layers.length; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this.notifyPlugins('afterDraw');\n    }\n _getSortedDatasetMetas(filterVisible) {\n        const metasets = this._sortedMetasets;\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metasets.length; i < ilen; ++i){\n            const meta = metasets[i];\n            if (!filterVisible || meta.visible) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n getSortedVisibleDatasetMetas() {\n        return this._getSortedDatasetMetas(true);\n    }\n _drawDatasets() {\n        if (this.notifyPlugins('beforeDatasetsDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const metasets = this.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            this._drawDataset(metasets[i]);\n        }\n        this.notifyPlugins('afterDatasetsDraw');\n    }\n _drawDataset(meta) {\n        const ctx = this.ctx;\n        const clip = meta._clip;\n        const useClip = !clip.disabled;\n        const area = getDatasetArea(meta) || this.chartArea;\n        const args = {\n            meta,\n            index: meta.index,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n            return;\n        }\n        if (useClip) {\n            clipArea(ctx, {\n                left: clip.left === false ? 0 : area.left - clip.left,\n                right: clip.right === false ? this.width : area.right + clip.right,\n                top: clip.top === false ? 0 : area.top - clip.top,\n                bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n            });\n        }\n        meta.controller.draw();\n        if (useClip) {\n            unclipArea(ctx);\n        }\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetDraw', args);\n    }\n isPointInArea(point) {\n        return _isPointInArea(point, this.chartArea, this._minPadding);\n    }\n    getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n        const method = Interaction.modes[mode];\n        if (typeof method === 'function') {\n            return method(this, e, options, useFinalPosition);\n        }\n        return [];\n    }\n    getDatasetMeta(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        const metasets = this._metasets;\n        let meta = metasets.filter((x)=>x && x._dataset === dataset).pop();\n        if (!meta) {\n            meta = {\n                type: null,\n                data: [],\n                dataset: null,\n                controller: null,\n                hidden: null,\n                xAxisID: null,\n                yAxisID: null,\n                order: dataset && dataset.order || 0,\n                index: datasetIndex,\n                _dataset: dataset,\n                _parsed: [],\n                _sorted: false\n            };\n            metasets.push(meta);\n        }\n        return meta;\n    }\n    getContext() {\n        return this.$context || (this.$context = createContext(null, {\n            chart: this,\n            type: 'chart'\n        }));\n    }\n    getVisibleDatasetCount() {\n        return this.getSortedVisibleDatasetMetas().length;\n    }\n    isDatasetVisible(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        if (!dataset) {\n            return false;\n        }\n        const meta = this.getDatasetMeta(datasetIndex);\n        return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n    }\n    setDatasetVisibility(datasetIndex, visible) {\n        const meta = this.getDatasetMeta(datasetIndex);\n        meta.hidden = !visible;\n    }\n    toggleDataVisibility(index) {\n        this._hiddenIndices[index] = !this._hiddenIndices[index];\n    }\n    getDataVisibility(index) {\n        return !this._hiddenIndices[index];\n    }\n _updateVisibility(datasetIndex, dataIndex, visible) {\n        const mode = visible ? 'show' : 'hide';\n        const meta = this.getDatasetMeta(datasetIndex);\n        const anims = meta.controller._resolveAnimations(undefined, mode);\n        if (defined(dataIndex)) {\n            meta.data[dataIndex].hidden = !visible;\n            this.update();\n        } else {\n            this.setDatasetVisibility(datasetIndex, visible);\n            anims.update(meta, {\n                visible\n            });\n            this.update((ctx)=>ctx.datasetIndex === datasetIndex ? mode : undefined);\n        }\n    }\n    hide(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, false);\n    }\n    show(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, true);\n    }\n _destroyDatasetMeta(datasetIndex) {\n        const meta = this._metasets[datasetIndex];\n        if (meta && meta.controller) {\n            meta.controller._destroy();\n        }\n        delete this._metasets[datasetIndex];\n    }\n    _stop() {\n        let i, ilen;\n        this.stop();\n        animator.remove(this);\n        for(i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._destroyDatasetMeta(i);\n        }\n    }\n    destroy() {\n        this.notifyPlugins('beforeDestroy');\n        const { canvas , ctx  } = this;\n        this._stop();\n        this.config.clearCache();\n        if (canvas) {\n            this.unbindEvents();\n            clearCanvas(canvas, ctx);\n            this.platform.releaseContext(ctx);\n            this.canvas = null;\n            this.ctx = null;\n        }\n        delete instances[this.id];\n        this.notifyPlugins('afterDestroy');\n    }\n    toBase64Image(...args) {\n        return this.canvas.toDataURL(...args);\n    }\n bindEvents() {\n        this.bindUserEvents();\n        if (this.options.responsive) {\n            this.bindResponsiveEvents();\n        } else {\n            this.attached = true;\n        }\n    }\n bindUserEvents() {\n        const listeners = this._listeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const listener = (e, x, y)=>{\n            e.offsetX = x;\n            e.offsetY = y;\n            this._eventHandler(e);\n        };\n        each(this.options.events, (type)=>_add(type, listener));\n    }\n bindResponsiveEvents() {\n        if (!this._responsiveListeners) {\n            this._responsiveListeners = {};\n        }\n        const listeners = this._responsiveListeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const _remove = (type, listener)=>{\n            if (listeners[type]) {\n                platform.removeEventListener(this, type, listener);\n                delete listeners[type];\n            }\n        };\n        const listener = (width, height)=>{\n            if (this.canvas) {\n                this.resize(width, height);\n            }\n        };\n        let detached;\n        const attached = ()=>{\n            _remove('attach', attached);\n            this.attached = true;\n            this.resize();\n            _add('resize', listener);\n            _add('detach', detached);\n        };\n        detached = ()=>{\n            this.attached = false;\n            _remove('resize', listener);\n            this._stop();\n            this._resize(0, 0);\n            _add('attach', attached);\n        };\n        if (platform.isAttached(this.canvas)) {\n            attached();\n        } else {\n            detached();\n        }\n    }\n unbindEvents() {\n        each(this._listeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._listeners = {};\n        each(this._responsiveListeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._responsiveListeners = undefined;\n    }\n    updateHoverStyle(items, mode, enabled) {\n        const prefix = enabled ? 'set' : 'remove';\n        let meta, item, i, ilen;\n        if (mode === 'dataset') {\n            meta = this.getDatasetMeta(items[0].datasetIndex);\n            meta.controller['_' + prefix + 'DatasetHoverStyle']();\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            item = items[i];\n            const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n            if (controller) {\n                controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n            }\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements) {\n        const lastActive = this._active || [];\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('No dataset found at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed) {\n            this._active = active;\n            this._lastEvent = null;\n            this._updateHoverStyles(active, lastActive);\n        }\n    }\n notifyPlugins(hook, args, filter) {\n        return this._plugins.notify(this, hook, args, filter);\n    }\n isPluginEnabled(pluginId) {\n        return this._plugins._cache.filter((p)=>p.plugin.id === pluginId).length === 1;\n    }\n _updateHoverStyles(active, lastActive, replay) {\n        const hoverOptions = this.options.hover;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.datasetIndex === y.datasetIndex && x.index === y.index));\n        const deactivated = diff(lastActive, active);\n        const activated = replay ? active : diff(active, lastActive);\n        if (deactivated.length) {\n            this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n        }\n        if (activated.length && hoverOptions.mode) {\n            this.updateHoverStyle(activated, hoverOptions.mode, true);\n        }\n    }\n _eventHandler(e, replay) {\n        const args = {\n            event: e,\n            replay,\n            cancelable: true,\n            inChartArea: this.isPointInArea(e)\n        };\n        const eventFilter = (plugin)=>(plugin.options.events || this.options.events).includes(e.native.type);\n        if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n            return;\n        }\n        const changed = this._handleEvent(e, replay, args.inChartArea);\n        args.cancelable = false;\n        this.notifyPlugins('afterEvent', args, eventFilter);\n        if (changed || args.changed) {\n            this.render();\n        }\n        return this;\n    }\n _handleEvent(e, replay, inChartArea) {\n        const { _active: lastActive = [] , options  } = this;\n        const useFinalPosition = replay;\n        const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n        const isClick = _isClickEvent(e);\n        const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n        if (inChartArea) {\n            this._lastEvent = null;\n            callback(options.onHover, [\n                e,\n                active,\n                this\n            ], this);\n            if (isClick) {\n                callback(options.onClick, [\n                    e,\n                    active,\n                    this\n                ], this);\n            }\n        }\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed || replay) {\n            this._active = active;\n            this._updateHoverStyles(active, lastActive, replay);\n        }\n        this._lastEvent = lastEvent;\n        return changed;\n    }\n _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive;\n        }\n        const hoverOptions = this.options.hover;\n        return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n    }\n}\nfunction invalidatePlugins() {\n    return each(Chart.instances, (chart)=>chart._plugins.invalidate());\n}\nvar Chart$1 = Chart;\n\nfunction clipArc(ctx, element, endAngle) {\n    const { startAngle , pixelMargin , x , y , outerRadius , innerRadius  } = element;\n    let angleMargin = pixelMargin / outerRadius;\n    // Draw an inner border by clipping the arc and drawing a double-width border\n    // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n    ctx.beginPath();\n    ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n    if (innerRadius > pixelMargin) {\n        angleMargin = pixelMargin / innerRadius;\n        ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n    } else {\n        ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n    }\n    ctx.closePath();\n    ctx.clip();\n}\nfunction toRadiusCorners(value) {\n    return _readValueToProps(value, [\n        'outerStart',\n        'outerEnd',\n        'innerStart',\n        'innerEnd'\n    ]);\n}\n/**\n * Parse border radius from the provided options\n */ function parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n    const o = toRadiusCorners(arc.options.borderRadius);\n    const halfThickness = (outerRadius - innerRadius) / 2;\n    const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n    // Outer limits are complicated. We want to compute the available angular distance at\n    // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n    // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n    //\n    // If the borderRadius is large, that value can become negative.\n    // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n    // we know that the thickness term will dominate and compute the limits at that point\n    const computeOuterLimit = (val)=>{\n        const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n        return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n    };\n    return {\n        outerStart: computeOuterLimit(o.outerStart),\n        outerEnd: computeOuterLimit(o.outerEnd),\n        innerStart: _limitValue(o.innerStart, 0, innerLimit),\n        innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n    };\n}\n/**\n * Convert (r, 𝜃) to (x, y)\n */ function rThetaToXY(r, theta, x, y) {\n    return {\n        x: x + r * Math.cos(theta),\n        y: y + r * Math.sin(theta)\n    };\n}\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */ function pathArc(ctx, element, offset, spacing, end, circular) {\n    const { x , y , startAngle: start , pixelMargin , innerRadius: innerR  } = element;\n    const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n    const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n    let spacingOffset = 0;\n    const alpha = end - start;\n    if (spacing) {\n        // When spacing is present, it is the same for all items\n        // So we adjust the start and end angle of the arc such that\n        // the distance is the same as it would be without the spacing\n        const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n        const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n        const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n        const adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n        spacingOffset = (alpha - adjustedAngle) / 2;\n    }\n    const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n    const angleOffset = (alpha - beta) / 2;\n    const startAngle = start + angleOffset + spacingOffset;\n    const endAngle = end - angleOffset - spacingOffset;\n    const { outerStart , outerEnd , innerStart , innerEnd  } = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n    const outerStartAdjustedRadius = outerRadius - outerStart;\n    const outerEndAdjustedRadius = outerRadius - outerEnd;\n    const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n    const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n    const innerStartAdjustedRadius = innerRadius + innerStart;\n    const innerEndAdjustedRadius = innerRadius + innerEnd;\n    const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n    const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n    ctx.beginPath();\n    if (circular) {\n        // The first arc segments from point 1 to point a to point 2\n        const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n        ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n        ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n        // The corner segment from point 2 to point 3\n        if (outerEnd > 0) {\n            const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n        }\n        // The line from point 3 to point 4\n        const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n        ctx.lineTo(p4.x, p4.y);\n        // The corner segment from point 4 to point 5\n        if (innerEnd > 0) {\n            const pCenter1 = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter1.x, pCenter1.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n        }\n        // The inner arc from point 5 to point b to point 6\n        const innerMidAdjustedAngle = (endAngle - innerEnd / innerRadius + (startAngle + innerStart / innerRadius)) / 2;\n        ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, innerMidAdjustedAngle, true);\n        ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + innerStart / innerRadius, true);\n        // The corner segment from point 6 to point 7\n        if (innerStart > 0) {\n            const pCenter2 = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter2.x, pCenter2.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n        }\n        // The line from point 7 to point 8\n        const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n        ctx.lineTo(p8.x, p8.y);\n        // The corner segment from point 8 to point 1\n        if (outerStart > 0) {\n            const pCenter3 = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter3.x, pCenter3.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n        }\n    } else {\n        ctx.moveTo(x, y);\n        const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n        const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerStartX, outerStartY);\n        const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n        const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerEndX, outerEndY);\n    }\n    ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference  } = element;\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.fill();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.fill();\n    return endAngle;\n}\nfunction drawBorder(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference , options  } = element;\n    const { borderWidth , borderJoinStyle  } = options;\n    const inner = options.borderAlign === 'inner';\n    if (!borderWidth) {\n        return;\n    }\n    if (inner) {\n        ctx.lineWidth = borderWidth * 2;\n        ctx.lineJoin = borderJoinStyle || 'round';\n    } else {\n        ctx.lineWidth = borderWidth;\n        ctx.lineJoin = borderJoinStyle || 'bevel';\n    }\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.stroke();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    if (inner) {\n        clipArc(ctx, element, endAngle);\n    }\n    if (!fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        ctx.stroke();\n    }\n}\nclass ArcElement extends Element {\n    static id = 'arc';\n    static defaults = {\n        borderAlign: 'center',\n        borderColor: '#fff',\n        borderJoinStyle: undefined,\n        borderRadius: 0,\n        borderWidth: 2,\n        offset: 0,\n        spacing: 0,\n        angle: undefined,\n        circular: true\n    };\n    static defaultRoutes = {\n        backgroundColor: 'backgroundColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.circumference = undefined;\n        this.startAngle = undefined;\n        this.endAngle = undefined;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.pixelMargin = 0;\n        this.fullCircles = 0;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(chartX, chartY, useFinalPosition) {\n        const point = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        const { angle , distance  } = getAngleFromPoint(point, {\n            x: chartX,\n            y: chartY\n        });\n        const { startAngle , endAngle , innerRadius , outerRadius , circumference  } = this.getProps([\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius',\n            'circumference'\n        ], useFinalPosition);\n        const rAdjust = this.options.spacing / 2;\n        const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n        const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n        const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n        return betweenAngles && withinRadius;\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , startAngle , endAngle , innerRadius , outerRadius  } = this.getProps([\n            'x',\n            'y',\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius',\n            'circumference', \n        ], useFinalPosition);\n        const { offset , spacing  } = this.options;\n        const halfAngle = (startAngle + endAngle) / 2;\n        const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n        return {\n            x: x + Math.cos(halfAngle) * halfRadius,\n            y: y + Math.sin(halfAngle) * halfRadius\n        };\n    }\n    tooltipPosition(useFinalPosition) {\n        return this.getCenterPoint(useFinalPosition);\n    }\n    draw(ctx) {\n        const { options , circumference  } = this;\n        const offset = (options.offset || 0) / 4;\n        const spacing = (options.spacing || 0) / 2;\n        const circular = options.circular;\n        this.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n        this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n        if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n            return;\n        }\n        ctx.save();\n        const halfAngle = (this.startAngle + this.endAngle) / 2;\n        ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n        const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n        const radiusOffset = offset * fix;\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        drawArc(ctx, this, radiusOffset, spacing, circular);\n        drawBorder(ctx, this, radiusOffset, spacing, circular);\n        ctx.restore();\n    }\n}\n\nfunction setStyle(ctx, options, style = options) {\n    ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n    ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n    ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n    ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n    ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n    ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n    ctx.lineTo(target.x, target.y);\n}\nfunction getLineMethod(options) {\n    if (options.stepped) {\n        return _steppedLineTo;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierCurveTo;\n    }\n    return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n    const count = points.length;\n    const { start: paramsStart = 0 , end: paramsEnd = count - 1  } = params;\n    const { start: segmentStart , end: segmentEnd  } = segment;\n    const start = Math.max(paramsStart, segmentStart);\n    const end = Math.min(paramsEnd, segmentEnd);\n    const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n    return {\n        count,\n        start,\n        loop: segment.loop,\n        ilen: end < start && !outside ? count + end - start : end - start\n    };\n}\n function pathSegment(ctx, line, segment, params) {\n    const { points , options  } = line;\n    const { count , start , loop , ilen  } = pathVars(points, segment, params);\n    const lineMethod = getLineMethod(options);\n    let { move =true , reverse  } = params || {};\n    let i, point, prev;\n    for(i = 0; i <= ilen; ++i){\n        point = points[(start + (reverse ? ilen - i : i)) % count];\n        if (point.skip) {\n            continue;\n        } else if (move) {\n            ctx.moveTo(point.x, point.y);\n            move = false;\n        } else {\n            lineMethod(ctx, prev, point, reverse, options.stepped);\n        }\n        prev = point;\n    }\n    if (loop) {\n        point = points[(start + (reverse ? ilen : 0)) % count];\n        lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    return !!loop;\n}\n function fastPathSegment(ctx, line, segment, params) {\n    const points = line.points;\n    const { count , start , ilen  } = pathVars(points, segment, params);\n    const { move =true , reverse  } = params || {};\n    let avgX = 0;\n    let countX = 0;\n    let i, point, prevX, minY, maxY, lastY;\n    const pointIndex = (index)=>(start + (reverse ? ilen - index : index)) % count;\n    const drawX = ()=>{\n        if (minY !== maxY) {\n            ctx.lineTo(avgX, maxY);\n            ctx.lineTo(avgX, minY);\n            ctx.lineTo(avgX, lastY);\n        }\n    };\n    if (move) {\n        point = points[pointIndex(0)];\n        ctx.moveTo(point.x, point.y);\n    }\n    for(i = 0; i <= ilen; ++i){\n        point = points[pointIndex(i)];\n        if (point.skip) {\n            continue;\n        }\n        const x = point.x;\n        const y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n            } else if (y > maxY) {\n                maxY = y;\n            }\n            avgX = (countX * avgX + x) / ++countX;\n        } else {\n            drawX();\n            ctx.lineTo(x, y);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n        }\n        lastY = y;\n    }\n    drawX();\n}\n function _getSegmentMethod(line) {\n    const opts = line.options;\n    const borderDash = opts.borderDash && opts.borderDash.length;\n    const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n    return useFastPath ? fastPathSegment : pathSegment;\n}\n function _getInterpolationMethod(options) {\n    if (options.stepped) {\n        return _steppedInterpolation;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierInterpolation;\n    }\n    return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n    let path = line._path;\n    if (!path) {\n        path = line._path = new Path2D();\n        if (line.path(path, start, count)) {\n            path.closePath();\n        }\n    }\n    setStyle(ctx, line.options);\n    ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n    const { segments , options  } = line;\n    const segmentMethod = _getSegmentMethod(line);\n    for (const segment of segments){\n        setStyle(ctx, options, segment.style);\n        ctx.beginPath();\n        if (segmentMethod(ctx, line, segment, {\n            start,\n            end: start + count - 1\n        })) {\n            ctx.closePath();\n        }\n        ctx.stroke();\n    }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n    if (usePath2D && !line.options.segment) {\n        strokePathWithCache(ctx, line, start, count);\n    } else {\n        strokePathDirect(ctx, line, start, count);\n    }\n}\nclass LineElement extends Element {\n    static id = 'line';\n static defaults = {\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: 'miter',\n        borderWidth: 3,\n        capBezierPoints: true,\n        cubicInterpolationMode: 'default',\n        fill: false,\n        spanGaps: false,\n        stepped: false,\n        tension: 0\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash' && name !== 'fill'\n    };\n    constructor(cfg){\n        super();\n        this.animated = true;\n        this.options = undefined;\n        this._chart = undefined;\n        this._loop = undefined;\n        this._fullLoop = undefined;\n        this._path = undefined;\n        this._points = undefined;\n        this._segments = undefined;\n        this._decimated = false;\n        this._pointsUpdated = false;\n        this._datasetIndex = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    updateControlPoints(chartArea, indexAxis) {\n        const options = this.options;\n        if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n            const loop = options.spanGaps ? this._loop : this._fullLoop;\n            _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n            this._pointsUpdated = true;\n        }\n    }\n    set points(points) {\n        this._points = points;\n        delete this._segments;\n        delete this._path;\n        this._pointsUpdated = false;\n    }\n    get points() {\n        return this._points;\n    }\n    get segments() {\n        return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n    }\n first() {\n        const segments = this.segments;\n        const points = this.points;\n        return segments.length && points[segments[0].start];\n    }\n last() {\n        const segments = this.segments;\n        const points = this.points;\n        const count = segments.length;\n        return count && points[segments[count - 1].end];\n    }\n interpolate(point, property) {\n        const options = this.options;\n        const value = point[property];\n        const points = this.points;\n        const segments = _boundSegments(this, {\n            property,\n            start: value,\n            end: value\n        });\n        if (!segments.length) {\n            return;\n        }\n        const result = [];\n        const _interpolate = _getInterpolationMethod(options);\n        let i, ilen;\n        for(i = 0, ilen = segments.length; i < ilen; ++i){\n            const { start , end  } = segments[i];\n            const p1 = points[start];\n            const p2 = points[end];\n            if (p1 === p2) {\n                result.push(p1);\n                continue;\n            }\n            const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n            const interpolated = _interpolate(p1, p2, t, options.stepped);\n            interpolated[property] = point[property];\n            result.push(interpolated);\n        }\n        return result.length === 1 ? result[0] : result;\n    }\n pathSegment(ctx, segment, params) {\n        const segmentMethod = _getSegmentMethod(this);\n        return segmentMethod(ctx, this, segment, params);\n    }\n path(ctx, start, count) {\n        const segments = this.segments;\n        const segmentMethod = _getSegmentMethod(this);\n        let loop = this._loop;\n        start = start || 0;\n        count = count || this.points.length - start;\n        for (const segment of segments){\n            loop &= segmentMethod(ctx, this, segment, {\n                start,\n                end: start + count - 1\n            });\n        }\n        return !!loop;\n    }\n draw(ctx, chartArea, start, count) {\n        const options = this.options || {};\n        const points = this.points || [];\n        if (points.length && options.borderWidth) {\n            ctx.save();\n            draw(ctx, this, start, count);\n            ctx.restore();\n        }\n        if (this.animated) {\n            this._pointsUpdated = false;\n            this._path = undefined;\n        }\n    }\n}\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n    const options = el.options;\n    const { [axis]: value  } = el.getProps([\n        axis\n    ], useFinalPosition);\n    return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\nclass PointElement extends Element {\n    static id = 'point';\n    /**\n   * @type {any}\n   */ static defaults = {\n        borderWidth: 1,\n        hitRadius: 1,\n        hoverBorderWidth: 1,\n        hoverRadius: 4,\n        pointStyle: 'circle',\n        radius: 3,\n        rotation: 0\n    };\n    /**\n   * @type {any}\n   */ static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.parsed = undefined;\n        this.skip = undefined;\n        this.stop = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        const options = this.options;\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange$1(this, mouseX, 'x', useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange$1(this, mouseY, 'y', useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    size(options) {\n        options = options || this.options || {};\n        let radius = options.radius || 0;\n        radius = Math.max(radius, radius && options.hoverRadius || 0);\n        const borderWidth = radius && options.borderWidth || 0;\n        return (radius + borderWidth) * 2;\n    }\n    draw(ctx, area) {\n        const options = this.options;\n        if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n            return;\n        }\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.fillStyle = options.backgroundColor;\n        drawPoint(ctx, options, this.x, this.y);\n    }\n    getRange() {\n        const options = this.options || {};\n        // @ts-expect-error Fallbacks should never be hit in practice\n        return options.radius + options.hitRadius;\n    }\n}\n\nfunction getBarBounds(bar, useFinalPosition) {\n    const { x , y , base , width , height  } =  bar.getProps([\n        'x',\n        'y',\n        'base',\n        'width',\n        'height'\n    ], useFinalPosition);\n    let left, right, top, bottom, half;\n    if (bar.horizontal) {\n        half = height / 2;\n        left = Math.min(x, base);\n        right = Math.max(x, base);\n        top = y - half;\n        bottom = y + half;\n    } else {\n        half = width / 2;\n        left = x - half;\n        right = x + half;\n        top = Math.min(y, base);\n        bottom = Math.max(y, base);\n    }\n    return {\n        left,\n        top,\n        right,\n        bottom\n    };\n}\nfunction skipOrLimit(skip, value, min, max) {\n    return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n    const value = bar.options.borderWidth;\n    const skip = bar.borderSkipped;\n    const o = toTRBL(value);\n    return {\n        t: skipOrLimit(skip.top, o.top, 0, maxH),\n        r: skipOrLimit(skip.right, o.right, 0, maxW),\n        b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n        l: skipOrLimit(skip.left, o.left, 0, maxW)\n    };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n    const { enableBorderRadius  } = bar.getProps([\n        'enableBorderRadius'\n    ]);\n    const value = bar.options.borderRadius;\n    const o = toTRBLCorners(value);\n    const maxR = Math.min(maxW, maxH);\n    const skip = bar.borderSkipped;\n    const enableBorder = enableBorderRadius || isObject(value);\n    return {\n        topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n        topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n        bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n        bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n    };\n}\nfunction boundingRects(bar) {\n    const bounds = getBarBounds(bar);\n    const width = bounds.right - bounds.left;\n    const height = bounds.bottom - bounds.top;\n    const border = parseBorderWidth(bar, width / 2, height / 2);\n    const radius = parseBorderRadius(bar, width / 2, height / 2);\n    return {\n        outer: {\n            x: bounds.left,\n            y: bounds.top,\n            w: width,\n            h: height,\n            radius\n        },\n        inner: {\n            x: bounds.left + border.l,\n            y: bounds.top + border.t,\n            w: width - border.l - border.r,\n            h: height - border.t - border.b,\n            radius: {\n                topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n                topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n                bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n                bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n            }\n        }\n    };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n    const skipX = x === null;\n    const skipY = y === null;\n    const skipBoth = skipX && skipY;\n    const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n    return bounds && (skipX || _isBetween(x, bounds.left, bounds.right)) && (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n    return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n function addNormalRectPath(ctx, rect) {\n    ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n    const x = rect.x !== refRect.x ? -amount : 0;\n    const y = rect.y !== refRect.y ? -amount : 0;\n    const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n    const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n    return {\n        x: rect.x + x,\n        y: rect.y + y,\n        w: rect.w + w,\n        h: rect.h + h,\n        radius: rect.radius\n    };\n}\nclass BarElement extends Element {\n    static id = 'bar';\n static defaults = {\n        borderSkipped: 'start',\n        borderWidth: 0,\n        borderRadius: 0,\n        inflateAmount: 'auto',\n        pointStyle: undefined\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.horizontal = undefined;\n        this.base = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.inflateAmount = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    draw(ctx) {\n        const { inflateAmount , options: { borderColor , backgroundColor  }  } = this;\n        const { inner , outer  } = boundingRects(this);\n        const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n        ctx.save();\n        if (outer.w !== inner.w || outer.h !== inner.h) {\n            ctx.beginPath();\n            addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n            ctx.clip();\n            addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n            ctx.fillStyle = borderColor;\n            ctx.fill('evenodd');\n        }\n        ctx.beginPath();\n        addRectPath(ctx, inflateRect(inner, inflateAmount));\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n        ctx.restore();\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        return inRange(this, mouseX, mouseY, useFinalPosition);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange(this, mouseX, null, useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange(this, null, mouseY, useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , base , horizontal  } =  this.getProps([\n            'x',\n            'y',\n            'base',\n            'horizontal'\n        ], useFinalPosition);\n        return {\n            x: horizontal ? (x + base) / 2 : x,\n            y: horizontal ? y : (y + base) / 2\n        };\n    }\n    getRange(axis) {\n        return axis === 'x' ? this.width / 2 : this.height / 2;\n    }\n}\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nLineElement: LineElement,\nPointElement: PointElement,\nBarElement: BarElement\n});\n\nconst BORDER_COLORS = [\n    'rgb(54, 162, 235)',\n    'rgb(255, 99, 132)',\n    'rgb(255, 159, 64)',\n    'rgb(255, 205, 86)',\n    'rgb(75, 192, 192)',\n    'rgb(153, 102, 255)',\n    'rgb(201, 203, 207)' // grey\n];\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map((color)=>color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\nfunction getBorderColor(i) {\n    return BORDER_COLORS[i % BORDER_COLORS.length];\n}\nfunction getBackgroundColor(i) {\n    return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\nfunction createDefaultDatasetColorizer() {\n    return (dataset, i)=>{\n        dataset.borderColor = getBorderColor(i);\n        dataset.backgroundColor = getBackgroundColor(i);\n    };\n}\nfunction createDoughnutDatasetColorizer() {\n    let i = 0;\n    return (dataset)=>{\n        dataset.backgroundColor = dataset.data.map(()=>getBorderColor(i++));\n    };\n}\nfunction createPolarAreaDatasetColorizer() {\n    let i = 0;\n    return (dataset)=>{\n        dataset.backgroundColor = dataset.data.map(()=>getBackgroundColor(i++));\n    };\n}\nfunction getColorizer(type) {\n    if (type === 'doughnut' || type === 'pie') {\n        return createDoughnutDatasetColorizer();\n    } else if (type === 'polarArea') {\n        return createPolarAreaDatasetColorizer();\n    }\n    return createDefaultDatasetColorizer();\n}\nfunction containsColorsDefinitions(descriptors) {\n    let k;\n    for(k in descriptors){\n        if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n            return true;\n        }\n    }\n    return false;\n}\nvar plugin_colors = {\n    id: 'colors',\n    defaults: {\n        enabled: true\n    },\n    beforeLayout (chart, _args, options) {\n        if (!options.enabled) {\n            return;\n        }\n        const { type , options: { elements  } , data: { datasets  }  } = chart.config;\n        if (containsColorsDefinitions(datasets) || elements && containsColorsDefinitions(elements)) {\n            return;\n        }\n        const colorizer = getColorizer(type);\n        datasets.forEach(colorizer);\n    }\n};\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n const samples = options.samples || availableWidth;\n    if (samples >= count) {\n        return data.slice(start, start + count);\n    }\n    const decimated = [];\n    const bucketWidth = (count - 2) / (samples - 2);\n    let sampledIndex = 0;\n    const endIndex = start + count - 1;\n    let a = start;\n    let i, maxAreaPoint, maxArea, area, nextA;\n    decimated[sampledIndex++] = data[a];\n    for(i = 0; i < samples - 2; i++){\n        let avgX = 0;\n        let avgY = 0;\n        let j;\n        const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n        const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n        const avgRangeLength = avgRangeEnd - avgRangeStart;\n        for(j = avgRangeStart; j < avgRangeEnd; j++){\n            avgX += data[j].x;\n            avgY += data[j].y;\n        }\n        avgX /= avgRangeLength;\n        avgY /= avgRangeLength;\n        const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n        const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n        const { x: pointAx , y: pointAy  } = data[a];\n        maxArea = area = -1;\n        for(j = rangeOffs; j < rangeTo; j++){\n            area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n            if (area > maxArea) {\n                maxArea = area;\n                maxAreaPoint = data[j];\n                nextA = j;\n            }\n        }\n        decimated[sampledIndex++] = maxAreaPoint;\n        a = nextA;\n    }\n    decimated[sampledIndex++] = data[endIndex];\n    return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n    let avgX = 0;\n    let countX = 0;\n    let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n    const decimated = [];\n    const endIndex = start + count - 1;\n    const xMin = data[start].x;\n    const xMax = data[endIndex].x;\n    const dx = xMax - xMin;\n    for(i = start; i < start + count; ++i){\n        point = data[i];\n        x = (point.x - xMin) / dx * availableWidth;\n        y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n                minIndex = i;\n            } else if (y > maxY) {\n                maxY = y;\n                maxIndex = i;\n            }\n            avgX = (countX * avgX + point.x) / ++countX;\n        } else {\n            const lastIndex = i - 1;\n            if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n                const intermediateIndex1 = Math.min(minIndex, maxIndex);\n                const intermediateIndex2 = Math.max(minIndex, maxIndex);\n                if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex1],\n                        x: avgX\n                    });\n                }\n                if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex2],\n                        x: avgX\n                    });\n                }\n            }\n            if (i > 0 && lastIndex !== startIndex) {\n                decimated.push(data[lastIndex]);\n            }\n            decimated.push(point);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n            minIndex = maxIndex = startIndex = i;\n        }\n    }\n    return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n    if (dataset._decimated) {\n        const data = dataset._data;\n        delete dataset._decimated;\n        delete dataset._data;\n        Object.defineProperty(dataset, 'data', {\n            value: data\n        });\n    }\n}\nfunction cleanDecimatedData(chart) {\n    chart.data.datasets.forEach((dataset)=>{\n        cleanDecimatedDataset(dataset);\n    });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n    const pointCount = points.length;\n    let start = 0;\n    let count;\n    const { iScale  } = meta;\n    const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n    if (minDefined) {\n        start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n    }\n    if (maxDefined) {\n        count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n    } else {\n        count = pointCount - start;\n    }\n    return {\n        start,\n        count\n    };\n}\nvar plugin_decimation = {\n    id: 'decimation',\n    defaults: {\n        algorithm: 'min-max',\n        enabled: false\n    },\n    beforeElementsUpdate: (chart, args, options)=>{\n        if (!options.enabled) {\n            cleanDecimatedData(chart);\n            return;\n        }\n        const availableWidth = chart.width;\n        chart.data.datasets.forEach((dataset, datasetIndex)=>{\n            const { _data , indexAxis  } = dataset;\n            const meta = chart.getDatasetMeta(datasetIndex);\n            const data = _data || dataset.data;\n            if (resolve([\n                indexAxis,\n                chart.options.indexAxis\n            ]) === 'y') {\n                return;\n            }\n            if (!meta.controller.supportsDecimation) {\n                return;\n            }\n            const xAxis = chart.scales[meta.xAxisID];\n            if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n                return;\n            }\n            if (chart.options.parsing) {\n                return;\n            }\n            let { start , count  } = getStartAndCountOfVisiblePointsSimplified(meta, data);\n            const threshold = options.threshold || 4 * availableWidth;\n            if (count <= threshold) {\n                cleanDecimatedDataset(dataset);\n                return;\n            }\n            if (isNullOrUndef(_data)) {\n                dataset._data = data;\n                delete dataset.data;\n                Object.defineProperty(dataset, 'data', {\n                    configurable: true,\n                    enumerable: true,\n                    get: function() {\n                        return this._decimated;\n                    },\n                    set: function(d) {\n                        this._data = d;\n                    }\n                });\n            }\n            let decimated;\n            switch(options.algorithm){\n                case 'lttb':\n                    decimated = lttbDecimation(data, start, count, availableWidth, options);\n                    break;\n                case 'min-max':\n                    decimated = minMaxDecimation(data, start, count, availableWidth);\n                    break;\n                default:\n                    throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n            }\n            dataset._decimated = decimated;\n        });\n    },\n    destroy (chart) {\n        cleanDecimatedData(chart);\n    }\n};\n\nfunction _segments(line, target, property) {\n    const segments = line.segments;\n    const points = line.points;\n    const tpoints = target.points;\n    const parts = [];\n    for (const segment of segments){\n        let { start , end  } = segment;\n        end = _findSegmentEnd(start, end, points);\n        const bounds = _getBounds(property, points[start], points[end], segment.loop);\n        if (!target.segments) {\n            parts.push({\n                source: segment,\n                target: bounds,\n                start: points[start],\n                end: points[end]\n            });\n            continue;\n        }\n        const targetSegments = _boundSegments(target, bounds);\n        for (const tgt of targetSegments){\n            const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n            const fillSources = _boundSegment(segment, points, subBounds);\n            for (const fillSource of fillSources){\n                parts.push({\n                    source: fillSource,\n                    target: tgt,\n                    start: {\n                        [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n                    },\n                    end: {\n                        [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n                    }\n                });\n            }\n        }\n    }\n    return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n    if (loop) {\n        return;\n    }\n    let start = first[property];\n    let end = last[property];\n    if (property === 'angle') {\n        start = _normalizeAngle(start);\n        end = _normalizeAngle(end);\n    }\n    return {\n        property,\n        start,\n        end\n    };\n}\nfunction _pointsFromSegments(boundary, line) {\n    const { x =null , y =null  } = boundary || {};\n    const linePoints = line.points;\n    const points = [];\n    line.segments.forEach(({ start , end  })=>{\n        end = _findSegmentEnd(start, end, linePoints);\n        const first = linePoints[start];\n        const last = linePoints[end];\n        if (y !== null) {\n            points.push({\n                x: first.x,\n                y\n            });\n            points.push({\n                x: last.x,\n                y\n            });\n        } else if (x !== null) {\n            points.push({\n                x,\n                y: first.y\n            });\n            points.push({\n                x,\n                y: last.y\n            });\n        }\n    });\n    return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n    for(; end > start; end--){\n        const point = points[end];\n        if (!isNaN(point.x) && !isNaN(point.y)) {\n            break;\n        }\n    }\n    return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n    if (a && b) {\n        return fn(a[prop], b[prop]);\n    }\n    return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n    let points = [];\n    let _loop = false;\n    if (isArray(boundary)) {\n        _loop = true;\n        points = boundary;\n    } else {\n        points = _pointsFromSegments(boundary, line);\n    }\n    return points.length ? new LineElement({\n        points,\n        options: {\n            tension: 0\n        },\n        _loop,\n        _fullLoop: _loop\n    }) : null;\n}\nfunction _shouldApplyFill(source) {\n    return source && source.fill !== false;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n    const source = sources[index];\n    let fill = source.fill;\n    const visited = [\n        index\n    ];\n    let target;\n    if (!propagate) {\n        return fill;\n    }\n    while(fill !== false && visited.indexOf(fill) === -1){\n        if (!isNumberFinite(fill)) {\n            return fill;\n        }\n        target = sources[fill];\n        if (!target) {\n            return false;\n        }\n        if (target.visible) {\n            return fill;\n        }\n        visited.push(fill);\n        fill = target.fill;\n    }\n    return false;\n}\n function _decodeFill(line, index, count) {\n     const fill = parseFillOption(line);\n    if (isObject(fill)) {\n        return isNaN(fill.value) ? false : fill;\n    }\n    let target = parseFloat(fill);\n    if (isNumberFinite(target) && Math.floor(target) === target) {\n        return decodeTargetIndex(fill[0], index, target, count);\n    }\n    return [\n        'origin',\n        'start',\n        'end',\n        'stack',\n        'shape'\n    ].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n    if (firstCh === '-' || firstCh === '+') {\n        target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n        return false;\n    }\n    return target;\n}\n function _getTargetPixel(fill, scale) {\n    let pixel = null;\n    if (fill === 'start') {\n        pixel = scale.bottom;\n    } else if (fill === 'end') {\n        pixel = scale.top;\n    } else if (isObject(fill)) {\n        pixel = scale.getPixelForValue(fill.value);\n    } else if (scale.getBasePixel) {\n        pixel = scale.getBasePixel();\n    }\n    return pixel;\n}\n function _getTargetValue(fill, scale, startValue) {\n    let value;\n    if (fill === 'start') {\n        value = startValue;\n    } else if (fill === 'end') {\n        value = scale.options.reverse ? scale.min : scale.max;\n    } else if (isObject(fill)) {\n        value = fill.value;\n    } else {\n        value = scale.getBaseValue();\n    }\n    return value;\n}\n function parseFillOption(line) {\n    const options = line.options;\n    const fillOption = options.fill;\n    let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n    if (fill === undefined) {\n        fill = !!options.backgroundColor;\n    }\n    if (fill === false || fill === null) {\n        return false;\n    }\n    if (fill === true) {\n        return 'origin';\n    }\n    return fill;\n}\n\nfunction _buildStackLine(source) {\n    const { scale , index , line  } = source;\n    const points = [];\n    const segments = line.segments;\n    const sourcePoints = line.points;\n    const linesBelow = getLinesBelow(scale, index);\n    linesBelow.push(_createBoundaryLine({\n        x: null,\n        y: scale.bottom\n    }, line));\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        for(let j = segment.start; j <= segment.end; j++){\n            addPointsBelow(points, sourcePoints[j], linesBelow);\n        }\n    }\n    return new LineElement({\n        points,\n        options: {}\n    });\n}\n function getLinesBelow(scale, index) {\n    const below = [];\n    const metas = scale.getMatchingVisibleMetas('line');\n    for(let i = 0; i < metas.length; i++){\n        const meta = metas[i];\n        if (meta.index === index) {\n            break;\n        }\n        if (!meta.hidden) {\n            below.unshift(meta.dataset);\n        }\n    }\n    return below;\n}\n function addPointsBelow(points, sourcePoint, linesBelow) {\n    const postponed = [];\n    for(let j = 0; j < linesBelow.length; j++){\n        const line = linesBelow[j];\n        const { first , last , point  } = findPoint(line, sourcePoint, 'x');\n        if (!point || first && last) {\n            continue;\n        }\n        if (first) {\n            postponed.unshift(point);\n        } else {\n            points.push(point);\n            if (!last) {\n                break;\n            }\n        }\n    }\n    points.push(...postponed);\n}\n function findPoint(line, sourcePoint, property) {\n    const point = line.interpolate(sourcePoint, property);\n    if (!point) {\n        return {};\n    }\n    const pointValue = point[property];\n    const segments = line.segments;\n    const linePoints = line.points;\n    let first = false;\n    let last = false;\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        const firstValue = linePoints[segment.start][property];\n        const lastValue = linePoints[segment.end][property];\n        if (_isBetween(pointValue, firstValue, lastValue)) {\n            first = pointValue === firstValue;\n            last = pointValue === lastValue;\n            break;\n        }\n    }\n    return {\n        first,\n        last,\n        point\n    };\n}\n\nclass simpleArc {\n    constructor(opts){\n        this.x = opts.x;\n        this.y = opts.y;\n        this.radius = opts.radius;\n    }\n    pathSegment(ctx, bounds, opts) {\n        const { x , y , radius  } = this;\n        bounds = bounds || {\n            start: 0,\n            end: TAU\n        };\n        ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n        return !opts.bounds;\n    }\n    interpolate(point) {\n        const { x , y , radius  } = this;\n        const angle = point.angle;\n        return {\n            x: x + Math.cos(angle) * radius,\n            y: y + Math.sin(angle) * radius,\n            angle\n        };\n    }\n}\n\nfunction _getTarget(source) {\n    const { chart , fill , line  } = source;\n    if (isNumberFinite(fill)) {\n        return getLineByIndex(chart, fill);\n    }\n    if (fill === 'stack') {\n        return _buildStackLine(source);\n    }\n    if (fill === 'shape') {\n        return true;\n    }\n    const boundary = computeBoundary(source);\n    if (boundary instanceof simpleArc) {\n        return boundary;\n    }\n    return _createBoundaryLine(boundary, line);\n}\n function getLineByIndex(chart, index) {\n    const meta = chart.getDatasetMeta(index);\n    const visible = meta && chart.isDatasetVisible(index);\n    return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n    const scale = source.scale || {};\n    if (scale.getPointPositionForValue) {\n        return computeCircularBoundary(source);\n    }\n    return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n    const { scale ={} , fill  } = source;\n    const pixel = _getTargetPixel(fill, scale);\n    if (isNumberFinite(pixel)) {\n        const horizontal = scale.isHorizontal();\n        return {\n            x: horizontal ? pixel : null,\n            y: horizontal ? null : pixel\n        };\n    }\n    return null;\n}\nfunction computeCircularBoundary(source) {\n    const { scale , fill  } = source;\n    const options = scale.options;\n    const length = scale.getLabels().length;\n    const start = options.reverse ? scale.max : scale.min;\n    const value = _getTargetValue(fill, scale, start);\n    const target = [];\n    if (options.grid.circular) {\n        const center = scale.getPointPositionForValue(0, start);\n        return new simpleArc({\n            x: center.x,\n            y: center.y,\n            radius: scale.getDistanceFromCenterForValue(value)\n        });\n    }\n    for(let i = 0; i < length; ++i){\n        target.push(scale.getPointPositionForValue(i, value));\n    }\n    return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n    const target = _getTarget(source);\n    const { line , scale , axis  } = source;\n    const lineOpts = line.options;\n    const fillOption = lineOpts.fill;\n    const color = lineOpts.backgroundColor;\n    const { above =color , below =color  } = fillOption || {};\n    if (target && line.points.length) {\n        clipArea(ctx, area);\n        doFill(ctx, {\n            line,\n            target,\n            above,\n            below,\n            area,\n            scale,\n            axis\n        });\n        unclipArea(ctx);\n    }\n}\nfunction doFill(ctx, cfg) {\n    const { line , target , above , below , area , scale  } = cfg;\n    const property = line._loop ? 'angle' : cfg.axis;\n    ctx.save();\n    if (property === 'x' && below !== above) {\n        clipVertical(ctx, target, area.top);\n        fill(ctx, {\n            line,\n            target,\n            color: above,\n            scale,\n            property\n        });\n        ctx.restore();\n        ctx.save();\n        clipVertical(ctx, target, area.bottom);\n    }\n    fill(ctx, {\n        line,\n        target,\n        color: below,\n        scale,\n        property\n    });\n    ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n    const { segments , points  } = target;\n    let first = true;\n    let lineLoop = false;\n    ctx.beginPath();\n    for (const segment of segments){\n        const { start , end  } = segment;\n        const firstPoint = points[start];\n        const lastPoint = points[_findSegmentEnd(start, end, points)];\n        if (first) {\n            ctx.moveTo(firstPoint.x, firstPoint.y);\n            first = false;\n        } else {\n            ctx.lineTo(firstPoint.x, clipY);\n            ctx.lineTo(firstPoint.x, firstPoint.y);\n        }\n        lineLoop = !!target.pathSegment(ctx, segment, {\n            move: lineLoop\n        });\n        if (lineLoop) {\n            ctx.closePath();\n        } else {\n            ctx.lineTo(lastPoint.x, clipY);\n        }\n    }\n    ctx.lineTo(target.first().x, clipY);\n    ctx.closePath();\n    ctx.clip();\n}\nfunction fill(ctx, cfg) {\n    const { line , target , property , color , scale  } = cfg;\n    const segments = _segments(line, target, property);\n    for (const { source: src , target: tgt , start , end  } of segments){\n        const { style: { backgroundColor =color  } = {}  } = src;\n        const notShape = target !== true;\n        ctx.save();\n        ctx.fillStyle = backgroundColor;\n        clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n        ctx.beginPath();\n        const lineLoop = !!line.pathSegment(ctx, src);\n        let loop;\n        if (notShape) {\n            if (lineLoop) {\n                ctx.closePath();\n            } else {\n                interpolatedLineTo(ctx, target, end, property);\n            }\n            const targetLoop = !!target.pathSegment(ctx, tgt, {\n                move: lineLoop,\n                reverse: true\n            });\n            loop = lineLoop && targetLoop;\n            if (!loop) {\n                interpolatedLineTo(ctx, target, start, property);\n            }\n        }\n        ctx.closePath();\n        ctx.fill(loop ? 'evenodd' : 'nonzero');\n        ctx.restore();\n    }\n}\nfunction clipBounds(ctx, scale, bounds) {\n    const { top , bottom  } = scale.chart.chartArea;\n    const { property , start , end  } = bounds || {};\n    if (property === 'x') {\n        ctx.beginPath();\n        ctx.rect(start, top, end - start, bottom - top);\n        ctx.clip();\n    }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n    const interpolatedPoint = target.interpolate(point, property);\n    if (interpolatedPoint) {\n        ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n    }\n}\n\nvar index = {\n    id: 'filler',\n    afterDatasetsUpdate (chart, _args, options) {\n        const count = (chart.data.datasets || []).length;\n        const sources = [];\n        let meta, i, line, source;\n        for(i = 0; i < count; ++i){\n            meta = chart.getDatasetMeta(i);\n            line = meta.dataset;\n            source = null;\n            if (line && line.options && line instanceof LineElement) {\n                source = {\n                    visible: chart.isDatasetVisible(i),\n                    index: i,\n                    fill: _decodeFill(line, i, count),\n                    chart,\n                    axis: meta.controller.options.indexAxis,\n                    scale: meta.vScale,\n                    line\n                };\n            }\n            meta.$filler = source;\n            sources.push(source);\n        }\n        for(i = 0; i < count; ++i){\n            source = sources[i];\n            if (!source || source.fill === false) {\n                continue;\n            }\n            source.fill = _resolveTarget(sources, i, options.propagate);\n        }\n    },\n    beforeDraw (chart, _args, options) {\n        const draw = options.drawTime === 'beforeDraw';\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        const area = chart.chartArea;\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (!source) {\n                continue;\n            }\n            source.line.updateControlPoints(area, source.axis);\n            if (draw && source.fill) {\n                _drawfill(chart.ctx, source, area);\n            }\n        }\n    },\n    beforeDatasetsDraw (chart, _args, options) {\n        if (options.drawTime !== 'beforeDatasetsDraw') {\n            return;\n        }\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (_shouldApplyFill(source)) {\n                _drawfill(chart.ctx, source, chart.chartArea);\n            }\n        }\n    },\n    beforeDatasetDraw (chart, args, options) {\n        const source = args.meta.$filler;\n        if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n            return;\n        }\n        _drawfill(chart.ctx, source, chart.chartArea);\n    },\n    defaults: {\n        propagate: true,\n        drawTime: 'beforeDatasetDraw'\n    }\n};\n\nconst getBoxSize = (labelOpts, fontSize)=>{\n    let { boxHeight =fontSize , boxWidth =fontSize  } = labelOpts;\n    if (labelOpts.usePointStyle) {\n        boxHeight = Math.min(boxHeight, fontSize);\n        boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n    }\n    return {\n        boxWidth,\n        boxHeight,\n        itemHeight: Math.max(fontSize, boxHeight)\n    };\n};\nconst itemsEqual = (a, b)=>a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n constructor(config){\n        super();\n        this._added = false;\n        this.legendHitBoxes = [];\n this._hoveredItem = null;\n        this.doughnutMode = false;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this.legendItems = undefined;\n        this.columnSizes = undefined;\n        this.lineWidths = undefined;\n        this.maxHeight = undefined;\n        this.maxWidth = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this._margins = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight, margins) {\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins;\n        this.setDimensions();\n        this.buildLabels();\n        this.fit();\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = this._margins.left;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = this._margins.top;\n            this.bottom = this.height;\n        }\n    }\n    buildLabels() {\n        const labelOpts = this.options.labels || {};\n        let legendItems = callback(labelOpts.generateLabels, [\n            this.chart\n        ], this) || [];\n        if (labelOpts.filter) {\n            legendItems = legendItems.filter((item)=>labelOpts.filter(item, this.chart.data));\n        }\n        if (labelOpts.sort) {\n            legendItems = legendItems.sort((a, b)=>labelOpts.sort(a, b, this.chart.data));\n        }\n        if (this.options.reverse) {\n            legendItems.reverse();\n        }\n        this.legendItems = legendItems;\n    }\n    fit() {\n        const { options , ctx  } = this;\n        if (!options.display) {\n            this.width = this.height = 0;\n            return;\n        }\n        const labelOpts = options.labels;\n        const labelFont = toFont(labelOpts.font);\n        const fontSize = labelFont.size;\n        const titleHeight = this._computeTitleHeight();\n        const { boxWidth , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        let width, height;\n        ctx.font = labelFont.string;\n        if (this.isHorizontal()) {\n            width = this.maxWidth;\n            height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n        } else {\n            height = this.maxHeight;\n            width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n        }\n        this.width = Math.min(width, options.maxWidth || this.maxWidth);\n        this.height = Math.min(height, options.maxHeight || this.maxHeight);\n    }\n _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n        const { ctx , maxWidth , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const lineWidths = this.lineWidths = [\n            0\n        ];\n        const lineHeight = itemHeight + padding;\n        let totalHeight = titleHeight;\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        let row = -1;\n        let top = -lineHeight;\n        this.legendItems.forEach((legendItem, i)=>{\n            const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n            if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n                totalHeight += lineHeight;\n                lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n                top += lineHeight;\n                row++;\n            }\n            hitboxes[i] = {\n                left: 0,\n                top,\n                row,\n                width: itemWidth,\n                height: itemHeight\n            };\n            lineWidths[lineWidths.length - 1] += itemWidth + padding;\n        });\n        return totalHeight;\n    }\n    _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n        const { ctx , maxHeight , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const columnSizes = this.columnSizes = [];\n        const heightLimit = maxHeight - titleHeight;\n        let totalWidth = padding;\n        let currentColWidth = 0;\n        let currentColHeight = 0;\n        let left = 0;\n        let col = 0;\n        this.legendItems.forEach((legendItem, i)=>{\n            const { itemWidth , itemHeight  } = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n            if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n                totalWidth += currentColWidth + padding;\n                columnSizes.push({\n                    width: currentColWidth,\n                    height: currentColHeight\n                });\n                left += currentColWidth + padding;\n                col++;\n                currentColWidth = currentColHeight = 0;\n            }\n            hitboxes[i] = {\n                left,\n                top: currentColHeight,\n                col,\n                width: itemWidth,\n                height: itemHeight\n            };\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight + padding;\n        });\n        totalWidth += currentColWidth;\n        columnSizes.push({\n            width: currentColWidth,\n            height: currentColHeight\n        });\n        return totalWidth;\n    }\n    adjustHitBoxes() {\n        if (!this.options.display) {\n            return;\n        }\n        const titleHeight = this._computeTitleHeight();\n        const { legendHitBoxes: hitboxes , options: { align , labels: { padding  } , rtl  }  } = this;\n        const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n        if (this.isHorizontal()) {\n            let row = 0;\n            let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n            for (const hitbox of hitboxes){\n                if (row !== hitbox.row) {\n                    row = hitbox.row;\n                    left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n                }\n                hitbox.top += this.top + titleHeight + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n                left += hitbox.width + padding;\n            }\n        } else {\n            let col = 0;\n            let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n            for (const hitbox1 of hitboxes){\n                if (hitbox1.col !== col) {\n                    col = hitbox1.col;\n                    top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n                }\n                hitbox1.top = top;\n                hitbox1.left += this.left + padding;\n                hitbox1.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox1.left), hitbox1.width);\n                top += hitbox1.height + padding;\n            }\n        }\n    }\n    isHorizontal() {\n        return this.options.position === 'top' || this.options.position === 'bottom';\n    }\n    draw() {\n        if (this.options.display) {\n            const ctx = this.ctx;\n            clipArea(ctx, this);\n            this._draw();\n            unclipArea(ctx);\n        }\n    }\n _draw() {\n        const { options: opts , columnSizes , lineWidths , ctx  } = this;\n        const { align , labels: labelOpts  } = opts;\n        const defaultColor = defaults.color;\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const labelFont = toFont(labelOpts.font);\n        const { padding  } = labelOpts;\n        const fontSize = labelFont.size;\n        const halfFontSize = fontSize / 2;\n        let cursor;\n        this.drawTitle();\n        ctx.textAlign = rtlHelper.textAlign('left');\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.font = labelFont.string;\n        const { boxWidth , boxHeight , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        const drawLegendBox = function(x, y, legendItem) {\n            if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n                return;\n            }\n            ctx.save();\n            const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n            ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n            ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n            ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n            ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n            ctx.lineWidth = lineWidth;\n            ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n            ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n            if (labelOpts.usePointStyle) {\n                const drawOptions = {\n                    radius: boxHeight * Math.SQRT2 / 2,\n                    pointStyle: legendItem.pointStyle,\n                    rotation: legendItem.rotation,\n                    borderWidth: lineWidth\n                };\n                const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n                const centerY = y + halfFontSize;\n                drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n            } else {\n                const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n                const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n                const borderRadius = toTRBLCorners(legendItem.borderRadius);\n                ctx.beginPath();\n                if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                    addRoundedRectPath(ctx, {\n                        x: xBoxLeft,\n                        y: yBoxTop,\n                        w: boxWidth,\n                        h: boxHeight,\n                        radius: borderRadius\n                    });\n                } else {\n                    ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n                }\n                ctx.fill();\n                if (lineWidth !== 0) {\n                    ctx.stroke();\n                }\n            }\n            ctx.restore();\n        };\n        const fillText = function(x, y, legendItem) {\n            renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n                strikethrough: legendItem.hidden,\n                textAlign: rtlHelper.textAlign(legendItem.textAlign)\n            });\n        };\n        const isHorizontal = this.isHorizontal();\n        const titleHeight = this._computeTitleHeight();\n        if (isHorizontal) {\n            cursor = {\n                x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n                y: this.top + padding + titleHeight,\n                line: 0\n            };\n        } else {\n            cursor = {\n                x: this.left + padding,\n                y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n                line: 0\n            };\n        }\n        overrideTextDirection(this.ctx, opts.textDirection);\n        const lineHeight = itemHeight + padding;\n        this.legendItems.forEach((legendItem, i)=>{\n            ctx.strokeStyle = legendItem.fontColor;\n            ctx.fillStyle = legendItem.fontColor;\n            const textWidth = ctx.measureText(legendItem.text).width;\n            const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n            const width = boxWidth + halfFontSize + textWidth;\n            let x = cursor.x;\n            let y = cursor.y;\n            rtlHelper.setWidth(this.width);\n            if (isHorizontal) {\n                if (i > 0 && x + width + padding > this.right) {\n                    y = cursor.y += lineHeight;\n                    cursor.line++;\n                    x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n                }\n            } else if (i > 0 && y + lineHeight > this.bottom) {\n                x = cursor.x = x + columnSizes[cursor.line].width + padding;\n                cursor.line++;\n                y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n            }\n            const realX = rtlHelper.x(x);\n            drawLegendBox(realX, y, legendItem);\n            x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n            fillText(rtlHelper.x(x), y, legendItem);\n            if (isHorizontal) {\n                cursor.x += width + padding;\n            } else if (typeof legendItem.text !== 'string') {\n                const fontLineHeight = labelFont.lineHeight;\n                cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight);\n            } else {\n                cursor.y += lineHeight;\n            }\n        });\n        restoreTextDirection(this.ctx, opts.textDirection);\n    }\n drawTitle() {\n        const opts = this.options;\n        const titleOpts = opts.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        if (!titleOpts.display) {\n            return;\n        }\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const ctx = this.ctx;\n        const position = titleOpts.position;\n        const halfFontSize = titleFont.size / 2;\n        const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n        let y;\n        let left = this.left;\n        let maxWidth = this.width;\n        if (this.isHorizontal()) {\n            maxWidth = Math.max(...this.lineWidths);\n            y = this.top + topPaddingPlusHalfFontSize;\n            left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n        } else {\n            const maxHeight = this.columnSizes.reduce((acc, size)=>Math.max(acc, size.height), 0);\n            y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n        }\n        const x = _alignStartEnd(position, left, left + maxWidth);\n        ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n        ctx.textBaseline = 'middle';\n        ctx.strokeStyle = titleOpts.color;\n        ctx.fillStyle = titleOpts.color;\n        ctx.font = titleFont.string;\n        renderText(ctx, titleOpts.text, x, y, titleFont);\n    }\n _computeTitleHeight() {\n        const titleOpts = this.options.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n    }\n _getLegendItemAt(x, y) {\n        let i, hitBox, lh;\n        if (_isBetween(x, this.left, this.right) && _isBetween(y, this.top, this.bottom)) {\n            lh = this.legendHitBoxes;\n            for(i = 0; i < lh.length; ++i){\n                hitBox = lh[i];\n                if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width) && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n                    return this.legendItems[i];\n                }\n            }\n        }\n        return null;\n    }\n handleEvent(e) {\n        const opts = this.options;\n        if (!isListened(e.type, opts)) {\n            return;\n        }\n        const hoveredItem = this._getLegendItemAt(e.x, e.y);\n        if (e.type === 'mousemove' || e.type === 'mouseout') {\n            const previous = this._hoveredItem;\n            const sameItem = itemsEqual(previous, hoveredItem);\n            if (previous && !sameItem) {\n                callback(opts.onLeave, [\n                    e,\n                    previous,\n                    this\n                ], this);\n            }\n            this._hoveredItem = hoveredItem;\n            if (hoveredItem && !sameItem) {\n                callback(opts.onHover, [\n                    e,\n                    hoveredItem,\n                    this\n                ], this);\n            }\n        } else if (hoveredItem) {\n            callback(opts.onClick, [\n                e,\n                hoveredItem,\n                this\n            ], this);\n        }\n    }\n}\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n    const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n    const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n    return {\n        itemWidth,\n        itemHeight\n    };\n}\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n    let legendItemText = legendItem.text;\n    if (legendItemText && typeof legendItemText !== 'string') {\n        legendItemText = legendItemText.reduce((a, b)=>a.length > b.length ? a : b);\n    }\n    return boxWidth + labelFont.size / 2 + ctx.measureText(legendItemText).width;\n}\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n    let itemHeight = _itemHeight;\n    if (typeof legendItem.text !== 'string') {\n        itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n    }\n    return itemHeight;\n}\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n    const labelHeight = legendItem.text ? legendItem.text.length + 0.5 : 0;\n    return fontLineHeight * labelHeight;\n}\nfunction isListened(type, opts) {\n    if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n        return true;\n    }\n    if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n        return true;\n    }\n    return false;\n}\nvar plugin_legend = {\n    id: 'legend',\n _element: Legend,\n    start (chart, _args, options) {\n        const legend = chart.legend = new Legend({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, legend, options);\n        layouts.addBox(chart, legend);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, chart.legend);\n        delete chart.legend;\n    },\n    beforeUpdate (chart, _args, options) {\n        const legend = chart.legend;\n        layouts.configure(chart, legend, options);\n        legend.options = options;\n    },\n    afterUpdate (chart) {\n        const legend = chart.legend;\n        legend.buildLabels();\n        legend.adjustHitBoxes();\n    },\n    afterEvent (chart, args) {\n        if (!args.replay) {\n            chart.legend.handleEvent(args.event);\n        }\n    },\n    defaults: {\n        display: true,\n        position: 'top',\n        align: 'center',\n        fullSize: true,\n        reverse: false,\n        weight: 1000,\n        onClick (e, legendItem, legend) {\n            const index = legendItem.datasetIndex;\n            const ci = legend.chart;\n            if (ci.isDatasetVisible(index)) {\n                ci.hide(index);\n                legendItem.hidden = true;\n            } else {\n                ci.show(index);\n                legendItem.hidden = false;\n            }\n        },\n        onHover: null,\n        onLeave: null,\n        labels: {\n            color: (ctx)=>ctx.chart.options.color,\n            boxWidth: 40,\n            padding: 10,\n            generateLabels (chart) {\n                const datasets = chart.data.datasets;\n                const { labels: { usePointStyle , pointStyle , textAlign , color , useBorderRadius , borderRadius  }  } = chart.legend.options;\n                return chart._getSortedDatasetMetas().map((meta)=>{\n                    const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n                    const borderWidth = toPadding(style.borderWidth);\n                    return {\n                        text: datasets[meta.index].label,\n                        fillStyle: style.backgroundColor,\n                        fontColor: color,\n                        hidden: !meta.visible,\n                        lineCap: style.borderCapStyle,\n                        lineDash: style.borderDash,\n                        lineDashOffset: style.borderDashOffset,\n                        lineJoin: style.borderJoinStyle,\n                        lineWidth: (borderWidth.width + borderWidth.height) / 4,\n                        strokeStyle: style.borderColor,\n                        pointStyle: pointStyle || style.pointStyle,\n                        rotation: style.rotation,\n                        textAlign: textAlign || style.textAlign,\n                        borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n                        datasetIndex: meta.index\n                    };\n                }, this);\n            }\n        },\n        title: {\n            color: (ctx)=>ctx.chart.options.color,\n            display: false,\n            position: 'center',\n            text: ''\n        }\n    },\n    descriptors: {\n        _scriptable: (name)=>!name.startsWith('on'),\n        labels: {\n            _scriptable: (name)=>![\n                    'generateLabels',\n                    'filter',\n                    'sort'\n                ].includes(name)\n        }\n    }\n};\n\nclass Title extends Element {\n constructor(config){\n        super();\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this._padding = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight) {\n        const opts = this.options;\n        this.left = 0;\n        this.top = 0;\n        if (!opts.display) {\n            this.width = this.height = this.right = this.bottom = 0;\n            return;\n        }\n        this.width = this.right = maxWidth;\n        this.height = this.bottom = maxHeight;\n        const lineCount = isArray(opts.text) ? opts.text.length : 1;\n        this._padding = toPadding(opts.padding);\n        const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n        if (this.isHorizontal()) {\n            this.height = textSize;\n        } else {\n            this.width = textSize;\n        }\n    }\n    isHorizontal() {\n        const pos = this.options.position;\n        return pos === 'top' || pos === 'bottom';\n    }\n    _drawArgs(offset) {\n        const { top , left , bottom , right , options  } = this;\n        const align = options.align;\n        let rotation = 0;\n        let maxWidth, titleX, titleY;\n        if (this.isHorizontal()) {\n            titleX = _alignStartEnd(align, left, right);\n            titleY = top + offset;\n            maxWidth = right - left;\n        } else {\n            if (options.position === 'left') {\n                titleX = left + offset;\n                titleY = _alignStartEnd(align, bottom, top);\n                rotation = PI * -0.5;\n            } else {\n                titleX = right - offset;\n                titleY = _alignStartEnd(align, top, bottom);\n                rotation = PI * 0.5;\n            }\n            maxWidth = bottom - top;\n        }\n        return {\n            titleX,\n            titleY,\n            maxWidth,\n            rotation\n        };\n    }\n    draw() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        if (!opts.display) {\n            return;\n        }\n        const fontOpts = toFont(opts.font);\n        const lineHeight = fontOpts.lineHeight;\n        const offset = lineHeight / 2 + this._padding.top;\n        const { titleX , titleY , maxWidth , rotation  } = this._drawArgs(offset);\n        renderText(ctx, opts.text, 0, 0, fontOpts, {\n            color: opts.color,\n            maxWidth,\n            rotation,\n            textAlign: _toLeftRightCenter(opts.align),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n}\nfunction createTitle(chart, titleOpts) {\n    const title = new Title({\n        ctx: chart.ctx,\n        options: titleOpts,\n        chart\n    });\n    layouts.configure(chart, title, titleOpts);\n    layouts.addBox(chart, title);\n    chart.titleBlock = title;\n}\nvar plugin_title = {\n    id: 'title',\n _element: Title,\n    start (chart, _args, options) {\n        createTitle(chart, options);\n    },\n    stop (chart) {\n        const titleBlock = chart.titleBlock;\n        layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = chart.titleBlock;\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'bold'\n        },\n        fullSize: true,\n        padding: 10,\n        position: 'top',\n        text: '',\n        weight: 2000\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n    id: 'subtitle',\n    start (chart, _args, options) {\n        const title = new Title({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, title, options);\n        layouts.addBox(chart, title);\n        map.set(chart, title);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, map.get(chart));\n        map.delete(chart);\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = map.get(chart);\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'normal'\n        },\n        fullSize: true,\n        padding: 0,\n        position: 'top',\n        text: '',\n        weight: 1500\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst positioners = {\n average (items) {\n        if (!items.length) {\n            return false;\n        }\n        let i, len;\n        let x = 0;\n        let y = 0;\n        let count = 0;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const pos = el.tooltipPosition();\n                x += pos.x;\n                y += pos.y;\n                ++count;\n            }\n        }\n        return {\n            x: x / count,\n            y: y / count\n        };\n    },\n nearest (items, eventPosition) {\n        if (!items.length) {\n            return false;\n        }\n        let x = eventPosition.x;\n        let y = eventPosition.y;\n        let minDistance = Number.POSITIVE_INFINITY;\n        let i, len, nearestElement;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const center = el.getCenterPoint();\n                const d = distanceBetweenPoints(eventPosition, center);\n                if (d < minDistance) {\n                    minDistance = d;\n                    nearestElement = el;\n                }\n            }\n        }\n        if (nearestElement) {\n            const tp = nearestElement.tooltipPosition();\n            x = tp.x;\n            y = tp.y;\n        }\n        return {\n            x,\n            y\n        };\n    }\n};\nfunction pushOrConcat(base, toPush) {\n    if (toPush) {\n        if (isArray(toPush)) {\n            Array.prototype.push.apply(base, toPush);\n        } else {\n            base.push(toPush);\n        }\n    }\n    return base;\n}\n function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n        return str.split('\\n');\n    }\n    return str;\n}\n function createTooltipItem(chart, item) {\n    const { element , datasetIndex , index  } = item;\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n    const { label , value  } = controller.getLabelAndValue(index);\n    return {\n        chart,\n        label,\n        parsed: controller.getParsed(index),\n        raw: chart.data.datasets[datasetIndex].data[index],\n        formattedValue: value,\n        dataset: controller.getDataset(),\n        dataIndex: index,\n        datasetIndex,\n        element\n    };\n}\n function getTooltipSize(tooltip, options) {\n    const ctx = tooltip.chart.ctx;\n    const { body , footer , title  } = tooltip;\n    const { boxWidth , boxHeight  } = options;\n    const bodyFont = toFont(options.bodyFont);\n    const titleFont = toFont(options.titleFont);\n    const footerFont = toFont(options.footerFont);\n    const titleLineCount = title.length;\n    const footerLineCount = footer.length;\n    const bodyLineItemCount = body.length;\n    const padding = toPadding(options.padding);\n    let height = padding.height;\n    let width = 0;\n    let combinedBodyLength = body.reduce((count, bodyItem)=>count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n    combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n    if (titleLineCount) {\n        height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n    }\n    if (combinedBodyLength) {\n        const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n        height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n    }\n    if (footerLineCount) {\n        height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n    }\n    let widthPadding = 0;\n    const maxLineWidth = function(line) {\n        width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n    ctx.save();\n    ctx.font = titleFont.string;\n    each(tooltip.title, maxLineWidth);\n    ctx.font = bodyFont.string;\n    each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n    widthPadding = options.displayColors ? boxWidth + 2 + options.boxPadding : 0;\n    each(body, (bodyItem)=>{\n        each(bodyItem.before, maxLineWidth);\n        each(bodyItem.lines, maxLineWidth);\n        each(bodyItem.after, maxLineWidth);\n    });\n    widthPadding = 0;\n    ctx.font = footerFont.string;\n    each(tooltip.footer, maxLineWidth);\n    ctx.restore();\n    width += padding.width;\n    return {\n        width,\n        height\n    };\n}\nfunction determineYAlign(chart, size) {\n    const { y , height  } = size;\n    if (y < height / 2) {\n        return 'top';\n    } else if (y > chart.height - height / 2) {\n        return 'bottom';\n    }\n    return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n    const { x , width  } = size;\n    const caret = options.caretSize + options.caretPadding;\n    if (xAlign === 'left' && x + width + caret > chart.width) {\n        return true;\n    }\n    if (xAlign === 'right' && x - width - caret < 0) {\n        return true;\n    }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n    const { x , width  } = size;\n    const { width: chartWidth , chartArea: { left , right  }  } = chart;\n    let xAlign = 'center';\n    if (yAlign === 'center') {\n        xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n    } else if (x <= width / 2) {\n        xAlign = 'left';\n    } else if (x >= chartWidth - width / 2) {\n        xAlign = 'right';\n    }\n    if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n        xAlign = 'center';\n    }\n    return xAlign;\n}\n function determineAlignment(chart, options, size) {\n    const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n    return {\n        xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n        yAlign\n    };\n}\nfunction alignX(size, xAlign) {\n    let { x , width  } = size;\n    if (xAlign === 'right') {\n        x -= width;\n    } else if (xAlign === 'center') {\n        x -= width / 2;\n    }\n    return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n    let { y , height  } = size;\n    if (yAlign === 'top') {\n        y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n        y -= height + paddingAndSize;\n    } else {\n        y -= height / 2;\n    }\n    return y;\n}\n function getBackgroundPoint(options, size, alignment, chart) {\n    const { caretSize , caretPadding , cornerRadius  } = options;\n    const { xAlign , yAlign  } = alignment;\n    const paddingAndSize = caretSize + caretPadding;\n    const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n    let x = alignX(size, xAlign);\n    const y = alignY(size, yAlign, paddingAndSize);\n    if (yAlign === 'center') {\n        if (xAlign === 'left') {\n            x += paddingAndSize;\n        } else if (xAlign === 'right') {\n            x -= paddingAndSize;\n        }\n    } else if (xAlign === 'left') {\n        x -= Math.max(topLeft, bottomLeft) + caretSize;\n    } else if (xAlign === 'right') {\n        x += Math.max(topRight, bottomRight) + caretSize;\n    }\n    return {\n        x: _limitValue(x, 0, chart.width - size.width),\n        y: _limitValue(y, 0, chart.height - size.height)\n    };\n}\nfunction getAlignedX(tooltip, align, options) {\n    const padding = toPadding(options.padding);\n    return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\n function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n    return createContext(parent, {\n        tooltip,\n        tooltipItems,\n        type: 'tooltip'\n    });\n}\nfunction overrideCallbacks(callbacks, context) {\n    const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n    return override ? callbacks.override(override) : callbacks;\n}\nconst defaultCallbacks = {\n    beforeTitle: noop,\n    title (tooltipItems) {\n        if (tooltipItems.length > 0) {\n            const item = tooltipItems[0];\n            const labels = item.chart.data.labels;\n            const labelCount = labels ? labels.length : 0;\n            if (this && this.options && this.options.mode === 'dataset') {\n                return item.dataset.label || '';\n            } else if (item.label) {\n                return item.label;\n            } else if (labelCount > 0 && item.dataIndex < labelCount) {\n                return labels[item.dataIndex];\n            }\n        }\n        return '';\n    },\n    afterTitle: noop,\n    beforeBody: noop,\n    beforeLabel: noop,\n    label (tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n            return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n            label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n            label += value;\n        }\n        return label;\n    },\n    labelColor (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            borderColor: options.borderColor,\n            backgroundColor: options.backgroundColor,\n            borderWidth: options.borderWidth,\n            borderDash: options.borderDash,\n            borderDashOffset: options.borderDashOffset,\n            borderRadius: 0\n        };\n    },\n    labelTextColor () {\n        return this.options.bodyColor;\n    },\n    labelPointStyle (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            pointStyle: options.pointStyle,\n            rotation: options.rotation\n        };\n    },\n    afterLabel: noop,\n    afterBody: noop,\n    beforeFooter: noop,\n    footer: noop,\n    afterFooter: noop\n};\n function invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n    const result = callbacks[name].call(ctx, arg);\n    if (typeof result === 'undefined') {\n        return defaultCallbacks[name].call(ctx, arg);\n    }\n    return result;\n}\nclass Tooltip extends Element {\n static positioners = positioners;\n    constructor(config){\n        super();\n        this.opacity = 0;\n        this._active = [];\n        this._eventPosition = undefined;\n        this._size = undefined;\n        this._cachedAnimations = undefined;\n        this._tooltipItems = [];\n        this.$animations = undefined;\n        this.$context = undefined;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.dataPoints = undefined;\n        this.title = undefined;\n        this.beforeBody = undefined;\n        this.body = undefined;\n        this.afterBody = undefined;\n        this.footer = undefined;\n        this.xAlign = undefined;\n        this.yAlign = undefined;\n        this.x = undefined;\n        this.y = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this.caretX = undefined;\n        this.caretY = undefined;\n        this.labelColors = undefined;\n        this.labelPointStyles = undefined;\n        this.labelTextColors = undefined;\n    }\n    initialize(options) {\n        this.options = options;\n        this._cachedAnimations = undefined;\n        this.$context = undefined;\n    }\n _resolveAnimations() {\n        const cached = this._cachedAnimations;\n        if (cached) {\n            return cached;\n        }\n        const chart = this.chart;\n        const options = this.options.setContext(this.getContext());\n        const opts = options.enabled && chart.options.animation && options.animations;\n        const animations = new Animations(this.chart, opts);\n        if (opts._cacheable) {\n            this._cachedAnimations = Object.freeze(animations);\n        }\n        return animations;\n    }\n getContext() {\n        return this.$context || (this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n    }\n    getTitle(context, options) {\n        const { callbacks  } = options;\n        const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n        const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n        const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n        lines = pushOrConcat(lines, splitNewlines(title));\n        lines = pushOrConcat(lines, splitNewlines(afterTitle));\n        return lines;\n    }\n    getBeforeBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems));\n    }\n    getBody(tooltipItems, options) {\n        const { callbacks  } = options;\n        const bodyItems = [];\n        each(tooltipItems, (context)=>{\n            const bodyItem = {\n                before: [],\n                lines: [],\n                after: []\n            };\n            const scoped = overrideCallbacks(callbacks, context);\n            pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n            pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n            pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n            bodyItems.push(bodyItem);\n        });\n        return bodyItems;\n    }\n    getAfterBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems));\n    }\n    getFooter(tooltipItems, options) {\n        const { callbacks  } = options;\n        const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n        const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n        const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n        lines = pushOrConcat(lines, splitNewlines(footer));\n        lines = pushOrConcat(lines, splitNewlines(afterFooter));\n        return lines;\n    }\n _createItems(options) {\n        const active = this._active;\n        const data = this.chart.data;\n        const labelColors = [];\n        const labelPointStyles = [];\n        const labelTextColors = [];\n        let tooltipItems = [];\n        let i, len;\n        for(i = 0, len = active.length; i < len; ++i){\n            tooltipItems.push(createTooltipItem(this.chart, active[i]));\n        }\n        if (options.filter) {\n            tooltipItems = tooltipItems.filter((element, index, array)=>options.filter(element, index, array, data));\n        }\n        if (options.itemSort) {\n            tooltipItems = tooltipItems.sort((a, b)=>options.itemSort(a, b, data));\n        }\n        each(tooltipItems, (context)=>{\n            const scoped = overrideCallbacks(options.callbacks, context);\n            labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n            labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n            labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n        });\n        this.labelColors = labelColors;\n        this.labelPointStyles = labelPointStyles;\n        this.labelTextColors = labelTextColors;\n        this.dataPoints = tooltipItems;\n        return tooltipItems;\n    }\n    update(changed, replay) {\n        const options = this.options.setContext(this.getContext());\n        const active = this._active;\n        let properties;\n        let tooltipItems = [];\n        if (!active.length) {\n            if (this.opacity !== 0) {\n                properties = {\n                    opacity: 0\n                };\n            }\n        } else {\n            const position = positioners[options.position].call(this, active, this._eventPosition);\n            tooltipItems = this._createItems(options);\n            this.title = this.getTitle(tooltipItems, options);\n            this.beforeBody = this.getBeforeBody(tooltipItems, options);\n            this.body = this.getBody(tooltipItems, options);\n            this.afterBody = this.getAfterBody(tooltipItems, options);\n            this.footer = this.getFooter(tooltipItems, options);\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, size);\n            const alignment = determineAlignment(this.chart, options, positionAndSize);\n            const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n            this.xAlign = alignment.xAlign;\n            this.yAlign = alignment.yAlign;\n            properties = {\n                opacity: 1,\n                x: backgroundPoint.x,\n                y: backgroundPoint.y,\n                width: size.width,\n                height: size.height,\n                caretX: position.x,\n                caretY: position.y\n            };\n        }\n        this._tooltipItems = tooltipItems;\n        this.$context = undefined;\n        if (properties) {\n            this._resolveAnimations().update(this, properties);\n        }\n        if (changed && options.external) {\n            options.external.call(this, {\n                chart: this.chart,\n                tooltip: this,\n                replay\n            });\n        }\n    }\n    drawCaret(tooltipPoint, ctx, size, options) {\n        const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n        ctx.lineTo(caretPosition.x1, caretPosition.y1);\n        ctx.lineTo(caretPosition.x2, caretPosition.y2);\n        ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    }\n    getCaretPosition(tooltipPoint, size, options) {\n        const { xAlign , yAlign  } = this;\n        const { caretSize , cornerRadius  } = options;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n        const { x: ptX , y: ptY  } = tooltipPoint;\n        const { width , height  } = size;\n        let x1, x2, x3, y1, y2, y3;\n        if (yAlign === 'center') {\n            y2 = ptY + height / 2;\n            if (xAlign === 'left') {\n                x1 = ptX;\n                x2 = x1 - caretSize;\n                y1 = y2 + caretSize;\n                y3 = y2 - caretSize;\n            } else {\n                x1 = ptX + width;\n                x2 = x1 + caretSize;\n                y1 = y2 - caretSize;\n                y3 = y2 + caretSize;\n            }\n            x3 = x1;\n        } else {\n            if (xAlign === 'left') {\n                x2 = ptX + Math.max(topLeft, bottomLeft) + caretSize;\n            } else if (xAlign === 'right') {\n                x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n            } else {\n                x2 = this.caretX;\n            }\n            if (yAlign === 'top') {\n                y1 = ptY;\n                y2 = y1 - caretSize;\n                x1 = x2 - caretSize;\n                x3 = x2 + caretSize;\n            } else {\n                y1 = ptY + height;\n                y2 = y1 + caretSize;\n                x1 = x2 + caretSize;\n                x3 = x2 - caretSize;\n            }\n            y3 = y1;\n        }\n        return {\n            x1,\n            x2,\n            x3,\n            y1,\n            y2,\n            y3\n        };\n    }\n    drawTitle(pt, ctx, options) {\n        const title = this.title;\n        const length = title.length;\n        let titleFont, titleSpacing, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.titleAlign, options);\n            ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n            ctx.textBaseline = 'middle';\n            titleFont = toFont(options.titleFont);\n            titleSpacing = options.titleSpacing;\n            ctx.fillStyle = options.titleColor;\n            ctx.font = titleFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n                pt.y += titleFont.lineHeight + titleSpacing;\n                if (i + 1 === length) {\n                    pt.y += options.titleMarginBottom - titleSpacing;\n                }\n            }\n        }\n    }\n _drawColorBox(ctx, pt, i, rtlHelper, options) {\n        const labelColors = this.labelColors[i];\n        const labelPointStyle = this.labelPointStyles[i];\n        const { boxHeight , boxWidth , boxPadding  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        const colorX = getAlignedX(this, 'left', options);\n        const rtlColorX = rtlHelper.x(colorX);\n        const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n        const colorY = pt.y + yOffSet;\n        if (options.usePointStyle) {\n            const drawOptions = {\n                radius: Math.min(boxWidth, boxHeight) / 2,\n                pointStyle: labelPointStyle.pointStyle,\n                rotation: labelPointStyle.rotation,\n                borderWidth: 1\n            };\n            const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n            const centerY = colorY + boxHeight / 2;\n            ctx.strokeStyle = options.multiKeyBackground;\n            ctx.fillStyle = options.multiKeyBackground;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n            ctx.strokeStyle = labelColors.borderColor;\n            ctx.fillStyle = labelColors.backgroundColor;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n        } else {\n            ctx.lineWidth = isObject(labelColors.borderWidth) ? Math.max(...Object.values(labelColors.borderWidth)) : labelColors.borderWidth || 1;\n            ctx.strokeStyle = labelColors.borderColor;\n            ctx.setLineDash(labelColors.borderDash || []);\n            ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n            const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth - boxPadding);\n            const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - boxPadding - 2);\n            const borderRadius = toTRBLCorners(labelColors.borderRadius);\n            if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                ctx.beginPath();\n                ctx.fillStyle = options.multiKeyBackground;\n                addRoundedRectPath(ctx, {\n                    x: outerX,\n                    y: colorY,\n                    w: boxWidth,\n                    h: boxHeight,\n                    radius: borderRadius\n                });\n                ctx.fill();\n                ctx.stroke();\n                ctx.fillStyle = labelColors.backgroundColor;\n                ctx.beginPath();\n                addRoundedRectPath(ctx, {\n                    x: innerX,\n                    y: colorY + 1,\n                    w: boxWidth - 2,\n                    h: boxHeight - 2,\n                    radius: borderRadius\n                });\n                ctx.fill();\n            } else {\n                ctx.fillStyle = options.multiKeyBackground;\n                ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.fillStyle = labelColors.backgroundColor;\n                ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n            }\n        }\n        ctx.fillStyle = this.labelTextColors[i];\n    }\n    drawBody(pt, ctx, options) {\n        const { body  } = this;\n        const { bodySpacing , bodyAlign , displayColors , boxHeight , boxWidth , boxPadding  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        let bodyLineHeight = bodyFont.lineHeight;\n        let xLinePadding = 0;\n        const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n        const fillLineOfText = function(line) {\n            ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n            pt.y += bodyLineHeight + bodySpacing;\n        };\n        const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n        let bodyItem, textColor, lines, i, j, ilen, jlen;\n        ctx.textAlign = bodyAlign;\n        ctx.textBaseline = 'middle';\n        ctx.font = bodyFont.string;\n        pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n        ctx.fillStyle = options.bodyColor;\n        each(this.beforeBody, fillLineOfText);\n        xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + boxPadding : boxWidth + 2 + boxPadding : 0;\n        for(i = 0, ilen = body.length; i < ilen; ++i){\n            bodyItem = body[i];\n            textColor = this.labelTextColors[i];\n            ctx.fillStyle = textColor;\n            each(bodyItem.before, fillLineOfText);\n            lines = bodyItem.lines;\n            if (displayColors && lines.length) {\n                this._drawColorBox(ctx, pt, i, rtlHelper, options);\n                bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n            }\n            for(j = 0, jlen = lines.length; j < jlen; ++j){\n                fillLineOfText(lines[j]);\n                bodyLineHeight = bodyFont.lineHeight;\n            }\n            each(bodyItem.after, fillLineOfText);\n        }\n        xLinePadding = 0;\n        bodyLineHeight = bodyFont.lineHeight;\n        each(this.afterBody, fillLineOfText);\n        pt.y -= bodySpacing;\n    }\n    drawFooter(pt, ctx, options) {\n        const footer = this.footer;\n        const length = footer.length;\n        let footerFont, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.footerAlign, options);\n            pt.y += options.footerMarginTop;\n            ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n            ctx.textBaseline = 'middle';\n            footerFont = toFont(options.footerFont);\n            ctx.fillStyle = options.footerColor;\n            ctx.font = footerFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n                pt.y += footerFont.lineHeight + options.footerSpacing;\n            }\n        }\n    }\n    drawBackground(pt, ctx, tooltipSize, options) {\n        const { xAlign , yAlign  } = this;\n        const { x , y  } = pt;\n        const { width , height  } = tooltipSize;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(options.cornerRadius);\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.beginPath();\n        ctx.moveTo(x + topLeft, y);\n        if (yAlign === 'top') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width - topRight, y);\n        ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n        if (yAlign === 'center' && xAlign === 'right') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width, y + height - bottomRight);\n        ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n        if (yAlign === 'bottom') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + bottomLeft, y + height);\n        ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n        if (yAlign === 'center' && xAlign === 'left') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x, y + topLeft);\n        ctx.quadraticCurveTo(x, y, x + topLeft, y);\n        ctx.closePath();\n        ctx.fill();\n        if (options.borderWidth > 0) {\n            ctx.stroke();\n        }\n    }\n _updateAnimationTarget(options) {\n        const chart = this.chart;\n        const anims = this.$animations;\n        const animX = anims && anims.x;\n        const animY = anims && anims.y;\n        if (animX || animY) {\n            const position = positioners[options.position].call(this, this._active, this._eventPosition);\n            if (!position) {\n                return;\n            }\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, this._size);\n            const alignment = determineAlignment(chart, options, positionAndSize);\n            const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n            if (animX._to !== point.x || animY._to !== point.y) {\n                this.xAlign = alignment.xAlign;\n                this.yAlign = alignment.yAlign;\n                this.width = size.width;\n                this.height = size.height;\n                this.caretX = position.x;\n                this.caretY = position.y;\n                this._resolveAnimations().update(this, point);\n            }\n        }\n    }\n _willRender() {\n        return !!this.opacity;\n    }\n    draw(ctx) {\n        const options = this.options.setContext(this.getContext());\n        let opacity = this.opacity;\n        if (!opacity) {\n            return;\n        }\n        this._updateAnimationTarget(options);\n        const tooltipSize = {\n            width: this.width,\n            height: this.height\n        };\n        const pt = {\n            x: this.x,\n            y: this.y\n        };\n        opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n        const padding = toPadding(options.padding);\n        const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n        if (options.enabled && hasTooltipContent) {\n            ctx.save();\n            ctx.globalAlpha = opacity;\n            this.drawBackground(pt, ctx, tooltipSize, options);\n            overrideTextDirection(ctx, options.textDirection);\n            pt.y += padding.top;\n            this.drawTitle(pt, ctx, options);\n            this.drawBody(pt, ctx, options);\n            this.drawFooter(pt, ctx, options);\n            restoreTextDirection(ctx, options.textDirection);\n            ctx.restore();\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements, eventPosition) {\n        const lastActive = this._active;\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.chart.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('Cannot find a dataset at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(lastActive, active);\n        const positionChanged = this._positionChanged(active, eventPosition);\n        if (changed || positionChanged) {\n            this._active = active;\n            this._eventPosition = eventPosition;\n            this._ignoreReplayEvents = true;\n            this.update(true);\n        }\n    }\n handleEvent(e, replay, inChartArea = true) {\n        if (replay && this._ignoreReplayEvents) {\n            return false;\n        }\n        this._ignoreReplayEvents = false;\n        const options = this.options;\n        const lastActive = this._active || [];\n        const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n        const positionChanged = this._positionChanged(active, e);\n        const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n        if (changed) {\n            this._active = active;\n            if (options.enabled || options.external) {\n                this._eventPosition = {\n                    x: e.x,\n                    y: e.y\n                };\n                this.update(true, replay);\n            }\n        }\n        return changed;\n    }\n _getActiveElements(e, lastActive, replay, inChartArea) {\n        const options = this.options;\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive;\n        }\n        const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n        if (options.reverse) {\n            active.reverse();\n        }\n        return active;\n    }\n _positionChanged(active, e) {\n        const { caretX , caretY , options  } = this;\n        const position = positioners[options.position].call(this, active, e);\n        return position !== false && (caretX !== position.x || caretY !== position.y);\n    }\n}\nvar plugin_tooltip = {\n    id: 'tooltip',\n    _element: Tooltip,\n    positioners,\n    afterInit (chart, _args, options) {\n        if (options) {\n            chart.tooltip = new Tooltip({\n                chart,\n                options\n            });\n        }\n    },\n    beforeUpdate (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    reset (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    afterDraw (chart) {\n        const tooltip = chart.tooltip;\n        if (tooltip && tooltip._willRender()) {\n            const args = {\n                tooltip\n            };\n            if (chart.notifyPlugins('beforeTooltipDraw', {\n                ...args,\n                cancelable: true\n            }) === false) {\n                return;\n            }\n            tooltip.draw(chart.ctx);\n            chart.notifyPlugins('afterTooltipDraw', args);\n        }\n    },\n    afterEvent (chart, args) {\n        if (chart.tooltip) {\n            const useFinalPosition = args.replay;\n            if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n                args.changed = true;\n            }\n        }\n    },\n    defaults: {\n        enabled: true,\n        external: null,\n        position: 'average',\n        backgroundColor: 'rgba(0,0,0,0.8)',\n        titleColor: '#fff',\n        titleFont: {\n            weight: 'bold'\n        },\n        titleSpacing: 2,\n        titleMarginBottom: 6,\n        titleAlign: 'left',\n        bodyColor: '#fff',\n        bodySpacing: 2,\n        bodyFont: {},\n        bodyAlign: 'left',\n        footerColor: '#fff',\n        footerSpacing: 2,\n        footerMarginTop: 6,\n        footerFont: {\n            weight: 'bold'\n        },\n        footerAlign: 'left',\n        padding: 6,\n        caretPadding: 2,\n        caretSize: 5,\n        cornerRadius: 6,\n        boxHeight: (ctx, opts)=>opts.bodyFont.size,\n        boxWidth: (ctx, opts)=>opts.bodyFont.size,\n        multiKeyBackground: '#fff',\n        displayColors: true,\n        boxPadding: 0,\n        borderColor: 'rgba(0,0,0,0)',\n        borderWidth: 0,\n        animation: {\n            duration: 400,\n            easing: 'easeOutQuart'\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'width',\n                    'height',\n                    'caretX',\n                    'caretY'\n                ]\n            },\n            opacity: {\n                easing: 'linear',\n                duration: 200\n            }\n        },\n        callbacks: defaultCallbacks\n    },\n    defaultRoutes: {\n        bodyFont: 'font',\n        footerFont: 'font',\n        titleFont: 'font'\n    },\n    descriptors: {\n        _scriptable: (name)=>name !== 'filter' && name !== 'itemSort' && name !== 'external',\n        _indexable: false,\n        callbacks: {\n            _scriptable: false,\n            _indexable: false\n        },\n        animation: {\n            _fallback: false\n        },\n        animations: {\n            _fallback: 'animation'\n        }\n    },\n    additionalOptionScopes: [\n        'interaction'\n    ]\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nColors: plugin_colors,\nDecimation: plugin_decimation,\nFiller: index,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels)=>{\n    if (typeof raw === 'string') {\n        index = labels.push(raw) - 1;\n        addedLabels.unshift({\n            index,\n            label: raw\n        });\n    } else if (isNaN(raw)) {\n        index = null;\n    }\n    return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n    const first = labels.indexOf(raw);\n    if (first === -1) {\n        return addIfString(labels, raw, index, addedLabels);\n    }\n    const last = labels.lastIndexOf(raw);\n    return first !== last ? index : first;\n}\nconst validIndex = (index, max)=>index === null ? null : _limitValue(Math.round(index), 0, max);\nfunction _getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n        return labels[value];\n    }\n    return value;\n}\nclass CategoryScale extends Scale {\n    static id = 'category';\n static defaults = {\n        ticks: {\n            callback: _getLabelForValue\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this._startValue = undefined;\n        this._valueRange = 0;\n        this._addedLabels = [];\n    }\n    init(scaleOptions) {\n        const added = this._addedLabels;\n        if (added.length) {\n            const labels = this.getLabels();\n            for (const { index , label  } of added){\n                if (labels[index] === label) {\n                    labels.splice(index, 1);\n                }\n            }\n            this._addedLabels = [];\n        }\n        super.init(scaleOptions);\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        const labels = this.getLabels();\n        index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n        return validIndex(index, labels.length - 1);\n    }\n    determineDataLimits() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this.getMinMax(true);\n        if (this.options.bounds === 'ticks') {\n            if (!minDefined) {\n                min = 0;\n            }\n            if (!maxDefined) {\n                max = this.getLabels().length - 1;\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const min = this.min;\n        const max = this.max;\n        const offset = this.options.offset;\n        const ticks = [];\n        let labels = this.getLabels();\n        labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n        this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n        this._startValue = this.min - (offset ? 0.5 : 0);\n        for(let value = min; value <= max; value++){\n            ticks.push({\n                value\n            });\n        }\n        return ticks;\n    }\n    getLabelForValue(value) {\n        return _getLabelForValue.call(this, value);\n    }\n configure() {\n        super.configure();\n        if (!this.isHorizontal()) {\n            this._reversePixels = !this._reversePixels;\n        }\n    }\n    getPixelForValue(value) {\n        if (typeof value !== 'number') {\n            value = this.parse(value);\n        }\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n    getValueForPixel(pixel) {\n        return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n    }\n    getBasePixel() {\n        return this.bottom;\n    }\n}\n\nfunction generateTicks$1(generationOptions, dataRange) {\n    const ticks = [];\n    const MIN_SPACING = 1e-14;\n    const { bounds , step , min , max , precision , count , maxTicks , maxDigits , includeBounds  } = generationOptions;\n    const unit = step || 1;\n    const maxSpaces = maxTicks - 1;\n    const { min: rmin , max: rmax  } = dataRange;\n    const minDefined = !isNullOrUndef(min);\n    const maxDefined = !isNullOrUndef(max);\n    const countDefined = !isNullOrUndef(count);\n    const minSpacing = (rmax - rmin) / (maxDigits + 1);\n    let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n    let factor, niceMin, niceMax, numSpaces;\n    if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n        return [\n            {\n                value: rmin\n            },\n            {\n                value: rmax\n            }\n        ];\n    }\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n    if (numSpaces > maxSpaces) {\n        spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n    }\n    if (!isNullOrUndef(precision)) {\n        factor = Math.pow(10, precision);\n        spacing = Math.ceil(spacing * factor) / factor;\n    }\n    if (bounds === 'ticks') {\n        niceMin = Math.floor(rmin / spacing) * spacing;\n        niceMax = Math.ceil(rmax / spacing) * spacing;\n    } else {\n        niceMin = rmin;\n        niceMax = rmax;\n    }\n    if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n        numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n        spacing = (max - min) / numSpaces;\n        niceMin = min;\n        niceMax = max;\n    } else if (countDefined) {\n        niceMin = minDefined ? min : niceMin;\n        niceMax = maxDefined ? max : niceMax;\n        numSpaces = count - 1;\n        spacing = (niceMax - niceMin) / numSpaces;\n    } else {\n        numSpaces = (niceMax - niceMin) / spacing;\n        if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n            numSpaces = Math.round(numSpaces);\n        } else {\n            numSpaces = Math.ceil(numSpaces);\n        }\n    }\n    const decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n    factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    let j = 0;\n    if (minDefined) {\n        if (includeBounds && niceMin !== min) {\n            ticks.push({\n                value: min\n            });\n            if (niceMin < min) {\n                j++;\n            }\n            if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n                j++;\n            }\n        } else if (niceMin < min) {\n            j++;\n        }\n    }\n    for(; j < numSpaces; ++j){\n        ticks.push({\n            value: Math.round((niceMin + j * spacing) * factor) / factor\n        });\n    }\n    if (maxDefined && includeBounds && niceMax !== max) {\n        if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n            ticks[ticks.length - 1].value = max;\n        } else {\n            ticks.push({\n                value: max\n            });\n        }\n    } else if (!maxDefined || niceMax === max) {\n        ticks.push({\n            value: niceMax\n        });\n    }\n    return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, { horizontal , minRotation  }) {\n    const rad = toRadians(minRotation);\n    const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n    const length = 0.75 * minSpacing * ('' + value).length;\n    return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n         this._endValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n            return null;\n        }\n        return +raw;\n    }\n    handleTickRangeOptions() {\n        const { beginAtZero  } = this.options;\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (beginAtZero) {\n            const minSign = sign(min);\n            const maxSign = sign(max);\n            if (minSign < 0 && maxSign < 0) {\n                setMax(0);\n            } else if (minSign > 0 && maxSign > 0) {\n                setMin(0);\n            }\n        }\n        if (min === max) {\n            let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n            setMax(max + offset);\n            if (!beginAtZero) {\n                setMin(min - offset);\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    getTickLimit() {\n        const tickOpts = this.options.ticks;\n        let { maxTicksLimit , stepSize  } = tickOpts;\n        let maxTicks;\n        if (stepSize) {\n            maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n            if (maxTicks > 1000) {\n                console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n                maxTicks = 1000;\n            }\n        } else {\n            maxTicks = this.computeTickLimit();\n            maxTicksLimit = maxTicksLimit || 11;\n        }\n        if (maxTicksLimit) {\n            maxTicks = Math.min(maxTicksLimit, maxTicks);\n        }\n        return maxTicks;\n    }\n computeTickLimit() {\n        return Number.POSITIVE_INFINITY;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        let maxTicks = this.getTickLimit();\n        maxTicks = Math.max(2, maxTicks);\n        const numericGeneratorOptions = {\n            maxTicks,\n            bounds: opts.bounds,\n            min: opts.min,\n            max: opts.max,\n            precision: tickOpts.precision,\n            step: tickOpts.stepSize,\n            count: tickOpts.count,\n            maxDigits: this._maxDigits(),\n            horizontal: this.isHorizontal(),\n            minRotation: tickOpts.minRotation || 0,\n            includeBounds: tickOpts.includeBounds !== false\n        };\n        const dataRange = this._range || this;\n        const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n configure() {\n        const ticks = this.ticks;\n        let start = this.min;\n        let end = this.max;\n        super.configure();\n        if (this.options.offset && ticks.length) {\n            const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n            start -= offset;\n            end += offset;\n        }\n        this._startValue = start;\n        this._endValue = end;\n        this._valueRange = end - start;\n    }\n    getLabelForValue(value) {\n        return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n}\n\nclass LinearScale extends LinearScaleBase {\n    static id = 'linear';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.numeric\n        }\n    };\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? min : 0;\n        this.max = isNumberFinite(max) ? max : 1;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        const horizontal = this.isHorizontal();\n        const length = horizontal ? this.width : this.height;\n        const minRotation = toRadians(this.options.ticks.minRotation);\n        const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n        const tickFont = this._resolveTickFontOptions(0);\n        return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n    }\n    getPixelForValue(value) {\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n    }\n}\n\nconst log10Floor = (v)=>Math.floor(log10(v));\nconst changeExponent = (v, m)=>Math.pow(10, log10Floor(v) + m);\nfunction isMajor(tickVal) {\n    const remain = tickVal / Math.pow(10, log10Floor(tickVal));\n    return remain === 1;\n}\nfunction steps(min, max, rangeExp) {\n    const rangeStep = Math.pow(10, rangeExp);\n    const start = Math.floor(min / rangeStep);\n    const end = Math.ceil(max / rangeStep);\n    return end - start;\n}\nfunction startExp(min, max) {\n    const range = max - min;\n    let rangeExp = log10Floor(range);\n    while(steps(min, max, rangeExp) > 10){\n        rangeExp++;\n    }\n    while(steps(min, max, rangeExp) < 10){\n        rangeExp--;\n    }\n    return Math.min(rangeExp, log10Floor(min));\n}\n function generateTicks(generationOptions, { min , max  }) {\n    min = finiteOrDefault(generationOptions.min, min);\n    const ticks = [];\n    const minExp = log10Floor(min);\n    let exp = startExp(min, max);\n    let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n    const stepSize = Math.pow(10, exp);\n    const base = minExp > exp ? Math.pow(10, minExp) : 0;\n    const start = Math.round((min - base) * precision) / precision;\n    const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n    let significand = Math.floor((start - offset) / Math.pow(10, exp));\n    let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n    while(value < max){\n        ticks.push({\n            value,\n            major: isMajor(value),\n            significand\n        });\n        if (significand >= 10) {\n            significand = significand < 15 ? 15 : 20;\n        } else {\n            significand++;\n        }\n        if (significand >= 20) {\n            exp++;\n            significand = 2;\n            precision = exp >= 0 ? 1 : precision;\n        }\n        value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n    }\n    const lastTick = finiteOrDefault(generationOptions.max, value);\n    ticks.push({\n        value: lastTick,\n        major: isMajor(lastTick),\n        significand\n    });\n    return ticks;\n}\nclass LogarithmicScale extends Scale {\n    static id = 'logarithmic';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.logarithmic,\n            major: {\n                enabled: true\n            }\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        const value = LinearScaleBase.prototype.parse.apply(this, [\n            raw,\n            index\n        ]);\n        if (value === 0) {\n            this._zero = true;\n            return undefined;\n        }\n        return isNumberFinite(value) && value > 0 ? value : null;\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n        this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n        if (this.options.beginAtZero) {\n            this._zero = true;\n        }\n        if (this._zero && this.min !== this._suggestedMin && !isNumberFinite(this._userMin)) {\n            this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n        }\n        this.handleTickRangeOptions();\n    }\n    handleTickRangeOptions() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let min = this.min;\n        let max = this.max;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (min === max) {\n            if (min <= 0) {\n                setMin(1);\n                setMax(10);\n            } else {\n                setMin(changeExponent(min, -1));\n                setMax(changeExponent(max, +1));\n            }\n        }\n        if (min <= 0) {\n            setMin(changeExponent(max, -1));\n        }\n        if (max <= 0) {\n            setMax(changeExponent(min, +1));\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const generationOptions = {\n            min: this._userMin,\n            max: this._userMax\n        };\n        const ticks = generateTicks(generationOptions, this);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n getLabelForValue(value) {\n        return value === undefined ? '0' : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n configure() {\n        const start = this.min;\n        super.configure();\n        this._startValue = log10(start);\n        this._valueRange = log10(this.max) - log10(start);\n    }\n    getPixelForValue(value) {\n        if (value === undefined || value === 0) {\n            value = this.min;\n        }\n        if (value === null || isNaN(value)) {\n            return NaN;\n        }\n        return this.getPixelForDecimal(value === this.min ? 0 : (log10(value) - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        const decimal = this.getDecimalForPixel(pixel);\n        return Math.pow(10, this._startValue + decimal * this._valueRange);\n    }\n}\n\nfunction getTickBackdropHeight(opts) {\n    const tickOpts = opts.ticks;\n    if (tickOpts.display && opts.display) {\n        const padding = toPadding(tickOpts.backdropPadding);\n        return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n    }\n    return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n    label = isArray(label) ? label : [\n        label\n    ];\n    return {\n        w: _longestText(ctx, font.string, label),\n        h: label.length * font.lineHeight\n    };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n        return {\n            start: pos - size / 2,\n            end: pos + size / 2\n        };\n    } else if (angle < min || angle > max) {\n        return {\n            start: pos - size,\n            end: pos\n        };\n    }\n    return {\n        start: pos,\n        end: pos + size\n    };\n}\n function fitWithPointLabels(scale) {\n    const orig = {\n        l: scale.left + scale._padding.left,\n        r: scale.right - scale._padding.right,\n        t: scale.top + scale._padding.top,\n        b: scale.bottom - scale._padding.bottom\n    };\n    const limits = Object.assign({}, orig);\n    const labelSizes = [];\n    const padding = [];\n    const valueCount = scale._pointLabels.length;\n    const pointLabelOpts = scale.options.pointLabels;\n    const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n    for(let i = 0; i < valueCount; i++){\n        const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n        padding[i] = opts.padding;\n        const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n        const plFont = toFont(opts.font);\n        const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n        labelSizes[i] = textSize;\n        const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n        const angle = Math.round(toDegrees(angleRadians));\n        const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n        const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n        updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n    }\n    scale.setCenterPoint(orig.l - limits.l, limits.r - orig.r, orig.t - limits.t, limits.b - orig.b);\n    scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n    const sin = Math.abs(Math.sin(angle));\n    const cos = Math.abs(Math.cos(angle));\n    let x = 0;\n    let y = 0;\n    if (hLimits.start < orig.l) {\n        x = (orig.l - hLimits.start) / sin;\n        limits.l = Math.min(limits.l, orig.l - x);\n    } else if (hLimits.end > orig.r) {\n        x = (hLimits.end - orig.r) / sin;\n        limits.r = Math.max(limits.r, orig.r + x);\n    }\n    if (vLimits.start < orig.t) {\n        y = (orig.t - vLimits.start) / cos;\n        limits.t = Math.min(limits.t, orig.t - y);\n    } else if (vLimits.end > orig.b) {\n        y = (vLimits.end - orig.b) / cos;\n        limits.b = Math.max(limits.b, orig.b + y);\n    }\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n    const items = [];\n    const valueCount = scale._pointLabels.length;\n    const opts = scale.options;\n    const extra = getTickBackdropHeight(opts) / 2;\n    const outerDistance = scale.drawingArea;\n    const additionalAngle = opts.pointLabels.centerPointLabels ? PI / valueCount : 0;\n    for(let i = 0; i < valueCount; i++){\n        const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i], additionalAngle);\n        const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n        const size = labelSizes[i];\n        const y = yForAngle(pointLabelPosition.y, size.h, angle);\n        const textAlign = getTextAlignForAngle(angle);\n        const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n        items.push({\n            x: pointLabelPosition.x,\n            y,\n            textAlign,\n            left,\n            top: y,\n            right: left + size.w,\n            bottom: y + size.h\n        });\n    }\n    return items;\n}\nfunction getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n        return 'center';\n    } else if (angle < 180) {\n        return 'left';\n    }\n    return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n    if (align === 'right') {\n        x -= w;\n    } else if (align === 'center') {\n        x -= w / 2;\n    }\n    return x;\n}\nfunction yForAngle(y, h, angle) {\n    if (angle === 90 || angle === 270) {\n        y -= h / 2;\n    } else if (angle > 270 || angle < 90) {\n        y -= h;\n    }\n    return y;\n}\nfunction drawPointLabels(scale, labelCount) {\n    const { ctx , options: { pointLabels  }  } = scale;\n    for(let i = labelCount - 1; i >= 0; i--){\n        const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n        const plFont = toFont(optsAtIndex.font);\n        const { x , y , textAlign , left , top , right , bottom  } = scale._pointLabelItems[i];\n        const { backdropColor  } = optsAtIndex;\n        if (!isNullOrUndef(backdropColor)) {\n            const borderRadius = toTRBLCorners(optsAtIndex.borderRadius);\n            const padding = toPadding(optsAtIndex.backdropPadding);\n            ctx.fillStyle = backdropColor;\n            const backdropLeft = left - padding.left;\n            const backdropTop = top - padding.top;\n            const backdropWidth = right - left + padding.width;\n            const backdropHeight = bottom - top + padding.height;\n            if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                ctx.beginPath();\n                addRoundedRectPath(ctx, {\n                    x: backdropLeft,\n                    y: backdropTop,\n                    w: backdropWidth,\n                    h: backdropHeight,\n                    radius: borderRadius\n                });\n                ctx.fill();\n            } else {\n                ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n            }\n        }\n        renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n            color: optsAtIndex.color,\n            textAlign: textAlign,\n            textBaseline: 'middle'\n        });\n    }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n    const { ctx  } = scale;\n    if (circular) {\n        ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n    } else {\n        let pointPosition = scale.getPointPosition(0, radius);\n        ctx.moveTo(pointPosition.x, pointPosition.y);\n        for(let i = 1; i < labelCount; i++){\n            pointPosition = scale.getPointPosition(i, radius);\n            ctx.lineTo(pointPosition.x, pointPosition.y);\n        }\n    }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n    const ctx = scale.ctx;\n    const circular = gridLineOpts.circular;\n    const { color , lineWidth  } = gridLineOpts;\n    if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n        return;\n    }\n    ctx.save();\n    ctx.strokeStyle = color;\n    ctx.lineWidth = lineWidth;\n    ctx.setLineDash(borderOpts.dash);\n    ctx.lineDashOffset = borderOpts.dashOffset;\n    ctx.beginPath();\n    pathRadiusLine(scale, radius, circular, labelCount);\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n    return createContext(parent, {\n        label,\n        index,\n        type: 'pointLabel'\n    });\n}\nclass RadialLinearScale extends LinearScaleBase {\n    static id = 'radialLinear';\n static defaults = {\n        display: true,\n        animate: true,\n        position: 'chartArea',\n        angleLines: {\n            display: true,\n            lineWidth: 1,\n            borderDash: [],\n            borderDashOffset: 0.0\n        },\n        grid: {\n            circular: false\n        },\n        startAngle: 0,\n        ticks: {\n            showLabelBackdrop: true,\n            callback: Ticks.formatters.numeric\n        },\n        pointLabels: {\n            backdropColor: undefined,\n            backdropPadding: 2,\n            display: true,\n            font: {\n                size: 10\n            },\n            callback (label) {\n                return label;\n            },\n            padding: 5,\n            centerPointLabels: false\n        }\n    };\n    static defaultRoutes = {\n        'angleLines.color': 'borderColor',\n        'pointLabels.color': 'color',\n        'ticks.color': 'color'\n    };\n    static descriptors = {\n        angleLines: {\n            _fallback: 'grid'\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.xCenter = undefined;\n         this.yCenter = undefined;\n         this.drawingArea = undefined;\n         this._pointLabels = [];\n        this._pointLabelItems = [];\n    }\n    setDimensions() {\n        const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n        const w = this.width = this.maxWidth - padding.width;\n        const h = this.height = this.maxHeight - padding.height;\n        this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n        this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n        this.drawingArea = Math.floor(Math.min(w, h) / 2);\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(false);\n        this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n        this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    }\n    generateTickLabels(ticks) {\n        LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n        this._pointLabels = this.getLabels().map((value, index)=>{\n            const label = callback(this.options.pointLabels.callback, [\n                value,\n                index\n            ], this);\n            return label || label === 0 ? label : '';\n        }).filter((v, i)=>this.chart.getDataVisibility(i));\n    }\n    fit() {\n        const opts = this.options;\n        if (opts.display && opts.pointLabels.display) {\n            fitWithPointLabels(this);\n        } else {\n            this.setCenterPoint(0, 0, 0, 0);\n        }\n    }\n    setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n        this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n        this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n        this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n    }\n    getIndexAngle(index) {\n        const angleMultiplier = TAU / (this._pointLabels.length || 1);\n        const startAngle = this.options.startAngle || 0;\n        return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n    }\n    getDistanceFromCenterForValue(value) {\n        if (isNullOrUndef(value)) {\n            return NaN;\n        }\n        const scalingFactor = this.drawingArea / (this.max - this.min);\n        if (this.options.reverse) {\n            return (this.max - value) * scalingFactor;\n        }\n        return (value - this.min) * scalingFactor;\n    }\n    getValueForDistanceFromCenter(distance) {\n        if (isNullOrUndef(distance)) {\n            return NaN;\n        }\n        const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n        return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n    }\n    getPointLabelContext(index) {\n        const pointLabels = this._pointLabels || [];\n        if (index >= 0 && index < pointLabels.length) {\n            const pointLabel = pointLabels[index];\n            return createPointLabelContext(this.getContext(), index, pointLabel);\n        }\n    }\n    getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n        const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n        return {\n            x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n            y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n            angle\n        };\n    }\n    getPointPositionForValue(index, value) {\n        return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    }\n    getBasePosition(index) {\n        return this.getPointPositionForValue(index || 0, this.getBaseValue());\n    }\n    getPointLabelPosition(index) {\n        const { left , top , right , bottom  } = this._pointLabelItems[index];\n        return {\n            left,\n            top,\n            right,\n            bottom\n        };\n    }\n drawBackground() {\n        const { backgroundColor , grid: { circular  }  } = this.options;\n        if (backgroundColor) {\n            const ctx = this.ctx;\n            ctx.save();\n            ctx.beginPath();\n            pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n            ctx.closePath();\n            ctx.fillStyle = backgroundColor;\n            ctx.fill();\n            ctx.restore();\n        }\n    }\n drawGrid() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const { angleLines , grid , border  } = opts;\n        const labelCount = this._pointLabels.length;\n        let i, offset, position;\n        if (opts.pointLabels.display) {\n            drawPointLabels(this, labelCount);\n        }\n        if (grid.display) {\n            this.ticks.forEach((tick, index)=>{\n                if (index !== 0) {\n                    offset = this.getDistanceFromCenterForValue(tick.value);\n                    const context = this.getContext(index);\n                    const optsAtIndex = grid.setContext(context);\n                    const optsAtIndexBorder = border.setContext(context);\n                    drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n                }\n            });\n        }\n        if (angleLines.display) {\n            ctx.save();\n            for(i = labelCount - 1; i >= 0; i--){\n                const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n                const { color , lineWidth  } = optsAtIndex;\n                if (!lineWidth || !color) {\n                    continue;\n                }\n                ctx.lineWidth = lineWidth;\n                ctx.strokeStyle = color;\n                ctx.setLineDash(optsAtIndex.borderDash);\n                ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n                offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n                position = this.getPointPosition(i, offset);\n                ctx.beginPath();\n                ctx.moveTo(this.xCenter, this.yCenter);\n                ctx.lineTo(position.x, position.y);\n                ctx.stroke();\n            }\n            ctx.restore();\n        }\n    }\n drawBorder() {}\n drawLabels() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        if (!tickOpts.display) {\n            return;\n        }\n        const startAngle = this.getIndexAngle(0);\n        let offset, width;\n        ctx.save();\n        ctx.translate(this.xCenter, this.yCenter);\n        ctx.rotate(startAngle);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        this.ticks.forEach((tick, index)=>{\n            if (index === 0 && !opts.reverse) {\n                return;\n            }\n            const optsAtIndex = tickOpts.setContext(this.getContext(index));\n            const tickFont = toFont(optsAtIndex.font);\n            offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n            if (optsAtIndex.showLabelBackdrop) {\n                ctx.font = tickFont.string;\n                width = ctx.measureText(tick.label).width;\n                ctx.fillStyle = optsAtIndex.backdropColor;\n                const padding = toPadding(optsAtIndex.backdropPadding);\n                ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n            }\n            renderText(ctx, tick.label, 0, -offset, tickFont, {\n                color: optsAtIndex.color\n            });\n        });\n        ctx.restore();\n    }\n drawTitle() {}\n}\n\nconst INTERVALS = {\n    millisecond: {\n        common: true,\n        size: 1,\n        steps: 1000\n    },\n    second: {\n        common: true,\n        size: 1000,\n        steps: 60\n    },\n    minute: {\n        common: true,\n        size: 60000,\n        steps: 60\n    },\n    hour: {\n        common: true,\n        size: 3600000,\n        steps: 24\n    },\n    day: {\n        common: true,\n        size: 86400000,\n        steps: 30\n    },\n    week: {\n        common: false,\n        size: 604800000,\n        steps: 4\n    },\n    month: {\n        common: true,\n        size: 2.628e9,\n        steps: 12\n    },\n    quarter: {\n        common: false,\n        size: 7.884e9,\n        steps: 4\n    },\n    year: {\n        common: true,\n        size: 3.154e10\n    }\n};\n const UNITS =  /* #__PURE__ */ Object.keys(INTERVALS);\n function sorter(a, b) {\n    return a - b;\n}\n function parse(scale, input) {\n    if (isNullOrUndef(input)) {\n        return null;\n    }\n    const adapter = scale._adapter;\n    const { parser , round , isoWeekday  } = scale._parseOpts;\n    let value = input;\n    if (typeof parser === 'function') {\n        value = parser(value);\n    }\n    if (!isNumberFinite(value)) {\n        value = typeof parser === 'string' ? adapter.parse(value,  (parser)) : adapter.parse(value);\n    }\n    if (value === null) {\n        return null;\n    }\n    if (round) {\n        value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n    }\n    return +value;\n}\n function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    const ilen = UNITS.length;\n    for(let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i){\n        const interval = INTERVALS[UNITS[i]];\n        const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n        if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n            return UNITS[i];\n        }\n    }\n    return UNITS[ilen - 1];\n}\n function determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n    for(let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--){\n        const unit = UNITS[i];\n        if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n            return unit;\n        }\n    }\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n function determineMajorUnit(unit) {\n    for(let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i){\n        if (INTERVALS[UNITS[i]].common) {\n            return UNITS[i];\n        }\n    }\n}\n function addTick(ticks, time, timestamps) {\n    if (!timestamps) {\n        ticks[time] = true;\n    } else if (timestamps.length) {\n        const { lo , hi  } = _lookup(timestamps, time);\n        const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n        ticks[timestamp] = true;\n    }\n}\n function setMajorTicks(scale, ticks, map, majorUnit) {\n    const adapter = scale._adapter;\n    const first = +adapter.startOf(ticks[0].value, majorUnit);\n    const last = ticks[ticks.length - 1].value;\n    let major, index;\n    for(major = first; major <= last; major = +adapter.add(major, 1, majorUnit)){\n        index = map[major];\n        if (index >= 0) {\n            ticks[index].major = true;\n        }\n    }\n    return ticks;\n}\n function ticksFromTimestamps(scale, values, majorUnit) {\n    const ticks = [];\n     const map = {};\n    const ilen = values.length;\n    let i, value;\n    for(i = 0; i < ilen; ++i){\n        value = values[i];\n        map[value] = i;\n        ticks.push({\n            value,\n            major: false\n        });\n    }\n    return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n    static id = 'time';\n static defaults = {\n bounds: 'data',\n        adapters: {},\n        time: {\n            parser: false,\n            unit: false,\n            round: false,\n            isoWeekday: false,\n            minUnit: 'millisecond',\n            displayFormats: {}\n        },\n        ticks: {\n source: 'auto',\n            callback: false,\n            major: {\n                enabled: false\n            }\n        }\n    };\n constructor(props){\n        super(props);\n         this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n         this._unit = 'day';\n         this._majorUnit = undefined;\n        this._offsets = {};\n        this._normalized = false;\n        this._parseOpts = undefined;\n    }\n    init(scaleOpts, opts = {}) {\n        const time = scaleOpts.time || (scaleOpts.time = {});\n         const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n        adapter.init(opts);\n        mergeIf(time.displayFormats, adapter.formats());\n        this._parseOpts = {\n            parser: time.parser,\n            round: time.round,\n            isoWeekday: time.isoWeekday\n        };\n        super.init(scaleOpts);\n        this._normalized = opts.normalized;\n    }\n parse(raw, index) {\n        if (raw === undefined) {\n            return null;\n        }\n        return parse(this, raw);\n    }\n    beforeLayout() {\n        super.beforeLayout();\n        this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n    }\n    determineDataLimits() {\n        const options = this.options;\n        const adapter = this._adapter;\n        const unit = options.time.unit || 'day';\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n function _applyBounds(bounds) {\n            if (!minDefined && !isNaN(bounds.min)) {\n                min = Math.min(min, bounds.min);\n            }\n            if (!maxDefined && !isNaN(bounds.max)) {\n                max = Math.max(max, bounds.max);\n            }\n        }\n        if (!minDefined || !maxDefined) {\n            _applyBounds(this._getLabelBounds());\n            if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n                _applyBounds(this.getMinMax(false));\n            }\n        }\n        min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n        max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n        this.min = Math.min(min, max - 1);\n        this.max = Math.max(min + 1, max);\n    }\n _getLabelBounds() {\n        const arr = this.getLabelTimestamps();\n        let min = Number.POSITIVE_INFINITY;\n        let max = Number.NEGATIVE_INFINITY;\n        if (arr.length) {\n            min = arr[0];\n            max = arr[arr.length - 1];\n        }\n        return {\n            min,\n            max\n        };\n    }\n buildTicks() {\n        const options = this.options;\n        const timeOpts = options.time;\n        const tickOpts = options.ticks;\n        const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n        if (options.bounds === 'ticks' && timestamps.length) {\n            this.min = this._userMin || timestamps[0];\n            this.max = this._userMax || timestamps[timestamps.length - 1];\n        }\n        const min = this.min;\n        const max = this.max;\n        const ticks = _filterBetween(timestamps, min, max);\n        this._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min)) : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n        this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined : determineMajorUnit(this._unit);\n        this.initOffsets(timestamps);\n        if (options.reverse) {\n            ticks.reverse();\n        }\n        return ticksFromTimestamps(this, ticks, this._majorUnit);\n    }\n    afterAutoSkip() {\n        if (this.options.offsetAfterAutoskip) {\n            this.initOffsets(this.ticks.map((tick)=>+tick.value));\n        }\n    }\n initOffsets(timestamps = []) {\n        let start = 0;\n        let end = 0;\n        let first, last;\n        if (this.options.offset && timestamps.length) {\n            first = this.getDecimalForValue(timestamps[0]);\n            if (timestamps.length === 1) {\n                start = 1 - first;\n            } else {\n                start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n            }\n            last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n            if (timestamps.length === 1) {\n                end = last;\n            } else {\n                end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n            }\n        }\n        const limit = timestamps.length < 3 ? 0.5 : 0.25;\n        start = _limitValue(start, 0, limit);\n        end = _limitValue(end, 0, limit);\n        this._offsets = {\n            start,\n            end,\n            factor: 1 / (start + 1 + end)\n        };\n    }\n _generate() {\n        const adapter = this._adapter;\n        const min = this.min;\n        const max = this.max;\n        const options = this.options;\n        const timeOpts = options.time;\n        const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n        const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n        const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n        const hasWeekday = isNumber(weekday) || weekday === true;\n        const ticks = {};\n        let first = min;\n        let time, count;\n        if (hasWeekday) {\n            first = +adapter.startOf(first, 'isoWeek', weekday);\n        }\n        first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n        if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n            throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n        }\n        const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n        for(time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++){\n            addTick(ticks, time, timestamps);\n        }\n        if (time === max || options.bounds === 'ticks' || count === 1) {\n            addTick(ticks, time, timestamps);\n        }\n        return Object.keys(ticks).sort((a, b)=>a - b).map((x)=>+x);\n    }\n getLabelForValue(value) {\n        const adapter = this._adapter;\n        const timeOpts = this.options.time;\n        if (timeOpts.tooltipFormat) {\n            return adapter.format(value, timeOpts.tooltipFormat);\n        }\n        return adapter.format(value, timeOpts.displayFormats.datetime);\n    }\n _tickFormatFunction(time, index, ticks, format) {\n        const options = this.options;\n        const formatter = options.ticks.callback;\n        if (formatter) {\n            return callback(formatter, [\n                time,\n                index,\n                ticks\n            ], this);\n        }\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const majorUnit = this._majorUnit;\n        const minorFormat = unit && formats[unit];\n        const majorFormat = majorUnit && formats[majorUnit];\n        const tick = ticks[index];\n        const major = majorUnit && majorFormat && tick && tick.major;\n        return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    }\n generateTickLabels(ticks) {\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            tick.label = this._tickFormatFunction(tick.value, i, ticks);\n        }\n    }\n getDecimalForValue(value) {\n        return value === null ? NaN : (value - this.min) / (this.max - this.min);\n    }\n getPixelForValue(value) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForValue(value);\n        return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return this.min + pos * (this.max - this.min);\n    }\n _getLabelSize(label) {\n        const ticksOpts = this.options.ticks;\n        const tickLabelWidth = this.ctx.measureText(label).width;\n        const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n        const cosRotation = Math.cos(angle);\n        const sinRotation = Math.sin(angle);\n        const tickFontSize = this._resolveTickFontOptions(0).size;\n        return {\n            w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n            h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n        };\n    }\n _getLabelCapacity(exampleTime) {\n        const timeOpts = this.options.time;\n        const displayFormats = timeOpts.displayFormats;\n        const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n        const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [\n            exampleTime\n        ], this._majorUnit), format);\n        const size = this._getLabelSize(exampleLabel);\n        const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n        return capacity > 0 ? capacity : 1;\n    }\n getDataTimestamps() {\n        let timestamps = this._cache.data || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const metas = this.getMatchingVisibleMetas();\n        if (this._normalized && metas.length) {\n            return this._cache.data = metas[0].controller.getAllParsedValues(this);\n        }\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n        }\n        return this._cache.data = this.normalize(timestamps);\n    }\n getLabelTimestamps() {\n        const timestamps = this._cache.labels || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const labels = this.getLabels();\n        for(i = 0, ilen = labels.length; i < ilen; ++i){\n            timestamps.push(parse(this, labels[i]));\n        }\n        return this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps);\n    }\n normalize(values) {\n        return _arrayUnique(values.sort(sorter));\n    }\n}\n\nfunction interpolate(table, val, reverse) {\n    let lo = 0;\n    let hi = table.length - 1;\n    let prevSource, nextSource, prevTarget, nextTarget;\n    if (reverse) {\n        if (val >= table[lo].pos && val <= table[hi].pos) {\n            ({ lo , hi  } = _lookupByKey(table, 'pos', val));\n        }\n        ({ pos: prevSource , time: prevTarget  } = table[lo]);\n        ({ pos: nextSource , time: nextTarget  } = table[hi]);\n    } else {\n        if (val >= table[lo].time && val <= table[hi].time) {\n            ({ lo , hi  } = _lookupByKey(table, 'time', val));\n        }\n        ({ time: prevSource , pos: prevTarget  } = table[lo]);\n        ({ time: nextSource , pos: nextTarget  } = table[hi]);\n    }\n    const span = nextSource - prevSource;\n    return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n    static id = 'timeseries';\n static defaults = TimeScale.defaults;\n constructor(props){\n        super(props);\n         this._table = [];\n         this._minPos = undefined;\n         this._tableRange = undefined;\n    }\n initOffsets() {\n        const timestamps = this._getTimestampsForTable();\n        const table = this._table = this.buildLookupTable(timestamps);\n        this._minPos = interpolate(table, this.min);\n        this._tableRange = interpolate(table, this.max) - this._minPos;\n        super.initOffsets(timestamps);\n    }\n buildLookupTable(timestamps) {\n        const { min , max  } = this;\n        const items = [];\n        const table = [];\n        let i, ilen, prev, curr, next;\n        for(i = 0, ilen = timestamps.length; i < ilen; ++i){\n            curr = timestamps[i];\n            if (curr >= min && curr <= max) {\n                items.push(curr);\n            }\n        }\n        if (items.length < 2) {\n            return [\n                {\n                    time: min,\n                    pos: 0\n                },\n                {\n                    time: max,\n                    pos: 1\n                }\n            ];\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            next = items[i + 1];\n            prev = items[i - 1];\n            curr = items[i];\n            if (Math.round((next + prev) / 2) !== curr) {\n                table.push({\n                    time: curr,\n                    pos: i / (ilen - 1)\n                });\n            }\n        }\n        return table;\n    }\n _getTimestampsForTable() {\n        let timestamps = this._cache.all || [];\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const data = this.getDataTimestamps();\n        const label = this.getLabelTimestamps();\n        if (data.length && label.length) {\n            timestamps = this.normalize(data.concat(label));\n        } else {\n            timestamps = data.length ? data : label;\n        }\n        timestamps = this._cache.all = timestamps;\n        return timestamps;\n    }\n getDecimalForValue(value) {\n        return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n    }\n}\nvar TimeSeriesScale$1 = TimeSeriesScale;\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale$1\n});\n\nconst registerables = [\n    controllers,\n    elements,\n    plugins,\n    scales, \n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart$1 as Chart, plugin_colors as Colors, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, TimeScale, TimeSeriesScale$1 as TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, elements, layouts, plugins, registerables, registry, scales };\n//# sourceMappingURL=chart.js.map\n","import {\n  Chart,\n  CategoryScale,\n  LinearScale,\n  LineController,\n  LineElement,\n  PointElement,\n  Legend,\n  Title,\n  Tooltip,\n} from \"chart.js\";\n\nChart.register(\n  CategoryScale,\n  LinearScale,\n  LineController,\n  LineElement,\n  PointElement,\n  Legend,\n  Title,\n  Tooltip\n);\n\nexport default class LineChart {\n  constructor(elem, APP) {\n    this.elem = elem;\n    this.years = [];\n    this.sectors = [];\n    this.datasets = [];\n  }\n\n  getJson(url) {\n    return new Promise((resolve, reject) => {\n      fetch(url)\n        .then((response) => {\n          return response.json();\n        })\n        .then((data) => resolve(data))\n        .catch((error) => reject(error));\n    });\n  }\n\n  setChart() {\n    const ctx = document.getElementById(\"myChart\");\n\n    new Chart(ctx, {\n      type: \"line\",\n      data: {\n        labels: this.years,\n        datasets: this.datasets,\n      },\n    });\n\n    // {\n    //   label: \"Ai / ML\",\n    //   data: [\n    //     -0.011858, 0.268, 0.690852, 0.833955, 0.366226, 0.521221,\n    //     -0.106216, 0.363089, -0.094415,\n    //   ],\n    //   borderWidth: 1,\n    //   borderColor: \"rgb(75, 0, 192)\",\n    // }\n  }\n\n  init() {\n    const json_url = `/assets/json/chart_line.json`;\n\n    this.getJson(json_url)\n      .then((data) => {\n\n        data.forEach((d) => {\n          const year_found = this.years.find((element) => element === d.YEAR);\n          const sector_found = this.sectors.find(\n            (element) => element === d.SECTOR\n          );\n\n          if (year_found === undefined) {\n            this.years.push(d.YEAR);\n          }\n\n          if (sector_found === undefined) {\n            this.sectors.push(d.SECTOR);\n          }\n        });\n\n        this.sectors.forEach((sector) => {\n          const obj = {};\n          obj.label = sector;\n          obj.data = [];\n          obj.borderWidth = 1;\n          obj.borderColor = \"rgb(75, 192, 192)\";\n\n          data.forEach((element) => {\n            if (element.SECTOR === sector) {\n              obj.data.push(element.YOY_GROWTH);\n            }\n          });\n\n          this.datasets.push(obj);\n        });\n\n        this.setChart();\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n\n  }\n}\n","import { initComponents } from \"./../utils/initComponents\";\nimport Header from \"./../components/header\";\nimport Accordion from \"./../components/accordion\";\nimport Sticky from \"./../components/sticky\";\nimport LineChart from \"../components/LineChart\";\n\nconst APP = {};\n\nAPP.helpers = {\n  initComponents: (elem) => initComponents(elem, APP),\n};\n\n/**\n * Page components\n * <elem data-component=\"<component name>\">\n */\nAPP.components = {\n  Header: (elem) => new Header(elem, APP).init(),\n  Accordion: (elem) => new Accordion(elem, APP).init(),\n  Sticky: (elem) => new Sticky(elem, APP).init(),\n  LineChart: (elem) => new LineChart(elem, APP).init(),\n};\n\nexport default APP;\n","export function initComponents(elem, APP) {\n  const jsComponents = [...elem.querySelectorAll(\"[data-component]\")];\n\n  // initialize components\n  const initComponent = (elem) => {\n    let componentList = elem.dataset.component;\n\n    if (!componentList) return;\n    componentList = componentList.split(\" \");\n\n    componentList.forEach((componentName) => {\n      if (APP.components[componentName]) {\n        const targetComponent = new APP.components[componentName](elem, APP);\n        if (targetComponent.init) {\n          targetComponent.init();\n        }\n      }\n    });\n  };\n\n  // get components\n  if (jsComponents) {\n    jsComponents.forEach((elem) => {\n      initComponent(elem);\n    });\n  }\n\n  // for body elem\n  initComponent(elem);\n}\n","import APP from \"./app/appObj\";\n\n/**\n * Get Document Ready\n */\ndocument.addEventListener(\"DOMContentLoaded\", (e) => {\n  APP.helpers.initComponents(document.body, APP);\n});\n"],"names":["t","n","Error","element","handler","this","key","e","options","Adapter","extend","defaults","adapter","callback","axis","horizontal","enabled","triggerPoint","group","Group","findOrCreate","name","context","Context","findOrCreateByElement","offsetAliases","offset","add","i","prototype","queueTrigger","trigger","apply","destroy","remove","disable","enable","refresh","next","previous","invokeAll","push","o","r","length","destroyAll","disableAll","enableAll","refreshAll","viewportHeight","window","innerHeight","document","documentElement","clientHeight","viewportWidth","clientWidth","adapters","continuous","outerHeight","innerWidth","outerWidth","Waypoint","setTimeout","didScroll","didResize","oldScroll","x","scrollLeft","y","scrollTop","waypoints","vertical","waypointContextKey","windowContext","createThrottledScrollHandler","createThrottledResizeHandler","onload","checkEmpty","isEmptyObject","off","handleResize","on","requestAnimationFrame","handleScroll","isTouch","newScroll","forward","backward","s","l","a","h","id","d","flushTriggers","contextOffset","left","contextScroll","contextDimension","offsetProp","top","p","f","c","w","g","parseFloat","indexOf","Math","ceil","floor","findByElement","mozRequestAnimationFrame","webkitRequestAnimationFrame","call","clearTriggerQueues","triggerQueues","up","down","right","sort","inArray","splice","first","last","defaultView","handlers","removeEventListener","split","ownerDocument","getBoundingClientRect","pageYOffset","clientTop","pageXOffset","clientLeft","addEventListener","getComputedStyle","parseInt","marginTop","marginBottom","marginLeft","marginRight","hasOwnProperty","Array","slice","arguments","Header","elem","APP","Accordion","triggers","querySelectorAll","panels","allowMultiple","index","waypoint","panel","panelHeight","querySelector","offsetHeight","classList","toggle","contains","style","height","setAttribute","forEach","togglePanel","targetHeight","setTriggerHandler","resizeAccordion","Sticky","barWidth","slide1Top","slide1","offsetTop","slide2Top","slide2","slide3Top","slide3","slide4Top","slide4","contentBottom","windowBottom","menuWidth","orange","width","targetDeg","targetArr","textArr","reverse","transform","pct","console","log","opacity","counts","pattern","img","copyImg","cloneNode","appendChild","setMosaics","stickyScrollHandler","noop","uid","isNullOrUndef","value","isArray","type","Object","toString","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","fn","args","thisArg","each","loopable","len","keys","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","clone$1","source","map","target","create","klen","k","isValidKey","_merger","tval","sval","merge","sources","merger","current","mergeIf","_mergerIf","keyResolvers","v","resolveObjectKey","obj","resolver","parts","tmp","part","endsWith","_splitKey","_getKeyResolver","_capitalize","str","charAt","toUpperCase","defined","isFunction","setsEqual","b","size","item","has","PI","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","almostEquals","epsilon","abs","niceNum","range","roundedRange","round","niceRange","pow","fraction","isNumber","isNaN","toRadians","degrees","_decimalPlaces","distanceBetweenPoints","pt1","pt2","sqrt","_angleDiff","_normalizeAngle","_angleBetween","angle","start","end","sameAngleIsFullCircle","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","min","max","_isBetween","_lookup","table","cmp","mid","hi","lo","_lookupByKey","ti","_rlookupByKey","arrayEvents","unlistenArrayEvents","array","listener","stub","_chartjs","listeners","requestAnimFrame","throttled","ticking","_toLeftRightCenter","align","_alignStartEnd","atEdge","elasticIn","sin","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","m","easeInOutBounce","effects$1","lim","p2b","n2b","b2n","n2p","map$1","A","B","C","D","E","F","hex","h1","h2","eq","HUE_RE","hsl2rgbn","hsv2rgbn","hwb2rgbn","rgb","rgb2hsl","hueValue","calln","hsl2rgb","hue","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","names","RGB_RE","to","from","modHSL","ratio","clone","proto","assign","fromObject","input","functionParse","exec","rgbParse","p1","p2","hwb2rgb","hsv2rgb","hueParse","Color","constructor","ret","unpacked","tkeys","j","ok","nk","replace","unpack","transparent","toLowerCase","nameParse","_rgb","_valid","valid","rgbString","undefined","hexString","isShort","alpha","hslString","mix","color","weight","c1","c2","w2","w1","interpolate","rgb1","rgb2","clearer","greyscale","val","opaquer","negate","lighten","darken","saturate","desaturate","rotate","deg","index_esm","isPatternOrGradient","getHoverColor","numbers","colors","intlCache","Map","formatNumber","num","locale","cacheKey","JSON","stringify","formatter","get","Intl","NumberFormat","set","getNumberFormat","format","formatters","values","numeric","tickValue","ticks","chart","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","remain","significand","includes","Ticks","overrides","descriptors","getScope$1","node","root","scope","Defaults","_descriptors","_appliers","animation","backgroundColor","borderColor","datasets","devicePixelRatio","platform","getDevicePixelRatio","elements","events","font","family","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","includeInvisible","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scale","scales","showLine","drawActiveElementsOnTop","describe","override","route","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","enumerable","local","appliers","_scriptable","startsWith","_indexable","_fallback","delay","duration","easing","loop","properties","active","resize","show","animations","visible","hide","autoPadding","padding","bottom","display","beginAtZero","bounds","grace","grid","lineWidth","drawOnChartArea","drawTicks","tickLength","tickWidth","_ctx","tickColor","border","dash","dashOffset","title","text","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","minor","major","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","_measureText","data","gc","longest","string","textWidth","measureText","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","clearCanvas","canvas","getContext","save","resetTransform","clearRect","restore","drawPoint","drawPointLegend","xOffset","yOffset","cornerRadius","xOffsetW","yOffsetW","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","ellipse","arc","closePath","moveTo","lineTo","SQRT1_2","rect","fill","borderWidth","stroke","_isPointInArea","point","area","margin","clipArea","clip","unclipArea","_steppedLineTo","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","renderText","opts","lines","strokeWidth","strokeColor","line","translation","fillStyle","textAlign","textBaseline","setRenderOpts","backdrop","drawBackdrop","strokeStyle","strokeText","maxWidth","fillText","decorateText","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","decorationWidth","oldColor","fillRect","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","LINE_HEIGHT","FONT_STYLE","toLineHeight","matches","match","_readValueToProps","props","objProps","read","prop","toTRBLCorners","toPadding","toTRBL","toFont","fallback","warn","toFontString","resolve","inputs","info","cacheable","createContext","parentContext","_createResolver","scopes","prefixes","rootScopes","getTarget","_resolve","cache","Symbol","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","Proxy","deleteProperty","_keys","_cached","proxy","prefix","readKey","needsSubResolver","createSubResolver","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getPrototypeOf","getKeysFromAllScopes","ownKeys","storage","_storage","_attachContext","subProxy","descriptorDefaults","_proxy","_context","_subProxy","_stack","Set","setContext","receiver","isScriptable","join","delete","_resolveScriptable","isIndexable","arr","filter","_resolveArray","_resolveWithContext","allKeys","configurable","scriptable","indexable","_allKeys","resolveFallback","getScope","parent","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","EPSILON","getPoint","points","skip","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","d01","d12","s01","s12","fa","fb","capControlPoint","pt","_updateBezierControlPoints","controlPoints","spanGaps","cubicInterpolationMode","valueAxis","pointsLen","deltaK","mK","pointBefore","pointCurrent","pointAfter","slopeDelta","alphaK","betaK","tauK","squaredMagnitude","monotoneAdjust","iPixel","vPixel","monotoneCompute","splineCurveMonotone","prev","tension","capBezierPoints","inArea","inAreaPrev","inAreaNext","_isDomSupported","_getParentNode","domNode","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","positions","getPositionedStyle","styles","suffix","result","pos","getRelativePosition","event","borderBox","boxSizing","paddings","borders","box","touches","offsetX","offsetY","shadowRoot","useOffsetPos","clientX","clientY","getCanvasPosition","round1","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","readUsedSize","property","el","getPropertyValue","getStyle","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","getRtlAdapter","rtl","rectX","setWidth","xPlus","leftForLtr","itemWidth","getRightToLeftAdapter","_itemWidth","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","propertyFn","between","compare","normalize","normalizeSegment","count","_boundSegment","segment","startBound","endBound","getSegment","prevValue","inside","subStart","readStyle","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","styleChanged","prevStyle","Animator","_request","_charts","_running","_lastDate","_notify","anims","date","callbacks","numSteps","initial","currentStep","_refresh","_update","Date","now","remaining","running","items","draw","_active","_total","tick","pop","_getAnims","charts","complete","progress","listen","cb","reduce","acc","cur","_duration","stop","cancel","animator","interpolators","boolean","factor","c0","number","Animation","cfg","currentValue","_fn","_easing","_start","_loop","_target","_prop","_from","_to","_promises","update","elapsed","wait","promises","Promise","res","rej","resolved","method","Animations","config","_chart","_properties","configure","animationOptions","animatedProps","getOwnPropertyNames","option","_animateOptions","newOptions","$shared","$animations","resolveTargetOptions","_createAnimations","anim","all","awaitAll","then","scaleClip","allowedOverflow","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","applyStack","stack","dsIndex","singleMode","otherValue","isStacked","meta","stacked","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","parsed","_cachedMeta","_stacks","iScale","iAxis","vAxis","indexScale","valueScale","getStackKey","_top","_bottom","getFirstScaleId","shift","clearStacks","_parsed","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","static","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","dataElementType","initialize","linkScales","_stacked","addElements","isPluginEnabled","updateIndex","dataset","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","xScale","getScaleForId","yScale","rScale","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","_dataCheck","adata","convertObjectDataToArray","isExtensible","defineProperty","base","object","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","parse","sorted","_sorted","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","parsedValue","NaN","getMinMax","canStack","otherScale","hidden","createStack","NEGATIVE_INFINITY","otherMin","otherMax","minDefined","maxDefined","getUserBounds","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","disabled","toClip","defaultClip","chartArea","resolveDatasetElementOptions","resolveDataElementOptions","dataIndex","raw","createDataContext","createDatasetContext","_resolveElementOptions","elementType","sharing","datasetElementScopeKeys","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_sync","_dataChanges","_onDataPush","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","binarySearch","metaset","lookupMethod","_reversePixels","getRange","evaluateInteractionItems","position","getSortedVisibleDatasetMetas","getIntersectItems","useFinalPosition","isPointInArea","inRange","getNearestItems","distanceMetric","useX","useY","deltaX","deltaY","getDistanceMetricForAxis","minDistance","center","getCenterPoint","distance","getNearestCartesianItems","startAngle","endAngle","getProps","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","atan2","getAngleFromPoint","getNearestRadialItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","params","layout","getPadding","newWidth","newHeight","widthChanged","heightChanged","same","other","getMargins","marginForPositions","fitBoxes","boxes","refitBoxes","refit","changed","fullSize","setBoxDims","placeBoxes","userPadding","placed","stackWeight","height1","width1","layouts","addBox","_layers","z","removeBox","layoutItem","minPadding","availableWidth","availableHeight","layoutBoxes","isHorizontal","wrapBoxes","wrap","centerHorizontal","centerVertical","leftAndTop","concat","rightAndBottom","buildLayoutBoxes","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","total","vBoxMaxWidth","hBoxMaxHeight","buildStacks","setLayoutDims","updatePos","change","handleMaxPadding","BasePlatform","acquireContext","aspectRatio","releaseContext","getMaximumSize","isAttached","updateConfig","BasicPlatform","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","removeListener","nodeListContains","nodeList","createAttachObserver","observer","MutationObserver","entries","entry","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","createResizeObserver","container","ResizeObserver","contentRect","listenDevicePixelRatioChanges","releaseObserver","disconnect","unlistenDevicePixelRatioChanges","createProxyAndListen","native","fromNativeEvent","addListener","DomPlatform","renderHeight","getAttribute","renderWidth","displayWidth","displayHeight","initCanvas","removeAttribute","proxies","$proxies","attach","detach","bbWidth","bbHeight","margins","maxHeight","containerSize","containerStyle","containerBorder","containerPadding","getContainerSize","isConnected","Element","tooltipPosition","hasValue","final","newTicks","spacing","majorStart","majorEnd","offsetFromEdge","edge","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","_startPixel","_endPixel","lineValue","getPixelForTick","getTickMarkLength","getTitleHeight","titleAlign","reverseAlign","Scale","super","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_length","_maxLength","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_cache","_dataLimitsCached","init","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","beforeUpdate","tickOpts","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","minmax","dimension","keepZero","_addGrace","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","determinedMaxTicks","_tickSize","maxScale","maxChart","determineMaxTicks","ticksLimit","maxTicksLimit","majorIndices","getMajorIndices","numMajorIndices","skipMajors","evenMajorSpacing","diff","getEvenSpacing","factors","_factorize","calculateSpacing","avgMajorSpacing","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","startPixel","endPixel","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","minSize","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","caches","widths","heights","jlen","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","gcLen","garbageCollect","valueAt","idx","getPixelForValue","getValueForPixel","getPixelForDecimal","decimal","getDecimalForPixel","getBasePixel","getBaseValue","createTickContext","optionTicks","rot","_computeGridLineItems","ticksLength","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","positionAxisID","positionAxisID1","value1","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","tickBorderDash","tickBorderDashOffset","_computeLabelItems","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","ret1","halfCount","tickTextAlign","labelPadding","_computeLabelArea","drawBackground","getLineWidthForValue","findIndex","drawGrid","drawLine","setLineDash","lineDashOffset","drawBorder","lastLineWidth","drawLabels","drawTitle","titleX","titleY","titleArgs","tz","gz","bz","axisID","_maxDigits","fontSize","TypedRegistry","isForType","isPrototypeOf","register","parentScope","isIChartComponent","itemDefaults","defaultRoutes","routes","propertyParts","sourceName","sourceScope","routeDefaults","registerDefaults","unregister","Registry","controllers","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getElement","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","registry","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","localIds","i1","allPlugins","getOpts","pluginOpts","createDescriptors","previousDescriptors","some","pluginScopeKeys","getIndexAxis","datasetDefaults","determineAxis","scaleOptions","initOptions","chartDefaults","configScales","chartIndexAxis","scaleConf","error","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","defaultID","getAxisFromDefaultScaleID","mergeScaleConfig","initData","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","initConfig","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","subPrefixes","getResolver","hasFunction","needContext","resolverCache","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","Chart","invalidatePlugins","userConfig","initialCanvas","existingChart","OffscreenCanvas","_detectPlatform","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","timeout","clearTimeout","debounce","resizeDelay","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","_dataset","buildOrUpdateControllers","newControllers","order","isDatasetVisible","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","ilen1","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getDatasetArea","getElementsAtEventForMode","getVisibleDatasetCount","setDatasetVisibility","toggleDataVisibility","getDataVisibility","_updateVisibility","_stop","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","getActiveElements","setActiveElements","activeElements","lastActive","pluginId","replay","hoverOptions","deactivated","activated","inChartArea","eventFilter","_handleEvent","_getActiveElements","isClick","_isClickEvent","lastEvent","determineLastEvent","Chart$1","setStyle","lineCap","lineJoin","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","stepped","getLineMethod","fastPathSegment","prevX","minY","maxY","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","_decimated","usePath2D","Path2D","inRange$1","hitRadius","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","generateLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","legendItem","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","legendItemText","calculateItemWidth","fontLineHeight","calculateLegendItemHeight","calculateItemHeight","calculateItemSize","adjustHitBoxes","rtlHelper","hitbox","hitbox1","_draw","defaultColor","halfFontSize","cursor","textDirection","fontColor","lineDash","drawOptions","SQRT2","centerX","yBoxTop","xBoxLeft","borderRadius","drawLegendBox","_textX","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","onLeave","isListened","hoveredItem","sameItem","plugin_legend","_element","_args","legend","afterEvent","ci","useBorderRadius","Title","_padding","textSize","_drawArgs","fontOpts","plugin_title","titleBlock","createTitle","WeakMap","positioners","average","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineXAlign","yAlign","chartWidth","xAlign","caret","caretSize","caretPadding","doesNotFitWithAlign","determineAlignment","determineYAlign","getBackgroundPoint","alignment","paddingAndSize","alignX","alignY","getAlignedX","getBeforeAfterBodyLines","overrideCallbacks","defaultCallbacks","beforeTitle","tooltipItems","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","centerY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","afterInit","afterDraw","_getLabelForValue","relativeLabelSize","minSpacing","LinearScaleBase","_startValue","_endValue","_valueRange","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","maxTicks","stepSize","computeTickLimit","generationOptions","dataRange","precision","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","niceMin","niceMax","numSpaces","rounded","almostWhole","decimalPlaces","generateTicks$1","_setMinAndMaxByKey","LinearScale","_addedLabels","added","addedLabels","unshift","addIfString","lastIndexOf","findOrAddLabel","_index_","_value_","animationsDisabled","pointCount","_getStartAndCountOfVisiblePoints","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","_scaleRangesChanged","_datasetIndex","animated","maxGapLength","directUpdate","pointsCount","prevParsed","nullData","lastPoint","updateControlPoints","_fullLoop","_path","_points","_segments","_pointsUpdated","segments","segmentOptions","findStartAndEnd","chartContext","baseStyle","addStyle","st","dir","p0","p0DataIndex","p1DataIndex","doSplitByStyles","splitByStyles","solidSegments","_computeSegments","sub","_boundSegments","_interpolate","_getInterpolationMethod","interpolated","segmentMethod","path","strokePathWithCache","strokePathDirect","hoverBorderWidth","hoverRadius","mouseX","mouseY","inXRange","inYRange","LineChart","years","sectors","url","reject","fetch","response","json","getJson","year_found","find","YEAR","sector_found","SECTOR","sector","YOY_GROWTH","setChart","helpers","initComponents","jsComponents","initComponent","componentList","componentName","components","targetComponent"],"sourceRoot":""}