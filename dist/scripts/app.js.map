{"version":3,"file":"app.js","mappings":"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","sources":["webpack://component-library/./node_modules/ev-emitter/ev-emitter.js","webpack://component-library/./node_modules/fizzy-ui-utils/utils.js","webpack://component-library/./node_modules/flickity/js/add-remove-cell.js","webpack://component-library/./node_modules/flickity/js/animate.js","webpack://component-library/./node_modules/flickity/js/cell.js","webpack://component-library/./node_modules/flickity/js/core.js","webpack://component-library/./node_modules/flickity/js/drag.js","webpack://component-library/./node_modules/flickity/js/imagesloaded.js","webpack://component-library/./node_modules/flickity/js/index.js","webpack://component-library/./node_modules/flickity/js/lazyload.js","webpack://component-library/./node_modules/flickity/js/page-dots.js","webpack://component-library/./node_modules/flickity/js/player.js","webpack://component-library/./node_modules/flickity/js/prev-next-button.js","webpack://component-library/./node_modules/flickity/js/slide.js","webpack://component-library/./node_modules/get-size/get-size.js","webpack://component-library/./node_modules/imagesloaded/imagesloaded.js","webpack://component-library/./node_modules/unidragger/unidragger.js","webpack://component-library/webpack/bootstrap","webpack://component-library/webpack/runtime/compat get default export","webpack://component-library/webpack/runtime/define property getters","webpack://component-library/webpack/runtime/hasOwnProperty shorthand","webpack://component-library/./app/scripts/vendors/noframework.waypoints.min.js","webpack://component-library/./app/scripts/components/Header.js","webpack://component-library/./app/scripts/components/Accordion.js","webpack://component-library/./app/scripts/components/Tab.js","webpack://component-library/./app/scripts/components/Modal.js","webpack://component-library/./app/scripts/utils/a11y.js","webpack://component-library/./app/scripts/components/Filter.js","webpack://component-library/./app/scripts/components/Carousel.js","webpack://component-library/./app/scripts/utils/flickity.js","webpack://component-library/./app/scripts/utils/charty.js","webpack://component-library/./node_modules/chart.js/dist/chunks/helpers.segment.js","webpack://component-library/./node_modules/chart.js/dist/chart.js","webpack://component-library/./app/scripts/components/Charty.js","webpack://component-library/./app/scripts/app/appObj.js","webpack://component-library/./app/scripts/utils/initComponents.js","webpack://component-library/./app/scripts/app.js"],"sourcesContent":["/**\n * EvEmitter v2.1.1\n * Lil' event emitter\n * MIT License\n */\n\n( function( global, factory ) {\n  // universal module definition\n  if ( typeof module == 'object' && module.exports ) {\n    // CommonJS - Browserify, Webpack\n    module.exports = factory();\n  } else {\n    // Browser globals\n    global.EvEmitter = factory();\n  }\n\n}( typeof window != 'undefined' ? window : this, function() {\n\nfunction EvEmitter() {}\n\nlet proto = EvEmitter.prototype;\n\nproto.on = function( eventName, listener ) {\n  if ( !eventName || !listener ) return this;\n\n  // set events hash\n  let events = this._events = this._events || {};\n  // set listeners array\n  let listeners = events[ eventName ] = events[ eventName ] || [];\n  // only add once\n  if ( !listeners.includes( listener ) ) {\n    listeners.push( listener );\n  }\n\n  return this;\n};\n\nproto.once = function( eventName, listener ) {\n  if ( !eventName || !listener ) return this;\n\n  // add event\n  this.on( eventName, listener );\n  // set once flag\n  // set onceEvents hash\n  let onceEvents = this._onceEvents = this._onceEvents || {};\n  // set onceListeners object\n  let onceListeners = onceEvents[ eventName ] = onceEvents[ eventName ] || {};\n  // set flag\n  onceListeners[ listener ] = true;\n\n  return this;\n};\n\nproto.off = function( eventName, listener ) {\n  let listeners = this._events && this._events[ eventName ];\n  if ( !listeners || !listeners.length ) return this;\n\n  let index = listeners.indexOf( listener );\n  if ( index != -1 ) {\n    listeners.splice( index, 1 );\n  }\n\n  return this;\n};\n\nproto.emitEvent = function( eventName, args ) {\n  let listeners = this._events && this._events[ eventName ];\n  if ( !listeners || !listeners.length ) return this;\n\n  // copy over to avoid interference if .off() in listener\n  listeners = listeners.slice( 0 );\n  args = args || [];\n  // once stuff\n  let onceListeners = this._onceEvents && this._onceEvents[ eventName ];\n\n  for ( let listener of listeners ) {\n    let isOnce = onceListeners && onceListeners[ listener ];\n    if ( isOnce ) {\n      // remove listener\n      // remove before trigger to prevent recursion\n      this.off( eventName, listener );\n      // unset once flag\n      delete onceListeners[ listener ];\n    }\n    // trigger listener\n    listener.apply( this, args );\n  }\n\n  return this;\n};\n\nproto.allOff = function() {\n  delete this._events;\n  delete this._onceEvents;\n  return this;\n};\n\nreturn EvEmitter;\n\n} ) );\n","/**\n * Fizzy UI utils v3.0.0\n * MIT license\n */\n\n( function( global, factory ) {\n  // universal module definition\n  if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory( global );\n  } else {\n    // browser global\n    global.fizzyUIUtils = factory( global );\n  }\n\n}( this, function factory( global ) {\n\nlet utils = {};\n\n// ----- extend ----- //\n\n// extends objects\nutils.extend = function( a, b ) {\n  return Object.assign( a, b );\n};\n\n// ----- modulo ----- //\n\nutils.modulo = function( num, div ) {\n  return ( ( num % div ) + div ) % div;\n};\n\n// ----- makeArray ----- //\n\n// turn element or nodeList into an array\nutils.makeArray = function( obj ) {\n  // use object if already an array\n  if ( Array.isArray( obj ) ) return obj;\n\n  // return empty array if undefined or null. #6\n  if ( obj === null || obj === undefined ) return [];\n\n  let isArrayLike = typeof obj == 'object' && typeof obj.length == 'number';\n  // convert nodeList to array\n  if ( isArrayLike ) return [ ...obj ];\n\n  // array of single index\n  return [ obj ];\n};\n\n// ----- removeFrom ----- //\n\nutils.removeFrom = function( ary, obj ) {\n  let index = ary.indexOf( obj );\n  if ( index != -1 ) {\n    ary.splice( index, 1 );\n  }\n};\n\n// ----- getParent ----- //\n\nutils.getParent = function( elem, selector ) {\n  while ( elem.parentNode && elem != document.body ) {\n    elem = elem.parentNode;\n    if ( elem.matches( selector ) ) return elem;\n  }\n};\n\n// ----- getQueryElement ----- //\n\n// use element as selector string\nutils.getQueryElement = function( elem ) {\n  if ( typeof elem == 'string' ) {\n    return document.querySelector( elem );\n  }\n  return elem;\n};\n\n// ----- handleEvent ----- //\n\n// enable .ontype to trigger from .addEventListener( elem, 'type' )\nutils.handleEvent = function( event ) {\n  let method = 'on' + event.type;\n  if ( this[ method ] ) {\n    this[ method ]( event );\n  }\n};\n\n// ----- filterFindElements ----- //\n\nutils.filterFindElements = function( elems, selector ) {\n  // make array of elems\n  elems = utils.makeArray( elems );\n\n  return elems\n    // check that elem is an actual element\n    .filter( ( elem ) => elem instanceof HTMLElement )\n    .reduce( ( ffElems, elem ) => {\n      // add elem if no selector\n      if ( !selector ) {\n        ffElems.push( elem );\n        return ffElems;\n      }\n      // filter & find items if we have a selector\n      // filter\n      if ( elem.matches( selector ) ) {\n        ffElems.push( elem );\n      }\n      // find children\n      let childElems = elem.querySelectorAll( selector );\n      // concat childElems to filterFound array\n      ffElems = ffElems.concat( ...childElems );\n      return ffElems;\n    }, [] );\n};\n\n// ----- debounceMethod ----- //\n\nutils.debounceMethod = function( _class, methodName, threshold ) {\n  threshold = threshold || 100;\n  // original method\n  let method = _class.prototype[ methodName ];\n  let timeoutName = methodName + 'Timeout';\n\n  _class.prototype[ methodName ] = function() {\n    clearTimeout( this[ timeoutName ] );\n\n    let args = arguments;\n    this[ timeoutName ] = setTimeout( () => {\n      method.apply( this, args );\n      delete this[ timeoutName ];\n    }, threshold );\n  };\n};\n\n// ----- docReady ----- //\n\nutils.docReady = function( onDocReady ) {\n  let readyState = document.readyState;\n  if ( readyState == 'complete' || readyState == 'interactive' ) {\n    // do async to allow for other scripts to run. metafizzy/flickity#441\n    setTimeout( onDocReady );\n  } else {\n    document.addEventListener( 'DOMContentLoaded', onDocReady );\n  }\n};\n\n// ----- htmlInit ----- //\n\n// http://bit.ly/3oYLusc\nutils.toDashed = function( str ) {\n  return str.replace( /(.)([A-Z])/g, function( match, $1, $2 ) {\n    return $1 + '-' + $2;\n  } ).toLowerCase();\n};\n\nlet console = global.console;\n\n// allow user to initialize classes via [data-namespace] or .js-namespace class\n// htmlInit( Widget, 'widgetName' )\n// options are parsed from data-namespace-options\nutils.htmlInit = function( WidgetClass, namespace ) {\n  utils.docReady( function() {\n    let dashedNamespace = utils.toDashed( namespace );\n    let dataAttr = 'data-' + dashedNamespace;\n    let dataAttrElems = document.querySelectorAll( `[${dataAttr}]` );\n    let jQuery = global.jQuery;\n\n    [ ...dataAttrElems ].forEach( ( elem ) => {\n      let attr = elem.getAttribute( dataAttr );\n      let options;\n      try {\n        options = attr && JSON.parse( attr );\n      } catch ( error ) {\n        // log error, do not initialize\n        if ( console ) {\n          console.error( `Error parsing ${dataAttr} on ${elem.className}: ${error}` );\n        }\n        return;\n      }\n      // initialize\n      let instance = new WidgetClass( elem, options );\n      // make available via $().data('namespace')\n      if ( jQuery ) {\n        jQuery.data( elem, namespace, instance );\n      }\n    } );\n\n  } );\n};\n\n// -----  ----- //\n\nreturn utils;\n\n} ) );\n","// add, remove cell\n( function( window, factory ) {\n  // universal module definition\n  if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory(\n        require('./core'),\n        require('fizzy-ui-utils'),\n    );\n  } else {\n    // browser global\n    factory(\n        window.Flickity,\n        window.fizzyUIUtils,\n    );\n  }\n\n}( typeof window != 'undefined' ? window : this, function factory( Flickity, utils ) {\n\n// append cells to a document fragment\nfunction getCellsFragment( cells ) {\n  let fragment = document.createDocumentFragment();\n  cells.forEach( ( cell ) => fragment.appendChild( cell.element ) );\n  return fragment;\n}\n\n// -------------------------- add/remove cell prototype -------------------------- //\n\nlet proto = Flickity.prototype;\n\n/**\n * Insert, prepend, or append cells\n * @param {[Element, Array, NodeList]} elems - Elements to insert\n * @param {Integer} index - Zero-based number to insert\n */\nproto.insert = function( elems, index ) {\n  let cells = this._makeCells( elems );\n  if ( !cells || !cells.length ) return;\n\n  let len = this.cells.length;\n  // default to append\n  index = index === undefined ? len : index;\n  // add cells with document fragment\n  let fragment = getCellsFragment( cells );\n  // append to slider\n  let isAppend = index === len;\n  if ( isAppend ) {\n    this.slider.appendChild( fragment );\n  } else {\n    let insertCellElement = this.cells[ index ].element;\n    this.slider.insertBefore( fragment, insertCellElement );\n  }\n  // add to this.cells\n  if ( index === 0 ) {\n    // prepend, add to start\n    this.cells = cells.concat( this.cells );\n  } else if ( isAppend ) {\n    // append, add to end\n    this.cells = this.cells.concat( cells );\n  } else {\n    // insert in this.cells\n    let endCells = this.cells.splice( index, len - index );\n    this.cells = this.cells.concat( cells ).concat( endCells );\n  }\n\n  this._sizeCells( cells );\n  this.cellChange( index );\n  this.positionSliderAtSelected();\n};\n\nproto.append = function( elems ) {\n  this.insert( elems, this.cells.length );\n};\n\nproto.prepend = function( elems ) {\n  this.insert( elems, 0 );\n};\n\n/**\n * Remove cells\n * @param {[Element, Array, NodeList]} elems - ELements to remove\n */\nproto.remove = function( elems ) {\n  let cells = this.getCells( elems );\n  if ( !cells || !cells.length ) return;\n\n  let minCellIndex = this.cells.length - 1;\n  // remove cells from collection & DOM\n  cells.forEach( ( cell ) => {\n    cell.remove();\n    let index = this.cells.indexOf( cell );\n    minCellIndex = Math.min( index, minCellIndex );\n    utils.removeFrom( this.cells, cell );\n  } );\n\n  this.cellChange( minCellIndex );\n  this.positionSliderAtSelected();\n};\n\n/**\n * logic to be run after a cell's size changes\n * @param {Element} elem - cell's element\n */\nproto.cellSizeChange = function( elem ) {\n  let cell = this.getCell( elem );\n  if ( !cell ) return;\n\n  cell.getSize();\n\n  let index = this.cells.indexOf( cell );\n  this.cellChange( index );\n  // do not position slider after lazy load\n};\n\n/**\n * logic any time a cell is changed: added, removed, or size changed\n * @param {Integer} changedCellIndex - index of the changed cell, optional\n */\nproto.cellChange = function( changedCellIndex ) {\n  let prevSelectedElem = this.selectedElement;\n  this._positionCells( changedCellIndex );\n  this._updateWrapShiftCells();\n  this.setGallerySize();\n  // update selectedIndex, try to maintain position & select previous selected element\n  let cell = this.getCell( prevSelectedElem );\n  if ( cell ) this.selectedIndex = this.getCellSlideIndex( cell );\n  this.selectedIndex = Math.min( this.slides.length - 1, this.selectedIndex );\n\n  this.emitEvent( 'cellChange', [ changedCellIndex ] );\n  // position slider\n  this.select( this.selectedIndex );\n};\n\n// -----  ----- //\n\nreturn Flickity;\n\n} ) );\n","// animate\n( function( window, factory ) {\n  // universal module definition\n  if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory( require('fizzy-ui-utils') );\n  } else {\n    // browser global\n    window.Flickity = window.Flickity || {};\n    window.Flickity.animatePrototype = factory( window.fizzyUIUtils );\n  }\n\n}( typeof window != 'undefined' ? window : this, function factory( utils ) {\n\n// -------------------------- animate -------------------------- //\n\nlet proto = {};\n\nproto.startAnimation = function() {\n  if ( this.isAnimating ) return;\n\n  this.isAnimating = true;\n  this.restingFrames = 0;\n  this.animate();\n};\n\nproto.animate = function() {\n  this.applyDragForce();\n  this.applySelectedAttraction();\n\n  let previousX = this.x;\n\n  this.integratePhysics();\n  this.positionSlider();\n  this.settle( previousX );\n  // animate next frame\n  if ( this.isAnimating ) requestAnimationFrame( () => this.animate() );\n};\n\nproto.positionSlider = function() {\n  let x = this.x;\n  // wrap position around\n  if ( this.isWrapping ) {\n    x = utils.modulo( x, this.slideableWidth ) - this.slideableWidth;\n    this.shiftWrapCells( x );\n  }\n\n  this.setTranslateX( x, this.isAnimating );\n  this.dispatchScrollEvent();\n};\n\nproto.setTranslateX = function( x, is3d ) {\n  x += this.cursorPosition;\n  // reverse if right-to-left and using transform\n  if ( this.options.rightToLeft ) x = -x;\n  let translateX = this.getPositionValue( x );\n  // use 3D transforms for hardware acceleration on iOS\n  // but use 2D when settled, for better font-rendering\n  this.slider.style.transform = is3d ?\n    `translate3d(${translateX},0,0)` : `translateX(${translateX})`;\n};\n\nproto.dispatchScrollEvent = function() {\n  let firstSlide = this.slides[0];\n  if ( !firstSlide ) return;\n\n  let positionX = -this.x - firstSlide.target;\n  let progress = positionX / this.slidesWidth;\n  this.dispatchEvent( 'scroll', null, [ progress, positionX ] );\n};\n\nproto.positionSliderAtSelected = function() {\n  if ( !this.cells.length ) return;\n\n  this.x = -this.selectedSlide.target;\n  this.velocity = 0; // stop wobble\n  this.positionSlider();\n};\n\nproto.getPositionValue = function( position ) {\n  if ( this.options.percentPosition ) {\n    // percent position, round to 2 digits, like 12.34%\n    return ( Math.round( ( position / this.size.innerWidth ) * 10000 ) * 0.01 ) + '%';\n  } else {\n    // pixel positioning\n    return Math.round( position ) + 'px';\n  }\n};\n\nproto.settle = function( previousX ) {\n  // keep track of frames where x hasn't moved\n  let isResting = !this.isPointerDown &&\n      Math.round( this.x * 100 ) === Math.round( previousX * 100 );\n  if ( isResting ) this.restingFrames++;\n  // stop animating if resting for 3 or more frames\n  if ( this.restingFrames > 2 ) {\n    this.isAnimating = false;\n    delete this.isFreeScrolling;\n    // render position with translateX when settled\n    this.positionSlider();\n    this.dispatchEvent( 'settle', null, [ this.selectedIndex ] );\n  }\n};\n\nproto.shiftWrapCells = function( x ) {\n  // shift before cells\n  let beforeGap = this.cursorPosition + x;\n  this._shiftCells( this.beforeShiftCells, beforeGap, -1 );\n  // shift after cells\n  let afterGap = this.size.innerWidth - ( x + this.slideableWidth + this.cursorPosition );\n  this._shiftCells( this.afterShiftCells, afterGap, 1 );\n};\n\nproto._shiftCells = function( cells, gap, shift ) {\n  cells.forEach( ( cell ) => {\n    let cellShift = gap > 0 ? shift : 0;\n    this._wrapShiftCell( cell, cellShift );\n    gap -= cell.size.outerWidth;\n  } );\n};\n\nproto._unshiftCells = function( cells ) {\n  if ( !cells || !cells.length ) return;\n\n  cells.forEach( ( cell ) => this._wrapShiftCell( cell, 0 ) );\n};\n\n// @param {Integer} shift - 0, 1, or -1\nproto._wrapShiftCell = function( cell, shift ) {\n  this._renderCellPosition( cell, cell.x + this.slideableWidth * shift );\n};\n\n// -------------------------- physics -------------------------- //\n\nproto.integratePhysics = function() {\n  this.x += this.velocity;\n  this.velocity *= this.getFrictionFactor();\n};\n\nproto.applyForce = function( force ) {\n  this.velocity += force;\n};\n\nproto.getFrictionFactor = function() {\n  return 1 - this.options[ this.isFreeScrolling ? 'freeScrollFriction' : 'friction' ];\n};\n\nproto.getRestingPosition = function() {\n  // my thanks to Steven Wittens, who simplified this math greatly\n  return this.x + this.velocity / ( 1 - this.getFrictionFactor() );\n};\n\nproto.applyDragForce = function() {\n  if ( !this.isDraggable || !this.isPointerDown ) return;\n\n  // change the position to drag position by applying force\n  let dragVelocity = this.dragX - this.x;\n  let dragForce = dragVelocity - this.velocity;\n  this.applyForce( dragForce );\n};\n\nproto.applySelectedAttraction = function() {\n  // do not attract if pointer down or no slides\n  let dragDown = this.isDraggable && this.isPointerDown;\n  if ( dragDown || this.isFreeScrolling || !this.slides.length ) return;\n\n  let distance = this.selectedSlide.target * -1 - this.x;\n  let force = distance * this.options.selectedAttraction;\n  this.applyForce( force );\n};\n\nreturn proto;\n\n} ) );\n","// Flickity.Cell\n( function( window, factory ) {\n  // universal module definition\n  if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory( require('get-size') );\n  } else {\n    // browser global\n    window.Flickity = window.Flickity || {};\n    window.Flickity.Cell = factory( window.getSize );\n  }\n\n}( typeof window != 'undefined' ? window : this, function factory( getSize ) {\n\nconst cellClassName = 'flickity-cell';\n\nfunction Cell( elem ) {\n  this.element = elem;\n  this.element.classList.add( cellClassName );\n\n  this.x = 0;\n  this.unselect();\n}\n\nlet proto = Cell.prototype;\n\nproto.destroy = function() {\n  // reset style\n  this.unselect();\n  this.element.classList.remove( cellClassName );\n  this.element.style.transform = '';\n  this.element.removeAttribute('aria-hidden');\n};\n\nproto.getSize = function() {\n  this.size = getSize( this.element );\n};\n\nproto.select = function() {\n  this.element.classList.add('is-selected');\n  this.element.removeAttribute('aria-hidden');\n};\n\nproto.unselect = function() {\n  this.element.classList.remove('is-selected');\n  this.element.setAttribute( 'aria-hidden', 'true' );\n};\n\nproto.remove = function() {\n  this.element.remove();\n};\n\nreturn Cell;\n\n} ) );\n","// Flickity main\n/* eslint-disable max-params */\n( function( window, factory ) {\n  // universal module definition\n  if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory(\n        window,\n        require('ev-emitter'),\n        require('get-size'),\n        require('fizzy-ui-utils'),\n        require('./cell'),\n        require('./slide'),\n        require('./animate'),\n    );\n  } else {\n    // browser global\n    let _Flickity = window.Flickity;\n\n    window.Flickity = factory(\n        window,\n        window.EvEmitter,\n        window.getSize,\n        window.fizzyUIUtils,\n        _Flickity.Cell,\n        _Flickity.Slide,\n        _Flickity.animatePrototype,\n    );\n  }\n\n}( typeof window != 'undefined' ? window : this,\n    function factory( window, EvEmitter, getSize, utils, Cell, Slide, animatePrototype ) {\n/* eslint-enable max-params */\n\n// vars\nconst { getComputedStyle, console } = window;\nlet { jQuery } = window;\n\n// -------------------------- Flickity -------------------------- //\n\n// globally unique identifiers\nlet GUID = 0;\n// internal store of all Flickity intances\nlet instances = {};\n\nfunction Flickity( element, options ) {\n  let queryElement = utils.getQueryElement( element );\n  if ( !queryElement ) {\n    if ( console ) console.error(`Bad element for Flickity: ${queryElement || element}`);\n    return;\n  }\n  this.element = queryElement;\n  // do not initialize twice on same element\n  if ( this.element.flickityGUID ) {\n    let instance = instances[ this.element.flickityGUID ];\n    if ( instance ) instance.option( options );\n    return instance;\n  }\n\n  // add jQuery\n  if ( jQuery ) {\n    this.$element = jQuery( this.element );\n  }\n  // options\n  this.options = { ...this.constructor.defaults };\n  this.option( options );\n\n  // kick things off\n  this._create();\n}\n\nFlickity.defaults = {\n  accessibility: true,\n  // adaptiveHeight: false,\n  cellAlign: 'center',\n  // cellSelector: undefined,\n  // contain: false,\n  freeScrollFriction: 0.075, // friction when free-scrolling\n  friction: 0.28, // friction when selecting\n  namespaceJQueryEvents: true,\n  // initialIndex: 0,\n  percentPosition: true,\n  resize: true,\n  selectedAttraction: 0.025,\n  setGallerySize: true,\n  // watchCSS: false,\n  // wrapAround: false\n};\n\n// hash of methods triggered on _create()\nFlickity.create = {};\n\nlet proto = Flickity.prototype;\n// inherit EventEmitter\nObject.assign( proto, EvEmitter.prototype );\n\nproto._create = function() {\n  let { resize, watchCSS, rightToLeft } = this.options;\n  // add id for Flickity.data\n  let id = this.guid = ++GUID;\n  this.element.flickityGUID = id; // expando\n  instances[ id ] = this; // associate via id\n  // initial properties\n  this.selectedIndex = 0;\n  // how many frames slider has been in same position\n  this.restingFrames = 0;\n  // initial physics properties\n  this.x = 0;\n  this.velocity = 0;\n  this.beginMargin = rightToLeft ? 'marginRight' : 'marginLeft';\n  this.endMargin = rightToLeft ? 'marginLeft' : 'marginRight';\n  // create viewport & slider\n  this.viewport = document.createElement('div');\n  this.viewport.className = 'flickity-viewport';\n  this._createSlider();\n  // used for keyboard navigation\n  this.focusableElems = [ this.element ];\n\n  if ( resize || watchCSS ) {\n    window.addEventListener( 'resize', this );\n  }\n\n  // add listeners from on option\n  for ( let eventName in this.options.on ) {\n    let listener = this.options.on[ eventName ];\n    this.on( eventName, listener );\n  }\n\n  for ( let method in Flickity.create ) {\n    Flickity.create[ method ].call( this );\n  }\n\n  if ( watchCSS ) {\n    this.watchCSS();\n  } else {\n    this.activate();\n  }\n};\n\n/**\n * set options\n * @param {Object} opts - options to extend\n */\nproto.option = function( opts ) {\n  Object.assign( this.options, opts );\n};\n\nproto.activate = function() {\n  if ( this.isActive ) return;\n\n  this.isActive = true;\n  this.element.classList.add('flickity-enabled');\n  if ( this.options.rightToLeft ) {\n    this.element.classList.add('flickity-rtl');\n  }\n\n  this.getSize();\n  // move initial cell elements so they can be loaded as cells\n  let cellElems = this._filterFindCellElements( this.element.children );\n  this.slider.append( ...cellElems );\n  this.viewport.append( this.slider );\n  this.element.append( this.viewport );\n  // get cells from children\n  this.reloadCells();\n\n  if ( this.options.accessibility ) {\n    // allow element to focusable\n    this.element.tabIndex = 0;\n    // listen for key presses\n    this.element.addEventListener( 'keydown', this );\n  }\n\n  this.emitEvent('activate');\n  this.selectInitialIndex();\n  // flag for initial activation, for using initialIndex\n  this.isInitActivated = true;\n  // ready event. #493\n  this.dispatchEvent('ready');\n};\n\n// slider positions the cells\nproto._createSlider = function() {\n  // slider element does all the positioning\n  let slider = document.createElement('div');\n  slider.className = 'flickity-slider';\n  this.slider = slider;\n};\n\nproto._filterFindCellElements = function( elems ) {\n  return utils.filterFindElements( elems, this.options.cellSelector );\n};\n\n// goes through all children\nproto.reloadCells = function() {\n  // collection of item elements\n  this.cells = this._makeCells( this.slider.children );\n  this.positionCells();\n  this._updateWrapShiftCells();\n  this.setGallerySize();\n};\n\n/**\n * turn elements into Flickity.Cells\n * @param {[Array, NodeList, HTMLElement]} elems - elements to make into cells\n * @returns {Array} items - collection of new Flickity Cells\n */\nproto._makeCells = function( elems ) {\n  let cellElems = this._filterFindCellElements( elems );\n\n  // create new Cells for collection\n  return cellElems.map( ( cellElem ) => new Cell( cellElem ) );\n};\n\nproto.getLastCell = function() {\n  return this.cells[ this.cells.length - 1 ];\n};\n\nproto.getLastSlide = function() {\n  return this.slides[ this.slides.length - 1 ];\n};\n\n// positions all cells\nproto.positionCells = function() {\n  // size all cells\n  this._sizeCells( this.cells );\n  // position all cells\n  this._positionCells( 0 );\n};\n\n/**\n * position certain cells\n * @param {Integer} index - which cell to start with\n */\nproto._positionCells = function( index ) {\n  index = index || 0;\n  // also measure maxCellHeight\n  // start 0 if positioning all cells\n  this.maxCellHeight = index ? this.maxCellHeight || 0 : 0;\n  let cellX = 0;\n  // get cellX\n  if ( index > 0 ) {\n    let startCell = this.cells[ index - 1 ];\n    cellX = startCell.x + startCell.size.outerWidth;\n  }\n\n  this.cells.slice( index ).forEach( ( cell ) => {\n    cell.x = cellX;\n    this._renderCellPosition( cell, cellX );\n    cellX += cell.size.outerWidth;\n    this.maxCellHeight = Math.max( cell.size.outerHeight, this.maxCellHeight );\n  } );\n  // keep track of cellX for wrap-around\n  this.slideableWidth = cellX;\n  // slides\n  this.updateSlides();\n  // contain slides target\n  this._containSlides();\n  // update slidesWidth\n  this.slidesWidth = this.cells.length ?\n    this.getLastSlide().target - this.slides[0].target : 0;\n};\n\nproto._renderCellPosition = function( cell, x ) {\n  // render position of cell with in slider\n  let sideOffset = this.options.rightToLeft ? -1 : 1;\n  let renderX = x * sideOffset;\n  if ( this.options.percentPosition ) renderX *= this.size.innerWidth / cell.size.width;\n  let positionValue = this.getPositionValue( renderX );\n  cell.element.style.transform = `translateX( ${positionValue} )`;\n};\n\n/**\n * cell.getSize() on multiple cells\n * @param {Array} cells - cells to size\n */\nproto._sizeCells = function( cells ) {\n  cells.forEach( ( cell ) => cell.getSize() );\n};\n\n// --------------------------  -------------------------- //\n\nproto.updateSlides = function() {\n  this.slides = [];\n  if ( !this.cells.length ) return;\n\n  let { beginMargin, endMargin } = this;\n  let slide = new Slide( beginMargin, endMargin, this.cellAlign );\n  this.slides.push( slide );\n\n  let canCellFit = this._getCanCellFit();\n\n  this.cells.forEach( ( cell, i ) => {\n    // just add cell if first cell in slide\n    if ( !slide.cells.length ) {\n      slide.addCell( cell );\n      return;\n    }\n\n    let slideWidth = ( slide.outerWidth - slide.firstMargin ) +\n      ( cell.size.outerWidth - cell.size[ endMargin ] );\n\n    if ( canCellFit( i, slideWidth ) ) {\n      slide.addCell( cell );\n    } else {\n      // doesn't fit, new slide\n      slide.updateTarget();\n\n      slide = new Slide( beginMargin, endMargin, this.cellAlign );\n      this.slides.push( slide );\n      slide.addCell( cell );\n    }\n  } );\n  // last slide\n  slide.updateTarget();\n  // update .selectedSlide\n  this.updateSelectedSlide();\n};\n\nproto._getCanCellFit = function() {\n  let { groupCells } = this.options;\n  if ( !groupCells ) return () => false;\n\n  if ( typeof groupCells == 'number' ) {\n    // group by number. 3 -> [0,1,2], [3,4,5], ...\n    let number = parseInt( groupCells, 10 );\n    return ( i ) => ( i % number ) !== 0;\n  }\n  // default, group by width of slide\n  let percent = 1;\n  // parse '75%\n  let percentMatch = typeof groupCells == 'string' && groupCells.match( /^(\\d+)%$/ );\n  if ( percentMatch ) percent = parseInt( percentMatch[1], 10 ) / 100;\n  let groupWidth = ( this.size.innerWidth + 1 ) * percent;\n  return ( i, slideWidth ) => slideWidth <= groupWidth;\n};\n\n// alias _init for jQuery plugin .flickity()\nproto._init =\nproto.reposition = function() {\n  this.positionCells();\n  this.positionSliderAtSelected();\n};\n\nproto.getSize = function() {\n  this.size = getSize( this.element );\n  this.setCellAlign();\n  this.cursorPosition = this.size.innerWidth * this.cellAlign;\n};\n\nlet cellAlignShorthands = {\n  left: 0,\n  center: 0.5,\n  right: 1,\n};\n\nproto.setCellAlign = function() {\n  let { cellAlign, rightToLeft } = this.options;\n  let shorthand = cellAlignShorthands[ cellAlign ];\n  this.cellAlign = shorthand !== undefined ? shorthand : cellAlign;\n  if ( rightToLeft ) this.cellAlign = 1 - this.cellAlign;\n};\n\nproto.setGallerySize = function() {\n  if ( !this.options.setGallerySize ) return;\n\n  let height = this.options.adaptiveHeight && this.selectedSlide ?\n    this.selectedSlide.height : this.maxCellHeight;\n  this.viewport.style.height = `${height}px`;\n};\n\nproto._updateWrapShiftCells = function() {\n  // update isWrapping\n  this.isWrapping = this.getIsWrapping();\n  // only for wrap-around\n  if ( !this.isWrapping ) return;\n\n  // unshift previous cells\n  this._unshiftCells( this.beforeShiftCells );\n  this._unshiftCells( this.afterShiftCells );\n  // get before cells\n  // initial gap\n  let beforeGapX = this.cursorPosition;\n  let lastIndex = this.cells.length - 1;\n  this.beforeShiftCells = this._getGapCells( beforeGapX, lastIndex, -1 );\n  // get after cells\n  // ending gap between last cell and end of gallery viewport\n  let afterGapX = this.size.innerWidth - this.cursorPosition;\n  // start cloning at first cell, working forwards\n  this.afterShiftCells = this._getGapCells( afterGapX, 0, 1 );\n};\n\nproto.getIsWrapping = function() {\n  let { wrapAround } = this.options;\n  if ( !wrapAround || this.slides.length < 2 ) return false;\n\n  if ( wrapAround !== 'fill' ) return true;\n  // check that slides can fit\n\n  let gapWidth = this.slideableWidth - this.size.innerWidth;\n  if ( gapWidth > this.size.innerWidth ) return true; // gap * 2x big, all good\n  // check that content width - shifting cell is bigger than viewport width\n  for ( let cell of this.cells ) {\n    if ( cell.size.outerWidth > gapWidth ) return false;\n  }\n  return true;\n};\n\nproto._getGapCells = function( gapX, cellIndex, increment ) {\n  // keep adding cells until the cover the initial gap\n  let cells = [];\n  while ( gapX > 0 ) {\n    let cell = this.cells[ cellIndex ];\n    if ( !cell ) break;\n\n    cells.push( cell );\n    cellIndex += increment;\n    gapX -= cell.size.outerWidth;\n  }\n  return cells;\n};\n\n// ----- contain & wrap ----- //\n\n// contain cell targets so no excess sliding\nproto._containSlides = function() {\n  let isContaining = this.options.contain && !this.isWrapping &&\n      this.cells.length;\n  if ( !isContaining ) return;\n\n  let contentWidth = this.slideableWidth - this.getLastCell().size[ this.endMargin ];\n  // content is less than gallery size\n  let isContentSmaller = contentWidth < this.size.innerWidth;\n  if ( isContentSmaller ) {\n    // all cells fit inside gallery\n    this.slides.forEach( ( slide ) => {\n      slide.target = contentWidth * this.cellAlign;\n    } );\n  } else {\n    // contain to bounds\n    let beginBound = this.cursorPosition + this.cells[0].size[ this.beginMargin ];\n    let endBound = contentWidth - this.size.innerWidth * ( 1 - this.cellAlign );\n    this.slides.forEach( ( slide ) => {\n      slide.target = Math.max( slide.target, beginBound );\n      slide.target = Math.min( slide.target, endBound );\n    } );\n  }\n};\n\n// ----- events ----- //\n\n/**\n * emits events via eventEmitter and jQuery events\n * @param {String} type - name of event\n * @param {Event} event - original event\n * @param {Array} args - extra arguments\n */\nproto.dispatchEvent = function( type, event, args ) {\n  let emitArgs = event ? [ event ].concat( args ) : args;\n  this.emitEvent( type, emitArgs );\n\n  if ( jQuery && this.$element ) {\n    // default trigger with type if no event\n    type += this.options.namespaceJQueryEvents ? '.flickity' : '';\n    let $event = type;\n    if ( event ) {\n      // create jQuery event\n      let jQEvent = new jQuery.Event( event );\n      jQEvent.type = type;\n      $event = jQEvent;\n    }\n    this.$element.trigger( $event, args );\n  }\n};\n\nconst unidraggerEvents = [\n  'dragStart',\n  'dragMove',\n  'dragEnd',\n  'pointerDown',\n  'pointerMove',\n  'pointerEnd',\n  'staticClick',\n];\n\nlet _emitEvent = proto.emitEvent;\nproto.emitEvent = function( eventName, args ) {\n  if ( eventName === 'staticClick' ) {\n    // add cellElem and cellIndex args to staticClick\n    let clickedCell = this.getParentCell( args[0].target );\n    let cellElem = clickedCell && clickedCell.element;\n    let cellIndex = clickedCell && this.cells.indexOf( clickedCell );\n    args = args.concat( cellElem, cellIndex );\n  }\n  // do regular thing\n  _emitEvent.call( this, eventName, args );\n  // duck-punch in jQuery events for Unidragger events\n  let isUnidraggerEvent = unidraggerEvents.includes( eventName );\n  if ( !isUnidraggerEvent || !jQuery || !this.$element ) return;\n\n  eventName += this.options.namespaceJQueryEvents ? '.flickity' : '';\n  let event = args.shift( 0 );\n  let jQEvent = new jQuery.Event( event );\n  jQEvent.type = eventName;\n  this.$element.trigger( jQEvent, args );\n};\n\n// -------------------------- select -------------------------- //\n\n/**\n * @param {Integer} index - index of the slide\n * @param {Boolean} isWrap - will wrap-around to last/first if at the end\n * @param {Boolean} isInstant - will immediately set position at selected cell\n */\nproto.select = function( index, isWrap, isInstant ) {\n  if ( !this.isActive ) return;\n\n  index = parseInt( index, 10 );\n  this._wrapSelect( index );\n\n  if ( this.isWrapping || isWrap ) {\n    index = utils.modulo( index, this.slides.length );\n  }\n  // bail if invalid index\n  if ( !this.slides[ index ] ) return;\n\n  let prevIndex = this.selectedIndex;\n  this.selectedIndex = index;\n  this.updateSelectedSlide();\n  if ( isInstant ) {\n    this.positionSliderAtSelected();\n  } else {\n    this.startAnimation();\n  }\n  if ( this.options.adaptiveHeight ) {\n    this.setGallerySize();\n  }\n  // events\n  this.dispatchEvent( 'select', null, [ index ] );\n  // change event if new index\n  if ( index !== prevIndex ) {\n    this.dispatchEvent( 'change', null, [ index ] );\n  }\n};\n\n// wraps position for wrapAround, to move to closest slide. #113\nproto._wrapSelect = function( index ) {\n  if ( !this.isWrapping ) return;\n\n  const { selectedIndex, slideableWidth, slides: { length } } = this;\n  // shift index for wrap, do not wrap dragSelect\n  if ( !this.isDragSelect ) {\n    let wrapIndex = utils.modulo( index, length );\n    // go to shortest\n    let delta = Math.abs( wrapIndex - selectedIndex );\n    let backWrapDelta = Math.abs( ( wrapIndex + length ) - selectedIndex );\n    let forewardWrapDelta = Math.abs( ( wrapIndex - length ) - selectedIndex );\n    if ( backWrapDelta < delta ) {\n      index += length;\n    } else if ( forewardWrapDelta < delta ) {\n      index -= length;\n    }\n  }\n\n  // wrap position so slider is within normal area\n  if ( index < 0 ) {\n    this.x -= slideableWidth;\n  } else if ( index >= length ) {\n    this.x += slideableWidth;\n  }\n};\n\nproto.previous = function( isWrap, isInstant ) {\n  this.select( this.selectedIndex - 1, isWrap, isInstant );\n};\n\nproto.next = function( isWrap, isInstant ) {\n  this.select( this.selectedIndex + 1, isWrap, isInstant );\n};\n\nproto.updateSelectedSlide = function() {\n  let slide = this.slides[ this.selectedIndex ];\n  // selectedIndex could be outside of slides, if triggered before resize()\n  if ( !slide ) return;\n\n  // unselect previous selected slide\n  this.unselectSelectedSlide();\n  // update new selected slide\n  this.selectedSlide = slide;\n  slide.select();\n  this.selectedCells = slide.cells;\n  this.selectedElements = slide.getCellElements();\n  // HACK: selectedCell & selectedElement is first cell in slide, backwards compatibility\n  this.selectedCell = slide.cells[0];\n  this.selectedElement = this.selectedElements[0];\n};\n\nproto.unselectSelectedSlide = function() {\n  if ( this.selectedSlide ) this.selectedSlide.unselect();\n};\n\nproto.selectInitialIndex = function() {\n  let initialIndex = this.options.initialIndex;\n  // already activated, select previous selectedIndex\n  if ( this.isInitActivated ) {\n    this.select( this.selectedIndex, false, true );\n    return;\n  }\n  // select with selector string\n  if ( initialIndex && typeof initialIndex == 'string' ) {\n    let cell = this.queryCell( initialIndex );\n    if ( cell ) {\n      this.selectCell( initialIndex, false, true );\n      return;\n    }\n  }\n\n  let index = 0;\n  // select with number\n  if ( initialIndex && this.slides[ initialIndex ] ) {\n    index = initialIndex;\n  }\n  // select instantly\n  this.select( index, false, true );\n};\n\n/**\n * select slide from number or cell element\n * @param {[Element, Number]} value - zero-based index or element to select\n * @param {Boolean} isWrap - enables wrapping around for extra index\n * @param {Boolean} isInstant - disables slide animation\n */\nproto.selectCell = function( value, isWrap, isInstant ) {\n  // get cell\n  let cell = this.queryCell( value );\n  if ( !cell ) return;\n\n  let index = this.getCellSlideIndex( cell );\n  this.select( index, isWrap, isInstant );\n};\n\nproto.getCellSlideIndex = function( cell ) {\n  // get index of slide that has cell\n  let cellSlide = this.slides.find( ( slide ) => slide.cells.includes( cell ) );\n  return this.slides.indexOf( cellSlide );\n};\n\n// -------------------------- get cells -------------------------- //\n\n/**\n * get Flickity.Cell, given an Element\n * @param {Element} elem - matching cell element\n * @returns {Flickity.Cell} cell - matching cell\n */\nproto.getCell = function( elem ) {\n  // loop through cells to get the one that matches\n  for ( let cell of this.cells ) {\n    if ( cell.element === elem ) return cell;\n  }\n};\n\n/**\n * get collection of Flickity.Cells, given Elements\n * @param {[Element, Array, NodeList]} elems - multiple elements\n * @returns {Array} cells - Flickity.Cells\n */\nproto.getCells = function( elems ) {\n  elems = utils.makeArray( elems );\n  return elems.map( ( elem ) => this.getCell( elem ) ).filter( Boolean );\n};\n\n/**\n * get cell elements\n * @returns {Array} cellElems\n */\nproto.getCellElements = function() {\n  return this.cells.map( ( cell ) => cell.element );\n};\n\n/**\n * get parent cell from an element\n * @param {Element} elem - child element\n * @returns {Flickit.Cell} cell - parent cell\n */\nproto.getParentCell = function( elem ) {\n  // first check if elem is cell\n  let cell = this.getCell( elem );\n  if ( cell ) return cell;\n\n  // try to get parent cell elem\n  let closest = elem.closest('.flickity-slider > *');\n  return this.getCell( closest );\n};\n\n/**\n * get cells adjacent to a slide\n * @param {Integer} adjCount - number of adjacent slides\n * @param {Integer} index - index of slide to start\n * @returns {Array} cells - array of Flickity.Cells\n */\nproto.getAdjacentCellElements = function( adjCount, index ) {\n  if ( !adjCount ) return this.selectedSlide.getCellElements();\n\n  index = index === undefined ? this.selectedIndex : index;\n\n  let len = this.slides.length;\n  if ( 1 + ( adjCount * 2 ) >= len ) {\n    return this.getCellElements(); // get all\n  }\n\n  let cellElems = [];\n  for ( let i = index - adjCount; i <= index + adjCount; i++ ) {\n    let slideIndex = this.isWrapping ? utils.modulo( i, len ) : i;\n    let slide = this.slides[ slideIndex ];\n    if ( slide ) {\n      cellElems = cellElems.concat( slide.getCellElements() );\n    }\n  }\n  return cellElems;\n};\n\n/**\n * select slide from number or cell element\n * @param {[Element, String, Number]} selector - element, selector string, or index\n * @returns {Flickity.Cell} - matching cell\n */\nproto.queryCell = function( selector ) {\n  if ( typeof selector == 'number' ) {\n    // use number as index\n    return this.cells[ selector ];\n  }\n  // do not select invalid selectors from hash: #123, #/. #791\n  let isSelectorString = typeof selector == 'string' && !selector.match( /^[#.]?[\\d/]/ );\n  if ( isSelectorString ) {\n    // use string as selector, get element\n    selector = this.element.querySelector( selector );\n  }\n  // get cell from element\n  return this.getCell( selector );\n};\n\n// -------------------------- events -------------------------- //\n\nproto.uiChange = function() {\n  this.emitEvent('uiChange');\n};\n\n// ----- resize ----- //\n\nproto.onresize = function() {\n  this.watchCSS();\n  this.resize();\n};\n\nutils.debounceMethod( Flickity, 'onresize', 150 );\n\nproto.resize = function() {\n  // #1177 disable resize behavior when animating or dragging for iOS 15\n  if ( !this.isActive || this.isAnimating || this.isDragging ) return;\n  this.getSize();\n  // wrap values\n  if ( this.isWrapping ) {\n    this.x = utils.modulo( this.x, this.slideableWidth );\n  }\n  this.positionCells();\n  this._updateWrapShiftCells();\n  this.setGallerySize();\n  this.emitEvent('resize');\n  // update selected index for group slides, instant\n  // TODO: position can be lost between groups of various numbers\n  let selectedElement = this.selectedElements && this.selectedElements[0];\n  this.selectCell( selectedElement, false, true );\n};\n\n// watches the :after property, activates/deactivates\nproto.watchCSS = function() {\n  if ( !this.options.watchCSS ) return;\n\n  let afterContent = getComputedStyle( this.element, ':after' ).content;\n  // activate if :after { content: 'flickity' }\n  if ( afterContent.includes('flickity') ) {\n    this.activate();\n  } else {\n    this.deactivate();\n  }\n};\n\n// ----- keydown ----- //\n\n// go previous/next if left/right keys pressed\nproto.onkeydown = function( event ) {\n  let { activeElement } = document;\n  let handler = Flickity.keyboardHandlers[ event.key ];\n  // only work if element is in focus\n  if ( !this.options.accessibility || !activeElement || !handler ) return;\n\n  let isFocused = this.focusableElems.some( ( elem ) => activeElement === elem );\n  if ( isFocused ) handler.call( this );\n};\n\nFlickity.keyboardHandlers = {\n  ArrowLeft: function() {\n    this.uiChange();\n    let leftMethod = this.options.rightToLeft ? 'next' : 'previous';\n    this[ leftMethod ]();\n  },\n  ArrowRight: function() {\n    this.uiChange();\n    let rightMethod = this.options.rightToLeft ? 'previous' : 'next';\n    this[ rightMethod ]();\n  },\n};\n\n// ----- focus ----- //\n\nproto.focus = function() {\n  this.element.focus({ preventScroll: true });\n};\n\n// -------------------------- destroy -------------------------- //\n\n// deactivate all Flickity functionality, but keep stuff available\nproto.deactivate = function() {\n  if ( !this.isActive ) return;\n\n  this.element.classList.remove('flickity-enabled');\n  this.element.classList.remove('flickity-rtl');\n  this.unselectSelectedSlide();\n  // destroy cells\n  this.cells.forEach( ( cell ) => cell.destroy() );\n  this.viewport.remove();\n  // move child elements back into element\n  this.element.append( ...this.slider.children );\n  if ( this.options.accessibility ) {\n    this.element.removeAttribute('tabIndex');\n    this.element.removeEventListener( 'keydown', this );\n  }\n  // set flags\n  this.isActive = false;\n  this.emitEvent('deactivate');\n};\n\nproto.destroy = function() {\n  this.deactivate();\n  window.removeEventListener( 'resize', this );\n  this.allOff();\n  this.emitEvent('destroy');\n  if ( jQuery && this.$element ) {\n    jQuery.removeData( this.element, 'flickity' );\n  }\n  delete this.element.flickityGUID;\n  delete instances[ this.guid ];\n};\n\n// -------------------------- prototype -------------------------- //\n\nObject.assign( proto, animatePrototype );\n\n// -------------------------- extras -------------------------- //\n\n/**\n * get Flickity instance from element\n * @param {[Element, String]} elem - element or selector string\n * @returns {Flickity} - Flickity instance\n */\nFlickity.data = function( elem ) {\n  elem = utils.getQueryElement( elem );\n  if ( elem ) return instances[ elem.flickityGUID ];\n};\n\nutils.htmlInit( Flickity, 'flickity' );\n\nlet { jQueryBridget } = window;\nif ( jQuery && jQueryBridget ) {\n  jQueryBridget( 'flickity', Flickity, jQuery );\n}\n\n// set internal jQuery, for Webpack + jQuery v3, #478\nFlickity.setJQuery = function( jq ) {\n  jQuery = jq;\n};\n\nFlickity.Cell = Cell;\nFlickity.Slide = Slide;\n\nreturn Flickity;\n\n} ) );\n","// drag\n( function( window, factory ) {\n  // universal module definition\n  if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory(\n        window,\n        require('./core'),\n        require('unidragger'),\n        require('fizzy-ui-utils'),\n    );\n  } else {\n    // browser global\n    window.Flickity = factory(\n        window,\n        window.Flickity,\n        window.Unidragger,\n        window.fizzyUIUtils,\n    );\n  }\n\n}( typeof window != 'undefined' ? window : this,\n    function factory( window, Flickity, Unidragger, utils ) {\n\n// ----- defaults ----- //\n\nObject.assign( Flickity.defaults, {\n  draggable: '>1',\n  dragThreshold: 3,\n} );\n\n// -------------------------- drag prototype -------------------------- //\n\nlet proto = Flickity.prototype;\nObject.assign( proto, Unidragger.prototype ); // inherit Unidragger\nproto.touchActionValue = '';\n\n// --------------------------  -------------------------- //\n\nFlickity.create.drag = function() {\n  this.on( 'activate', this.onActivateDrag );\n  this.on( 'uiChange', this._uiChangeDrag );\n  this.on( 'deactivate', this.onDeactivateDrag );\n  this.on( 'cellChange', this.updateDraggable );\n  this.on( 'pointerDown', this.handlePointerDown );\n  this.on( 'pointerUp', this.handlePointerUp );\n  this.on( 'pointerDown', this.handlePointerDone );\n  this.on( 'dragStart', this.handleDragStart );\n  this.on( 'dragMove', this.handleDragMove );\n  this.on( 'dragEnd', this.handleDragEnd );\n  this.on( 'staticClick', this.handleStaticClick );\n  // TODO updateDraggable on resize? if groupCells & slides change\n};\n\nproto.onActivateDrag = function() {\n  this.handles = [ this.viewport ];\n  this.bindHandles();\n  this.updateDraggable();\n};\n\nproto.onDeactivateDrag = function() {\n  this.unbindHandles();\n  this.element.classList.remove('is-draggable');\n};\n\nproto.updateDraggable = function() {\n  // disable dragging if less than 2 slides. #278\n  if ( this.options.draggable === '>1' ) {\n    this.isDraggable = this.slides.length > 1;\n  } else {\n    this.isDraggable = this.options.draggable;\n  }\n  this.element.classList.toggle( 'is-draggable', this.isDraggable );\n};\n\nproto._uiChangeDrag = function() {\n  delete this.isFreeScrolling;\n};\n\n// -------------------------- pointer events -------------------------- //\n\nproto.handlePointerDown = function( event ) {\n  if ( !this.isDraggable ) {\n    // proceed for staticClick\n    this.bindActivePointerEvents( event );\n    return;\n  }\n\n  let isTouchStart = event.type === 'touchstart';\n  let isTouchPointer = event.pointerType === 'touch';\n  let isFocusNode = event.target.matches('input, textarea, select');\n  if ( !isTouchStart && !isTouchPointer && !isFocusNode ) event.preventDefault();\n  if ( !isFocusNode ) this.focus();\n  // blur\n  if ( document.activeElement !== this.element ) document.activeElement.blur();\n  // stop if it was moving\n  this.dragX = this.x;\n  this.viewport.classList.add('is-pointer-down');\n  // track scrolling\n  this.pointerDownScroll = getScrollPosition();\n  window.addEventListener( 'scroll', this );\n  this.bindActivePointerEvents( event );\n};\n\n// ----- move ----- //\n\nproto.hasDragStarted = function( moveVector ) {\n  return Math.abs( moveVector.x ) > this.options.dragThreshold;\n};\n\n// ----- up ----- //\n\nproto.handlePointerUp = function() {\n  delete this.isTouchScrolling;\n  this.viewport.classList.remove('is-pointer-down');\n};\n\nproto.handlePointerDone = function() {\n  window.removeEventListener( 'scroll', this );\n  delete this.pointerDownScroll;\n};\n\n// -------------------------- dragging -------------------------- //\n\nproto.handleDragStart = function() {\n  if ( !this.isDraggable ) return;\n\n  this.dragStartPosition = this.x;\n  this.startAnimation();\n  window.removeEventListener( 'scroll', this );\n};\n\nproto.handleDragMove = function( event, pointer, moveVector ) {\n  if ( !this.isDraggable ) return;\n\n  event.preventDefault();\n\n  this.previousDragX = this.dragX;\n  // reverse if right-to-left\n  let direction = this.options.rightToLeft ? -1 : 1;\n  // wrap around move. #589\n  if ( this.isWrapping ) moveVector.x %= this.slideableWidth;\n  let dragX = this.dragStartPosition + moveVector.x * direction;\n\n  if ( !this.isWrapping ) {\n    // slow drag\n    let originBound = Math.max( -this.slides[0].target, this.dragStartPosition );\n    dragX = dragX > originBound ? ( dragX + originBound ) * 0.5 : dragX;\n    let endBound = Math.min( -this.getLastSlide().target, this.dragStartPosition );\n    dragX = dragX < endBound ? ( dragX + endBound ) * 0.5 : dragX;\n  }\n\n  this.dragX = dragX;\n  this.dragMoveTime = new Date();\n};\n\nproto.handleDragEnd = function() {\n  if ( !this.isDraggable ) return;\n\n  let { freeScroll } = this.options;\n  if ( freeScroll ) this.isFreeScrolling = true;\n  // set selectedIndex based on where flick will end up\n  let index = this.dragEndRestingSelect();\n\n  if ( freeScroll && !this.isWrapping ) {\n    // if free-scroll & not wrap around\n    // do not free-scroll if going outside of bounding slides\n    // so bounding slides can attract slider, and keep it in bounds\n    let restingX = this.getRestingPosition();\n    this.isFreeScrolling = -restingX > this.slides[0].target &&\n      -restingX < this.getLastSlide().target;\n  } else if ( !freeScroll && index === this.selectedIndex ) {\n    // boost selection if selected index has not changed\n    index += this.dragEndBoostSelect();\n  }\n  delete this.previousDragX;\n  // apply selection\n  // HACK, set flag so dragging stays in correct direction\n  this.isDragSelect = this.isWrapping;\n  this.select( index );\n  delete this.isDragSelect;\n};\n\nproto.dragEndRestingSelect = function() {\n  let restingX = this.getRestingPosition();\n  // how far away from selected slide\n  let distance = Math.abs( this.getSlideDistance( -restingX, this.selectedIndex ) );\n  // get closet resting going up and going down\n  let positiveResting = this._getClosestResting( restingX, distance, 1 );\n  let negativeResting = this._getClosestResting( restingX, distance, -1 );\n  // use closer resting for wrap-around\n  return positiveResting.distance < negativeResting.distance ?\n    positiveResting.index : negativeResting.index;\n};\n\n/**\n * given resting X and distance to selected cell\n * get the distance and index of the closest cell\n * @param {Number} restingX - estimated post-flick resting position\n * @param {Number} distance - distance to selected cell\n * @param {Integer} increment - +1 or -1, going up or down\n * @returns {Object} - { distance: {Number}, index: {Integer} }\n */\nproto._getClosestResting = function( restingX, distance, increment ) {\n  let index = this.selectedIndex;\n  let minDistance = Infinity;\n  let condition = this.options.contain && !this.isWrapping ?\n    // if containing, keep going if distance is equal to minDistance\n    ( dist, minDist ) => dist <= minDist :\n    ( dist, minDist ) => dist < minDist;\n\n  while ( condition( distance, minDistance ) ) {\n    // measure distance to next cell\n    index += increment;\n    minDistance = distance;\n    distance = this.getSlideDistance( -restingX, index );\n    if ( distance === null ) break;\n\n    distance = Math.abs( distance );\n  }\n  return {\n    distance: minDistance,\n    // selected was previous index\n    index: index - increment,\n  };\n};\n\n/**\n * measure distance between x and a slide target\n * @param {Number} x - horizontal position\n * @param {Integer} index - slide index\n * @returns {Number} - slide distance\n */\nproto.getSlideDistance = function( x, index ) {\n  let len = this.slides.length;\n  // wrap around if at least 2 slides\n  let isWrapAround = this.options.wrapAround && len > 1;\n  let slideIndex = isWrapAround ? utils.modulo( index, len ) : index;\n  let slide = this.slides[ slideIndex ];\n  if ( !slide ) return null;\n\n  // add distance for wrap-around slides\n  let wrap = isWrapAround ? this.slideableWidth * Math.floor( index/len ) : 0;\n  return x - ( slide.target + wrap );\n};\n\nproto.dragEndBoostSelect = function() {\n  // do not boost if no previousDragX or dragMoveTime\n  if ( this.previousDragX === undefined || !this.dragMoveTime ||\n    // or if drag was held for 100 ms\n    new Date() - this.dragMoveTime > 100 ) {\n    return 0;\n  }\n\n  let distance = this.getSlideDistance( -this.dragX, this.selectedIndex );\n  let delta = this.previousDragX - this.dragX;\n  if ( distance > 0 && delta > 0 ) {\n    // boost to next if moving towards the right, and positive velocity\n    return 1;\n  } else if ( distance < 0 && delta < 0 ) {\n    // boost to previous if moving towards the left, and negative velocity\n    return -1;\n  }\n  return 0;\n};\n\n// ----- scroll ----- //\n\nproto.onscroll = function() {\n  let scroll = getScrollPosition();\n  let scrollMoveX = this.pointerDownScroll.x - scroll.x;\n  let scrollMoveY = this.pointerDownScroll.y - scroll.y;\n  // cancel click/tap if scroll is too much\n  if ( Math.abs( scrollMoveX ) > 3 || Math.abs( scrollMoveY ) > 3 ) {\n    this.pointerDone();\n  }\n};\n\n// ----- utils ----- //\n\nfunction getScrollPosition() {\n  return {\n    x: window.pageXOffset,\n    y: window.pageYOffset,\n  };\n}\n\n// -----  ----- //\n\nreturn Flickity;\n\n} ) );\n","// imagesloaded\n( function( window, factory ) {\n  // universal module definition\n  if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory(\n        require('./core'),\n        require('imagesloaded'),\n    );\n  } else {\n    // browser global\n    factory(\n        window.Flickity,\n        window.imagesLoaded,\n    );\n  }\n\n}( typeof window != 'undefined' ? window : this,\n    function factory( Flickity, imagesLoaded ) {\n\nFlickity.create.imagesLoaded = function() {\n  this.on( 'activate', this.imagesLoaded );\n};\n\nFlickity.prototype.imagesLoaded = function() {\n  if ( !this.options.imagesLoaded ) return;\n\n  let onImagesLoadedProgress = ( instance, image ) => {\n    let cell = this.getParentCell( image.img );\n    this.cellSizeChange( cell && cell.element );\n    if ( !this.options.freeScroll ) this.positionSliderAtSelected();\n  };\n  imagesLoaded( this.slider ).on( 'progress', onImagesLoadedProgress );\n};\n\nreturn Flickity;\n\n} ) );\n","/*!\n * Flickity v3.0.0\n * Touch, responsive, flickable carousels\n *\n * Licensed GPLv3 for open source use\n * or Flickity Commercial License for commercial use\n *\n * https://flickity.metafizzy.co\n * Copyright 2015-2022 Metafizzy\n */\n\nif ( typeof module == 'object' && module.exports ) {\n  const Flickity = require('./core');\n  require('./drag');\n  require('./prev-next-button');\n  require('./page-dots');\n  require('./player');\n  require('./add-remove-cell');\n  require('./lazyload');\n  require('./imagesloaded');\n\n  module.exports = Flickity;\n}\n","// lazyload\n( function( window, factory ) {\n  // universal module definition\n  if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory(\n        require('./core'),\n        require('fizzy-ui-utils'),\n    );\n  } else {\n    // browser global\n    factory(\n        window.Flickity,\n        window.fizzyUIUtils,\n    );\n  }\n\n}( typeof window != 'undefined' ? window : this, function factory( Flickity, utils ) {\n\nconst lazyAttr = 'data-flickity-lazyload';\nconst lazySrcAttr = `${lazyAttr}-src`;\nconst lazySrcsetAttr = `${lazyAttr}-srcset`;\nconst imgSelector = `img[${lazyAttr}], img[${lazySrcAttr}], ` +\n  `img[${lazySrcsetAttr}], source[${lazySrcsetAttr}]`;\n\nFlickity.create.lazyLoad = function() {\n  this.on( 'select', this.lazyLoad );\n\n  this.handleLazyLoadComplete = this.onLazyLoadComplete.bind( this );\n};\n\nlet proto = Flickity.prototype;\n\nproto.lazyLoad = function() {\n  let { lazyLoad } = this.options;\n  if ( !lazyLoad ) return;\n\n  // get adjacent cells, use lazyLoad option for adjacent count\n  let adjCount = typeof lazyLoad == 'number' ? lazyLoad : 0;\n  // lazy load images\n  this.getAdjacentCellElements( adjCount )\n    .map( getCellLazyImages )\n    .flat()\n    .forEach( ( img ) => new LazyLoader( img, this.handleLazyLoadComplete ) );\n};\n\nfunction getCellLazyImages( cellElem ) {\n  // check if cell element is lazy image\n  if ( cellElem.matches('img') ) {\n    let cellAttr = cellElem.getAttribute( lazyAttr );\n    let cellSrcAttr = cellElem.getAttribute( lazySrcAttr );\n    let cellSrcsetAttr = cellElem.getAttribute( lazySrcsetAttr );\n    if ( cellAttr || cellSrcAttr || cellSrcsetAttr ) {\n      return cellElem;\n    }\n  }\n  // select lazy images in cell\n  return [ ...cellElem.querySelectorAll( imgSelector ) ];\n}\n\nproto.onLazyLoadComplete = function( img, event ) {\n  let cell = this.getParentCell( img );\n  let cellElem = cell && cell.element;\n  this.cellSizeChange( cellElem );\n\n  this.dispatchEvent( 'lazyLoad', event, cellElem );\n};\n\n// -------------------------- LazyLoader -------------------------- //\n\n/**\n * class to handle loading images\n * @param {Image} img - Image element\n * @param {Function} onComplete - callback function\n */\nfunction LazyLoader( img, onComplete ) {\n  this.img = img;\n  this.onComplete = onComplete;\n  this.load();\n}\n\nLazyLoader.prototype.handleEvent = utils.handleEvent;\n\nLazyLoader.prototype.load = function() {\n  this.img.addEventListener( 'load', this );\n  this.img.addEventListener( 'error', this );\n  // get src & srcset\n  let src = this.img.getAttribute( lazyAttr ) ||\n    this.img.getAttribute( lazySrcAttr );\n  let srcset = this.img.getAttribute( lazySrcsetAttr );\n  // set src & serset\n  this.img.src = src;\n  if ( srcset ) this.img.setAttribute( 'srcset', srcset );\n  // remove attr\n  this.img.removeAttribute( lazyAttr );\n  this.img.removeAttribute( lazySrcAttr );\n  this.img.removeAttribute( lazySrcsetAttr );\n};\n\nLazyLoader.prototype.onload = function( event ) {\n  this.complete( event, 'flickity-lazyloaded' );\n};\n\nLazyLoader.prototype.onerror = function( event ) {\n  this.complete( event, 'flickity-lazyerror' );\n};\n\nLazyLoader.prototype.complete = function( event, className ) {\n  // unbind events\n  this.img.removeEventListener( 'load', this );\n  this.img.removeEventListener( 'error', this );\n  let mediaElem = this.img.parentNode.matches('picture') ? this.img.parentNode : this.img;\n  mediaElem.classList.add( className );\n\n  this.onComplete( this.img, event );\n};\n\n// -----  ----- //\n\nFlickity.LazyLoader = LazyLoader;\n\nreturn Flickity;\n\n} ) );\n","// page dots\n( function( window, factory ) {\n  // universal module definition\n  if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory(\n        require('./core'),\n        require('fizzy-ui-utils'),\n    );\n  } else {\n    // browser global\n    factory(\n        window.Flickity,\n        window.fizzyUIUtils,\n    );\n  }\n\n}( typeof window != 'undefined' ? window : this, function factory( Flickity, utils ) {\n\n// -------------------------- PageDots -------------------------- //\n\nfunction PageDots() {\n  // create holder element\n  this.holder = document.createElement('div');\n  this.holder.className = 'flickity-page-dots';\n  // create dots, array of elements\n  this.dots = [];\n}\n\nPageDots.prototype.setDots = function( slidesLength ) {\n  // get difference between number of slides and number of dots\n  let delta = slidesLength - this.dots.length;\n  if ( delta > 0 ) {\n    this.addDots( delta );\n  } else if ( delta < 0 ) {\n    this.removeDots( -delta );\n  }\n};\n\nPageDots.prototype.addDots = function( count ) {\n  let newDots = new Array( count ).fill()\n    .map( ( item, i ) => {\n      let dot = document.createElement('button');\n      dot.setAttribute( 'type', 'button' );\n      let num = i + 1 + this.dots.length;\n      dot.className = 'flickity-page-dot';\n      dot.textContent = `View slide ${num}`;\n      return dot;\n    } );\n\n  this.holder.append( ...newDots );\n  this.dots = this.dots.concat( newDots );\n};\n\nPageDots.prototype.removeDots = function( count ) {\n  // remove from this.dots collection\n  let removeDots = this.dots.splice( this.dots.length - count, count );\n  // remove from DOM\n  removeDots.forEach( ( dot ) => dot.remove() );\n};\n\nPageDots.prototype.updateSelected = function( index ) {\n  // remove selected class on previous\n  if ( this.selectedDot ) {\n    this.selectedDot.classList.remove('is-selected');\n    this.selectedDot.removeAttribute('aria-current');\n  }\n  // don't proceed if no dots\n  if ( !this.dots.length ) return;\n\n  this.selectedDot = this.dots[ index ];\n  this.selectedDot.classList.add('is-selected');\n  this.selectedDot.setAttribute( 'aria-current', 'step' );\n};\n\nFlickity.PageDots = PageDots;\n\n// -------------------------- Flickity -------------------------- //\n\nObject.assign( Flickity.defaults, {\n  pageDots: true,\n} );\n\nFlickity.create.pageDots = function() {\n  if ( !this.options.pageDots ) return;\n\n  this.pageDots = new PageDots();\n  this.handlePageDotsClick = this.onPageDotsClick.bind( this );\n  // events\n  this.on( 'activate', this.activatePageDots );\n  this.on( 'select', this.updateSelectedPageDots );\n  this.on( 'cellChange', this.updatePageDots );\n  this.on( 'resize', this.updatePageDots );\n  this.on( 'deactivate', this.deactivatePageDots );\n};\n\nlet proto = Flickity.prototype;\n\nproto.activatePageDots = function() {\n  this.pageDots.setDots( this.slides.length );\n  this.focusableElems.push( ...this.pageDots.dots );\n  this.pageDots.holder.addEventListener( 'click', this.handlePageDotsClick );\n  this.element.append( this.pageDots.holder );\n};\n\nproto.onPageDotsClick = function( event ) {\n  let index = this.pageDots.dots.indexOf( event.target );\n  if ( index === -1 ) return; // only dot clicks\n\n  this.uiChange();\n  this.select( index );\n};\n\nproto.updateSelectedPageDots = function() {\n  this.pageDots.updateSelected( this.selectedIndex );\n};\n\nproto.updatePageDots = function() {\n  this.pageDots.dots.forEach( ( dot ) => {\n    utils.removeFrom( this.focusableElems, dot );\n  } );\n  this.pageDots.setDots( this.slides.length );\n  this.focusableElems.push( ...this.pageDots.dots );\n};\n\nproto.deactivatePageDots = function() {\n  this.pageDots.holder.remove();\n  this.pageDots.holder.removeEventListener( 'click', this.handlePageDotsClick );\n};\n\n// -----  ----- //\n\nFlickity.PageDots = PageDots;\n\nreturn Flickity;\n\n} ) );\n","// player & autoPlay\n( function( window, factory ) {\n  // universal module definition\n  if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory( require('./core') );\n  } else {\n    // browser global\n    factory( window.Flickity );\n  }\n\n}( typeof window != 'undefined' ? window : this, function factory( Flickity ) {\n\n// -------------------------- Player -------------------------- //\n\nfunction Player( autoPlay, onTick ) {\n  this.autoPlay = autoPlay;\n  this.onTick = onTick;\n  this.state = 'stopped';\n  // visibility change event handler\n  this.onVisibilityChange = this.visibilityChange.bind( this );\n  this.onVisibilityPlay = this.visibilityPlay.bind( this );\n}\n\n// start play\nPlayer.prototype.play = function() {\n  if ( this.state === 'playing' ) return;\n\n  // do not play if page is hidden, start playing when page is visible\n  let isPageHidden = document.hidden;\n  if ( isPageHidden ) {\n    document.addEventListener( 'visibilitychange', this.onVisibilityPlay );\n    return;\n  }\n\n  this.state = 'playing';\n  // listen to visibility change\n  document.addEventListener( 'visibilitychange', this.onVisibilityChange );\n  // start ticking\n  this.tick();\n};\n\nPlayer.prototype.tick = function() {\n  // do not tick if not playing\n  if ( this.state !== 'playing' ) return;\n\n  // default to 3 seconds\n  let time = typeof this.autoPlay == 'number' ? this.autoPlay : 3000;\n  // HACK: reset ticks if stopped and started within interval\n  this.clear();\n  this.timeout = setTimeout( () => {\n    this.onTick();\n    this.tick();\n  }, time );\n};\n\nPlayer.prototype.stop = function() {\n  this.state = 'stopped';\n  this.clear();\n  // remove visibility change event\n  document.removeEventListener( 'visibilitychange', this.onVisibilityChange );\n};\n\nPlayer.prototype.clear = function() {\n  clearTimeout( this.timeout );\n};\n\nPlayer.prototype.pause = function() {\n  if ( this.state === 'playing' ) {\n    this.state = 'paused';\n    this.clear();\n  }\n};\n\nPlayer.prototype.unpause = function() {\n  // re-start play if paused\n  if ( this.state === 'paused' ) this.play();\n};\n\n// pause if page visibility is hidden, unpause if visible\nPlayer.prototype.visibilityChange = function() {\n  let isPageHidden = document.hidden;\n  this[ isPageHidden ? 'pause' : 'unpause' ]();\n};\n\nPlayer.prototype.visibilityPlay = function() {\n  this.play();\n  document.removeEventListener( 'visibilitychange', this.onVisibilityPlay );\n};\n\n// -------------------------- Flickity -------------------------- //\n\nObject.assign( Flickity.defaults, {\n  pauseAutoPlayOnHover: true,\n} );\n\nFlickity.create.player = function() {\n  this.player = new Player( this.options.autoPlay, () => {\n    this.next( true );\n  } );\n\n  this.on( 'activate', this.activatePlayer );\n  this.on( 'uiChange', this.stopPlayer );\n  this.on( 'pointerDown', this.stopPlayer );\n  this.on( 'deactivate', this.deactivatePlayer );\n};\n\nlet proto = Flickity.prototype;\n\nproto.activatePlayer = function() {\n  if ( !this.options.autoPlay ) return;\n\n  this.player.play();\n  this.element.addEventListener( 'mouseenter', this );\n};\n\n// Player API, don't hate the ... thanks I know where the door is\n\nproto.playPlayer = function() {\n  this.player.play();\n};\n\nproto.stopPlayer = function() {\n  this.player.stop();\n};\n\nproto.pausePlayer = function() {\n  this.player.pause();\n};\n\nproto.unpausePlayer = function() {\n  this.player.unpause();\n};\n\nproto.deactivatePlayer = function() {\n  this.player.stop();\n  this.element.removeEventListener( 'mouseenter', this );\n};\n\n// ----- mouseenter/leave ----- //\n\n// pause auto-play on hover\nproto.onmouseenter = function() {\n  if ( !this.options.pauseAutoPlayOnHover ) return;\n\n  this.player.pause();\n  this.element.addEventListener( 'mouseleave', this );\n};\n\n// resume auto-play on hover off\nproto.onmouseleave = function() {\n  this.player.unpause();\n  this.element.removeEventListener( 'mouseleave', this );\n};\n\n// -----  ----- //\n\nFlickity.Player = Player;\n\nreturn Flickity;\n\n} ) );\n","// prev/next buttons\n( function( window, factory ) {\n  // universal module definition\n  if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory( require('./core') );\n  } else {\n    // browser global\n    factory( window.Flickity );\n  }\n\n}( typeof window != 'undefined' ? window : this, function factory( Flickity ) {\n\nconst svgURI = 'http://www.w3.org/2000/svg';\n\n// -------------------------- PrevNextButton -------------------------- //\n\nfunction PrevNextButton( increment, direction, arrowShape ) {\n  this.increment = increment;\n  this.direction = direction;\n  this.isPrevious = increment === 'previous';\n  this.isLeft = direction === 'left';\n  this._create( arrowShape );\n}\n\nPrevNextButton.prototype._create = function( arrowShape ) {\n  // properties\n  let element = this.element = document.createElement('button');\n  element.className = `flickity-button flickity-prev-next-button ${this.increment}`;\n  let label = this.isPrevious ? 'Previous' : 'Next';\n  // prevent button from submitting form https://stackoverflow.com/a/10836076/182183\n  element.setAttribute( 'type', 'button' );\n  element.setAttribute( 'aria-label', label );\n  // init as disabled\n  this.disable();\n  // create arrow\n  let svg = this.createSVG( label, arrowShape );\n  element.append( svg );\n};\n\nPrevNextButton.prototype.createSVG = function( label, arrowShape ) {\n  let svg = document.createElementNS( svgURI, 'svg' );\n  svg.setAttribute( 'class', 'flickity-button-icon' );\n  svg.setAttribute( 'viewBox', '0 0 100 100' );\n  // add title #1189\n  let title = document.createElementNS( svgURI, 'title' );\n  title.append( label );\n  // add path\n  let path = document.createElementNS( svgURI, 'path' );\n  let pathMovements = getArrowMovements( arrowShape );\n  path.setAttribute( 'd', pathMovements );\n  path.setAttribute( 'class', 'arrow' );\n  // rotate arrow\n  if ( !this.isLeft ) {\n    path.setAttribute( 'transform', 'translate(100, 100) rotate(180)' );\n  }\n  svg.append( title, path );\n  return svg;\n};\n\n// get SVG path movmement\nfunction getArrowMovements( shape ) {\n  // use shape as movement if string\n  if ( typeof shape == 'string' ) return shape;\n\n  let { x0, x1, x2, x3, y1, y2 } = shape;\n\n  // create movement string\n  return `M ${x0}, 50\n    L ${x1}, ${y1 + 50}\n    L ${x2}, ${y2 + 50}\n    L ${x3}, 50\n    L ${x2}, ${50 - y2}\n    L ${x1}, ${50 - y1}\n    Z`;\n}\n\n// -----  ----- //\n\nPrevNextButton.prototype.enable = function() {\n  this.element.removeAttribute('disabled');\n};\n\nPrevNextButton.prototype.disable = function() {\n  this.element.setAttribute( 'disabled', true );\n};\n\n// -------------------------- Flickity prototype -------------------------- //\n\nObject.assign( Flickity.defaults, {\n  prevNextButtons: true,\n  arrowShape: {\n    x0: 10,\n    x1: 60, y1: 50,\n    x2: 70, y2: 40,\n    x3: 30,\n  },\n} );\n\nFlickity.create.prevNextButtons = function() {\n  if ( !this.options.prevNextButtons ) return;\n\n  let { rightToLeft, arrowShape } = this.options;\n  let prevDirection = rightToLeft ? 'right' : 'left';\n  let nextDirection = rightToLeft ? 'left' : 'right';\n  this.prevButton = new PrevNextButton( 'previous', prevDirection, arrowShape );\n  this.nextButton = new PrevNextButton( 'next', nextDirection, arrowShape );\n  this.focusableElems.push( this.prevButton.element );\n  this.focusableElems.push( this.nextButton.element );\n\n  this.handlePrevButtonClick = () => {\n    this.uiChange();\n    this.previous();\n  };\n\n  this.handleNextButtonClick = () => {\n    this.uiChange();\n    this.next();\n  };\n\n  this.on( 'activate', this.activatePrevNextButtons );\n  this.on( 'select', this.updatePrevNextButtons );\n};\n\nlet proto = Flickity.prototype;\n\nproto.updatePrevNextButtons = function() {\n  let lastIndex = this.slides.length ? this.slides.length - 1 : 0;\n  this.updatePrevNextButton( this.prevButton, 0 );\n  this.updatePrevNextButton( this.nextButton, lastIndex );\n};\n\nproto.updatePrevNextButton = function( button, disabledIndex ) {\n  // enable is wrapAround and at least 2 slides\n  if ( this.isWrapping && this.slides.length > 1 ) {\n    button.enable();\n    return;\n  }\n\n  let isEnabled = this.selectedIndex !== disabledIndex;\n  button[ isEnabled ? 'enable' : 'disable' ]();\n  // if disabling button that is focused,\n  // shift focus to element to maintain keyboard accessibility\n  let isDisabledFocused = !isEnabled && document.activeElement === button.element;\n  if ( isDisabledFocused ) this.focus();\n};\n\nproto.activatePrevNextButtons = function() {\n  this.prevButton.element.addEventListener( 'click', this.handlePrevButtonClick );\n  this.nextButton.element.addEventListener( 'click', this.handleNextButtonClick );\n  this.element.append( this.prevButton.element, this.nextButton.element );\n  this.on( 'deactivate', this.deactivatePrevNextButtons );\n};\n\nproto.deactivatePrevNextButtons = function() {\n  this.prevButton.element.remove();\n  this.nextButton.element.remove();\n  this.prevButton.element.removeEventListener( 'click', this.handlePrevButtonClick );\n  this.nextButton.element.removeEventListener( 'click', this.handleNextButtonClick );\n  this.off( 'deactivate', this.deactivatePrevNextButtons );\n};\n\n// --------------------------  -------------------------- //\n\nFlickity.PrevNextButton = PrevNextButton;\n\nreturn Flickity;\n\n} ) );\n","// slide\n( function( window, factory ) {\n  // universal module definition\n  if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory();\n  } else {\n    // browser global\n    window.Flickity = window.Flickity || {};\n    window.Flickity.Slide = factory();\n  }\n\n}( typeof window != 'undefined' ? window : this, function factory() {\n\nfunction Slide( beginMargin, endMargin, cellAlign ) {\n  this.beginMargin = beginMargin;\n  this.endMargin = endMargin;\n  this.cellAlign = cellAlign;\n  this.cells = [];\n  this.outerWidth = 0;\n  this.height = 0;\n}\n\nlet proto = Slide.prototype;\n\nproto.addCell = function( cell ) {\n  this.cells.push( cell );\n  this.outerWidth += cell.size.outerWidth;\n  this.height = Math.max( cell.size.outerHeight, this.height );\n  // first cell stuff\n  if ( this.cells.length === 1 ) {\n    this.x = cell.x; // x comes from first cell\n    this.firstMargin = cell.size[ this.beginMargin ];\n  }\n};\n\nproto.updateTarget = function() {\n  let lastCell = this.getLastCell();\n  let lastMargin = lastCell ? lastCell.size[ this.endMargin ] : 0;\n  let slideWidth = this.outerWidth - ( this.firstMargin + lastMargin );\n  this.target = this.x + this.firstMargin + slideWidth * this.cellAlign;\n};\n\nproto.getLastCell = function() {\n  return this.cells[ this.cells.length - 1 ];\n};\n\nproto.select = function() {\n  this.cells.forEach( ( cell ) => cell.select() );\n};\n\nproto.unselect = function() {\n  this.cells.forEach( ( cell ) => cell.unselect() );\n};\n\nproto.getCellElements = function() {\n  return this.cells.map( ( cell ) => cell.element );\n};\n\nreturn Slide;\n\n} ) );\n","/*!\n * Infinite Scroll v2.0.4\n * measure size of elements\n * MIT license\n */\n\n( function( window, factory ) {\n  if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory();\n  } else {\n    // browser global\n    window.getSize = factory();\n  }\n\n} )( window, function factory() {\n\n// -------------------------- helpers -------------------------- //\n\n// get a number from a string, not a percentage\nfunction getStyleSize( value ) {\n  let num = parseFloat( value );\n  // not a percent like '100%', and a number\n  let isValid = value.indexOf('%') == -1 && !isNaN( num );\n  return isValid && num;\n}\n\n// -------------------------- measurements -------------------------- //\n\nlet measurements = [\n  'paddingLeft',\n  'paddingRight',\n  'paddingTop',\n  'paddingBottom',\n  'marginLeft',\n  'marginRight',\n  'marginTop',\n  'marginBottom',\n  'borderLeftWidth',\n  'borderRightWidth',\n  'borderTopWidth',\n  'borderBottomWidth',\n];\n\nlet measurementsLength = measurements.length;\n\nfunction getZeroSize() {\n  let size = {\n    width: 0,\n    height: 0,\n    innerWidth: 0,\n    innerHeight: 0,\n    outerWidth: 0,\n    outerHeight: 0,\n  };\n  measurements.forEach( ( measurement ) => {\n    size[ measurement ] = 0;\n  } );\n  return size;\n}\n\n// -------------------------- getSize -------------------------- //\n\nfunction getSize( elem ) {\n  // use querySeletor if elem is string\n  if ( typeof elem == 'string' ) elem = document.querySelector( elem );\n\n  // do not proceed on non-objects\n  let isElement = elem && typeof elem == 'object' && elem.nodeType;\n  if ( !isElement ) return;\n\n  let style = getComputedStyle( elem );\n\n  // if hidden, everything is 0\n  if ( style.display == 'none' ) return getZeroSize();\n\n  let size = {};\n  size.width = elem.offsetWidth;\n  size.height = elem.offsetHeight;\n\n  let isBorderBox = size.isBorderBox = style.boxSizing == 'border-box';\n\n  // get all measurements\n  measurements.forEach( ( measurement ) => {\n    let value = style[ measurement ];\n    let num = parseFloat( value );\n    // any 'auto', 'medium' value will be 0\n    size[ measurement ] = !isNaN( num ) ? num : 0;\n  } );\n\n  let paddingWidth = size.paddingLeft + size.paddingRight;\n  let paddingHeight = size.paddingTop + size.paddingBottom;\n  let marginWidth = size.marginLeft + size.marginRight;\n  let marginHeight = size.marginTop + size.marginBottom;\n  let borderWidth = size.borderLeftWidth + size.borderRightWidth;\n  let borderHeight = size.borderTopWidth + size.borderBottomWidth;\n\n  // overwrite width and height if we can get it from style\n  let styleWidth = getStyleSize( style.width );\n  if ( styleWidth !== false ) {\n    size.width = styleWidth +\n      // add padding and border unless it's already including it\n      ( isBorderBox ? 0 : paddingWidth + borderWidth );\n  }\n\n  let styleHeight = getStyleSize( style.height );\n  if ( styleHeight !== false ) {\n    size.height = styleHeight +\n      // add padding and border unless it's already including it\n      ( isBorderBox ? 0 : paddingHeight + borderHeight );\n  }\n\n  size.innerWidth = size.width - ( paddingWidth + borderWidth );\n  size.innerHeight = size.height - ( paddingHeight + borderHeight );\n\n  size.outerWidth = size.width + marginWidth;\n  size.outerHeight = size.height + marginHeight;\n\n  return size;\n}\n\nreturn getSize;\n\n} );\n","/*!\n * imagesLoaded v5.0.0\n * JavaScript is all like \"You images are done yet or what?\"\n * MIT License\n */\n\n( function( window, factory ) {\n  // universal module definition\n  if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory( window, require('ev-emitter') );\n  } else {\n    // browser global\n    window.imagesLoaded = factory( window, window.EvEmitter );\n  }\n\n} )( typeof window !== 'undefined' ? window : this,\n    function factory( window, EvEmitter ) {\n\nlet $ = window.jQuery;\nlet console = window.console;\n\n// -------------------------- helpers -------------------------- //\n\n// turn element or nodeList into an array\nfunction makeArray( obj ) {\n  // use object if already an array\n  if ( Array.isArray( obj ) ) return obj;\n\n  let isArrayLike = typeof obj == 'object' && typeof obj.length == 'number';\n  // convert nodeList to array\n  if ( isArrayLike ) return [ ...obj ];\n\n  // array of single index\n  return [ obj ];\n}\n\n// -------------------------- imagesLoaded -------------------------- //\n\n/**\n * @param {[Array, Element, NodeList, String]} elem\n * @param {[Object, Function]} options - if function, use as callback\n * @param {Function} onAlways - callback function\n * @returns {ImagesLoaded}\n */\nfunction ImagesLoaded( elem, options, onAlways ) {\n  // coerce ImagesLoaded() without new, to be new ImagesLoaded()\n  if ( !( this instanceof ImagesLoaded ) ) {\n    return new ImagesLoaded( elem, options, onAlways );\n  }\n  // use elem as selector string\n  let queryElem = elem;\n  if ( typeof elem == 'string' ) {\n    queryElem = document.querySelectorAll( elem );\n  }\n  // bail if bad element\n  if ( !queryElem ) {\n    console.error(`Bad element for imagesLoaded ${queryElem || elem}`);\n    return;\n  }\n\n  this.elements = makeArray( queryElem );\n  this.options = {};\n  // shift arguments if no options set\n  if ( typeof options == 'function' ) {\n    onAlways = options;\n  } else {\n    Object.assign( this.options, options );\n  }\n\n  if ( onAlways ) this.on( 'always', onAlways );\n\n  this.getImages();\n  // add jQuery Deferred object\n  if ( $ ) this.jqDeferred = new $.Deferred();\n\n  // HACK check async to allow time to bind listeners\n  setTimeout( this.check.bind( this ) );\n}\n\nImagesLoaded.prototype = Object.create( EvEmitter.prototype );\n\nImagesLoaded.prototype.getImages = function() {\n  this.images = [];\n\n  // filter & find items if we have an item selector\n  this.elements.forEach( this.addElementImages, this );\n};\n\nconst elementNodeTypes = [ 1, 9, 11 ];\n\n/**\n * @param {Node} elem\n */\nImagesLoaded.prototype.addElementImages = function( elem ) {\n  // filter siblings\n  if ( elem.nodeName === 'IMG' ) {\n    this.addImage( elem );\n  }\n  // get background image on element\n  if ( this.options.background === true ) {\n    this.addElementBackgroundImages( elem );\n  }\n\n  // find children\n  // no non-element nodes, #143\n  let { nodeType } = elem;\n  if ( !nodeType || !elementNodeTypes.includes( nodeType ) ) return;\n\n  let childImgs = elem.querySelectorAll('img');\n  // concat childElems to filterFound array\n  for ( let img of childImgs ) {\n    this.addImage( img );\n  }\n\n  // get child background images\n  if ( typeof this.options.background == 'string' ) {\n    let children = elem.querySelectorAll( this.options.background );\n    for ( let child of children ) {\n      this.addElementBackgroundImages( child );\n    }\n  }\n};\n\nconst reURL = /url\\((['\"])?(.*?)\\1\\)/gi;\n\nImagesLoaded.prototype.addElementBackgroundImages = function( elem ) {\n  let style = getComputedStyle( elem );\n  // Firefox returns null if in a hidden iframe https://bugzil.la/548397\n  if ( !style ) return;\n\n  // get url inside url(\"...\")\n  let matches = reURL.exec( style.backgroundImage );\n  while ( matches !== null ) {\n    let url = matches && matches[2];\n    if ( url ) {\n      this.addBackground( url, elem );\n    }\n    matches = reURL.exec( style.backgroundImage );\n  }\n};\n\n/**\n * @param {Image} img\n */\nImagesLoaded.prototype.addImage = function( img ) {\n  let loadingImage = new LoadingImage( img );\n  this.images.push( loadingImage );\n};\n\nImagesLoaded.prototype.addBackground = function( url, elem ) {\n  let background = new Background( url, elem );\n  this.images.push( background );\n};\n\nImagesLoaded.prototype.check = function() {\n  this.progressedCount = 0;\n  this.hasAnyBroken = false;\n  // complete if no images\n  if ( !this.images.length ) {\n    this.complete();\n    return;\n  }\n\n  /* eslint-disable-next-line func-style */\n  let onProgress = ( image, elem, message ) => {\n    // HACK - Chrome triggers event before object properties have changed. #83\n    setTimeout( () => {\n      this.progress( image, elem, message );\n    } );\n  };\n\n  this.images.forEach( function( loadingImage ) {\n    loadingImage.once( 'progress', onProgress );\n    loadingImage.check();\n  } );\n};\n\nImagesLoaded.prototype.progress = function( image, elem, message ) {\n  this.progressedCount++;\n  this.hasAnyBroken = this.hasAnyBroken || !image.isLoaded;\n  // progress event\n  this.emitEvent( 'progress', [ this, image, elem ] );\n  if ( this.jqDeferred && this.jqDeferred.notify ) {\n    this.jqDeferred.notify( this, image );\n  }\n  // check if completed\n  if ( this.progressedCount === this.images.length ) {\n    this.complete();\n  }\n\n  if ( this.options.debug && console ) {\n    console.log( `progress: ${message}`, image, elem );\n  }\n};\n\nImagesLoaded.prototype.complete = function() {\n  let eventName = this.hasAnyBroken ? 'fail' : 'done';\n  this.isComplete = true;\n  this.emitEvent( eventName, [ this ] );\n  this.emitEvent( 'always', [ this ] );\n  if ( this.jqDeferred ) {\n    let jqMethod = this.hasAnyBroken ? 'reject' : 'resolve';\n    this.jqDeferred[ jqMethod ]( this );\n  }\n};\n\n// --------------------------  -------------------------- //\n\nfunction LoadingImage( img ) {\n  this.img = img;\n}\n\nLoadingImage.prototype = Object.create( EvEmitter.prototype );\n\nLoadingImage.prototype.check = function() {\n  // If complete is true and browser supports natural sizes,\n  // try to check for image status manually.\n  let isComplete = this.getIsImageComplete();\n  if ( isComplete ) {\n    // report based on naturalWidth\n    this.confirm( this.img.naturalWidth !== 0, 'naturalWidth' );\n    return;\n  }\n\n  // If none of the checks above matched, simulate loading on detached element.\n  this.proxyImage = new Image();\n  // add crossOrigin attribute. #204\n  if ( this.img.crossOrigin ) {\n    this.proxyImage.crossOrigin = this.img.crossOrigin;\n  }\n  this.proxyImage.addEventListener( 'load', this );\n  this.proxyImage.addEventListener( 'error', this );\n  // bind to image as well for Firefox. #191\n  this.img.addEventListener( 'load', this );\n  this.img.addEventListener( 'error', this );\n  this.proxyImage.src = this.img.currentSrc || this.img.src;\n};\n\nLoadingImage.prototype.getIsImageComplete = function() {\n  // check for non-zero, non-undefined naturalWidth\n  // fixes Safari+InfiniteScroll+Masonry bug infinite-scroll#671\n  return this.img.complete && this.img.naturalWidth;\n};\n\nLoadingImage.prototype.confirm = function( isLoaded, message ) {\n  this.isLoaded = isLoaded;\n  let { parentNode } = this.img;\n  // emit progress with parent <picture> or self <img>\n  let elem = parentNode.nodeName === 'PICTURE' ? parentNode : this.img;\n  this.emitEvent( 'progress', [ this, elem, message ] );\n};\n\n// ----- events ----- //\n\n// trigger specified handler for event type\nLoadingImage.prototype.handleEvent = function( event ) {\n  let method = 'on' + event.type;\n  if ( this[ method ] ) {\n    this[ method ]( event );\n  }\n};\n\nLoadingImage.prototype.onload = function() {\n  this.confirm( true, 'onload' );\n  this.unbindEvents();\n};\n\nLoadingImage.prototype.onerror = function() {\n  this.confirm( false, 'onerror' );\n  this.unbindEvents();\n};\n\nLoadingImage.prototype.unbindEvents = function() {\n  this.proxyImage.removeEventListener( 'load', this );\n  this.proxyImage.removeEventListener( 'error', this );\n  this.img.removeEventListener( 'load', this );\n  this.img.removeEventListener( 'error', this );\n};\n\n// -------------------------- Background -------------------------- //\n\nfunction Background( url, element ) {\n  this.url = url;\n  this.element = element;\n  this.img = new Image();\n}\n\n// inherit LoadingImage prototype\nBackground.prototype = Object.create( LoadingImage.prototype );\n\nBackground.prototype.check = function() {\n  this.img.addEventListener( 'load', this );\n  this.img.addEventListener( 'error', this );\n  this.img.src = this.url;\n  // check if image is already complete\n  let isComplete = this.getIsImageComplete();\n  if ( isComplete ) {\n    this.confirm( this.img.naturalWidth !== 0, 'naturalWidth' );\n    this.unbindEvents();\n  }\n};\n\nBackground.prototype.unbindEvents = function() {\n  this.img.removeEventListener( 'load', this );\n  this.img.removeEventListener( 'error', this );\n};\n\nBackground.prototype.confirm = function( isLoaded, message ) {\n  this.isLoaded = isLoaded;\n  this.emitEvent( 'progress', [ this, this.element, message ] );\n};\n\n// -------------------------- jQuery -------------------------- //\n\nImagesLoaded.makeJQueryPlugin = function( jQuery ) {\n  jQuery = jQuery || window.jQuery;\n  if ( !jQuery ) return;\n\n  // set local variable\n  $ = jQuery;\n  // $().imagesLoaded()\n  $.fn.imagesLoaded = function( options, onAlways ) {\n    let instance = new ImagesLoaded( this, options, onAlways );\n    return instance.jqDeferred.promise( $( this ) );\n  };\n};\n// try making plugin\nImagesLoaded.makeJQueryPlugin();\n\n// --------------------------  -------------------------- //\n\nreturn ImagesLoaded;\n\n} );\n","/*!\n * Unidragger v3.0.1\n * Draggable base class\n * MIT license\n */\n\n( function( window, factory ) {\n  // universal module definition\n  if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory(\n        window,\n        require('ev-emitter'),\n    );\n  } else {\n    // browser global\n    window.Unidragger = factory(\n        window,\n        window.EvEmitter,\n    );\n  }\n\n}( typeof window != 'undefined' ? window : this, function factory( window, EvEmitter ) {\n\nfunction Unidragger() {}\n\n// inherit EvEmitter\nlet proto = Unidragger.prototype = Object.create( EvEmitter.prototype );\n\n// ----- bind start ----- //\n\n// trigger handler methods for events\nproto.handleEvent = function( event ) {\n  let method = 'on' + event.type;\n  if ( this[ method ] ) {\n    this[ method ]( event );\n  }\n};\n\nlet startEvent, activeEvents;\nif ( 'ontouchstart' in window ) {\n  // HACK prefer Touch Events as you can preventDefault on touchstart to\n  // disable scroll in iOS & mobile Chrome metafizzy/flickity#1177\n  startEvent = 'touchstart';\n  activeEvents = [ 'touchmove', 'touchend', 'touchcancel' ];\n} else if ( window.PointerEvent ) {\n  // Pointer Events\n  startEvent = 'pointerdown';\n  activeEvents = [ 'pointermove', 'pointerup', 'pointercancel' ];\n} else {\n  // mouse events\n  startEvent = 'mousedown';\n  activeEvents = [ 'mousemove', 'mouseup' ];\n}\n\n// prototype so it can be overwriteable by Flickity\nproto.touchActionValue = 'none';\n\nproto.bindHandles = function() {\n  this._bindHandles( 'addEventListener', this.touchActionValue );\n};\n\nproto.unbindHandles = function() {\n  this._bindHandles( 'removeEventListener', '' );\n};\n\n/**\n * Add or remove start event\n * @param {String} bindMethod - addEventListener or removeEventListener\n * @param {String} touchAction - value for touch-action CSS property\n */\nproto._bindHandles = function( bindMethod, touchAction ) {\n  this.handles.forEach( ( handle ) => {\n    handle[ bindMethod ]( startEvent, this );\n    handle[ bindMethod ]( 'click', this );\n    // touch-action: none to override browser touch gestures. metafizzy/flickity#540\n    if ( window.PointerEvent ) handle.style.touchAction = touchAction;\n  } );\n};\n\nproto.bindActivePointerEvents = function() {\n  activeEvents.forEach( ( eventName ) => {\n    window.addEventListener( eventName, this );\n  } );\n};\n\nproto.unbindActivePointerEvents = function() {\n  activeEvents.forEach( ( eventName ) => {\n    window.removeEventListener( eventName, this );\n  } );\n};\n\n// ----- event handler helpers ----- //\n\n// trigger method with matching pointer\nproto.withPointer = function( methodName, event ) {\n  if ( event.pointerId === this.pointerIdentifier ) {\n    this[ methodName ]( event, event );\n  }\n};\n\n// trigger method with matching touch\nproto.withTouch = function( methodName, event ) {\n  let touch;\n  for ( let changedTouch of event.changedTouches ) {\n    if ( changedTouch.identifier === this.pointerIdentifier ) {\n      touch = changedTouch;\n    }\n  }\n  if ( touch ) this[ methodName ]( event, touch );\n};\n\n// ----- start event ----- //\n\nproto.onmousedown = function( event ) {\n  this.pointerDown( event, event );\n};\n\nproto.ontouchstart = function( event ) {\n  this.pointerDown( event, event.changedTouches[0] );\n};\n\nproto.onpointerdown = function( event ) {\n  this.pointerDown( event, event );\n};\n\n// nodes that have text fields\nconst cursorNodes = [ 'TEXTAREA', 'INPUT', 'SELECT', 'OPTION' ];\n// input types that do not have text fields\nconst clickTypes = [ 'radio', 'checkbox', 'button', 'submit', 'image', 'file' ];\n\n/**\n * any time you set `event, pointer` it refers to:\n * @param {Event} event\n * @param {Event | Touch} pointer\n */\nproto.pointerDown = function( event, pointer ) {\n  // dismiss multi-touch taps, right clicks, and clicks on text fields\n  let isCursorNode = cursorNodes.includes( event.target.nodeName );\n  let isClickType = clickTypes.includes( event.target.type );\n  let isOkayElement = !isCursorNode || isClickType;\n  let isOkay = !this.isPointerDown && !event.button && isOkayElement;\n  if ( !isOkay ) return;\n\n  this.isPointerDown = true;\n  // save pointer identifier to match up touch events\n  this.pointerIdentifier = pointer.pointerId !== undefined ?\n    // pointerId for pointer events, touch.indentifier for touch events\n    pointer.pointerId : pointer.identifier;\n  // track position for move\n  this.pointerDownPointer = {\n    pageX: pointer.pageX,\n    pageY: pointer.pageY,\n  };\n\n  this.bindActivePointerEvents();\n  this.emitEvent( 'pointerDown', [ event, pointer ] );\n};\n\n// ----- move ----- //\n\nproto.onmousemove = function( event ) {\n  this.pointerMove( event, event );\n};\n\nproto.onpointermove = function( event ) {\n  this.withPointer( 'pointerMove', event );\n};\n\nproto.ontouchmove = function( event ) {\n  this.withTouch( 'pointerMove', event );\n};\n\nproto.pointerMove = function( event, pointer ) {\n  let moveVector = {\n    x: pointer.pageX - this.pointerDownPointer.pageX,\n    y: pointer.pageY - this.pointerDownPointer.pageY,\n  };\n  this.emitEvent( 'pointerMove', [ event, pointer, moveVector ] );\n  // start drag if pointer has moved far enough to start drag\n  let isDragStarting = !this.isDragging && this.hasDragStarted( moveVector );\n  if ( isDragStarting ) this.dragStart( event, pointer );\n  if ( this.isDragging ) this.dragMove( event, pointer, moveVector );\n};\n\n// condition if pointer has moved far enough to start drag\nproto.hasDragStarted = function( moveVector ) {\n  return Math.abs( moveVector.x ) > 3 || Math.abs( moveVector.y ) > 3;\n};\n\n// ----- drag ----- //\n\nproto.dragStart = function( event, pointer ) {\n  this.isDragging = true;\n  this.isPreventingClicks = true; // set flag to prevent clicks\n  this.emitEvent( 'dragStart', [ event, pointer ] );\n};\n\nproto.dragMove = function( event, pointer, moveVector ) {\n  this.emitEvent( 'dragMove', [ event, pointer, moveVector ] );\n};\n\n// ----- end ----- //\n\nproto.onmouseup = function( event ) {\n  this.pointerUp( event, event );\n};\n\nproto.onpointerup = function( event ) {\n  this.withPointer( 'pointerUp', event );\n};\n\nproto.ontouchend = function( event ) {\n  this.withTouch( 'pointerUp', event );\n};\n\nproto.pointerUp = function( event, pointer ) {\n  this.pointerDone();\n  this.emitEvent( 'pointerUp', [ event, pointer ] );\n\n  if ( this.isDragging ) {\n    this.dragEnd( event, pointer );\n  } else {\n    // pointer didn't move enough for drag to start\n    this.staticClick( event, pointer );\n  }\n};\n\nproto.dragEnd = function( event, pointer ) {\n  this.isDragging = false; // reset flag\n  // re-enable clicking async\n  setTimeout( () => delete this.isPreventingClicks );\n\n  this.emitEvent( 'dragEnd', [ event, pointer ] );\n};\n\n// triggered on pointer up & pointer cancel\nproto.pointerDone = function() {\n  this.isPointerDown = false;\n  delete this.pointerIdentifier;\n  this.unbindActivePointerEvents();\n  this.emitEvent('pointerDone');\n};\n\n// ----- cancel ----- //\n\nproto.onpointercancel = function( event ) {\n  this.withPointer( 'pointerCancel', event );\n};\n\nproto.ontouchcancel = function( event ) {\n  this.withTouch( 'pointerCancel', event );\n};\n\nproto.pointerCancel = function( event, pointer ) {\n  this.pointerDone();\n  this.emitEvent( 'pointerCancel', [ event, pointer ] );\n};\n\n// ----- click ----- //\n\n// handle all clicks and prevent clicks when dragging\nproto.onclick = function( event ) {\n  if ( this.isPreventingClicks ) event.preventDefault();\n};\n\n// triggered after pointer down & up with no/tiny movement\nproto.staticClick = function( event, pointer ) {\n  // ignore emulated mouse up clicks\n  let isMouseup = event.type === 'mouseup';\n  if ( isMouseup && this.isIgnoringMouseUp ) return;\n\n  this.emitEvent( 'staticClick', [ event, pointer ] );\n\n  // set flag for emulated clicks 300ms after touchend\n  if ( isMouseup ) {\n    this.isIgnoringMouseUp = true;\n    // reset flag after 400ms\n    setTimeout( () => {\n      delete this.isIgnoringMouseUp;\n    }, 400 );\n  }\n};\n\n// -----  ----- //\n\nreturn Unidragger;\n\n} ) );\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","/*!\nWaypoints - 4.0.1\nCopyright © 2011-2016 Caleb Troughton\nLicensed under the MIT license.\nhttps://github.com/imakewebthings/waypoints/blob/master/licenses.txt\n*/\n!function(){\"use strict\";function t(n){if(!n)throw new Error(\"No options passed to Waypoint constructor\");if(!n.element)throw new Error(\"No element option passed to Waypoint constructor\");if(!n.handler)throw new Error(\"No handler option passed to Waypoint constructor\");this.key=\"waypoint-\"+e,this.options=t.Adapter.extend({},t.defaults,n),this.element=this.options.element,this.adapter=new t.Adapter(this.element),this.callback=n.handler,this.axis=this.options.horizontal?\"horizontal\":\"vertical\",this.enabled=this.options.enabled,this.triggerPoint=null,this.group=t.Group.findOrCreate({name:this.options.group,axis:this.axis}),this.context=t.Context.findOrCreateByElement(this.options.context),t.offsetAliases[this.options.offset]&&(this.options.offset=t.offsetAliases[this.options.offset]),this.group.add(this),this.context.add(this),i[this.key]=this,e+=1}var e=0,i={};t.prototype.queueTrigger=function(t){this.group.queueTrigger(this,t)},t.prototype.trigger=function(t){this.enabled&&this.callback&&this.callback.apply(this,t)},t.prototype.destroy=function(){this.context.remove(this),this.group.remove(this),delete i[this.key]},t.prototype.disable=function(){return this.enabled=!1,this},t.prototype.enable=function(){return this.context.refresh(),this.enabled=!0,this},t.prototype.next=function(){return this.group.next(this)},t.prototype.previous=function(){return this.group.previous(this)},t.invokeAll=function(t){var e=[];for(var n in i)e.push(i[n]);for(var o=0,r=e.length;r>o;o++)e[o][t]()},t.destroyAll=function(){t.invokeAll(\"destroy\")},t.disableAll=function(){t.invokeAll(\"disable\")},t.enableAll=function(){t.Context.refreshAll();for(var e in i)i[e].enabled=!0;return this},t.refreshAll=function(){t.Context.refreshAll()},t.viewportHeight=function(){return window.innerHeight||document.documentElement.clientHeight},t.viewportWidth=function(){return document.documentElement.clientWidth},t.adapters=[],t.defaults={context:window,continuous:!0,enabled:!0,group:\"default\",horizontal:!1,offset:0},t.offsetAliases={\"bottom-in-view\":function(){return this.context.innerHeight()-this.adapter.outerHeight()},\"right-in-view\":function(){return this.context.innerWidth()-this.adapter.outerWidth()}},window.Waypoint=t}(),function(){\"use strict\";function t(t){window.setTimeout(t,1e3/60)}function e(t){this.element=t,this.Adapter=o.Adapter,this.adapter=new this.Adapter(t),this.key=\"waypoint-context-\"+i,this.didScroll=!1,this.didResize=!1,this.oldScroll={x:this.adapter.scrollLeft(),y:this.adapter.scrollTop()},this.waypoints={vertical:{},horizontal:{}},t.waypointContextKey=this.key,n[t.waypointContextKey]=this,i+=1,o.windowContext||(o.windowContext=!0,o.windowContext=new e(window)),this.createThrottledScrollHandler(),this.createThrottledResizeHandler()}var i=0,n={},o=window.Waypoint,r=window.onload;e.prototype.add=function(t){var e=t.options.horizontal?\"horizontal\":\"vertical\";this.waypoints[e][t.key]=t,this.refresh()},e.prototype.checkEmpty=function(){var t=this.Adapter.isEmptyObject(this.waypoints.horizontal),e=this.Adapter.isEmptyObject(this.waypoints.vertical),i=this.element==this.element.window;t&&e&&!i&&(this.adapter.off(\".waypoints\"),delete n[this.key])},e.prototype.createThrottledResizeHandler=function(){function t(){e.handleResize(),e.didResize=!1}var e=this;this.adapter.on(\"resize.waypoints\",function(){e.didResize||(e.didResize=!0,o.requestAnimationFrame(t))})},e.prototype.createThrottledScrollHandler=function(){function t(){e.handleScroll(),e.didScroll=!1}var e=this;this.adapter.on(\"scroll.waypoints\",function(){(!e.didScroll||o.isTouch)&&(e.didScroll=!0,o.requestAnimationFrame(t))})},e.prototype.handleResize=function(){o.Context.refreshAll()},e.prototype.handleScroll=function(){var t={},e={horizontal:{newScroll:this.adapter.scrollLeft(),oldScroll:this.oldScroll.x,forward:\"right\",backward:\"left\"},vertical:{newScroll:this.adapter.scrollTop(),oldScroll:this.oldScroll.y,forward:\"down\",backward:\"up\"}};for(var i in e){var n=e[i],o=n.newScroll>n.oldScroll,r=o?n.forward:n.backward;for(var s in this.waypoints[i]){var l=this.waypoints[i][s];if(null!==l.triggerPoint){var a=n.oldScroll<l.triggerPoint,h=n.newScroll>=l.triggerPoint,p=a&&h,u=!a&&!h;(p||u)&&(l.queueTrigger(r),t[l.group.id]=l.group)}}}for(var d in t)t[d].flushTriggers();this.oldScroll={x:e.horizontal.newScroll,y:e.vertical.newScroll}},e.prototype.innerHeight=function(){return this.element==this.element.window?o.viewportHeight():this.adapter.innerHeight()},e.prototype.remove=function(t){delete this.waypoints[t.axis][t.key],this.checkEmpty()},e.prototype.innerWidth=function(){return this.element==this.element.window?o.viewportWidth():this.adapter.innerWidth()},e.prototype.destroy=function(){var t=[];for(var e in this.waypoints)for(var i in this.waypoints[e])t.push(this.waypoints[e][i]);for(var n=0,o=t.length;o>n;n++)t[n].destroy()},e.prototype.refresh=function(){var t,e=this.element==this.element.window,i=e?void 0:this.adapter.offset(),n={};this.handleScroll(),t={horizontal:{contextOffset:e?0:i.left,contextScroll:e?0:this.oldScroll.x,contextDimension:this.innerWidth(),oldScroll:this.oldScroll.x,forward:\"right\",backward:\"left\",offsetProp:\"left\"},vertical:{contextOffset:e?0:i.top,contextScroll:e?0:this.oldScroll.y,contextDimension:this.innerHeight(),oldScroll:this.oldScroll.y,forward:\"down\",backward:\"up\",offsetProp:\"top\"}};for(var r in t){var s=t[r];for(var l in this.waypoints[r]){var a,h,p,u,d,f=this.waypoints[r][l],c=f.options.offset,w=f.triggerPoint,y=0,g=null==w;f.element!==f.element.window&&(y=f.adapter.offset()[s.offsetProp]),\"function\"==typeof c?c=c.apply(f):\"string\"==typeof c&&(c=parseFloat(c),f.options.offset.indexOf(\"%\")>-1&&(c=Math.ceil(s.contextDimension*c/100))),a=s.contextScroll-s.contextOffset,f.triggerPoint=Math.floor(y+a-c),h=w<s.oldScroll,p=f.triggerPoint>=s.oldScroll,u=h&&p,d=!h&&!p,!g&&u?(f.queueTrigger(s.backward),n[f.group.id]=f.group):!g&&d?(f.queueTrigger(s.forward),n[f.group.id]=f.group):g&&s.oldScroll>=f.triggerPoint&&(f.queueTrigger(s.forward),n[f.group.id]=f.group)}}return o.requestAnimationFrame(function(){for(var t in n)n[t].flushTriggers()}),this},e.findOrCreateByElement=function(t){return e.findByElement(t)||new e(t)},e.refreshAll=function(){for(var t in n)n[t].refresh()},e.findByElement=function(t){return n[t.waypointContextKey]},window.onload=function(){r&&r(),e.refreshAll()},o.requestAnimationFrame=function(e){var i=window.requestAnimationFrame||window.mozRequestAnimationFrame||window.webkitRequestAnimationFrame||t;i.call(window,e)},o.Context=e}(),function(){\"use strict\";function t(t,e){return t.triggerPoint-e.triggerPoint}function e(t,e){return e.triggerPoint-t.triggerPoint}function i(t){this.name=t.name,this.axis=t.axis,this.id=this.name+\"-\"+this.axis,this.waypoints=[],this.clearTriggerQueues(),n[this.axis][this.name]=this}var n={vertical:{},horizontal:{}},o=window.Waypoint;i.prototype.add=function(t){this.waypoints.push(t)},i.prototype.clearTriggerQueues=function(){this.triggerQueues={up:[],down:[],left:[],right:[]}},i.prototype.flushTriggers=function(){for(var i in this.triggerQueues){var n=this.triggerQueues[i],o=\"up\"===i||\"left\"===i;n.sort(o?e:t);for(var r=0,s=n.length;s>r;r+=1){var l=n[r];(l.options.continuous||r===n.length-1)&&l.trigger([i])}}this.clearTriggerQueues()},i.prototype.next=function(e){this.waypoints.sort(t);var i=o.Adapter.inArray(e,this.waypoints),n=i===this.waypoints.length-1;return n?null:this.waypoints[i+1]},i.prototype.previous=function(e){this.waypoints.sort(t);var i=o.Adapter.inArray(e,this.waypoints);return i?this.waypoints[i-1]:null},i.prototype.queueTrigger=function(t,e){this.triggerQueues[e].push(t)},i.prototype.remove=function(t){var e=o.Adapter.inArray(t,this.waypoints);e>-1&&this.waypoints.splice(e,1)},i.prototype.first=function(){return this.waypoints[0]},i.prototype.last=function(){return this.waypoints[this.waypoints.length-1]},i.findOrCreate=function(t){return n[t.axis][t.name]||new i(t)},o.Group=i}(),function(){\"use strict\";function t(t){return t===t.window}function e(e){return t(e)?e:e.defaultView}function i(t){this.element=t,this.handlers={}}var n=window.Waypoint;i.prototype.innerHeight=function(){var e=t(this.element);return e?this.element.innerHeight:this.element.clientHeight},i.prototype.innerWidth=function(){var e=t(this.element);return e?this.element.innerWidth:this.element.clientWidth},i.prototype.off=function(t,e){function i(t,e,i){for(var n=0,o=e.length-1;o>n;n++){var r=e[n];i&&i!==r||t.removeEventListener(r)}}var n=t.split(\".\"),o=n[0],r=n[1],s=this.element;if(r&&this.handlers[r]&&o)i(s,this.handlers[r][o],e),this.handlers[r][o]=[];else if(o)for(var l in this.handlers)i(s,this.handlers[l][o]||[],e),this.handlers[l][o]=[];else if(r&&this.handlers[r]){for(var a in this.handlers[r])i(s,this.handlers[r][a],e);this.handlers[r]={}}},i.prototype.offset=function(){if(!this.element.ownerDocument)return null;var t=this.element.ownerDocument.documentElement,i=e(this.element.ownerDocument),n={top:0,left:0};return this.element.getBoundingClientRect&&(n=this.element.getBoundingClientRect()),{top:n.top+i.pageYOffset-t.clientTop,left:n.left+i.pageXOffset-t.clientLeft}},i.prototype.on=function(t,e){var i=t.split(\".\"),n=i[0],o=i[1]||\"__default\",r=this.handlers[o]=this.handlers[o]||{},s=r[n]=r[n]||[];s.push(e),this.element.addEventListener(n,e)},i.prototype.outerHeight=function(e){var i,n=this.innerHeight();return e&&!t(this.element)&&(i=window.getComputedStyle(this.element),n+=parseInt(i.marginTop,10),n+=parseInt(i.marginBottom,10)),n},i.prototype.outerWidth=function(e){var i,n=this.innerWidth();return e&&!t(this.element)&&(i=window.getComputedStyle(this.element),n+=parseInt(i.marginLeft,10),n+=parseInt(i.marginRight,10)),n},i.prototype.scrollLeft=function(){var t=e(this.element);return t?t.pageXOffset:this.element.scrollLeft},i.prototype.scrollTop=function(){var t=e(this.element);return t?t.pageYOffset:this.element.scrollTop},i.extend=function(){function t(t,e){if(\"object\"==typeof t&&\"object\"==typeof e)for(var i in e)e.hasOwnProperty(i)&&(t[i]=e[i]);return t}for(var e=Array.prototype.slice.call(arguments),i=1,n=e.length;n>i;i++)t(e[0],e[i]);return e[0]},i.inArray=function(t,e,i){return null==e?-1:e.indexOf(t,i)},i.isEmptyObject=function(t){for(var e in t)return!1;return!0},n.adapters.push({name:\"noframework\",Adapter:i}),n.Adapter=i}();","export default class Header {\n  constructor(elem, APP) {\n    this.elem = elem;\n  }\n\n  init() {}\n}\n","export default class Accordion {\n  constructor(elem, APP) {\n    this.elem = elem;\n    this.triggers = this.elem.querySelectorAll(\".js-accordion-trigger\");\n    this.panels = this.elem.querySelectorAll(\".js-accordion-panel\");\n  }\n\n  togglePanel(index) {\n    const trigger = this.triggers[index];\n    const panel = this.panels[index];\n    const panelHeight = `${panel.querySelector(\".js-accordion-content\").offsetHeight}px`;\n\n    const targetState = panel.classList.toggle(\"expanded\") ? true : false;\n\n    panel.classList[targetState ? \"remove\" : \"add\"](\"animate-out\");\n    panel.classList[targetState ? \"add\" : \"remove\"](\"animate-in\");\n    panel.style.height = targetState ? panelHeight : 0;\n    panel.setAttribute(\"aria-hidden\", !targetState);\n    trigger.setAttribute(\"aria-expanded\", targetState);\n  }\n\n  setTriggerHandler() {\n    this.triggers.forEach((t, i) => {\n      t.addEventListener(\"click\", () => {\n        this.togglePanel(i);\n      });\n    });\n  }\n\n  resizePanel() {\n    this.panels.forEach((elem) => {\n      const targetHeight = elem.querySelector(\"div\").offsetHeight + \"px\";\n      elem.style.height = elem.classList.contains(\"expanded\")\n        ? targetHeight\n        : \"0\";\n    });\n  }\n\n  init() {\n    this.setTriggerHandler();\n\n    window.addEventListener(\"resize\", () => {\n      this.resizePanel();\n    });\n  }\n}\n","export default class Tab {\n  constructor(elem, APP) {\n    this.elem = elem;\n    this.tablist = this.elem.querySelector(\".js-tablist\");\n    this.tabs = this.elem.querySelectorAll('.js-tab:not([disabled=\"true\"])');\n    this.panels = this.elem.querySelectorAll(\".js-panel\");\n    this.currentTab = 0;\n  }\n\n  updateTabs() {\n    this.tabs.forEach((tab, i) => {\n      tab.setAttribute(\"aria-selected\", this.currentTab === i ? true : false);\n      tab.setAttribute(\"tabindex\", this.currentTab === i ? 0 : -1);\n      if (this.currentTab === i) tab.focus();\n    });\n\n    this.panels.forEach((panel, i) => {\n      panel.classList[this.currentTab === i ? \"add\" : \"remove\"](\"is-visible\");\n    });\n  }\n\n  addKeyHandler() {\n    this.tablist.addEventListener(\"keydown\", (e) => {\n      switch (e.key) {\n        case \"ArrowLeft\":\n          this.currentTab--;\n          if (this.currentTab < 0) this.currentTab = this.tabs.length - 1;\n          break;\n\n        case \"ArrowRight\":\n          this.currentTab++;\n          if (this.currentTab >= this.tabs.length) this.currentTab = 0;\n          this.currentTab;\n          break;\n\n        // optional\n        // case \"Home\":\n        //   e.preventDefault();\n        //   this.currentTab = 0;\n        //   break;\n\n        // case \"End\":\n        //   e.preventDefault();\n        //   this.currentTab = this.tabs.length;\n        //   break;\n      }\n\n      this.updateTabs();\n    });\n  }\n\n  tabClickHandler() {\n    this.tabs.forEach((tab, i) => {\n      tab.addEventListener(\"click\", () => {\n        this.currentTab = i;\n        this.updateTabs();\n      });\n    });\n  }\n\n  init() {\n    this.addKeyHandler();\n    this.tabClickHandler();\n  }\n}\n","import { addModalKeyDownHandler } from \"../utils/a11y\";\n\nexport default class Modal {\n  constructor(elem, APP) {\n    this.elem = elem;\n    this.modal = this.elem.querySelector(\".js-modal\");\n    this.dialog = this.elem.querySelector(\".js-modal-dialog\");\n    this.openBtn = this.elem.querySelector(\".js-btn-open\");\n    this.closeBtn = this.elem.querySelector(\".js-btn-close\");\n    this.cancelBtn = this.elem.querySelector(\".js-btn-cancel\");\n    this.okBtn = this.elem.querySelector(\".js-btn-ok\");\n    this.firstFocusableElement = this.closeBtn;\n    this.lastFocusableElement = this.okBtn;\n  }\n\n  openModal() {\n    this.modal.classList.add(\"is-visible\");\n    this.closeBtn.focus();\n  }\n\n  closeModal() {\n    this.modal.classList.remove(\"is-visible\");\n    this.openBtn.focus();\n  }\n\n  init() {\n    addModalKeyDownHandler(\n      this.dialog,\n      this.firstFocusableElement,\n      this.lastFocusableElement\n    );\n\n    this.openBtn.addEventListener(\"click\", () => {\n      this.openModal();\n    });\n\n    this.closeBtn.addEventListener(\"click\", () => {\n      this.closeModal();\n    });\n\n    this.cancelBtn.addEventListener(\"click\", () => {\n      this.closeModal();\n    });\n\n    this.okBtn.addEventListener(\"click\", () => {\n      this.closeModal();\n    });\n\n    this.modal.addEventListener(\"click\", (e) => {\n      if(!this.dialog.contains(e.target)) {\n        this.closeModal();\n      }\n    })\n  }\n}\n","export function addModalKeyDownHandler(\n  target,\n  firstFocusableElement,\n  lastFocusableElement\n) {\n  if (!target || !firstFocusableElement || !lastFocusableElement) return;\n\n  target.addEventListener(\"keydown\", function (e) {\n    if (e.target == firstFocusableElement && e.key == \"Tab\" && e.shiftKey) {\n      e.preventDefault();\n      lastFocusableElement.focus();\n    } else if (\n      e.target == lastFocusableElement &&\n      e.key == \"Tab\" &&\n      !e.shiftKey\n    ) {\n      e.preventDefault();\n      firstFocusableElement.focus();\n    }\n  });\n}\n","export default class Filter {\n  constructor(elem, APP) {\n    this.elem = elem;\n    this.trigger = this.elem.querySelector(\".js-filter-trigger\");\n    this.list = this.elem.querySelector(\".js-filter-list\");\n    this.options = this.elem.querySelectorAll(\".js-filter-options input\");\n    this.filteredResults = this.elem.querySelector(\".js-filter-results\");\n    this.results;\n  }\n\n  updateResults() {\n    this.filteredResults.innerHTML = \"\";\n\n    this.options.forEach((option, index) => {\n      if (!option.checked) return;\n\n      const btn = document.createElement(\"button\");\n      btn.innerHTML = this.options[index].previousElementSibling.innerText;\n      btn.classList.add(\"filter-remove-btn\", \"btn-delete\");\n      this.filteredResults.appendChild(btn);\n\n      btn.addEventListener(\"click\", () => {\n        this.options[index].checked = false;\n        this.updateResults();\n      });\n    });\n  }\n\n  setup() {\n    if (!this.trigger || !this.list) return;\n\n    /* toggle expanded */\n    this.trigger.addEventListener(\"click\", () => {\n      const isExpanded = this.trigger.getAttribute(\"aria-expanded\");\n\n      this.trigger.setAttribute(\n        \"aria-expanded\",\n        isExpanded === \"true\" ? false : true\n      );\n    });\n\n    /* collapse the popup when Escape key is pressed. */\n    this.trigger.addEventListener(\"keydown\", (e) => {\n      const isExpanded = this.trigger.getAttribute(\"aria-expanded\");\n\n      if (e.key === \"Escape\" && isExpanded === \"true\") {\n        this.trigger.setAttribute(\"aria-expanded\", false);\n      }\n    });\n\n    /* collapse the popup when Escape key is pressed. */\n    this.list.addEventListener(\"keydown\", (e) => {\n      var isExpanded =\n        this.trigger.getAttribute(\"aria-expanded\") === \"true\" ? true : false;\n\n      if (e.key === \"Escape\" && isExpanded) {\n        this.trigger.setAttribute(\"aria-expanded\", false);\n        this.trigger.focus();\n      }\n    });\n\n    /** Collapse the popup if the user clicks anywhere outside it. */\n    document.addEventListener(\"click\", (e) => {\n      var isExpanded =\n        this.trigger.getAttribute(\"aria-expanded\") === \"true\" ? true : false;\n\n      if (\n        !this.list.contains(e.target) &&\n        !this.trigger.contains(e.target) &&\n        this.trigger != e.target &&\n        isExpanded\n      ) {\n        this.trigger.setAttribute(\"aria-expanded\", false);\n      }\n    });\n\n    this.options.forEach((option) => {\n      option.addEventListener(\"click\", () => {\n        this.updateResults();\n      });\n    });\n  }\n\n  init() {\n    this.setup();\n  }\n}\n","import Flickity from \"flickity\";\nimport {\n  flickityReadyHandler,\n  flickityChangeHandler,\n  flickitySettleHandler,\n} from \"../utils/flickity\";\n\nexport default class Carousel {\n  constructor(elem, APP) {\n    this.elem = elem;\n    this.carousel = this.elem.querySelector(\".js-slider\");\n    this.dots;\n  }\n\n  setupCarousel() {\n    this.flkty = new Flickity(this.carousel, {\n      accessibility: false,\n      prevNextButtons: true,\n      pageDots: true,\n      autoPlay: false,\n      imagesLoaded: true,\n      cellAlign: \"left\",\n      // contain: true,\n      on: {\n        ready: () => {\n          this.dots = this.elem.querySelectorAll(\".flickity-page-dots button\");\n          flickityReadyHandler(this.carousel, this.dots);\n        },\n        change: (index) => {\n          flickityChangeHandler(this.dots, index);\n        },\n        settle: () => {\n          flickitySettleHandler(\n            this.carousel.querySelectorAll(\".js-slide\")\n          );\n        },\n      },\n    });\n  }\n\n  init() {\n    this.setupCarousel();\n  }\n}\n","export function flickityReadyHandler(carousel, dots) {\n  if (carousel) carousel.setAttribute(\"aria-label\", \"Track of slides.\");\n  if (dots && dots.length > 0) dots[0].setAttribute(\"aria-current\", true); // TODO first slide doesn't update attr\n}\n\nexport function flickityChangeHandler(dots, index) {\n  dots.forEach((dot, i) => {\n    if (i === index) dot.setAttribute(\"aria-current\", true);\n    else dot.removeAttribute(\"aria-current\");\n  });\n}\n\nexport function flickitySettleHandler(slides) {\n  slides.forEach((slide) => {\n    const focusableElements = slide.querySelectorAll(\"a, button\");\n\n    if (slide.classList.contains(\"is-selected\")) {\n      focusableElements.forEach((elem) => {\n        elem.setAttribute(\"tabindex\", -1);\n      });\n    } else {\n      focusableElements.forEach((elem) => {\n        elem.removeAttribute(\"tabindex\");\n      });\n    }\n  });\n}\n","export function displayTooltipTitle(context) {\n  const label = context[0].dataset.label || context[0].label;\n  return label;\n}\n\nexport function displayTooltipLabel(context) {\n  return context.raw;\n}\n\nexport function displayTooltipLabelWithUnit(context) {\n  return context.raw + '%';\n}\n\nexport function showChartTooltip(context) {\n  // Tooltip Element\n  let tooltipEl = document.getElementById('chartjs-tooltip');\n\n  // Create element on first render\n  if (!tooltipEl) {\n    tooltipEl = document.createElement('div');\n    tooltipEl.id = 'chartjs-tooltip';\n    tooltipEl.innerHTML = '<table></table>';\n    document.body.appendChild(tooltipEl);\n  }\n\n  // Hide if no tooltip\n  const tooltipModel = context.tooltip;\n  if (tooltipModel.opacity === 0) {\n    tooltipEl.style.opacity = 0;\n    return;\n  }\n\n  // Set caret Position\n  tooltipEl.classList.remove('above', 'below', 'no-transform');\n  if (tooltipModel.yAlign) {\n    tooltipEl.classList.add(tooltipModel.yAlign);\n  } else {\n    tooltipEl.classList.add('no-transform');\n  }\n\n  function getBody(bodyItem) {\n    return bodyItem.lines;\n  }\n\n  // Set Text\n  if (tooltipModel.body) {\n    const titleLines = tooltipModel.title || [];\n    const bodyLines = tooltipModel.body.map(getBody);\n\n    let innerHtml = '<thead>';\n\n    titleLines.forEach(function(title) {\n      innerHtml += '<tr><th>' + title + '</th></tr>';\n    });\n    innerHtml += '</thead><tbody>';\n\n    bodyLines.forEach(function(body, i) {\n      // const colors = tooltipModel.labelColors[i];\n      // let style = 'background:' + colors.backgroundColor;\n      // style += '; border-color:' + colors.borderColor;\n      // style += '; border-width: 2px';\n      // const span = '<span style=\"' + style + '\"></span>';\n      innerHtml += '<tr><td>' + body + '</td></tr>';\n    });\n    innerHtml += '</tbody>';\n\n    let tableRoot = tooltipEl.querySelector('table');\n    tableRoot.innerHTML = innerHtml;\n  }\n\n  const position = context.chart.canvas.getBoundingClientRect();\n\n  // Display, position, and set styles for font\n  tooltipEl.style.opacity = 1;\n  tooltipEl.style.position = 'absolute';\n  tooltipEl.style.left = position.left + window.pageXOffset + tooltipModel.caretX + 'px';\n  tooltipEl.style.top = position.top + window.pageYOffset + tooltipModel.caretY - 20 + 'px';\n  // tooltipEl.style.font = '\"Gotham A\", \"Gotham B\", sans-serif';\n  tooltipEl.style.pointerEvents = 'none';\n}\n\nexport function displayTicksWithUnit(value, index, ticks) {\n  return value + '%';\n}\n\n","/*!\n * Chart.js v4.0.1\n * https://www.chartjs.org\n * (c) 2022 Chart.js Contributors\n * Released under the MIT License\n */\n/**\n * @namespace Chart.helpers\n */ /**\n * An empty function that can be used, for example, for optional callback.\n */ function noop() {\n/* noop */ }\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */ const uid = (()=>{\n    let id = 0;\n    return ()=>id++;\n})();\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isNullOrUndef(value) {\n    return value === null || typeof value === 'undefined';\n}\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */ function isArray(value) {\n    if (Array.isArray && Array.isArray(value)) {\n        return true;\n    }\n    const type = Object.prototype.toString.call(value);\n    if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n        return true;\n    }\n    return false;\n}\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isObject(value) {\n    return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */ function isNumberFinite(value) {\n    return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */ function finiteOrDefault(value, defaultValue) {\n    return isNumberFinite(value) ? value : defaultValue;\n}\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */ function valueOrDefault(value, defaultValue) {\n    return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 : +value / dimension;\nconst toDimension = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 * dimension : +value;\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */ function callback(fn, args, thisArg) {\n    if (fn && typeof fn.call === 'function') {\n        return fn.apply(thisArg, args);\n    }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n    let i, len, keys;\n    if (isArray(loopable)) {\n        len = loopable.length;\n        if (reverse) {\n            for(i = len - 1; i >= 0; i--){\n                fn.call(thisArg, loopable[i], i);\n            }\n        } else {\n            for(i = 0; i < len; i++){\n                fn.call(thisArg, loopable[i], i);\n            }\n        }\n    } else if (isObject(loopable)) {\n        keys = Object.keys(loopable);\n        len = keys.length;\n        for(i = 0; i < len; i++){\n            fn.call(thisArg, loopable[keys[i]], keys[i]);\n        }\n    }\n}\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */ function _elementsEqual(a0, a1) {\n    let i, ilen, v0, v1;\n    if (!a0 || !a1 || a0.length !== a1.length) {\n        return false;\n    }\n    for(i = 0, ilen = a0.length; i < ilen; ++i){\n        v0 = a0[i];\n        v1 = a1[i];\n        if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */ function clone$1(source) {\n    if (isArray(source)) {\n        return source.map(clone$1);\n    }\n    if (isObject(source)) {\n        const target = Object.create(null);\n        const keys = Object.keys(source);\n        const klen = keys.length;\n        let k = 0;\n        for(; k < klen; ++k){\n            target[keys[k]] = clone$1(source[keys[k]]);\n        }\n        return target;\n    }\n    return source;\n}\nfunction isValidKey(key) {\n    return [\n        '__proto__',\n        'prototype',\n        'constructor'\n    ].indexOf(key) === -1;\n}\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */ function _merger(key, target, source, options) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        merge(tval, sval, options);\n    } else {\n        target[key] = clone$1(sval);\n    }\n}\nfunction merge(target, source, options) {\n    const sources = isArray(source) ? source : [\n        source\n    ];\n    const ilen = sources.length;\n    if (!isObject(target)) {\n        return target;\n    }\n    options = options || {};\n    const merger = options.merger || _merger;\n    let current;\n    for(let i = 0; i < ilen; ++i){\n        current = sources[i];\n        if (!isObject(current)) {\n            continue;\n        }\n        const keys = Object.keys(current);\n        for(let k = 0, klen = keys.length; k < klen; ++k){\n            merger(keys[k], target, current, options);\n        }\n    }\n    return target;\n}\nfunction mergeIf(target, source) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    return merge(target, source, {\n        merger: _mergerIf\n    });\n}\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */ function _mergerIf(key, target, source) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        mergeIf(tval, sval);\n    } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n        target[key] = clone$1(sval);\n    }\n}\n/**\n * @private\n */ function _deprecated(scope, value, previous, current) {\n    if (value !== undefined) {\n        console.warn(scope + ': \"' + previous + '\" is deprecated. Please use \"' + current + '\" instead');\n    }\n}\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n    // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n    '': (v)=>v,\n    // default resolvers\n    x: (o)=>o.x,\n    y: (o)=>o.y\n};\n/**\n * @private\n */ function _splitKey(key) {\n    const parts = key.split('.');\n    const keys = [];\n    let tmp = '';\n    for (const part of parts){\n        tmp += part;\n        if (tmp.endsWith('\\\\')) {\n            tmp = tmp.slice(0, -1) + '.';\n        } else {\n            keys.push(tmp);\n            tmp = '';\n        }\n    }\n    return keys;\n}\nfunction _getKeyResolver(key) {\n    const keys = _splitKey(key);\n    return (obj)=>{\n        for (const k of keys){\n            if (k === '') {\n                break;\n            }\n            obj = obj && obj[k];\n        }\n        return obj;\n    };\n}\nfunction resolveObjectKey(obj, key) {\n    const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n    return resolver(obj);\n}\n/**\n * @private\n */ function _capitalize(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value)=>typeof value !== 'undefined';\nconst isFunction = (value)=>typeof value === 'function';\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nconst setsEqual = (a, b)=>{\n    if (a.size !== b.size) {\n        return false;\n    }\n    for (const item of a){\n        if (!b.has(item)) {\n            return false;\n        }\n    }\n    return true;\n};\n/**\n * @param e - The event\n * @private\n */ function _isClickEvent(e) {\n    return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */ const PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction almostEquals(x, y, epsilon) {\n    return Math.abs(x - y) < epsilon;\n}\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */ function niceNum(range) {\n    const roundedRange = Math.round(range);\n    range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n    const niceRange = Math.pow(10, Math.floor(log10(range)));\n    const fraction = range / niceRange;\n    const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n    return niceFraction * niceRange;\n}\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */ function _factorize(value) {\n    const result = [];\n    const sqrt = Math.sqrt(value);\n    let i;\n    for(i = 1; i < sqrt; i++){\n        if (value % i === 0) {\n            result.push(i);\n            result.push(value / i);\n        }\n    }\n    if (sqrt === (sqrt | 0)) {\n        result.push(sqrt);\n    }\n    result.sort((a, b)=>a - b).pop();\n    return result;\n}\nfunction isNumber(n) {\n    return !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostWhole(x, epsilon) {\n    const rounded = Math.round(x);\n    return rounded - epsilon <= x && rounded + epsilon >= x;\n}\n/**\n * @private\n */ function _setMinAndMaxByKey(array, target, property) {\n    let i, ilen, value;\n    for(i = 0, ilen = array.length; i < ilen; i++){\n        value = array[i][property];\n        if (!isNaN(value)) {\n            target.min = Math.min(target.min, value);\n            target.max = Math.max(target.max, value);\n        }\n    }\n}\nfunction toRadians(degrees) {\n    return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n    return radians * (180 / PI);\n}\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */ function _decimalPlaces(x) {\n    if (!isNumberFinite(x)) {\n        return;\n    }\n    let e = 1;\n    let p = 0;\n    while(Math.round(x * e) / e !== x){\n        e *= 10;\n        p++;\n    }\n    return p;\n}\n// Gets the angle from vertical upright to the point about a centre.\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n    const distanceFromXCenter = anglePoint.x - centrePoint.x;\n    const distanceFromYCenter = anglePoint.y - centrePoint.y;\n    const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n    let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n    if (angle < -0.5 * PI) {\n        angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n    }\n    return {\n        angle,\n        distance: radialDistanceFromCenter\n    };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n    return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */ function _angleDiff(a, b) {\n    return (a - b + PITAU) % TAU - PI;\n}\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */ function _normalizeAngle(a) {\n    return (a % TAU + TAU) % TAU;\n}\n/**\n * @private\n */ function _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n    const a = _normalizeAngle(angle);\n    const s = _normalizeAngle(start);\n    const e = _normalizeAngle(end);\n    const angleToStart = _normalizeAngle(s - a);\n    const angleToEnd = _normalizeAngle(e - a);\n    const startToAngle = _normalizeAngle(a - s);\n    const endToAngle = _normalizeAngle(a - e);\n    return a === s || a === e || sameAngleIsFullCircle && s === e || angleToStart > angleToEnd && startToAngle < endToAngle;\n}\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */ function _limitValue(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n}\n/**\n * @param {number} value\n * @private\n */ function _int16Range(value) {\n    return _limitValue(value, -32768, 32767);\n}\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */ function _isBetween(value, start, end, epsilon = 1e-6) {\n    return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n\nfunction _lookup(table, value, cmp) {\n    cmp = cmp || ((index)=>table[index] < value);\n    let hi = table.length - 1;\n    let lo = 0;\n    let mid;\n    while(hi - lo > 1){\n        mid = lo + hi >> 1;\n        if (cmp(mid)) {\n            lo = mid;\n        } else {\n            hi = mid;\n        }\n    }\n    return {\n        lo,\n        hi\n    };\n}\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */ const _lookupByKey = (table, key, value, last)=>_lookup(table, value, last ? (index)=>{\n        const ti = table[index][key];\n        return ti < value || ti === value && table[index + 1][key] === value;\n    } : (index)=>table[index][key] < value);\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */ const _rlookupByKey = (table, key, value)=>_lookup(table, value, (index)=>table[index][key] >= value);\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */ function _filterBetween(values, min, max) {\n    let start = 0;\n    let end = values.length;\n    while(start < end && values[start] < min){\n        start++;\n    }\n    while(end > start && values[end - 1] > max){\n        end--;\n    }\n    return start > 0 || end < values.length ? values.slice(start, end) : values;\n}\nconst arrayEvents = [\n    'push',\n    'pop',\n    'shift',\n    'splice',\n    'unshift'\n];\nfunction listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n        array._chartjs.listeners.push(listener);\n        return;\n    }\n    Object.defineProperty(array, '_chartjs', {\n        configurable: true,\n        enumerable: false,\n        value: {\n            listeners: [\n                listener\n            ]\n        }\n    });\n    arrayEvents.forEach((key)=>{\n        const method = '_onData' + _capitalize(key);\n        const base = array[key];\n        Object.defineProperty(array, key, {\n            configurable: true,\n            enumerable: false,\n            value (...args) {\n                const res = base.apply(this, args);\n                array._chartjs.listeners.forEach((object)=>{\n                    if (typeof object[method] === 'function') {\n                        object[method](...args);\n                    }\n                });\n                return res;\n            }\n        });\n    });\n}\nfunction unlistenArrayEvents(array, listener) {\n    const stub = array._chartjs;\n    if (!stub) {\n        return;\n    }\n    const listeners = stub.listeners;\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n        listeners.splice(index, 1);\n    }\n    if (listeners.length > 0) {\n        return;\n    }\n    arrayEvents.forEach((key)=>{\n        delete array[key];\n    });\n    delete array._chartjs;\n}\n/**\n * @param items\n */ function _arrayUnique(items) {\n    const set = new Set();\n    let i, ilen;\n    for(i = 0, ilen = items.length; i < ilen; ++i){\n        set.add(items[i]);\n    }\n    if (set.size === ilen) {\n        return items;\n    }\n    return Array.from(set);\n}\n\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n    return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n/**\n* Request animation polyfill\n*/ const requestAnimFrame = function() {\n    if (typeof window === 'undefined') {\n        return function(callback) {\n            return callback();\n        };\n    }\n    return window.requestAnimationFrame;\n}();\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */ function throttled(fn, thisArg) {\n    let ticking = false;\n    return function(...args) {\n        if (!ticking) {\n            ticking = true;\n            requestAnimFrame.call(window, ()=>{\n                ticking = false;\n                fn.apply(thisArg, args);\n            });\n        }\n    };\n}\n/**\n * Debounces calling `fn` for `delay` ms\n */ function debounce(fn, delay) {\n    let timeout;\n    return function(...args) {\n        if (delay) {\n            clearTimeout(timeout);\n            timeout = setTimeout(fn, delay, args);\n        } else {\n            fn.apply(this, args);\n        }\n        return delay;\n    };\n}\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */ const _toLeftRightCenter = (align)=>align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */ const _alignStartEnd = (align, start, end)=>align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */ const _textX = (align, left, right, rtl)=>{\n    const check = rtl ? 'left' : 'right';\n    return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n/**\n * Return start and count of visible points.\n * @private\n */ function _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n    const pointCount = points.length;\n    let start = 0;\n    let count = pointCount;\n    if (meta._sorted) {\n        const { iScale , _parsed  } = meta;\n        const axis = iScale.axis;\n        const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n        if (minDefined) {\n            start = _limitValue(Math.min(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, iScale.axis, min).lo, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo), 0, pointCount - 1);\n        }\n        if (maxDefined) {\n            count = _limitValue(Math.max(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, iScale.axis, max, true).hi + 1, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1), start, pointCount) - start;\n        } else {\n            count = pointCount - start;\n        }\n    }\n    return {\n        start,\n        count\n    };\n}\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */ function _scaleRangesChanged(meta) {\n    const { xScale , yScale , _scaleRanges  } = meta;\n    const newRanges = {\n        xmin: xScale.min,\n        xmax: xScale.max,\n        ymin: yScale.min,\n        ymax: yScale.max\n    };\n    if (!_scaleRanges) {\n        meta._scaleRanges = newRanges;\n        return true;\n    }\n    const changed = _scaleRanges.xmin !== xScale.min || _scaleRanges.xmax !== xScale.max || _scaleRanges.ymin !== yScale.min || _scaleRanges.ymax !== yScale.max;\n    Object.assign(_scaleRanges, newRanges);\n    return changed;\n}\n\nconst atEdge = (t)=>t === 0 || t === 1;\nconst elasticIn = (t, s, p)=>-(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p)=>Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */ const effects = {\n    linear: (t)=>t,\n    easeInQuad: (t)=>t * t,\n    easeOutQuad: (t)=>-t * (t - 2),\n    easeInOutQuad: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t : -0.5 * (--t * (t - 2) - 1),\n    easeInCubic: (t)=>t * t * t,\n    easeOutCubic: (t)=>(t -= 1) * t * t + 1,\n    easeInOutCubic: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t : 0.5 * ((t -= 2) * t * t + 2),\n    easeInQuart: (t)=>t * t * t * t,\n    easeOutQuart: (t)=>-((t -= 1) * t * t * t - 1),\n    easeInOutQuart: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t : -0.5 * ((t -= 2) * t * t * t - 2),\n    easeInQuint: (t)=>t * t * t * t * t,\n    easeOutQuint: (t)=>(t -= 1) * t * t * t * t + 1,\n    easeInOutQuint: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t * t : 0.5 * ((t -= 2) * t * t * t * t + 2),\n    easeInSine: (t)=>-Math.cos(t * HALF_PI) + 1,\n    easeOutSine: (t)=>Math.sin(t * HALF_PI),\n    easeInOutSine: (t)=>-0.5 * (Math.cos(PI * t) - 1),\n    easeInExpo: (t)=>t === 0 ? 0 : Math.pow(2, 10 * (t - 1)),\n    easeOutExpo: (t)=>t === 1 ? 1 : -Math.pow(2, -10 * t) + 1,\n    easeInOutExpo: (t)=>atEdge(t) ? t : t < 0.5 ? 0.5 * Math.pow(2, 10 * (t * 2 - 1)) : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n    easeInCirc: (t)=>t >= 1 ? t : -(Math.sqrt(1 - t * t) - 1),\n    easeOutCirc: (t)=>Math.sqrt(1 - (t -= 1) * t),\n    easeInOutCirc: (t)=>(t /= 0.5) < 1 ? -0.5 * (Math.sqrt(1 - t * t) - 1) : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n    easeInElastic: (t)=>atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n    easeOutElastic: (t)=>atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n    easeInOutElastic (t) {\n        const s = 0.1125;\n        const p = 0.45;\n        return atEdge(t) ? t : t < 0.5 ? 0.5 * elasticIn(t * 2, s, p) : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n    },\n    easeInBack (t) {\n        const s = 1.70158;\n        return t * t * ((s + 1) * t - s);\n    },\n    easeOutBack (t) {\n        const s = 1.70158;\n        return (t -= 1) * t * ((s + 1) * t + s) + 1;\n    },\n    easeInOutBack (t) {\n        let s = 1.70158;\n        if ((t /= 0.5) < 1) {\n            return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n        }\n        return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n    easeInBounce: (t)=>1 - effects.easeOutBounce(1 - t),\n    easeOutBounce (t) {\n        const m = 7.5625;\n        const d = 2.75;\n        if (t < 1 / d) {\n            return m * t * t;\n        }\n        if (t < 2 / d) {\n            return m * (t -= 1.5 / d) * t + 0.75;\n        }\n        if (t < 2.5 / d) {\n            return m * (t -= 2.25 / d) * t + 0.9375;\n        }\n        return m * (t -= 2.625 / d) * t + 0.984375;\n    },\n    easeInOutBounce: (t)=>t < 0.5 ? effects.easeInBounce(t * 2) * 0.5 : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5\n};\nvar effects$1 = effects;\n\n/*!\n * @kurkle/color v0.2.1\n * https://github.com/kurkle/color#readme\n * (c) 2022 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\nconst map = {\n  x: 'dark',\n  Z: 'light',\n  Y: 're',\n  X: 'blu',\n  W: 'gr',\n  V: 'medium',\n  U: 'slate',\n  A: 'ee',\n  T: 'ol',\n  S: 'or',\n  B: 'ra',\n  C: 'lateg',\n  D: 'ights',\n  R: 'in',\n  Q: 'turquois',\n  E: 'hi',\n  P: 'ro',\n  O: 'al',\n  N: 'le',\n  M: 'de',\n  L: 'yello',\n  F: 'en',\n  K: 'ch',\n  G: 'arks',\n  H: 'ea',\n  I: 'ightg',\n  J: 'wh'\n};\nconst names$1 = {\n  OiceXe: 'f0f8ff',\n  antiquewEte: 'faebd7',\n  aqua: 'ffff',\n  aquamarRe: '7fffd4',\n  azuY: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '0',\n  blanKedOmond: 'ffebcd',\n  Xe: 'ff',\n  XeviTet: '8a2be2',\n  bPwn: 'a52a2a',\n  burlywood: 'deb887',\n  caMtXe: '5f9ea0',\n  KartYuse: '7fff00',\n  KocTate: 'd2691e',\n  cSO: 'ff7f50',\n  cSnflowerXe: '6495ed',\n  cSnsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: 'ffff',\n  xXe: '8b',\n  xcyan: '8b8b',\n  xgTMnPd: 'b8860b',\n  xWay: 'a9a9a9',\n  xgYF: '6400',\n  xgYy: 'a9a9a9',\n  xkhaki: 'bdb76b',\n  xmagFta: '8b008b',\n  xTivegYF: '556b2f',\n  xSange: 'ff8c00',\n  xScEd: '9932cc',\n  xYd: '8b0000',\n  xsOmon: 'e9967a',\n  xsHgYF: '8fbc8f',\n  xUXe: '483d8b',\n  xUWay: '2f4f4f',\n  xUgYy: '2f4f4f',\n  xQe: 'ced1',\n  xviTet: '9400d3',\n  dAppRk: 'ff1493',\n  dApskyXe: 'bfff',\n  dimWay: '696969',\n  dimgYy: '696969',\n  dodgerXe: '1e90ff',\n  fiYbrick: 'b22222',\n  flSOwEte: 'fffaf0',\n  foYstWAn: '228b22',\n  fuKsia: 'ff00ff',\n  gaRsbSo: 'dcdcdc',\n  ghostwEte: 'f8f8ff',\n  gTd: 'ffd700',\n  gTMnPd: 'daa520',\n  Way: '808080',\n  gYF: '8000',\n  gYFLw: 'adff2f',\n  gYy: '808080',\n  honeyMw: 'f0fff0',\n  hotpRk: 'ff69b4',\n  RdianYd: 'cd5c5c',\n  Rdigo: '4b0082',\n  ivSy: 'fffff0',\n  khaki: 'f0e68c',\n  lavFMr: 'e6e6fa',\n  lavFMrXsh: 'fff0f5',\n  lawngYF: '7cfc00',\n  NmoncEffon: 'fffacd',\n  ZXe: 'add8e6',\n  ZcSO: 'f08080',\n  Zcyan: 'e0ffff',\n  ZgTMnPdLw: 'fafad2',\n  ZWay: 'd3d3d3',\n  ZgYF: '90ee90',\n  ZgYy: 'd3d3d3',\n  ZpRk: 'ffb6c1',\n  ZsOmon: 'ffa07a',\n  ZsHgYF: '20b2aa',\n  ZskyXe: '87cefa',\n  ZUWay: '778899',\n  ZUgYy: '778899',\n  ZstAlXe: 'b0c4de',\n  ZLw: 'ffffe0',\n  lime: 'ff00',\n  limegYF: '32cd32',\n  lRF: 'faf0e6',\n  magFta: 'ff00ff',\n  maPon: '800000',\n  VaquamarRe: '66cdaa',\n  VXe: 'cd',\n  VScEd: 'ba55d3',\n  VpurpN: '9370db',\n  VsHgYF: '3cb371',\n  VUXe: '7b68ee',\n  VsprRggYF: 'fa9a',\n  VQe: '48d1cc',\n  VviTetYd: 'c71585',\n  midnightXe: '191970',\n  mRtcYam: 'f5fffa',\n  mistyPse: 'ffe4e1',\n  moccasR: 'ffe4b5',\n  navajowEte: 'ffdead',\n  navy: '80',\n  Tdlace: 'fdf5e6',\n  Tive: '808000',\n  TivedBb: '6b8e23',\n  Sange: 'ffa500',\n  SangeYd: 'ff4500',\n  ScEd: 'da70d6',\n  pOegTMnPd: 'eee8aa',\n  pOegYF: '98fb98',\n  pOeQe: 'afeeee',\n  pOeviTetYd: 'db7093',\n  papayawEp: 'ffefd5',\n  pHKpuff: 'ffdab9',\n  peru: 'cd853f',\n  pRk: 'ffc0cb',\n  plum: 'dda0dd',\n  powMrXe: 'b0e0e6',\n  purpN: '800080',\n  YbeccapurpN: '663399',\n  Yd: 'ff0000',\n  Psybrown: 'bc8f8f',\n  PyOXe: '4169e1',\n  saddNbPwn: '8b4513',\n  sOmon: 'fa8072',\n  sandybPwn: 'f4a460',\n  sHgYF: '2e8b57',\n  sHshell: 'fff5ee',\n  siFna: 'a0522d',\n  silver: 'c0c0c0',\n  skyXe: '87ceeb',\n  UXe: '6a5acd',\n  UWay: '708090',\n  UgYy: '708090',\n  snow: 'fffafa',\n  sprRggYF: 'ff7f',\n  stAlXe: '4682b4',\n  tan: 'd2b48c',\n  teO: '8080',\n  tEstN: 'd8bfd8',\n  tomato: 'ff6347',\n  Qe: '40e0d0',\n  viTet: 'ee82ee',\n  JHt: 'f5deb3',\n  wEte: 'ffffff',\n  wEtesmoke: 'f5f5f5',\n  Lw: 'ffff00',\n  LwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nfunction isPatternOrGradient(value) {\n    if (value && typeof value === 'object') {\n        const type = value.toString();\n        return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n    }\n    return false;\n}\nfunction color(value) {\n    return isPatternOrGradient(value) ? value : index_esm(value);\n}\nfunction getHoverColor(value) {\n    return isPatternOrGradient(value) ? value : index_esm(value).saturate(0.5).darken(0.1).hexString();\n}\n\nconst numbers = [\n    'x',\n    'y',\n    'borderWidth',\n    'radius',\n    'tension'\n];\nconst colors = [\n    'color',\n    'borderColor',\n    'backgroundColor'\n];\nfunction applyAnimationsDefaults(defaults) {\n    defaults.set('animation', {\n        delay: undefined,\n        duration: 1000,\n        easing: 'easeOutQuart',\n        fn: undefined,\n        from: undefined,\n        loop: undefined,\n        to: undefined,\n        type: undefined\n    });\n    defaults.describe('animation', {\n        _fallback: false,\n        _indexable: false,\n        _scriptable: (name)=>name !== 'onProgress' && name !== 'onComplete' && name !== 'fn'\n    });\n    defaults.set('animations', {\n        colors: {\n            type: 'color',\n            properties: colors\n        },\n        numbers: {\n            type: 'number',\n            properties: numbers\n        }\n    });\n    defaults.describe('animations', {\n        _fallback: 'animation'\n    });\n    defaults.set('transitions', {\n        active: {\n            animation: {\n                duration: 400\n            }\n        },\n        resize: {\n            animation: {\n                duration: 0\n            }\n        },\n        show: {\n            animations: {\n                colors: {\n                    from: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    duration: 0\n                }\n            }\n        },\n        hide: {\n            animations: {\n                colors: {\n                    to: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    easing: 'linear',\n                    fn: (v)=>v | 0\n                }\n            }\n        }\n    });\n}\n\nfunction applyLayoutsDefaults(defaults) {\n    defaults.set('layout', {\n        autoPadding: true,\n        padding: {\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0\n        }\n    });\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n    options = options || {};\n    const cacheKey = locale + JSON.stringify(options);\n    let formatter = intlCache.get(cacheKey);\n    if (!formatter) {\n        formatter = new Intl.NumberFormat(locale, options);\n        intlCache.set(cacheKey, formatter);\n    }\n    return formatter;\n}\nfunction formatNumber(num, locale, options) {\n    return getNumberFormat(locale, options).format(num);\n}\n\nconst formatters = {\n values (value) {\n        return isArray(value) ?  (value) : '' + value;\n    },\n numeric (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const locale = this.chart.options.locale;\n        let notation;\n        let delta = tickValue;\n        if (ticks.length > 1) {\n            const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n            if (maxTick < 1e-4 || maxTick > 1e+15) {\n                notation = 'scientific';\n            }\n            delta = calculateDelta(tickValue, ticks);\n        }\n        const logDelta = log10(Math.abs(delta));\n        const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n        const options = {\n            notation,\n            minimumFractionDigits: numDecimal,\n            maximumFractionDigits: numDecimal\n        };\n        Object.assign(options, this.options.ticks.format);\n        return formatNumber(tickValue, locale, options);\n    },\n logarithmic (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const remain = ticks[index].significand || tickValue / Math.pow(10, Math.floor(log10(tickValue)));\n        if ([\n            1,\n            2,\n            3,\n            5,\n            10,\n            15\n        ].includes(remain) || index > 0.8 * ticks.length) {\n            return formatters.numeric.call(this, tickValue, index, ticks);\n        }\n        return '';\n    }\n};\nfunction calculateDelta(tickValue, ticks) {\n    let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n    if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n        delta = tickValue - Math.floor(tickValue);\n    }\n    return delta;\n}\n var Ticks = {\n    formatters\n};\n\nfunction applyScaleDefaults(defaults) {\n    defaults.set('scale', {\n        display: true,\n        offset: false,\n        reverse: false,\n        beginAtZero: false,\n bounds: 'ticks',\n grace: 0,\n        grid: {\n            display: true,\n            lineWidth: 1,\n            drawOnChartArea: true,\n            drawTicks: true,\n            tickLength: 8,\n            tickWidth: (_ctx, options)=>options.lineWidth,\n            tickColor: (_ctx, options)=>options.color,\n            offset: false\n        },\n        border: {\n            display: true,\n            dash: [],\n            dashOffset: 0.0,\n            width: 1\n        },\n        title: {\n            display: false,\n            text: '',\n            padding: {\n                top: 4,\n                bottom: 4\n            }\n        },\n        ticks: {\n            minRotation: 0,\n            maxRotation: 50,\n            mirror: false,\n            textStrokeWidth: 0,\n            textStrokeColor: '',\n            padding: 3,\n            display: true,\n            autoSkip: true,\n            autoSkipPadding: 3,\n            labelOffset: 0,\n            callback: Ticks.formatters.values,\n            minor: {},\n            major: {},\n            align: 'center',\n            crossAlign: 'near',\n            showLabelBackdrop: false,\n            backdropColor: 'rgba(255, 255, 255, 0.75)',\n            backdropPadding: 2\n        }\n    });\n    defaults.route('scale.ticks', 'color', '', 'color');\n    defaults.route('scale.grid', 'color', '', 'borderColor');\n    defaults.route('scale.border', 'color', '', 'borderColor');\n    defaults.route('scale.title', 'color', '', 'color');\n    defaults.describe('scale', {\n        _fallback: false,\n        _scriptable: (name)=>!name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n        _indexable: (name)=>name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash'\n    });\n    defaults.describe('scales', {\n        _fallback: 'scale'\n    });\n    defaults.describe('scale.ticks', {\n        _scriptable: (name)=>name !== 'backdropPadding' && name !== 'callback',\n        _indexable: (name)=>name !== 'backdropPadding'\n    });\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\n function getScope$1(node, key) {\n    if (!key) {\n        return node;\n    }\n    const keys = key.split('.');\n    for(let i = 0, n = keys.length; i < n; ++i){\n        const k = keys[i];\n        node = node[k] || (node[k] = Object.create(null));\n    }\n    return node;\n}\nfunction set(root, scope, values) {\n    if (typeof scope === 'string') {\n        return merge(getScope$1(root, scope), values);\n    }\n    return merge(getScope$1(root, ''), scope);\n}\n class Defaults {\n    constructor(_descriptors, _appliers){\n        this.animation = undefined;\n        this.backgroundColor = 'rgba(0,0,0,0.1)';\n        this.borderColor = 'rgba(0,0,0,0.1)';\n        this.color = '#666';\n        this.datasets = {};\n        this.devicePixelRatio = (context)=>context.chart.platform.getDevicePixelRatio();\n        this.elements = {};\n        this.events = [\n            'mousemove',\n            'mouseout',\n            'click',\n            'touchstart',\n            'touchmove'\n        ];\n        this.font = {\n            family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n            size: 12,\n            style: 'normal',\n            lineHeight: 1.2,\n            weight: null\n        };\n        this.hover = {};\n        this.hoverBackgroundColor = (ctx, options)=>getHoverColor(options.backgroundColor);\n        this.hoverBorderColor = (ctx, options)=>getHoverColor(options.borderColor);\n        this.hoverColor = (ctx, options)=>getHoverColor(options.color);\n        this.indexAxis = 'x';\n        this.interaction = {\n            mode: 'nearest',\n            intersect: true,\n            includeInvisible: false\n        };\n        this.maintainAspectRatio = true;\n        this.onHover = null;\n        this.onClick = null;\n        this.parsing = true;\n        this.plugins = {};\n        this.responsive = true;\n        this.scale = undefined;\n        this.scales = {};\n        this.showLine = true;\n        this.drawActiveElementsOnTop = true;\n        this.describe(_descriptors);\n        this.apply(_appliers);\n    }\n set(scope, values) {\n        return set(this, scope, values);\n    }\n get(scope) {\n        return getScope$1(this, scope);\n    }\n describe(scope, values) {\n        return set(descriptors, scope, values);\n    }\n    override(scope, values) {\n        return set(overrides, scope, values);\n    }\n route(scope, name, targetScope, targetName) {\n        const scopeObject = getScope$1(this, scope);\n        const targetScopeObject = getScope$1(this, targetScope);\n        const privateName = '_' + name;\n        Object.defineProperties(scopeObject, {\n            [privateName]: {\n                value: scopeObject[name],\n                writable: true\n            },\n            [name]: {\n                enumerable: true,\n                get () {\n                    const local = this[privateName];\n                    const target = targetScopeObject[targetName];\n                    if (isObject(local)) {\n                        return Object.assign({}, target, local);\n                    }\n                    return valueOrDefault(local, target);\n                },\n                set (value) {\n                    this[privateName] = value;\n                }\n            }\n        });\n    }\n    apply(appliers) {\n        appliers.forEach((apply)=>apply(this));\n    }\n}\nvar defaults = /* #__PURE__ */ new Defaults({\n    _scriptable: (name)=>!name.startsWith('on'),\n    _indexable: (name)=>name !== 'events',\n    hover: {\n        _fallback: 'interaction'\n    },\n    interaction: {\n        _scriptable: false,\n        _indexable: false\n    }\n}, [\n    applyAnimationsDefaults,\n    applyLayoutsDefaults,\n    applyScaleDefaults\n]);\n\nfunction toFontString(font) {\n    if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n        return null;\n    }\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n}\n function _measureText(ctx, data, gc, longest, string) {\n    let textWidth = data[string];\n    if (!textWidth) {\n        textWidth = data[string] = ctx.measureText(string).width;\n        gc.push(string);\n    }\n    if (textWidth > longest) {\n        longest = textWidth;\n    }\n    return longest;\n}\n function _longestText(ctx, font, arrayOfThings, cache) {\n    cache = cache || {};\n    let data = cache.data = cache.data || {};\n    let gc = cache.garbageCollect = cache.garbageCollect || [];\n    if (cache.font !== font) {\n        data = cache.data = {};\n        gc = cache.garbageCollect = [];\n        cache.font = font;\n    }\n    ctx.save();\n    ctx.font = font;\n    let longest = 0;\n    const ilen = arrayOfThings.length;\n    let i, j, jlen, thing, nestedThing;\n    for(i = 0; i < ilen; i++){\n        thing = arrayOfThings[i];\n        if (thing !== undefined && thing !== null && isArray(thing) !== true) {\n            longest = _measureText(ctx, data, gc, longest, thing);\n        } else if (isArray(thing)) {\n            for(j = 0, jlen = thing.length; j < jlen; j++){\n                nestedThing = thing[j];\n                if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n                    longest = _measureText(ctx, data, gc, longest, nestedThing);\n                }\n            }\n        }\n    }\n    ctx.restore();\n    const gcLen = gc.length / 2;\n    if (gcLen > arrayOfThings.length) {\n        for(i = 0; i < gcLen; i++){\n            delete data[gc[i]];\n        }\n        gc.splice(0, gcLen);\n    }\n    return longest;\n}\n function _alignPixel(chart, pixel, width) {\n    const devicePixelRatio = chart.currentDevicePixelRatio;\n    const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n    return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n function clearCanvas(canvas, ctx) {\n    ctx = ctx || canvas.getContext('2d');\n    ctx.save();\n    ctx.resetTransform();\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n    drawPointLegend(ctx, options, x, y, null);\n}\nfunction drawPointLegend(ctx, options, x, y, w) {\n    let type, xOffset, yOffset, size, cornerRadius, width, xOffsetW, yOffsetW;\n    const style = options.pointStyle;\n    const rotation = options.rotation;\n    const radius = options.radius;\n    let rad = (rotation || 0) * RAD_PER_DEG;\n    if (style && typeof style === 'object') {\n        type = style.toString();\n        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n            ctx.save();\n            ctx.translate(x, y);\n            ctx.rotate(rad);\n            ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n            ctx.restore();\n            return;\n        }\n    }\n    if (isNaN(radius) || radius <= 0) {\n        return;\n    }\n    ctx.beginPath();\n    switch(style){\n        default:\n            if (w) {\n                ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n            } else {\n                ctx.arc(x, y, radius, 0, TAU);\n            }\n            ctx.closePath();\n            break;\n        case 'triangle':\n            width = w ? w / 2 : radius;\n            ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            ctx.closePath();\n            break;\n        case 'rectRounded':\n            cornerRadius = radius * 0.516;\n            size = radius - cornerRadius;\n            xOffset = Math.cos(rad + QUARTER_PI) * size;\n            xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            yOffset = Math.sin(rad + QUARTER_PI) * size;\n            yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n            ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n            ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n            ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n            ctx.closePath();\n            break;\n        case 'rect':\n            if (!rotation) {\n                size = Math.SQRT1_2 * radius;\n                width = w ? w / 2 : size;\n                ctx.rect(x - width, y - size, 2 * width, 2 * size);\n                break;\n            }\n            rad += QUARTER_PI;\n         case 'rectRot':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            ctx.closePath();\n            break;\n        case 'crossRot':\n            rad += QUARTER_PI;\n         case 'cross':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'star':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            rad += QUARTER_PI;\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'line':\n            xOffset = w ? w / 2 : Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            ctx.moveTo(x - xOffset, y - yOffset);\n            ctx.lineTo(x + xOffset, y + yOffset);\n            break;\n        case 'dash':\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n            break;\n    }\n    ctx.fill();\n    if (options.borderWidth > 0) {\n        ctx.stroke();\n    }\n}\n function _isPointInArea(point, area, margin) {\n    margin = margin || 0.5;\n    return !area || point && point.x > area.left - margin && point.x < area.right + margin && point.y > area.top - margin && point.y < area.bottom + margin;\n}\nfunction clipArea(ctx, area) {\n    ctx.save();\n    ctx.beginPath();\n    ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n    ctx.clip();\n}\nfunction unclipArea(ctx) {\n    ctx.restore();\n}\n function _steppedLineTo(ctx, previous, target, flip, mode) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    if (mode === 'middle') {\n        const midpoint = (previous.x + target.x) / 2.0;\n        ctx.lineTo(midpoint, previous.y);\n        ctx.lineTo(midpoint, target.y);\n    } else if (mode === 'after' !== !!flip) {\n        ctx.lineTo(previous.x, target.y);\n    } else {\n        ctx.lineTo(target.x, previous.y);\n    }\n    ctx.lineTo(target.x, target.y);\n}\n function _bezierCurveTo(ctx, previous, target, flip) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    ctx.bezierCurveTo(flip ? previous.cp1x : previous.cp2x, flip ? previous.cp1y : previous.cp2y, flip ? target.cp2x : target.cp1x, flip ? target.cp2y : target.cp1y, target.x, target.y);\n}\n function renderText(ctx, text, x, y, font, opts = {}) {\n    const lines = isArray(text) ? text : [\n        text\n    ];\n    const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n    let i, line;\n    ctx.save();\n    ctx.font = font.string;\n    setRenderOpts(ctx, opts);\n    for(i = 0; i < lines.length; ++i){\n        line = lines[i];\n        if (opts.backdrop) {\n            drawBackdrop(ctx, opts.backdrop);\n        }\n        if (stroke) {\n            if (opts.strokeColor) {\n                ctx.strokeStyle = opts.strokeColor;\n            }\n            if (!isNullOrUndef(opts.strokeWidth)) {\n                ctx.lineWidth = opts.strokeWidth;\n            }\n            ctx.strokeText(line, x, y, opts.maxWidth);\n        }\n        ctx.fillText(line, x, y, opts.maxWidth);\n        decorateText(ctx, x, y, line, opts);\n        y += font.lineHeight;\n    }\n    ctx.restore();\n}\nfunction setRenderOpts(ctx, opts) {\n    if (opts.translation) {\n        ctx.translate(opts.translation[0], opts.translation[1]);\n    }\n    if (!isNullOrUndef(opts.rotation)) {\n        ctx.rotate(opts.rotation);\n    }\n    if (opts.color) {\n        ctx.fillStyle = opts.color;\n    }\n    if (opts.textAlign) {\n        ctx.textAlign = opts.textAlign;\n    }\n    if (opts.textBaseline) {\n        ctx.textBaseline = opts.textBaseline;\n    }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n    if (opts.strikethrough || opts.underline) {\n const metrics = ctx.measureText(line);\n        const left = x - metrics.actualBoundingBoxLeft;\n        const right = x + metrics.actualBoundingBoxRight;\n        const top = y - metrics.actualBoundingBoxAscent;\n        const bottom = y + metrics.actualBoundingBoxDescent;\n        const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n        ctx.strokeStyle = ctx.fillStyle;\n        ctx.beginPath();\n        ctx.lineWidth = opts.decorationWidth || 2;\n        ctx.moveTo(left, yDecoration);\n        ctx.lineTo(right, yDecoration);\n        ctx.stroke();\n    }\n}\nfunction drawBackdrop(ctx, opts) {\n    const oldColor = ctx.fillStyle;\n    ctx.fillStyle = opts.color;\n    ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n    ctx.fillStyle = oldColor;\n}\n function addRoundedRectPath(ctx, rect) {\n    const { x , y , w , h , radius  } = rect;\n    ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, -HALF_PI, PI, true);\n    ctx.lineTo(x, y + h - radius.bottomLeft);\n    ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n    ctx.lineTo(x + w - radius.bottomRight, y + h);\n    ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n    ctx.lineTo(x + w, y + radius.topRight);\n    ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n    ctx.lineTo(x + radius.topLeft, y);\n}\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n/**\n * @alias Chart.helpers.options\n * @namespace\n */ /**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */ function toLineHeight(value, size) {\n    const matches = ('' + value).match(LINE_HEIGHT);\n    if (!matches || matches[1] === 'normal') {\n        return size * 1.2;\n    }\n    value = +matches[2];\n    switch(matches[3]){\n        case 'px':\n            return value;\n        case '%':\n            value /= 100;\n            break;\n    }\n    return size * value;\n}\nconst numberOrZero = (v)=>+v || 0;\nfunction _readValueToProps(value, props) {\n    const ret = {};\n    const objProps = isObject(props);\n    const keys = objProps ? Object.keys(props) : props;\n    const read = isObject(value) ? objProps ? (prop)=>valueOrDefault(value[prop], value[props[prop]]) : (prop)=>value[prop] : ()=>value;\n    for (const prop of keys){\n        ret[prop] = numberOrZero(read(prop));\n    }\n    return ret;\n}\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */ function toTRBL(value) {\n    return _readValueToProps(value, {\n        top: 'y',\n        right: 'x',\n        bottom: 'y',\n        left: 'x'\n    });\n}\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */ function toTRBLCorners(value) {\n    return _readValueToProps(value, [\n        'topLeft',\n        'topRight',\n        'bottomLeft',\n        'bottomRight'\n    ]);\n}\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */ function toPadding(value) {\n    const obj = toTRBL(value);\n    obj.width = obj.left + obj.right;\n    obj.height = obj.top + obj.bottom;\n    return obj;\n}\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */ function toFont(options, fallback) {\n    options = options || {};\n    fallback = fallback || defaults.font;\n    let size = valueOrDefault(options.size, fallback.size);\n    if (typeof size === 'string') {\n        size = parseInt(size, 10);\n    }\n    let style = valueOrDefault(options.style, fallback.style);\n    if (style && !('' + style).match(FONT_STYLE)) {\n        console.warn('Invalid font style specified: \"' + style + '\"');\n        style = undefined;\n    }\n    const font = {\n        family: valueOrDefault(options.family, fallback.family),\n        lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n        size,\n        style,\n        weight: valueOrDefault(options.weight, fallback.weight),\n        string: ''\n    };\n    font.string = toFontString(font);\n    return font;\n}\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */ function resolve(inputs, context, index, info) {\n    let cacheable = true;\n    let i, ilen, value;\n    for(i = 0, ilen = inputs.length; i < ilen; ++i){\n        value = inputs[i];\n        if (value === undefined) {\n            continue;\n        }\n        if (context !== undefined && typeof value === 'function') {\n            value = value(context);\n            cacheable = false;\n        }\n        if (index !== undefined && isArray(value)) {\n            value = value[index % value.length];\n            cacheable = false;\n        }\n        if (value !== undefined) {\n            if (info && !cacheable) {\n                info.cacheable = false;\n            }\n            return value;\n        }\n    }\n}\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */ function _addGrace(minmax, grace, beginAtZero) {\n    const { min , max  } = minmax;\n    const change = toDimension(grace, (max - min) / 2);\n    const keepZero = (value, add)=>beginAtZero && value === 0 ? 0 : value + add;\n    return {\n        min: keepZero(min, -Math.abs(change)),\n        max: keepZero(max, change)\n    };\n}\n/**\n * Create a context inheriting parentContext\n * @param parentContext\n * @param context\n * @returns\n */ function createContext(parentContext, context) {\n    return Object.assign(Object.create(parentContext), context);\n}\n\nfunction _createResolver(scopes, prefixes = [\n    ''\n], rootScopes = scopes, fallback, getTarget = ()=>scopes[0]) {\n    if (!defined(fallback)) {\n        fallback = _resolve('_fallback', scopes);\n    }\n    const cache = {\n        [Symbol.toStringTag]: 'Object',\n        _cacheable: true,\n        _scopes: scopes,\n        _rootScopes: rootScopes,\n        _fallback: fallback,\n        _getTarget: getTarget,\n        override: (scope)=>_createResolver([\n                scope,\n                ...scopes\n            ], prefixes, rootScopes, fallback)\n    };\n    return new Proxy(cache, {\n deleteProperty (target, prop) {\n            delete target[prop];\n            delete target._keys;\n            delete scopes[0][prop];\n            return true;\n        },\n get (target, prop) {\n            return _cached(target, prop, ()=>_resolveWithPrefixes(prop, prefixes, scopes, target));\n        },\n getOwnPropertyDescriptor (target, prop) {\n            return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n        },\n getPrototypeOf () {\n            return Reflect.getPrototypeOf(scopes[0]);\n        },\n has (target, prop) {\n            return getKeysFromAllScopes(target).includes(prop);\n        },\n ownKeys (target) {\n            return getKeysFromAllScopes(target);\n        },\n set (target, prop, value) {\n            const storage = target._storage || (target._storage = getTarget());\n            target[prop] = storage[prop] = value;\n            delete target._keys;\n            return true;\n        }\n    });\n}\n function _attachContext(proxy, context, subProxy, descriptorDefaults) {\n    const cache = {\n        _cacheable: false,\n        _proxy: proxy,\n        _context: context,\n        _subProxy: subProxy,\n        _stack: new Set(),\n        _descriptors: _descriptors(proxy, descriptorDefaults),\n        setContext: (ctx)=>_attachContext(proxy, ctx, subProxy, descriptorDefaults),\n        override: (scope)=>_attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n    };\n    return new Proxy(cache, {\n deleteProperty (target, prop) {\n            delete target[prop];\n            delete proxy[prop];\n            return true;\n        },\n get (target, prop, receiver) {\n            return _cached(target, prop, ()=>_resolveWithContext(target, prop, receiver));\n        },\n getOwnPropertyDescriptor (target, prop) {\n            return target._descriptors.allKeys ? Reflect.has(proxy, prop) ? {\n                enumerable: true,\n                configurable: true\n            } : undefined : Reflect.getOwnPropertyDescriptor(proxy, prop);\n        },\n getPrototypeOf () {\n            return Reflect.getPrototypeOf(proxy);\n        },\n has (target, prop) {\n            return Reflect.has(proxy, prop);\n        },\n ownKeys () {\n            return Reflect.ownKeys(proxy);\n        },\n set (target, prop, value) {\n            proxy[prop] = value;\n            delete target[prop];\n            return true;\n        }\n    });\n}\n function _descriptors(proxy, defaults = {\n    scriptable: true,\n    indexable: true\n}) {\n    const { _scriptable =defaults.scriptable , _indexable =defaults.indexable , _allKeys =defaults.allKeys  } = proxy;\n    return {\n        allKeys: _allKeys,\n        scriptable: _scriptable,\n        indexable: _indexable,\n        isScriptable: isFunction(_scriptable) ? _scriptable : ()=>_scriptable,\n        isIndexable: isFunction(_indexable) ? _indexable : ()=>_indexable\n    };\n}\nconst readKey = (prefix, name)=>prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value)=>isObject(value) && prop !== 'adapters' && (Object.getPrototypeOf(value) === null || value.constructor === Object);\nfunction _cached(target, prop, resolve) {\n    if (Object.prototype.hasOwnProperty.call(target, prop)) {\n        return target[prop];\n    }\n    const value = resolve();\n    target[prop] = value;\n    return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    let value = _proxy[prop];\n    if (isFunction(value) && descriptors.isScriptable(prop)) {\n        value = _resolveScriptable(prop, value, target, receiver);\n    }\n    if (isArray(value) && value.length) {\n        value = _resolveArray(prop, value, target, descriptors.isIndexable);\n    }\n    if (needsSubResolver(prop, value)) {\n        value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n    }\n    return value;\n}\nfunction _resolveScriptable(prop, value, target, receiver) {\n    const { _proxy , _context , _subProxy , _stack  } = target;\n    if (_stack.has(prop)) {\n        throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n    }\n    _stack.add(prop);\n    value = value(_context, _subProxy || receiver);\n    _stack.delete(prop);\n    if (needsSubResolver(prop, value)) {\n        value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n    }\n    return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    if (defined(_context.index) && isIndexable(prop)) {\n        value = value[_context.index % value.length];\n    } else if (isObject(value[0])) {\n        const arr = value;\n        const scopes = _proxy._scopes.filter((s)=>s !== arr);\n        value = [];\n        for (const item of arr){\n            const resolver = createSubResolver(scopes, _proxy, prop, item);\n            value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n        }\n    }\n    return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n    return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent)=>key === true ? parent : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n    for (const parent of parentScopes){\n        const scope = getScope(key, parent);\n        if (scope) {\n            set.add(scope);\n            const fallback = resolveFallback(scope._fallback, key, value);\n            if (defined(fallback) && fallback !== key && fallback !== parentFallback) {\n                return fallback;\n            }\n        } else if (scope === false && defined(parentFallback) && key !== parentFallback) {\n            return null;\n        }\n    }\n    return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n    const rootScopes = resolver._rootScopes;\n    const fallback = resolveFallback(resolver._fallback, prop, value);\n    const allScopes = [\n        ...parentScopes,\n        ...rootScopes\n    ];\n    const set = new Set();\n    set.add(value);\n    let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n    if (key === null) {\n        return false;\n    }\n    if (defined(fallback) && fallback !== prop) {\n        key = addScopesFromKey(set, allScopes, fallback, key, value);\n        if (key === null) {\n            return false;\n        }\n    }\n    return _createResolver(Array.from(set), [\n        ''\n    ], rootScopes, fallback, ()=>subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n    while(key){\n        key = addScopes(set, allScopes, key, fallback, item);\n    }\n    return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n    const parent = resolver._getTarget();\n    if (!(prop in parent)) {\n        parent[prop] = {};\n    }\n    const target = parent[prop];\n    if (isArray(target) && isObject(value)) {\n        return value;\n    }\n    return target || {};\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n    let value;\n    for (const prefix of prefixes){\n        value = _resolve(readKey(prefix, prop), scopes);\n        if (defined(value)) {\n            return needsSubResolver(prop, value) ? createSubResolver(scopes, proxy, prop, value) : value;\n        }\n    }\n}\nfunction _resolve(key, scopes) {\n    for (const scope of scopes){\n        if (!scope) {\n            continue;\n        }\n        const value = scope[key];\n        if (defined(value)) {\n            return value;\n        }\n    }\n}\nfunction getKeysFromAllScopes(target) {\n    let keys = target._keys;\n    if (!keys) {\n        keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n    }\n    return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n    const set = new Set();\n    for (const scope of scopes){\n        for (const key of Object.keys(scope).filter((k)=>!k.startsWith('_'))){\n            set.add(key);\n        }\n    }\n    return Array.from(set);\n}\nfunction _parseObjectDataRadialScale(meta, data, start, count) {\n    const { iScale  } = meta;\n    const { key ='r'  } = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for(i = 0, ilen = count; i < ilen; ++i){\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n            r: iScale.parse(resolveObjectKey(item, key), index)\n        };\n    }\n    return parsed;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i)=>i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis)=>indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n    // Props to Rob Spencer at scaled innovation for his post on splining between points\n    // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n    // This function must also respect \"skipped\" points\n    const previous = firstPoint.skip ? middlePoint : firstPoint;\n    const current = middlePoint;\n    const next = afterPoint.skip ? middlePoint : afterPoint;\n    const d01 = distanceBetweenPoints(current, previous);\n    const d12 = distanceBetweenPoints(next, current);\n    let s01 = d01 / (d01 + d12);\n    let s12 = d12 / (d01 + d12);\n    // If all points are the same, s01 & s02 will be inf\n    s01 = isNaN(s01) ? 0 : s01;\n    s12 = isNaN(s12) ? 0 : s12;\n    const fa = t * s01; // scaling factor for triangle Ta\n    const fb = t * s12;\n    return {\n        previous: {\n            x: current.x - fa * (next.x - previous.x),\n            y: current.y - fa * (next.y - previous.y)\n        },\n        next: {\n            x: current.x + fb * (next.x - previous.x),\n            y: current.y + fb * (next.y - previous.y)\n        }\n    };\n}\n/**\n * Adjust tangents to ensure monotonic properties\n */ function monotoneAdjust(points, deltaK, mK) {\n    const pointsLen = points.length;\n    let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen - 1; ++i){\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent || !pointAfter) {\n            continue;\n        }\n        if (almostEquals(deltaK[i], 0, EPSILON)) {\n            mK[i] = mK[i + 1] = 0;\n            continue;\n        }\n        alphaK = mK[i] / deltaK[i];\n        betaK = mK[i + 1] / deltaK[i];\n        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n        if (squaredMagnitude <= 9) {\n            continue;\n        }\n        tauK = 3 / Math.sqrt(squaredMagnitude);\n        mK[i] = alphaK * tauK * deltaK[i];\n        mK[i + 1] = betaK * tauK * deltaK[i];\n    }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    let delta, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        const iPixel = pointCurrent[indexAxis];\n        const vPixel = pointCurrent[valueAxis];\n        if (pointBefore) {\n            delta = (iPixel - pointBefore[indexAxis]) / 3;\n            pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n            pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n        }\n        if (pointAfter) {\n            delta = (pointAfter[indexAxis] - iPixel) / 3;\n            pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n            pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n        }\n    }\n}\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */ function splineCurveMonotone(points, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    const deltaK = Array(pointsLen).fill(0);\n    const mK = Array(pointsLen);\n    // Calculate slopes (deltaK) and initialize tangents (mK)\n    let i, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        if (pointAfter) {\n            const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n            // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n            deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n        }\n        mK[i] = !pointBefore ? deltaK[i] : !pointAfter ? deltaK[i - 1] : sign(deltaK[i - 1]) !== sign(deltaK[i]) ? 0 : (deltaK[i - 1] + deltaK[i]) / 2;\n    }\n    monotoneAdjust(points, deltaK, mK);\n    monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n    return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n    let i, ilen, point, inArea, inAreaPrev;\n    let inAreaNext = _isPointInArea(points[0], area);\n    for(i = 0, ilen = points.length; i < ilen; ++i){\n        inAreaPrev = inArea;\n        inArea = inAreaNext;\n        inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n        if (!inArea) {\n            continue;\n        }\n        point = points[i];\n        if (inAreaPrev) {\n            point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n            point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n        }\n        if (inAreaNext) {\n            point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n            point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n        }\n    }\n}\n/**\n * @private\n */ function _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n    let i, ilen, point, controlPoints;\n    // Only consider points that are drawn in case the spanGaps option is used\n    if (options.spanGaps) {\n        points = points.filter((pt)=>!pt.skip);\n    }\n    if (options.cubicInterpolationMode === 'monotone') {\n        splineCurveMonotone(points, indexAxis);\n    } else {\n        let prev = loop ? points[points.length - 1] : points[0];\n        for(i = 0, ilen = points.length; i < ilen; ++i){\n            point = points[i];\n            controlPoints = splineCurve(prev, point, points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen], options.tension);\n            point.cp1x = controlPoints.previous.x;\n            point.cp1y = controlPoints.previous.y;\n            point.cp2x = controlPoints.next.x;\n            point.cp2y = controlPoints.next.y;\n            prev = point;\n        }\n    }\n    if (options.capBezierPoints) {\n        capBezierPoints(points, area);\n    }\n}\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `dom` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import(\"../core/core.controller\").default } dom.Chart\n * @typedef { import('../../types').ChartEvent } ChartEvent\n */ /**\n * @private\n */ function _isDomSupported() {\n    return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n/**\n * @private\n */ function _getParentNode(domNode) {\n    let parent = domNode.parentNode;\n    if (parent && parent.toString() === '[object ShadowRoot]') {\n        parent = parent.host;\n    }\n    return parent;\n}\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */ function parseMaxStyle(styleValue, node, parentProperty) {\n    let valueInPixels;\n    if (typeof styleValue === 'string') {\n        valueInPixels = parseInt(styleValue, 10);\n        if (styleValue.indexOf('%') !== -1) {\n            // percentage * size in dimension\n            valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n        }\n    } else {\n        valueInPixels = styleValue;\n    }\n    return valueInPixels;\n}\nconst getComputedStyle = (element)=>element.ownerDocument.defaultView.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n    return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = [\n    'top',\n    'right',\n    'bottom',\n    'left'\n];\nfunction getPositionedStyle(styles, style, suffix) {\n    const result = {};\n    suffix = suffix ? '-' + suffix : '';\n    for(let i = 0; i < 4; i++){\n        const pos = positions[i];\n        result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n    }\n    result.width = result.left + result.right;\n    result.height = result.top + result.bottom;\n    return result;\n}\nconst useOffsetPos = (x, y, target)=>(x > 0 || y > 0) && (!target || !target.shadowRoot);\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */ function getCanvasPosition(e, canvas) {\n    const touches = e.touches;\n    const source = touches && touches.length ? touches[0] : e;\n    const { offsetX , offsetY  } = source;\n    let box = false;\n    let x, y;\n    if (useOffsetPos(offsetX, offsetY, e.target)) {\n        x = offsetX;\n        y = offsetY;\n    } else {\n        const rect = canvas.getBoundingClientRect();\n        x = source.clientX - rect.left;\n        y = source.clientY - rect.top;\n        box = true;\n    }\n    return {\n        x,\n        y,\n        box\n    };\n}\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */ function getRelativePosition(event, chart) {\n    if ('native' in event) {\n        return event;\n    }\n    const { canvas , currentDevicePixelRatio  } = chart;\n    const style = getComputedStyle(canvas);\n    const borderBox = style.boxSizing === 'border-box';\n    const paddings = getPositionedStyle(style, 'padding');\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const { x , y , box  } = getCanvasPosition(event, canvas);\n    const xOffset = paddings.left + (box && borders.left);\n    const yOffset = paddings.top + (box && borders.top);\n    let { width , height  } = chart;\n    if (borderBox) {\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    return {\n        x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n        y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n    };\n}\nfunction getContainerSize(canvas, width, height) {\n    let maxWidth, maxHeight;\n    if (width === undefined || height === undefined) {\n        const container = _getParentNode(canvas);\n        if (!container) {\n            width = canvas.clientWidth;\n            height = canvas.clientHeight;\n        } else {\n            const rect = container.getBoundingClientRect(); // this is the border box of the container\n            const containerStyle = getComputedStyle(container);\n            const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n            const containerPadding = getPositionedStyle(containerStyle, 'padding');\n            width = rect.width - containerPadding.width - containerBorder.width;\n            height = rect.height - containerPadding.height - containerBorder.height;\n            maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n            maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n        }\n    }\n    return {\n        width,\n        height,\n        maxWidth: maxWidth || INFINITY,\n        maxHeight: maxHeight || INFINITY\n    };\n}\nconst round1 = (v)=>Math.round(v * 10) / 10;\n// eslint-disable-next-line complexity\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n    const style = getComputedStyle(canvas);\n    const margins = getPositionedStyle(style, 'margin');\n    const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n    const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n    const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n    let { width , height  } = containerSize;\n    if (style.boxSizing === 'content-box') {\n        const borders = getPositionedStyle(style, 'border', 'width');\n        const paddings = getPositionedStyle(style, 'padding');\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    width = Math.max(0, width - margins.width);\n    height = Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height - margins.height);\n    width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n    height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n    if (width && !height) {\n        // https://github.com/chartjs/Chart.js/issues/4659\n        // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n        height = round1(width / 2);\n    }\n    const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n    if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n        height = containerSize.height;\n        width = round1(Math.floor(height * aspectRatio));\n    }\n    return {\n        width,\n        height\n    };\n}\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */ function retinaScale(chart, forceRatio, forceStyle) {\n    const pixelRatio = forceRatio || 1;\n    const deviceHeight = Math.floor(chart.height * pixelRatio);\n    const deviceWidth = Math.floor(chart.width * pixelRatio);\n    chart.height = deviceHeight / pixelRatio;\n    chart.width = deviceWidth / pixelRatio;\n    const canvas = chart.canvas;\n    // If no style has been set on the canvas, the render size is used as display size,\n    // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n    // See https://github.com/chartjs/Chart.js/issues/3575\n    if (canvas.style && (forceStyle || !canvas.style.height && !canvas.style.width)) {\n        canvas.style.height = `${chart.height}px`;\n        canvas.style.width = `${chart.width}px`;\n    }\n    if (chart.currentDevicePixelRatio !== pixelRatio || canvas.height !== deviceHeight || canvas.width !== deviceWidth) {\n        chart.currentDevicePixelRatio = pixelRatio;\n        canvas.height = deviceHeight;\n        canvas.width = deviceWidth;\n        chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n        return true;\n    }\n    return false;\n}\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */ const supportsEventListenerOptions = function() {\n    let passiveSupported = false;\n    try {\n        const options = {\n            get passive () {\n                passiveSupported = true;\n                return false;\n            }\n        };\n        window.addEventListener('test', null, options);\n        window.removeEventListener('test', null, options);\n    } catch (e) {\n    // continue regardless of error\n    }\n    return passiveSupported;\n}();\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */ function readUsedSize(element, property) {\n    const value = getStyle(element, property);\n    const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? +matches[1] : undefined;\n}\n\n/**\n * @private\n */ function _pointInLine(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: p1.y + t * (p2.y - p1.y)\n    };\n}\n/**\n * @private\n */ function _steppedInterpolation(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y : mode === 'after' ? t < 1 ? p1.y : p2.y : t > 0 ? p2.y : p1.y\n    };\n}\n/**\n * @private\n */ function _bezierInterpolation(p1, p2, t, mode) {\n    const cp1 = {\n        x: p1.cp2x,\n        y: p1.cp2y\n    };\n    const cp2 = {\n        x: p2.cp1x,\n        y: p2.cp1y\n    };\n    const a = _pointInLine(p1, cp1, t);\n    const b = _pointInLine(cp1, cp2, t);\n    const c = _pointInLine(cp2, p2, t);\n    const d = _pointInLine(a, b, t);\n    const e = _pointInLine(b, c, t);\n    return _pointInLine(d, e, t);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n    return {\n        x (x) {\n            return rectX + rectX + width - x;\n        },\n        setWidth (w) {\n            width = w;\n        },\n        textAlign (align) {\n            if (align === 'center') {\n                return align;\n            }\n            return align === 'right' ? 'left' : 'right';\n        },\n        xPlus (x, value) {\n            return x - value;\n        },\n        leftForLtr (x, itemWidth) {\n            return x - itemWidth;\n        }\n    };\n};\nconst getLeftToRightAdapter = function() {\n    return {\n        x (x) {\n            return x;\n        },\n        setWidth (w) {},\n        textAlign (align) {\n            return align;\n        },\n        xPlus (x, value) {\n            return x + value;\n        },\n        leftForLtr (x, _itemWidth) {\n            return x;\n        }\n    };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n    return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n    let style, original;\n    if (direction === 'ltr' || direction === 'rtl') {\n        style = ctx.canvas.style;\n        original = [\n            style.getPropertyValue('direction'),\n            style.getPropertyPriority('direction'), \n        ];\n        style.setProperty('direction', direction, 'important');\n        ctx.prevTextDirection = original;\n    }\n}\nfunction restoreTextDirection(ctx, original) {\n    if (original !== undefined) {\n        delete ctx.prevTextDirection;\n        ctx.canvas.style.setProperty('direction', original[0], original[1]);\n    }\n}\n\nfunction propertyFn(property) {\n    if (property === 'angle') {\n        return {\n            between: _angleBetween,\n            compare: _angleDiff,\n            normalize: _normalizeAngle\n        };\n    }\n    return {\n        between: _isBetween,\n        compare: (a, b)=>a - b,\n        normalize: (x)=>x\n    };\n}\nfunction normalizeSegment({ start , end , count , loop , style  }) {\n    return {\n        start: start % count,\n        end: end % count,\n        loop: loop && (end - start + 1) % count === 0,\n        style\n    };\n}\nfunction getSegment(segment, points, bounds) {\n    const { property , start: startBound , end: endBound  } = bounds;\n    const { between , normalize  } = propertyFn(property);\n    const count = points.length;\n    let { start , end , loop  } = segment;\n    let i, ilen;\n    if (loop) {\n        start += count;\n        end += count;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n                break;\n            }\n            start--;\n            end--;\n        }\n        start %= count;\n        end %= count;\n    }\n    if (end < start) {\n        end += count;\n    }\n    return {\n        start,\n        end,\n        loop,\n        style: segment.style\n    };\n}\n function _boundSegment(segment, points, bounds) {\n    if (!bounds) {\n        return [\n            segment\n        ];\n    }\n    const { property , start: startBound , end: endBound  } = bounds;\n    const count = points.length;\n    const { compare , between , normalize  } = propertyFn(property);\n    const { start , end , loop , style  } = getSegment(segment, points, bounds);\n    const result = [];\n    let inside = false;\n    let subStart = null;\n    let value, point, prevValue;\n    const startIsBefore = ()=>between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n    const endIsBefore = ()=>compare(endBound, value) === 0 || between(endBound, prevValue, value);\n    const shouldStart = ()=>inside || startIsBefore();\n    const shouldStop = ()=>!inside || endIsBefore();\n    for(let i = start, prev = start; i <= end; ++i){\n        point = points[i % count];\n        if (point.skip) {\n            continue;\n        }\n        value = normalize(point[property]);\n        if (value === prevValue) {\n            continue;\n        }\n        inside = between(value, startBound, endBound);\n        if (subStart === null && shouldStart()) {\n            subStart = compare(value, startBound) === 0 ? i : prev;\n        }\n        if (subStart !== null && shouldStop()) {\n            result.push(normalizeSegment({\n                start: subStart,\n                end: i,\n                loop,\n                count,\n                style\n            }));\n            subStart = null;\n        }\n        prev = i;\n        prevValue = value;\n    }\n    if (subStart !== null) {\n        result.push(normalizeSegment({\n            start: subStart,\n            end,\n            loop,\n            count,\n            style\n        }));\n    }\n    return result;\n}\n function _boundSegments(line, bounds) {\n    const result = [];\n    const segments = line.segments;\n    for(let i = 0; i < segments.length; i++){\n        const sub = _boundSegment(segments[i], line.points, bounds);\n        if (sub.length) {\n            result.push(...sub);\n        }\n    }\n    return result;\n}\n function findStartAndEnd(points, count, loop, spanGaps) {\n    let start = 0;\n    let end = count - 1;\n    if (loop && !spanGaps) {\n        while(start < count && !points[start].skip){\n            start++;\n        }\n    }\n    while(start < count && points[start].skip){\n        start++;\n    }\n    start %= count;\n    if (loop) {\n        end += start;\n    }\n    while(end > start && points[end % count].skip){\n        end--;\n    }\n    end %= count;\n    return {\n        start,\n        end\n    };\n}\n function solidSegments(points, start, max, loop) {\n    const count = points.length;\n    const result = [];\n    let last = start;\n    let prev = points[start];\n    let end;\n    for(end = start + 1; end <= max; ++end){\n        const cur = points[end % count];\n        if (cur.skip || cur.stop) {\n            if (!prev.skip) {\n                loop = false;\n                result.push({\n                    start: start % count,\n                    end: (end - 1) % count,\n                    loop\n                });\n                start = last = cur.stop ? end : null;\n            }\n        } else {\n            last = end;\n            if (prev.skip) {\n                start = end;\n            }\n        }\n        prev = cur;\n    }\n    if (last !== null) {\n        result.push({\n            start: start % count,\n            end: last % count,\n            loop\n        });\n    }\n    return result;\n}\n function _computeSegments(line, segmentOptions) {\n    const points = line.points;\n    const spanGaps = line.options.spanGaps;\n    const count = points.length;\n    if (!count) {\n        return [];\n    }\n    const loop = !!line._loop;\n    const { start , end  } = findStartAndEnd(points, count, loop, spanGaps);\n    if (spanGaps === true) {\n        return splitByStyles(line, [\n            {\n                start,\n                end,\n                loop\n            }\n        ], points, segmentOptions);\n    }\n    const max = end < start ? end + count : end;\n    const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n    return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n function splitByStyles(line, segments, points, segmentOptions) {\n    if (!segmentOptions || !segmentOptions.setContext || !points) {\n        return segments;\n    }\n    return doSplitByStyles(line, segments, points, segmentOptions);\n}\n function doSplitByStyles(line, segments, points, segmentOptions) {\n    const chartContext = line._chart.getContext();\n    const baseStyle = readStyle(line.options);\n    const { _datasetIndex: datasetIndex , options: { spanGaps  }  } = line;\n    const count = points.length;\n    const result = [];\n    let prevStyle = baseStyle;\n    let start = segments[0].start;\n    let i = start;\n    function addStyle(s, e, l, st) {\n        const dir = spanGaps ? -1 : 1;\n        if (s === e) {\n            return;\n        }\n        s += count;\n        while(points[s % count].skip){\n            s -= dir;\n        }\n        while(points[e % count].skip){\n            e += dir;\n        }\n        if (s % count !== e % count) {\n            result.push({\n                start: s % count,\n                end: e % count,\n                loop: l,\n                style: st\n            });\n            prevStyle = st;\n            start = e % count;\n        }\n    }\n    for (const segment of segments){\n        start = spanGaps ? start : segment.start;\n        let prev = points[start % count];\n        let style;\n        for(i = start + 1; i <= segment.end; i++){\n            const pt = points[i % count];\n            style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n                type: 'segment',\n                p0: prev,\n                p1: pt,\n                p0DataIndex: (i - 1) % count,\n                p1DataIndex: i % count,\n                datasetIndex\n            })));\n            if (styleChanged(style, prevStyle)) {\n                addStyle(start, i - 1, segment.loop, prevStyle);\n            }\n            prev = pt;\n            prevStyle = style;\n        }\n        if (start < i - 1) {\n            addStyle(start, i - 1, segment.loop, prevStyle);\n        }\n    }\n    return result;\n}\nfunction readStyle(options) {\n    return {\n        backgroundColor: options.backgroundColor,\n        borderCapStyle: options.borderCapStyle,\n        borderDash: options.borderDash,\n        borderDashOffset: options.borderDashOffset,\n        borderJoinStyle: options.borderJoinStyle,\n        borderWidth: options.borderWidth,\n        borderColor: options.borderColor\n    };\n}\nfunction styleChanged(style, prevStyle) {\n    return prevStyle && JSON.stringify(style) !== JSON.stringify(prevStyle);\n}\n\nexport { unclipArea as $, _rlookupByKey as A, _lookupByKey as B, _isPointInArea as C, getAngleFromPoint as D, toPadding as E, each as F, getMaximumSize as G, HALF_PI as H, _getParentNode as I, readUsedSize as J, supportsEventListenerOptions as K, throttled as L, _isDomSupported as M, _factorize as N, finiteOrDefault as O, PI as P, callback as Q, _addGrace as R, _limitValue as S, TAU as T, toDegrees as U, _measureText as V, _int16Range as W, _alignPixel as X, clipArea as Y, renderText as Z, _arrayUnique as _, resolve as a, fontString as a$, toFont as a0, _toLeftRightCenter as a1, _alignStartEnd as a2, overrides as a3, merge as a4, _capitalize as a5, descriptors as a6, isFunction as a7, _attachContext as a8, _createResolver as a9, overrideTextDirection as aA, _textX as aB, restoreTextDirection as aC, drawPointLegend as aD, distanceBetweenPoints as aE, noop as aF, _setMinAndMaxByKey as aG, niceNum as aH, almostWhole as aI, almostEquals as aJ, _decimalPlaces as aK, Ticks as aL, log10 as aM, _longestText as aN, _filterBetween as aO, _lookup as aP, isPatternOrGradient as aQ, getHoverColor as aR, clone$1 as aS, _merger as aT, _mergerIf as aU, _deprecated as aV, _splitKey as aW, toFontString as aX, splineCurve as aY, splineCurveMonotone as aZ, getStyle as a_, _descriptors as aa, mergeIf as ab, uid as ac, debounce as ad, retinaScale as ae, clearCanvas as af, setsEqual as ag, _elementsEqual as ah, _isClickEvent as ai, _isBetween as aj, _readValueToProps as ak, _updateBezierControlPoints as al, _computeSegments as am, _boundSegments as an, _steppedInterpolation as ao, _bezierInterpolation as ap, _pointInLine as aq, _steppedLineTo as ar, _bezierCurveTo as as, drawPoint as at, addRoundedRectPath as au, toTRBL as av, toTRBLCorners as aw, _boundSegment as ax, _normalizeAngle as ay, getRtlAdapter as az, isArray as b, toLineHeight as b0, PITAU as b1, INFINITY as b2, RAD_PER_DEG as b3, QUARTER_PI as b4, TWO_THIRDS_PI as b5, _angleDiff as b6, color as c, defaults as d, effects$1 as e, resolveObjectKey as f, isNumberFinite as g, defined as h, isObject as i, createContext as j, isNullOrUndef as k, listenArrayEvents as l, toPercentage as m, toDimension as n, formatNumber as o, _angleBetween as p, _getStartAndCountOfVisiblePoints as q, requestAnimFrame as r, sign as s, toRadians as t, unlistenArrayEvents as u, valueOrDefault as v, _scaleRangesChanged as w, isNumber as x, _parseObjectDataRadialScale as y, getRelativePosition as z };\n//# sourceMappingURL=helpers.segment.js.map\n","/*!\n * Chart.js v4.0.1\n * https://www.chartjs.org\n * (c) 2022 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, i as isObject, d as defaults, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as createContext, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, T as TAU, m as toPercentage, n as toDimension, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as _getStartAndCountOfVisiblePoints, w as _scaleRangesChanged, x as isNumber, y as _parseObjectDataRadialScale, z as getRelativePosition, A as _rlookupByKey, B as _lookupByKey, C as _isPointInArea, D as getAngleFromPoint, E as toPadding, F as each, G as getMaximumSize, I as _getParentNode, J as readUsedSize, K as supportsEventListenerOptions, L as throttled, M as _isDomSupported, N as _factorize, O as finiteOrDefault, Q as callback, R as _addGrace, S as _limitValue, U as toDegrees, V as _measureText, W as _int16Range, X as _alignPixel, Y as clipArea, Z as renderText, $ as unclipArea, a0 as toFont, a1 as _toLeftRightCenter, a2 as _alignStartEnd, a3 as overrides, a4 as merge, a5 as _capitalize, a6 as descriptors, a7 as isFunction, a8 as _attachContext, a9 as _createResolver, aa as _descriptors, ab as mergeIf, ac as uid, ad as debounce, ae as retinaScale, af as clearCanvas, ag as setsEqual, ah as _elementsEqual, ai as _isClickEvent, aj as _isBetween, ak as _readValueToProps, al as _updateBezierControlPoints, am as _computeSegments, an as _boundSegments, ao as _steppedInterpolation, ap as _bezierInterpolation, aq as _pointInLine, ar as _steppedLineTo, as as _bezierCurveTo, at as drawPoint, au as addRoundedRectPath, av as toTRBL, aw as toTRBLCorners, ax as _boundSegment, ay as _normalizeAngle, az as getRtlAdapter, aA as overrideTextDirection, aB as _textX, aC as restoreTextDirection, aD as drawPointLegend, aE as distanceBetweenPoints, aF as noop, aG as _setMinAndMaxByKey, aH as niceNum, aI as almostWhole, aJ as almostEquals, aK as _decimalPlaces, aL as Ticks, aM as log10, aN as _longestText, aO as _filterBetween, aP as _lookup } from './chunks/helpers.segment.js';\nexport { aL as Ticks, d as defaults } from './chunks/helpers.segment.js';\n\nclass Animator {\n    constructor(){\n        this._request = null;\n        this._charts = new Map();\n        this._running = false;\n        this._lastDate = undefined;\n    }\n _notify(chart, anims, date, type) {\n        const callbacks = anims.listeners[type];\n        const numSteps = anims.duration;\n        callbacks.forEach((fn)=>fn({\n                chart,\n                initial: anims.initial,\n                numSteps,\n                currentStep: Math.min(date - anims.start, numSteps)\n            }));\n    }\n _refresh() {\n        if (this._request) {\n            return;\n        }\n        this._running = true;\n        this._request = requestAnimFrame.call(window, ()=>{\n            this._update();\n            this._request = null;\n            if (this._running) {\n                this._refresh();\n            }\n        });\n    }\n _update(date = Date.now()) {\n        let remaining = 0;\n        this._charts.forEach((anims, chart)=>{\n            if (!anims.running || !anims.items.length) {\n                return;\n            }\n            const items = anims.items;\n            let i = items.length - 1;\n            let draw = false;\n            let item;\n            for(; i >= 0; --i){\n                item = items[i];\n                if (item._active) {\n                    if (item._total > anims.duration) {\n                        anims.duration = item._total;\n                    }\n                    item.tick(date);\n                    draw = true;\n                } else {\n                    items[i] = items[items.length - 1];\n                    items.pop();\n                }\n            }\n            if (draw) {\n                chart.draw();\n                this._notify(chart, anims, date, 'progress');\n            }\n            if (!items.length) {\n                anims.running = false;\n                this._notify(chart, anims, date, 'complete');\n                anims.initial = false;\n            }\n            remaining += items.length;\n        });\n        this._lastDate = date;\n        if (remaining === 0) {\n            this._running = false;\n        }\n    }\n _getAnims(chart) {\n        const charts = this._charts;\n        let anims = charts.get(chart);\n        if (!anims) {\n            anims = {\n                running: false,\n                initial: true,\n                items: [],\n                listeners: {\n                    complete: [],\n                    progress: []\n                }\n            };\n            charts.set(chart, anims);\n        }\n        return anims;\n    }\n listen(chart, event, cb) {\n        this._getAnims(chart).listeners[event].push(cb);\n    }\n add(chart, items) {\n        if (!items || !items.length) {\n            return;\n        }\n        this._getAnims(chart).items.push(...items);\n    }\n has(chart) {\n        return this._getAnims(chart).items.length > 0;\n    }\n start(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims) {\n            return;\n        }\n        anims.running = true;\n        anims.start = Date.now();\n        anims.duration = anims.items.reduce((acc, cur)=>Math.max(acc, cur._duration), 0);\n        this._refresh();\n    }\n    running(chart) {\n        if (!this._running) {\n            return false;\n        }\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.running || !anims.items.length) {\n            return false;\n        }\n        return true;\n    }\n stop(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.items.length) {\n            return;\n        }\n        const items = anims.items;\n        let i = items.length - 1;\n        for(; i >= 0; --i){\n            items[i].cancel();\n        }\n        anims.items = [];\n        this._notify(chart, anims, Date.now(), 'complete');\n    }\n remove(chart) {\n        return this._charts.delete(chart);\n    }\n}\nvar animator = /* #__PURE__ */ new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n    boolean (from, to, factor) {\n        return factor > 0.5 ? to : from;\n    },\n color (from, to, factor) {\n        const c0 = color(from || transparent);\n        const c1 = c0.valid && color(to || transparent);\n        return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n    },\n    number (from, to, factor) {\n        return from + (to - from) * factor;\n    }\n};\nclass Animation {\n    constructor(cfg, target, prop, to){\n        const currentValue = target[prop];\n        to = resolve([\n            cfg.to,\n            to,\n            currentValue,\n            cfg.from\n        ]);\n        const from = resolve([\n            cfg.from,\n            currentValue,\n            to\n        ]);\n        this._active = true;\n        this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n        this._easing = effects[cfg.easing] || effects.linear;\n        this._start = Math.floor(Date.now() + (cfg.delay || 0));\n        this._duration = this._total = Math.floor(cfg.duration);\n        this._loop = !!cfg.loop;\n        this._target = target;\n        this._prop = prop;\n        this._from = from;\n        this._to = to;\n        this._promises = undefined;\n    }\n    active() {\n        return this._active;\n    }\n    update(cfg, to, date) {\n        if (this._active) {\n            this._notify(false);\n            const currentValue = this._target[this._prop];\n            const elapsed = date - this._start;\n            const remain = this._duration - elapsed;\n            this._start = date;\n            this._duration = Math.floor(Math.max(remain, cfg.duration));\n            this._total += elapsed;\n            this._loop = !!cfg.loop;\n            this._to = resolve([\n                cfg.to,\n                to,\n                currentValue,\n                cfg.from\n            ]);\n            this._from = resolve([\n                cfg.from,\n                currentValue,\n                to\n            ]);\n        }\n    }\n    cancel() {\n        if (this._active) {\n            this.tick(Date.now());\n            this._active = false;\n            this._notify(false);\n        }\n    }\n    tick(date) {\n        const elapsed = date - this._start;\n        const duration = this._duration;\n        const prop = this._prop;\n        const from = this._from;\n        const loop = this._loop;\n        const to = this._to;\n        let factor;\n        this._active = from !== to && (loop || elapsed < duration);\n        if (!this._active) {\n            this._target[prop] = to;\n            this._notify(true);\n            return;\n        }\n        if (elapsed < 0) {\n            this._target[prop] = from;\n            return;\n        }\n        factor = elapsed / duration % 2;\n        factor = loop && factor > 1 ? 2 - factor : factor;\n        factor = this._easing(Math.min(1, Math.max(0, factor)));\n        this._target[prop] = this._fn(from, to, factor);\n    }\n    wait() {\n        const promises = this._promises || (this._promises = []);\n        return new Promise((res, rej)=>{\n            promises.push({\n                res,\n                rej\n            });\n        });\n    }\n    _notify(resolved) {\n        const method = resolved ? 'res' : 'rej';\n        const promises = this._promises || [];\n        for(let i = 0; i < promises.length; i++){\n            promises[i][method]();\n        }\n    }\n}\n\nclass Animations {\n    constructor(chart, config){\n        this._chart = chart;\n        this._properties = new Map();\n        this.configure(config);\n    }\n    configure(config) {\n        if (!isObject(config)) {\n            return;\n        }\n        const animationOptions = Object.keys(defaults.animation);\n        const animatedProps = this._properties;\n        Object.getOwnPropertyNames(config).forEach((key)=>{\n            const cfg = config[key];\n            if (!isObject(cfg)) {\n                return;\n            }\n            const resolved = {};\n            for (const option of animationOptions){\n                resolved[option] = cfg[option];\n            }\n            (isArray(cfg.properties) && cfg.properties || [\n                key\n            ]).forEach((prop)=>{\n                if (prop === key || !animatedProps.has(prop)) {\n                    animatedProps.set(prop, resolved);\n                }\n            });\n        });\n    }\n _animateOptions(target, values) {\n        const newOptions = values.options;\n        const options = resolveTargetOptions(target, newOptions);\n        if (!options) {\n            return [];\n        }\n        const animations = this._createAnimations(options, newOptions);\n        if (newOptions.$shared) {\n            awaitAll(target.options.$animations, newOptions).then(()=>{\n                target.options = newOptions;\n            }, ()=>{\n            });\n        }\n        return animations;\n    }\n _createAnimations(target, values) {\n        const animatedProps = this._properties;\n        const animations = [];\n        const running = target.$animations || (target.$animations = {});\n        const props = Object.keys(values);\n        const date = Date.now();\n        let i;\n        for(i = props.length - 1; i >= 0; --i){\n            const prop = props[i];\n            if (prop.charAt(0) === '$') {\n                continue;\n            }\n            if (prop === 'options') {\n                animations.push(...this._animateOptions(target, values));\n                continue;\n            }\n            const value = values[prop];\n            let animation = running[prop];\n            const cfg = animatedProps.get(prop);\n            if (animation) {\n                if (cfg && animation.active()) {\n                    animation.update(cfg, value, date);\n                    continue;\n                } else {\n                    animation.cancel();\n                }\n            }\n            if (!cfg || !cfg.duration) {\n                target[prop] = value;\n                continue;\n            }\n            running[prop] = animation = new Animation(cfg, target, prop, value);\n            animations.push(animation);\n        }\n        return animations;\n    }\n update(target, values) {\n        if (this._properties.size === 0) {\n            Object.assign(target, values);\n            return;\n        }\n        const animations = this._createAnimations(target, values);\n        if (animations.length) {\n            animator.add(this._chart, animations);\n            return true;\n        }\n    }\n}function awaitAll(animations, properties) {\n    const running = [];\n    const keys = Object.keys(properties);\n    for(let i = 0; i < keys.length; i++){\n        const anim = animations[keys[i]];\n        if (anim && anim.active()) {\n            running.push(anim.wait());\n        }\n    }\n    return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n    if (!newOptions) {\n        return;\n    }\n    let options = target.options;\n    if (!options) {\n        target.options = newOptions;\n        return;\n    }\n    if (options.$shared) {\n        target.options = options = Object.assign({}, options, {\n            $shared: false,\n            $animations: {}\n        });\n    }\n    return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n    const opts = scale && scale.options || {};\n    const reverse = opts.reverse;\n    const min = opts.min === undefined ? allowedOverflow : 0;\n    const max = opts.max === undefined ? allowedOverflow : 0;\n    return {\n        start: reverse ? max : min,\n        end: reverse ? min : max\n    };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n    if (allowedOverflow === false) {\n        return false;\n    }\n    const x = scaleClip(xScale, allowedOverflow);\n    const y = scaleClip(yScale, allowedOverflow);\n    return {\n        top: y.end,\n        right: x.end,\n        bottom: y.start,\n        left: x.start\n    };\n}\nfunction toClip(value) {\n    let t, r, b, l;\n    if (isObject(value)) {\n        t = value.top;\n        r = value.right;\n        b = value.bottom;\n        l = value.left;\n    } else {\n        t = r = b = l = value;\n    }\n    return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        disabled: value === false\n    };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n    const keys = [];\n    const metasets = chart._getSortedDatasetMetas(filterVisible);\n    let i, ilen;\n    for(i = 0, ilen = metasets.length; i < ilen; ++i){\n        keys.push(metasets[i].index);\n    }\n    return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n    const keys = stack.keys;\n    const singleMode = options.mode === 'single';\n    let i, ilen, datasetIndex, otherValue;\n    if (value === null) {\n        return;\n    }\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        datasetIndex = +keys[i];\n        if (datasetIndex === dsIndex) {\n            if (options.all) {\n                continue;\n            }\n            break;\n        }\n        otherValue = stack.values[datasetIndex];\n        if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n            value += otherValue;\n        }\n    }\n    return value;\n}\nfunction convertObjectDataToArray(data) {\n    const keys = Object.keys(data);\n    const adata = new Array(keys.length);\n    let i, ilen, key;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        key = keys[i];\n        adata[i] = {\n            x: key,\n            y: data[key]\n        };\n    }\n    return adata;\n}\nfunction isStacked(scale, meta) {\n    const stacked = scale && scale.options.stacked;\n    return stacked || stacked === undefined && meta.stack !== undefined;\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n    return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n    const { min , max , minDefined , maxDefined  } = scale.getUserBounds();\n    return {\n        min: minDefined ? min : Number.NEGATIVE_INFINITY,\n        max: maxDefined ? max : Number.POSITIVE_INFINITY\n    };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n    const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n    return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n    for (const meta of vScale.getMatchingVisibleMetas(type).reverse()){\n        const value = stack[meta.index];\n        if (positive && value > 0 || !positive && value < 0) {\n            return meta.index;\n        }\n    }\n    return null;\n}\nfunction updateStacks(controller, parsed) {\n    const { chart , _cachedMeta: meta  } = controller;\n    const stacks = chart._stacks || (chart._stacks = {});\n    const { iScale , vScale , index: datasetIndex  } = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const key = getStackKey(iScale, vScale, meta);\n    const ilen = parsed.length;\n    let stack;\n    for(let i = 0; i < ilen; ++i){\n        const item = parsed[i];\n        const { [iAxis]: index , [vAxis]: value  } = item;\n        const itemStacks = item._stacks || (item._stacks = {});\n        stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n        stack[datasetIndex] = value;\n        stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n        stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n    }\n}\nfunction getFirstScaleId(chart, axis) {\n    const scales = chart.scales;\n    return Object.keys(scales).filter((key)=>scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n    return createContext(parent, {\n        active: false,\n        dataset: undefined,\n        datasetIndex: index,\n        index,\n        mode: 'default',\n        type: 'dataset'\n    });\n}\nfunction createDataContext(parent, index, element) {\n    return createContext(parent, {\n        active: false,\n        dataIndex: index,\n        parsed: undefined,\n        raw: undefined,\n        element,\n        index,\n        mode: 'default',\n        type: 'data'\n    });\n}\nfunction clearStacks(meta, items) {\n    const datasetIndex = meta.controller.index;\n    const axis = meta.vScale && meta.vScale.axis;\n    if (!axis) {\n        return;\n    }\n    items = items || meta._parsed;\n    for (const parsed of items){\n        const stacks = parsed._stacks;\n        if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n            return;\n        }\n        delete stacks[axis][datasetIndex];\n    }\n}\nconst isDirectUpdateMode = (mode)=>mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared)=>shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart)=>canStack && !meta.hidden && meta._stacked && {\n        keys: getSortedDatasetIndices(chart, true),\n        values: null\n    };\nclass DatasetController {\n static defaults = {};\n static datasetElementType = null;\n static dataElementType = null;\n constructor(chart, datasetIndex){\n        this.chart = chart;\n        this._ctx = chart.ctx;\n        this.index = datasetIndex;\n        this._cachedDataOpts = {};\n        this._cachedMeta = this.getMeta();\n        this._type = this._cachedMeta.type;\n        this.options = undefined;\n         this._parsing = false;\n        this._data = undefined;\n        this._objectData = undefined;\n        this._sharedOptions = undefined;\n        this._drawStart = undefined;\n        this._drawCount = undefined;\n        this.enableOptionSharing = false;\n        this.supportsDecimation = false;\n        this.$context = undefined;\n        this._syncList = [];\n        this.datasetElementType = new.target.datasetElementType;\n        this.dataElementType = new.target.dataElementType;\n        this.initialize();\n    }\n    initialize() {\n        const meta = this._cachedMeta;\n        this.configure();\n        this.linkScales();\n        meta._stacked = isStacked(meta.vScale, meta);\n        this.addElements();\n        if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n            console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n        }\n    }\n    updateIndex(datasetIndex) {\n        if (this.index !== datasetIndex) {\n            clearStacks(this._cachedMeta);\n        }\n        this.index = datasetIndex;\n    }\n    linkScales() {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        const chooseId = (axis, x, y, r)=>axis === 'x' ? x : axis === 'r' ? r : y;\n        const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n        const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n        const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n        const indexAxis = meta.indexAxis;\n        const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n        const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n        meta.xScale = this.getScaleForId(xid);\n        meta.yScale = this.getScaleForId(yid);\n        meta.rScale = this.getScaleForId(rid);\n        meta.iScale = this.getScaleForId(iid);\n        meta.vScale = this.getScaleForId(vid);\n    }\n    getDataset() {\n        return this.chart.data.datasets[this.index];\n    }\n    getMeta() {\n        return this.chart.getDatasetMeta(this.index);\n    }\n getScaleForId(scaleID) {\n        return this.chart.scales[scaleID];\n    }\n _getOtherScale(scale) {\n        const meta = this._cachedMeta;\n        return scale === meta.iScale ? meta.vScale : meta.iScale;\n    }\n    reset() {\n        this._update('reset');\n    }\n _destroy() {\n        const meta = this._cachedMeta;\n        if (this._data) {\n            unlistenArrayEvents(this._data, this);\n        }\n        if (meta._stacked) {\n            clearStacks(meta);\n        }\n    }\n _dataCheck() {\n        const dataset = this.getDataset();\n        const data = dataset.data || (dataset.data = []);\n        const _data = this._data;\n        if (isObject(data)) {\n            this._data = convertObjectDataToArray(data);\n        } else if (_data !== data) {\n            if (_data) {\n                unlistenArrayEvents(_data, this);\n                const meta = this._cachedMeta;\n                clearStacks(meta);\n                meta._parsed = [];\n            }\n            if (data && Object.isExtensible(data)) {\n                listenArrayEvents(data, this);\n            }\n            this._syncList = [];\n            this._data = data;\n        }\n    }\n    addElements() {\n        const meta = this._cachedMeta;\n        this._dataCheck();\n        if (this.datasetElementType) {\n            meta.dataset = new this.datasetElementType();\n        }\n    }\n    buildOrUpdateElements(resetNewElements) {\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        let stackChanged = false;\n        this._dataCheck();\n        const oldStacked = meta._stacked;\n        meta._stacked = isStacked(meta.vScale, meta);\n        if (meta.stack !== dataset.stack) {\n            stackChanged = true;\n            clearStacks(meta);\n            meta.stack = dataset.stack;\n        }\n        this._resyncElements(resetNewElements);\n        if (stackChanged || oldStacked !== meta._stacked) {\n            updateStacks(this, meta._parsed);\n        }\n    }\n configure() {\n        const config = this.chart.config;\n        const scopeKeys = config.datasetScopeKeys(this._type);\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n        this.options = config.createResolver(scopes, this.getContext());\n        this._parsing = this.options.parsing;\n        this._cachedDataOpts = {};\n    }\n parse(start, count) {\n        const { _cachedMeta: meta , _data: data  } = this;\n        const { iScale , _stacked  } = meta;\n        const iAxis = iScale.axis;\n        let sorted = start === 0 && count === data.length ? true : meta._sorted;\n        let prev = start > 0 && meta._parsed[start - 1];\n        let i, cur, parsed;\n        if (this._parsing === false) {\n            meta._parsed = data;\n            meta._sorted = true;\n            parsed = data;\n        } else {\n            if (isArray(data[start])) {\n                parsed = this.parseArrayData(meta, data, start, count);\n            } else if (isObject(data[start])) {\n                parsed = this.parseObjectData(meta, data, start, count);\n            } else {\n                parsed = this.parsePrimitiveData(meta, data, start, count);\n            }\n            const isNotInOrderComparedToPrev = ()=>cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n            for(i = 0; i < count; ++i){\n                meta._parsed[i + start] = cur = parsed[i];\n                if (sorted) {\n                    if (isNotInOrderComparedToPrev()) {\n                        sorted = false;\n                    }\n                    prev = cur;\n                }\n            }\n            meta._sorted = sorted;\n        }\n        if (_stacked) {\n            updateStacks(this, parsed);\n        }\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const labels = iScale.getLabels();\n        const singleScale = iScale === vScale;\n        const parsed = new Array(count);\n        let i, ilen, index;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            parsed[i] = {\n                [iAxis]: singleScale || iScale.parse(labels[index], index),\n                [vAxis]: vScale.parse(data[index], index)\n            };\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(item[0], index),\n                y: yScale.parse(item[1], index)\n            };\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n                y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n            };\n        }\n        return parsed;\n    }\n getParsed(index) {\n        return this._cachedMeta._parsed[index];\n    }\n getDataElement(index) {\n        return this._cachedMeta.data[index];\n    }\n applyStack(scale, parsed, mode) {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const value = parsed[scale.axis];\n        const stack = {\n            keys: getSortedDatasetIndices(chart, true),\n            values: parsed._stacks[scale.axis]\n        };\n        return applyStack(stack, value, meta.index, {\n            mode\n        });\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        const parsedValue = parsed[scale.axis];\n        let value = parsedValue === null ? NaN : parsedValue;\n        const values = stack && parsed._stacks[scale.axis];\n        if (stack && values) {\n            stack.values = values;\n            value = applyStack(stack, parsedValue, this._cachedMeta.index);\n        }\n        range.min = Math.min(range.min, value);\n        range.max = Math.max(range.max, value);\n    }\n getMinMax(scale, canStack) {\n        const meta = this._cachedMeta;\n        const _parsed = meta._parsed;\n        const sorted = meta._sorted && scale === meta.iScale;\n        const ilen = _parsed.length;\n        const otherScale = this._getOtherScale(scale);\n        const stack = createStack(canStack, meta, this.chart);\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        const { min: otherMin , max: otherMax  } = getUserBounds(otherScale);\n        let i, parsed;\n        function _skip() {\n            parsed = _parsed[i];\n            const otherValue = parsed[otherScale.axis];\n            return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n        }\n        for(i = 0; i < ilen; ++i){\n            if (_skip()) {\n                continue;\n            }\n            this.updateRangeFromParsed(range, scale, parsed, stack);\n            if (sorted) {\n                break;\n            }\n        }\n        if (sorted) {\n            for(i = ilen - 1; i >= 0; --i){\n                if (_skip()) {\n                    continue;\n                }\n                this.updateRangeFromParsed(range, scale, parsed, stack);\n                break;\n            }\n        }\n        return range;\n    }\n    getAllParsedValues(scale) {\n        const parsed = this._cachedMeta._parsed;\n        const values = [];\n        let i, ilen, value;\n        for(i = 0, ilen = parsed.length; i < ilen; ++i){\n            value = parsed[i][scale.axis];\n            if (isNumberFinite(value)) {\n                values.push(value);\n            }\n        }\n        return values;\n    }\n getMaxOverflow() {\n        return false;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const vScale = meta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n            value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n        };\n    }\n _update(mode) {\n        const meta = this._cachedMeta;\n        this.update(mode || 'default');\n        meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n    }\n update(mode) {}\n    draw() {\n        const ctx = this._ctx;\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const elements = meta.data || [];\n        const area = chart.chartArea;\n        const active = [];\n        const start = this._drawStart || 0;\n        const count = this._drawCount || elements.length - start;\n        const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n        let i;\n        if (meta.dataset) {\n            meta.dataset.draw(ctx, area, start, count);\n        }\n        for(i = start; i < start + count; ++i){\n            const element = elements[i];\n            if (element.hidden) {\n                continue;\n            }\n            if (element.active && drawActiveElementsOnTop) {\n                active.push(element);\n            } else {\n                element.draw(ctx, area);\n            }\n        }\n        for(i = 0; i < active.length; ++i){\n            active[i].draw(ctx, area);\n        }\n    }\n getStyle(index, active) {\n        const mode = active ? 'active' : 'default';\n        return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n    }\n getContext(index, active, mode) {\n        const dataset = this.getDataset();\n        let context;\n        if (index >= 0 && index < this._cachedMeta.data.length) {\n            const element = this._cachedMeta.data[index];\n            context = element.$context || (element.$context = createDataContext(this.getContext(), index, element));\n            context.parsed = this.getParsed(index);\n            context.raw = dataset.data[index];\n            context.index = context.dataIndex = index;\n        } else {\n            context = this.$context || (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n            context.dataset = dataset;\n            context.index = context.datasetIndex = this.index;\n        }\n        context.active = !!active;\n        context.mode = mode;\n        return context;\n    }\n resolveDatasetElementOptions(mode) {\n        return this._resolveElementOptions(this.datasetElementType.id, mode);\n    }\n resolveDataElementOptions(index, mode) {\n        return this._resolveElementOptions(this.dataElementType.id, mode, index);\n    }\n _resolveElementOptions(elementType, mode = 'default', index) {\n        const active = mode === 'active';\n        const cache = this._cachedDataOpts;\n        const cacheKey = elementType + '-' + mode;\n        const cached = cache[cacheKey];\n        const sharing = this.enableOptionSharing && defined(index);\n        if (cached) {\n            return cloneIfNotShared(cached, sharing);\n        }\n        const config = this.chart.config;\n        const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n        const prefixes = active ? [\n            `${elementType}Hover`,\n            'hover',\n            elementType,\n            ''\n        ] : [\n            elementType,\n            ''\n        ];\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n        const names = Object.keys(defaults.elements[elementType]);\n        const context = ()=>this.getContext(index, active);\n        const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n        if (values.$shared) {\n            values.$shared = sharing;\n            cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n        }\n        return values;\n    }\n _resolveAnimations(index, transition, active) {\n        const chart = this.chart;\n        const cache = this._cachedDataOpts;\n        const cacheKey = `animation-${transition}`;\n        const cached = cache[cacheKey];\n        if (cached) {\n            return cached;\n        }\n        let options;\n        if (chart.options.animation !== false) {\n            const config = this.chart.config;\n            const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n            const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n            options = config.createResolver(scopes, this.getContext(index, active, transition));\n        }\n        const animations = new Animations(chart, options && options.animations);\n        if (options && options._cacheable) {\n            cache[cacheKey] = Object.freeze(animations);\n        }\n        return animations;\n    }\n getSharedOptions(options) {\n        if (!options.$shared) {\n            return;\n        }\n        return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n    }\n includeOptions(mode, sharedOptions) {\n        return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n    }\n _getSharedOptions(start, mode) {\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const previouslySharedOptions = this._sharedOptions;\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions) || sharedOptions !== previouslySharedOptions;\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n        return {\n            sharedOptions,\n            includeOptions\n        };\n    }\n updateElement(element, index, properties, mode) {\n        if (isDirectUpdateMode(mode)) {\n            Object.assign(element, properties);\n        } else {\n            this._resolveAnimations(index, mode).update(element, properties);\n        }\n    }\n updateSharedOptions(sharedOptions, mode, newOptions) {\n        if (sharedOptions && !isDirectUpdateMode(mode)) {\n            this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n        }\n    }\n _setStyle(element, index, mode, active) {\n        element.active = active;\n        const options = this.getStyle(index, active);\n        this._resolveAnimations(index, mode, active).update(element, {\n            options: !active && this.getSharedOptions(options) || options\n        });\n    }\n    removeHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', false);\n    }\n    setHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', true);\n    }\n _removeDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', false);\n        }\n    }\n _setDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', true);\n        }\n    }\n _resyncElements(resetNewElements) {\n        const data = this._data;\n        const elements = this._cachedMeta.data;\n        for (const [method, arg1, arg2] of this._syncList){\n            this[method](arg1, arg2);\n        }\n        this._syncList = [];\n        const numMeta = elements.length;\n        const numData = data.length;\n        const count = Math.min(numData, numMeta);\n        if (count) {\n            this.parse(0, count);\n        }\n        if (numData > numMeta) {\n            this._insertElements(numMeta, numData - numMeta, resetNewElements);\n        } else if (numData < numMeta) {\n            this._removeElements(numData, numMeta - numData);\n        }\n    }\n _insertElements(start, count, resetNewElements = true) {\n        const meta = this._cachedMeta;\n        const data = meta.data;\n        const end = start + count;\n        let i;\n        const move = (arr)=>{\n            arr.length += count;\n            for(i = arr.length - 1; i >= end; i--){\n                arr[i] = arr[i - count];\n            }\n        };\n        move(data);\n        for(i = start; i < end; ++i){\n            data[i] = new this.dataElementType();\n        }\n        if (this._parsing) {\n            move(meta._parsed);\n        }\n        this.parse(start, count);\n        if (resetNewElements) {\n            this.updateElements(data, start, count, 'reset');\n        }\n    }\n    updateElements(element, start, count, mode) {}\n _removeElements(start, count) {\n        const meta = this._cachedMeta;\n        if (this._parsing) {\n            const removed = meta._parsed.splice(start, count);\n            if (meta._stacked) {\n                clearStacks(meta, removed);\n            }\n        }\n        meta.data.splice(start, count);\n    }\n _sync(args) {\n        if (this._parsing) {\n            this._syncList.push(args);\n        } else {\n            const [method, arg1, arg2] = args;\n            this[method](arg1, arg2);\n        }\n        this.chart._dataChanges.push([\n            this.index,\n            ...args\n        ]);\n    }\n    _onDataPush() {\n        const count = arguments.length;\n        this._sync([\n            '_insertElements',\n            this.getDataset().data.length - count,\n            count\n        ]);\n    }\n    _onDataPop() {\n        this._sync([\n            '_removeElements',\n            this._cachedMeta.data.length - 1,\n            1\n        ]);\n    }\n    _onDataShift() {\n        this._sync([\n            '_removeElements',\n            0,\n            1\n        ]);\n    }\n    _onDataSplice(start, count) {\n        if (count) {\n            this._sync([\n                '_removeElements',\n                start,\n                count\n            ]);\n        }\n        const newCount = arguments.length - 2;\n        if (newCount) {\n            this._sync([\n                '_insertElements',\n                start,\n                newCount\n            ]);\n        }\n    }\n    _onDataUnshift() {\n        this._sync([\n            '_insertElements',\n            0,\n            arguments.length\n        ]);\n    }\n}\n\nfunction getAllScaleValues(scale, type) {\n    if (!scale._cache.$bar) {\n        const visibleMetas = scale.getMatchingVisibleMetas(type);\n        let values = [];\n        for(let i = 0, ilen = visibleMetas.length; i < ilen; i++){\n            values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n        }\n        scale._cache.$bar = _arrayUnique(values.sort((a, b)=>a - b));\n    }\n    return scale._cache.$bar;\n}\n function computeMinSampleSize(meta) {\n    const scale = meta.iScale;\n    const values = getAllScaleValues(scale, meta.type);\n    let min = scale._length;\n    let i, ilen, curr, prev;\n    const updateMinAndPrev = ()=>{\n        if (curr === 32767 || curr === -32768) {\n            return;\n        }\n        if (defined(prev)) {\n            min = Math.min(min, Math.abs(curr - prev) || min);\n        }\n        prev = curr;\n    };\n    for(i = 0, ilen = values.length; i < ilen; ++i){\n        curr = scale.getPixelForValue(values[i]);\n        updateMinAndPrev();\n    }\n    prev = undefined;\n    for(i = 0, ilen = scale.ticks.length; i < ilen; ++i){\n        curr = scale.getPixelForTick(i);\n        updateMinAndPrev();\n    }\n    return min;\n}\n function computeFitCategoryTraits(index, ruler, options, stackCount) {\n    const thickness = options.barThickness;\n    let size, ratio;\n    if (isNullOrUndef(thickness)) {\n        size = ruler.min * options.categoryPercentage;\n        ratio = options.barPercentage;\n    } else {\n        size = thickness * stackCount;\n        ratio = 1;\n    }\n    return {\n        chunk: size / stackCount,\n        ratio,\n        start: ruler.pixels[index] - size / 2\n    };\n}\n function computeFlexCategoryTraits(index, ruler, options, stackCount) {\n    const pixels = ruler.pixels;\n    const curr = pixels[index];\n    let prev = index > 0 ? pixels[index - 1] : null;\n    let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    const percent = options.categoryPercentage;\n    if (prev === null) {\n        prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n    if (next === null) {\n        next = curr + curr - prev;\n    }\n    const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    const size = Math.abs(next - prev) / 2 * percent;\n    return {\n        chunk: size / stackCount,\n        ratio: options.barPercentage,\n        start\n    };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n    const startValue = vScale.parse(entry[0], i);\n    const endValue = vScale.parse(entry[1], i);\n    const min = Math.min(startValue, endValue);\n    const max = Math.max(startValue, endValue);\n    let barStart = min;\n    let barEnd = max;\n    if (Math.abs(min) > Math.abs(max)) {\n        barStart = max;\n        barEnd = min;\n    }\n    item[vScale.axis] = barEnd;\n    item._custom = {\n        barStart,\n        barEnd,\n        start: startValue,\n        end: endValue,\n        min,\n        max\n    };\n}\nfunction parseValue(entry, item, vScale, i) {\n    if (isArray(entry)) {\n        parseFloatBar(entry, item, vScale, i);\n    } else {\n        item[vScale.axis] = vScale.parse(entry, i);\n    }\n    return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = [];\n    let i, ilen, item, entry;\n    for(i = start, ilen = start + count; i < ilen; ++i){\n        entry = data[i];\n        item = {};\n        item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n        parsed.push(parseValue(entry, item, vScale, i));\n    }\n    return parsed;\n}\nfunction isFloatBar(custom) {\n    return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n    if (size !== 0) {\n        return sign(size);\n    }\n    return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n    let reverse, start, end, top, bottom;\n    if (properties.horizontal) {\n        reverse = properties.base > properties.x;\n        start = 'left';\n        end = 'right';\n    } else {\n        reverse = properties.base < properties.y;\n        start = 'bottom';\n        end = 'top';\n    }\n    if (reverse) {\n        top = 'end';\n        bottom = 'start';\n    } else {\n        top = 'start';\n        bottom = 'end';\n    }\n    return {\n        start,\n        end,\n        reverse,\n        top,\n        bottom\n    };\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n    let edge = options.borderSkipped;\n    const res = {};\n    if (!edge) {\n        properties.borderSkipped = res;\n        return;\n    }\n    if (edge === true) {\n        properties.borderSkipped = {\n            top: true,\n            right: true,\n            bottom: true,\n            left: true\n        };\n        return;\n    }\n    const { start , end , reverse , top , bottom  } = borderProps(properties);\n    if (edge === 'middle' && stack) {\n        properties.enableBorderRadius = true;\n        if ((stack._top || 0) === index) {\n            edge = top;\n        } else if ((stack._bottom || 0) === index) {\n            edge = bottom;\n        } else {\n            res[parseEdge(bottom, start, end, reverse)] = true;\n            edge = top;\n        }\n    }\n    res[parseEdge(edge, start, end, reverse)] = true;\n    properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n    if (reverse) {\n        edge = swap(edge, a, b);\n        edge = startEnd(edge, b, a);\n    } else {\n        edge = startEnd(edge, a, b);\n    }\n    return edge;\n}\nfunction swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n    return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, { inflateAmount  }, ratio) {\n    properties.inflateAmount = inflateAmount === 'auto' ? ratio === 1 ? 0.33 : 0 : inflateAmount;\n}\nclass BarController extends DatasetController {\n    static id = 'bar';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'bar',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        grouped: true,\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'base',\n                    'width',\n                    'height'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category',\n                offset: true,\n                grid: {\n                    offset: true\n                }\n            },\n            _value_: {\n                type: 'linear',\n                beginAtZero: true\n            }\n        }\n    };\n parsePrimitiveData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseArrayData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseObjectData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const parsed = [];\n        let i, ilen, item, obj;\n        for(i = start, ilen = start + count; i < ilen; ++i){\n            obj = data[i];\n            item = {};\n            item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n            parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n        }\n        return parsed;\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        super.updateRangeFromParsed(range, scale, parsed, stack);\n        const custom = parsed._custom;\n        if (custom && scale === this._cachedMeta.vScale) {\n            range.min = Math.min(range.min, custom.min);\n            range.max = Math.max(range.max, custom.max);\n        }\n    }\n getMaxOverflow() {\n        return 0;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const { iScale , vScale  } = meta;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n        return {\n            label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n            value\n        };\n    }\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n        const meta = this._cachedMeta;\n        meta.stack = this.getDataset().stack;\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        this.updateElements(meta.data, 0, meta.data.length, mode);\n    }\n    updateElements(bars, start, count, mode) {\n        const reset = mode === 'reset';\n        const { index , _cachedMeta: { vScale  }  } = this;\n        const base = vScale.getBasePixel();\n        const horizontal = vScale.isHorizontal();\n        const ruler = this._getRuler();\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        for(let i = start; i < start + count; i++){\n            const parsed = this.getParsed(i);\n            const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n                base,\n                head: base\n            } : this._calculateBarValuePixels(i);\n            const ipixels = this._calculateBarIndexPixels(i, ruler);\n            const stack = (parsed._stacks || {})[vScale.axis];\n            const properties = {\n                horizontal,\n                base: vpixels.base,\n                enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n                x: horizontal ? vpixels.head : ipixels.center,\n                y: horizontal ? ipixels.center : vpixels.head,\n                height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n                width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n            }\n            const options = properties.options || bars[i].options;\n            setBorderSkipped(properties, options, stack, index);\n            setInflateAmount(properties, options, ruler.ratio);\n            this.updateElement(bars[i], i, properties, mode);\n        }\n    }\n _getStacks(last, dataIndex) {\n        const { iScale  } = this._cachedMeta;\n        const metasets = iScale.getMatchingVisibleMetas(this._type).filter((meta)=>meta.controller.options.grouped);\n        const stacked = iScale.options.stacked;\n        const stacks = [];\n        const skipNull = (meta)=>{\n            const parsed = meta.controller.getParsed(dataIndex);\n            const val = parsed && parsed[meta.vScale.axis];\n            if (isNullOrUndef(val) || isNaN(val)) {\n                return true;\n            }\n        };\n        for (const meta of metasets){\n            if (dataIndex !== undefined && skipNull(meta)) {\n                continue;\n            }\n            if (stacked === false || stacks.indexOf(meta.stack) === -1 || stacked === undefined && meta.stack === undefined) {\n                stacks.push(meta.stack);\n            }\n            if (meta.index === last) {\n                break;\n            }\n        }\n        if (!stacks.length) {\n            stacks.push(undefined);\n        }\n        return stacks;\n    }\n _getStackCount(index) {\n        return this._getStacks(undefined, index).length;\n    }\n _getStackIndex(datasetIndex, name, dataIndex) {\n        const stacks = this._getStacks(datasetIndex, dataIndex);\n        const index = name !== undefined ? stacks.indexOf(name) : -1;\n        return index === -1 ? stacks.length - 1 : index;\n    }\n _getRuler() {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const pixels = [];\n        let i, ilen;\n        for(i = 0, ilen = meta.data.length; i < ilen; ++i){\n            pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n        }\n        const barThickness = opts.barThickness;\n        const min = barThickness || computeMinSampleSize(meta);\n        return {\n            min,\n            pixels,\n            start: iScale._startPixel,\n            end: iScale._endPixel,\n            stackCount: this._getStackCount(),\n            scale: iScale,\n            grouped: opts.grouped,\n            ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n        };\n    }\n _calculateBarValuePixels(index) {\n        const { _cachedMeta: { vScale , _stacked  } , options: { base: baseValue , minBarLength  }  } = this;\n        const actualBase = baseValue || 0;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const floating = isFloatBar(custom);\n        let value = parsed[vScale.axis];\n        let start = 0;\n        let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n        let head, size;\n        if (length !== value) {\n            start = length - value;\n            length = value;\n        }\n        if (floating) {\n            value = custom.barStart;\n            length = custom.barEnd - custom.barStart;\n            if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n                start = 0;\n            }\n            start += value;\n        }\n        const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n        let base = vScale.getPixelForValue(startValue);\n        if (this.chart.getDataVisibility(index)) {\n            head = vScale.getPixelForValue(start + length);\n        } else {\n            head = base;\n        }\n        size = head - base;\n        if (Math.abs(size) < minBarLength) {\n            size = barSign(size, vScale, actualBase) * minBarLength;\n            if (value === actualBase) {\n                base -= size / 2;\n            }\n            const startPixel = vScale.getPixelForDecimal(0);\n            const endPixel = vScale.getPixelForDecimal(1);\n            const min = Math.min(startPixel, endPixel);\n            const max = Math.max(startPixel, endPixel);\n            base = Math.max(Math.min(base, max), min);\n            head = base + size;\n        }\n        if (base === vScale.getPixelForValue(actualBase)) {\n            const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n            base += halfGrid;\n            size -= halfGrid;\n        }\n        return {\n            size,\n            base,\n            head,\n            center: head + size / 2\n        };\n    }\n _calculateBarIndexPixels(index, ruler) {\n        const scale = ruler.scale;\n        const options = this.options;\n        const skipNull = options.skipNull;\n        const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n        let center, size;\n        if (ruler.grouped) {\n            const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n            const range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount) : computeFitCategoryTraits(index, ruler, options, stackCount);\n            const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n            center = range.start + range.chunk * stackIndex + range.chunk / 2;\n            size = Math.min(maxBarThickness, range.chunk * range.ratio);\n        } else {\n            center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n            size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n        }\n        return {\n            base: center - size / 2,\n            head: center + size / 2,\n            center,\n            size\n        };\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        const vScale = meta.vScale;\n        const rects = meta.data;\n        const ilen = rects.length;\n        let i = 0;\n        for(; i < ilen; ++i){\n            if (this.getParsed(i)[vScale.axis] !== null) {\n                rects[i].draw(this._ctx);\n            }\n        }\n    }\n}\n\nclass BubbleController extends DatasetController {\n    static id = 'bubble';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'borderWidth',\n                    'radius'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const parsed = super.parsePrimitiveData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const parsed = super.parseArrayData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const parsed = super.parseObjectData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n getMaxOverflow() {\n        const data = this._cachedMeta.data;\n        let max = 0;\n        for(let i = data.length - 1; i >= 0; --i){\n            max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n        }\n        return max > 0 && max;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        const r = parsed._custom;\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n        };\n    }\n    update(mode) {\n        const points = this._cachedMeta.data;\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const parsed = !reset && this.getParsed(i);\n            const properties = {};\n            const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n            const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel);\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n                if (reset) {\n                    properties.options.radius = 0;\n                }\n            }\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n resolveDataElementOptions(index, mode) {\n        const parsed = this.getParsed(index);\n        let values = super.resolveDataElementOptions(index, mode);\n        if (values.$shared) {\n            values = Object.assign({}, values, {\n                $shared: false\n            });\n        }\n        const radius = values.radius;\n        if (mode !== 'active') {\n            values.radius = 0;\n        }\n        values.radius += valueOrDefault(parsed && parsed._custom, radius);\n        return values;\n    }\n}\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n    let ratioX = 1;\n    let ratioY = 1;\n    let offsetX = 0;\n    let offsetY = 0;\n    if (circumference < TAU) {\n        const startAngle = rotation;\n        const endAngle = startAngle + circumference;\n        const startX = Math.cos(startAngle);\n        const startY = Math.sin(startAngle);\n        const endX = Math.cos(endAngle);\n        const endY = Math.sin(endAngle);\n        const calcMax = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n        const calcMin = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n        const maxX = calcMax(0, startX, endX);\n        const maxY = calcMax(HALF_PI, startY, endY);\n        const minX = calcMin(PI, startX, endX);\n        const minY = calcMin(PI + HALF_PI, startY, endY);\n        ratioX = (maxX - minX) / 2;\n        ratioY = (maxY - minY) / 2;\n        offsetX = -(maxX + minX) / 2;\n        offsetY = -(maxY + minY) / 2;\n    }\n    return {\n        ratioX,\n        ratioY,\n        offsetX,\n        offsetY\n    };\n}\nclass DoughnutController extends DatasetController {\n    static id = 'doughnut';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: false\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'circumference',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius',\n                    'startAngle',\n                    'x',\n                    'y',\n                    'offset',\n                    'borderWidth',\n                    'spacing'\n                ]\n            }\n        },\n        cutout: '50%',\n        rotation: 0,\n        circumference: 360,\n        radius: '100%',\n        spacing: 0,\n        indexAxis: 'r'\n    };\n    static descriptors = {\n        _scriptable: (name)=>name !== 'spacing',\n        _indexable: (name)=>name !== 'spacing'\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.enableOptionSharing = true;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.offsetX = undefined;\n        this.offsetY = undefined;\n    }\n    linkScales() {}\n parse(start, count) {\n        const data = this.getDataset().data;\n        const meta = this._cachedMeta;\n        if (this._parsing === false) {\n            meta._parsed = data;\n        } else {\n            let getter = (i)=>+data[i];\n            if (isObject(data[start])) {\n                const { key ='value'  } = this._parsing;\n                getter = (i)=>+resolveObjectKey(data[i], key);\n            }\n            let i, ilen;\n            for(i = start, ilen = start + count; i < ilen; ++i){\n                meta._parsed[i] = getter(i);\n            }\n        }\n    }\n _getRotation() {\n        return toRadians(this.options.rotation - 90);\n    }\n _getCircumference() {\n        return toRadians(this.options.circumference);\n    }\n _getRotationExtents() {\n        let min = TAU;\n        let max = -TAU;\n        for(let i = 0; i < this.chart.data.datasets.length; ++i){\n            if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n                const controller = this.chart.getDatasetMeta(i).controller;\n                const rotation = controller._getRotation();\n                const circumference = controller._getCircumference();\n                min = Math.min(min, rotation);\n                max = Math.max(max, rotation + circumference);\n            }\n        }\n        return {\n            rotation: min,\n            circumference: max - min\n        };\n    }\n update(mode) {\n        const chart = this.chart;\n        const { chartArea  } = chart;\n        const meta = this._cachedMeta;\n        const arcs = meta.data;\n        const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n        const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n        const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n        const chartWeight = this._getRingWeight(this.index);\n        const { circumference , rotation  } = this._getRotationExtents();\n        const { ratioX , ratioY , offsetX , offsetY  } = getRatioAndOffset(rotation, circumference, cutout);\n        const maxWidth = (chartArea.width - spacing) / ratioX;\n        const maxHeight = (chartArea.height - spacing) / ratioY;\n        const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n        const outerRadius = toDimension(this.options.radius, maxRadius);\n        const innerRadius = Math.max(outerRadius * cutout, 0);\n        const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n        this.offsetX = offsetX * outerRadius;\n        this.offsetY = offsetY * outerRadius;\n        meta.total = this.calculateTotal();\n        this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n        this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n _circumference(i, reset) {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const circumference = this._getCircumference();\n        if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n            return 0;\n        }\n        return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const centerX = (chartArea.left + chartArea.right) / 2;\n        const centerY = (chartArea.top + chartArea.bottom) / 2;\n        const animateScale = reset && animationOpts.animateScale;\n        const innerRadius = animateScale ? 0 : this.innerRadius;\n        const outerRadius = animateScale ? 0 : this.outerRadius;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        let startAngle = this._getRotation();\n        let i;\n        for(i = 0; i < start; ++i){\n            startAngle += this._circumference(i, reset);\n        }\n        for(i = start; i < start + count; ++i){\n            const circumference = this._circumference(i, reset);\n            const arc = arcs[i];\n            const properties = {\n                x: centerX + this.offsetX,\n                y: centerY + this.offsetY,\n                startAngle,\n                endAngle: startAngle + circumference,\n                circumference,\n                outerRadius,\n                innerRadius\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n            }\n            startAngle += circumference;\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    calculateTotal() {\n        const meta = this._cachedMeta;\n        const metaData = meta.data;\n        let total = 0;\n        let i;\n        for(i = 0; i < metaData.length; i++){\n            const value = meta._parsed[i];\n            if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n                total += Math.abs(value);\n            }\n        }\n        return total;\n    }\n    calculateCircumference(value) {\n        const total = this._cachedMeta.total;\n        if (total > 0 && !isNaN(value)) {\n            return TAU * (Math.abs(value) / total);\n        }\n        return 0;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index], chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    getMaxBorderWidth(arcs) {\n        let max = 0;\n        const chart = this.chart;\n        let i, ilen, meta, controller, options;\n        if (!arcs) {\n            for(i = 0, ilen = chart.data.datasets.length; i < ilen; ++i){\n                if (chart.isDatasetVisible(i)) {\n                    meta = chart.getDatasetMeta(i);\n                    arcs = meta.data;\n                    controller = meta.controller;\n                    break;\n                }\n            }\n        }\n        if (!arcs) {\n            return 0;\n        }\n        for(i = 0, ilen = arcs.length; i < ilen; ++i){\n            options = controller.resolveDataElementOptions(i);\n            if (options.borderAlign !== 'inner') {\n                max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n            }\n        }\n        return max;\n    }\n    getMaxOffset(arcs) {\n        let max = 0;\n        for(let i = 0, ilen = arcs.length; i < ilen; ++i){\n            const options = this.resolveDataElementOptions(i);\n            max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n        }\n        return max;\n    }\n _getRingWeightOffset(datasetIndex) {\n        let ringWeightOffset = 0;\n        for(let i = 0; i < datasetIndex; ++i){\n            if (this.chart.isDatasetVisible(i)) {\n                ringWeightOffset += this._getRingWeight(i);\n            }\n        }\n        return ringWeightOffset;\n    }\n _getRingWeight(datasetIndex) {\n        return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n    }\n _getVisibleDatasetWeightTotal() {\n        return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n    }\n}\n\nclass LineController extends DatasetController {\n    static id = 'line';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        showLine: true,\n        spanGaps: false\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category'\n            },\n            _value_: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        this.supportsDecimation = true;\n        super.initialize();\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { dataset: line , data: points = [] , _dataset  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        line._chart = this.chart;\n        line._datasetIndex = this.index;\n        line._decimated = !!_dataset._decimated;\n        line.points = points;\n        const options = this.resolveDatasetElementOptions(mode);\n        if (!this.options.showLine) {\n            options.borderWidth = 0;\n        }\n        options.segment = this.options.segment;\n        this.updateElement(line, undefined, {\n            animated: !animationsDisabled,\n            options\n        }, mode);\n        this.updateElements(points, start, count, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        const end = start + count;\n        const pointsCount = points.length;\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = 0; i < pointsCount; ++i){\n            const point = points[i];\n            const properties = directUpdate ? point : {};\n            if (i < start || i >= end) {\n                properties.skip = true;\n                continue;\n            }\n            const parsed = this.getParsed(i);\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        const data = meta.data || [];\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n        super.draw();\n    }\n}\n\nclass PolarAreaController extends DatasetController {\n    static id = 'polarArea';\n static defaults = {\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: true\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'startAngle',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius'\n                ]\n            }\n        },\n        indexAxis: 'r',\n        startAngle: 0\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        },\n        scales: {\n            r: {\n                type: 'radialLinear',\n                angleLines: {\n                    display: false\n                },\n                beginAtZero: true,\n                grid: {\n                    circular: true\n                },\n                pointLabels: {\n                    display: false\n                },\n                startAngle: 0\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const arcs = this._cachedMeta.data;\n        this._updateRadius();\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n getMinMax() {\n        const meta = this._cachedMeta;\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        meta.data.forEach((element, index)=>{\n            const parsed = this.getParsed(index).r;\n            if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n                if (parsed < range.min) {\n                    range.min = parsed;\n                }\n                if (parsed > range.max) {\n                    range.max = parsed;\n                }\n            }\n        });\n        return range;\n    }\n _updateRadius() {\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n        const outerRadius = Math.max(minSize / 2, 0);\n        const innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n        const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n        this.outerRadius = outerRadius - radiusLength * this.index;\n        this.innerRadius = this.outerRadius - radiusLength;\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const scale = this._cachedMeta.rScale;\n        const centerX = scale.xCenter;\n        const centerY = scale.yCenter;\n        const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n        let angle = datasetStartAngle;\n        let i;\n        const defaultAngle = 360 / this.countVisibleElements();\n        for(i = 0; i < start; ++i){\n            angle += this._computeAngle(i, mode, defaultAngle);\n        }\n        for(i = start; i < start + count; i++){\n            const arc = arcs[i];\n            let startAngle = angle;\n            let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n            let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n            angle = endAngle;\n            if (reset) {\n                if (animationOpts.animateScale) {\n                    outerRadius = 0;\n                }\n                if (animationOpts.animateRotate) {\n                    startAngle = endAngle = datasetStartAngle;\n                }\n            }\n            const properties = {\n                x: centerX,\n                y: centerY,\n                innerRadius: 0,\n                outerRadius,\n                startAngle,\n                endAngle,\n                options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n            };\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    countVisibleElements() {\n        const meta = this._cachedMeta;\n        let count = 0;\n        meta.data.forEach((element, index)=>{\n            if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n                count++;\n            }\n        });\n        return count;\n    }\n _computeAngle(index, mode, defaultAngle) {\n        return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n    }\n}\n\nclass PieController extends DoughnutController {\n    static id = 'pie';\n static defaults = {\n        cutout: 0,\n        rotation: 0,\n        circumference: 360,\n        radius: '100%'\n    };\n}\n\nclass RadarController extends DatasetController {\n    static id = 'radar';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        indexAxis: 'r',\n        showLine: true,\n        elements: {\n            line: {\n                fill: 'start'\n            }\n        }\n    };\n static overrides = {\n        aspectRatio: 1,\n        scales: {\n            r: {\n                type: 'radialLinear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const vScale = this._cachedMeta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: vScale.getLabels()[index],\n            value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const line = meta.dataset;\n        const points = meta.data || [];\n        const labels = meta.iScale.getLabels();\n        line.points = points;\n        if (mode !== 'resize') {\n            const options = this.resolveDatasetElementOptions(mode);\n            if (!this.options.showLine) {\n                options.borderWidth = 0;\n            }\n            const properties = {\n                _loop: true,\n                _fullLoop: labels.length === points.length,\n                options\n            };\n            this.updateElement(line, undefined, properties, mode);\n        }\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const scale = this._cachedMeta.rScale;\n        const reset = mode === 'reset';\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n            const x = reset ? scale.xCenter : pointPosition.x;\n            const y = reset ? scale.yCenter : pointPosition.y;\n            const properties = {\n                x,\n                y,\n                angle: pointPosition.angle,\n                skip: isNaN(x) || isNaN(y),\n                options\n            };\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n}\n\nclass ScatterController extends DatasetController {\n    static id = 'scatter';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        showLine: false,\n        fill: false\n    };\n static overrides = {\n        interaction: {\n            mode: 'point'\n        },\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + ')'\n        };\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { data: points = []  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        if (this.options.showLine) {\n            const { dataset: line , _dataset  } = meta;\n            line._chart = this.chart;\n            line._datasetIndex = this.index;\n            line._decimated = !!_dataset._decimated;\n            line.points = points;\n            const options = this.resolveDatasetElementOptions(mode);\n            options.segment = this.options.segment;\n            this.updateElement(line, undefined, {\n                animated: !animationsDisabled,\n                options\n            }, mode);\n        }\n        this.updateElements(points, start, count, mode);\n    }\n    addElements() {\n        const { showLine  } = this.options;\n        if (!this.datasetElementType && showLine) {\n            this.datasetElementType = this.chart.registry.getElement('line');\n        }\n        super.addElements();\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = start; i < start + count; ++i){\n            const point = points[i];\n            const parsed = this.getParsed(i);\n            const properties = directUpdate ? point : {};\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const data = meta.data || [];\n        if (!this.options.showLine) {\n            let max = 0;\n            for(let i = data.length - 1; i >= 0; --i){\n                max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n            }\n            return max > 0 && max;\n        }\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n}\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPolarAreaController: PolarAreaController,\nPieController: PieController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\n/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */ function abstract() {\n    throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */ class DateAdapterBase {\n    /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */ static override(members) {\n        Object.assign(DateAdapterBase.prototype, members);\n    }\n    constructor(options){\n        this.options = options || {};\n    }\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    init() {}\n    formats() {\n        return abstract();\n    }\n    parse() {\n        return abstract();\n    }\n    format() {\n        return abstract();\n    }\n    add() {\n        return abstract();\n    }\n    diff() {\n        return abstract();\n    }\n    startOf() {\n        return abstract();\n    }\n    endOf() {\n        return abstract();\n    }\n}\nvar adapters = {\n    _date: DateAdapterBase\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n    const { controller , data , _sorted  } = metaset;\n    const iScale = controller._cachedMeta.iScale;\n    if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n        const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n        if (!intersect) {\n            return lookupMethod(data, axis, value);\n        } else if (controller._sharedOptions) {\n            const el = data[0];\n            const range = typeof el.getRange === 'function' && el.getRange(axis);\n            if (range) {\n                const start = lookupMethod(data, axis, value - range);\n                const end = lookupMethod(data, axis, value + range);\n                return {\n                    lo: start.lo,\n                    hi: end.hi\n                };\n            }\n        }\n    }\n    return {\n        lo: 0,\n        hi: data.length - 1\n    };\n}\n function evaluateInteractionItems(chart, axis, position, handler, intersect) {\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const value = position[axis];\n    for(let i = 0, ilen = metasets.length; i < ilen; ++i){\n        const { index , data  } = metasets[i];\n        const { lo , hi  } = binarySearch(metasets[i], axis, value, intersect);\n        for(let j = lo; j <= hi; ++j){\n            const element = data[j];\n            if (!element.skip) {\n                handler(element, index, j);\n            }\n        }\n    }\n}\n function getDistanceMetricForAxis(axis) {\n    const useX = axis.indexOf('x') !== -1;\n    const useY = axis.indexOf('y') !== -1;\n    return function(pt1, pt2) {\n        const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n        const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n        return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n}\n function getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n    const items = [];\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return items;\n    }\n    const evaluationFunc = function(element, datasetIndex, index) {\n        if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n            return;\n        }\n        if (element.inRange(position.x, position.y, useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    };\n    evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n    return items;\n}\n function getNearestRadialItems(chart, position, axis, useFinalPosition) {\n    let items = [];\n    function evaluationFunc(element, datasetIndex, index) {\n        const { startAngle , endAngle  } = element.getProps([\n            'startAngle',\n            'endAngle'\n        ], useFinalPosition);\n        const { angle  } = getAngleFromPoint(element, {\n            x: position.x,\n            y: position.y\n        });\n        if (_angleBetween(angle, startAngle, endAngle)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    let items = [];\n    const distanceMetric = getDistanceMetricForAxis(axis);\n    let minDistance = Number.POSITIVE_INFINITY;\n    function evaluationFunc(element, datasetIndex, index) {\n        const inRange = element.inRange(position.x, position.y, useFinalPosition);\n        if (intersect && !inRange) {\n            return;\n        }\n        const center = element.getCenterPoint(useFinalPosition);\n        const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n        if (!pointInArea && !inRange) {\n            return;\n        }\n        const distance = distanceMetric(position, center);\n        if (distance < minDistance) {\n            items = [\n                {\n                    element,\n                    datasetIndex,\n                    index\n                }\n            ];\n            minDistance = distance;\n        } else if (distance === minDistance) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return [];\n    }\n    return axis === 'r' && !intersect ? getNearestRadialItems(chart, position, axis, useFinalPosition) : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n function getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n    const items = [];\n    const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n    let intersectsItem = false;\n    evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index)=>{\n        if (element[rangeMethod](position[axis], useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n            intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n        }\n    });\n    if (intersect && !intersectsItem) {\n        return [];\n    }\n    return items;\n}\n var Interaction = {\n    evaluateInteractionItems,\n    modes: {\n index (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'x';\n            const includeInvisible = options.includeInvisible || false;\n            const items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            const elements = [];\n            if (!items.length) {\n                return [];\n            }\n            chart.getSortedVisibleDatasetMetas().forEach((meta)=>{\n                const index = items[0].index;\n                const element = meta.data[index];\n                if (element && !element.skip) {\n                    elements.push({\n                        element,\n                        datasetIndex: meta.index,\n                        index\n                    });\n                }\n            });\n            return elements;\n        },\n dataset (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            let items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            if (items.length > 0) {\n                const datasetIndex = items[0].datasetIndex;\n                const data = chart.getDatasetMeta(datasetIndex).data;\n                items = [];\n                for(let i = 0; i < data.length; ++i){\n                    items.push({\n                        element: data[i],\n                        datasetIndex,\n                        index: i\n                    });\n                }\n            }\n            return items;\n        },\n point (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n        },\n nearest (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n        },\n x (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n        },\n y (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n        }\n    }\n};\n\nconst STATIC_POSITIONS = [\n    'left',\n    'top',\n    'right',\n    'bottom'\n];\nfunction filterByPosition(array, position) {\n    return array.filter((v)=>v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n    return array.filter((v)=>STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n    return array.sort((a, b)=>{\n        const v0 = reverse ? b : a;\n        const v1 = reverse ? a : b;\n        return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n    });\n}\nfunction wrapBoxes(boxes) {\n    const layoutBoxes = [];\n    let i, ilen, box, pos, stack, stackWeight;\n    for(i = 0, ilen = (boxes || []).length; i < ilen; ++i){\n        box = boxes[i];\n        ({ position: pos , options: { stack , stackWeight =1  }  } = box);\n        layoutBoxes.push({\n            index: i,\n            box,\n            pos,\n            horizontal: box.isHorizontal(),\n            weight: box.weight,\n            stack: stack && pos + stack,\n            stackWeight\n        });\n    }\n    return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n    const stacks = {};\n    for (const wrap of layouts){\n        const { stack , pos , stackWeight  } = wrap;\n        if (!stack || !STATIC_POSITIONS.includes(pos)) {\n            continue;\n        }\n        const _stack = stacks[stack] || (stacks[stack] = {\n            count: 0,\n            placed: 0,\n            weight: 0,\n            size: 0\n        });\n        _stack.count++;\n        _stack.weight += stackWeight;\n    }\n    return stacks;\n}\n function setLayoutDims(layouts, params) {\n    const stacks = buildStacks(layouts);\n    const { vBoxMaxWidth , hBoxMaxHeight  } = params;\n    let i, ilen, layout;\n    for(i = 0, ilen = layouts.length; i < ilen; ++i){\n        layout = layouts[i];\n        const { fullSize  } = layout.box;\n        const stack = stacks[layout.stack];\n        const factor = stack && layout.stackWeight / stack.weight;\n        if (layout.horizontal) {\n            layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n            layout.height = hBoxMaxHeight;\n        } else {\n            layout.width = vBoxMaxWidth;\n            layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n        }\n    }\n    return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n    const layoutBoxes = wrapBoxes(boxes);\n    const fullSize = sortByWeight(layoutBoxes.filter((wrap)=>wrap.box.fullSize), true);\n    const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n    const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n    const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n    const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n    const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n    const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n    return {\n        fullSize,\n        leftAndTop: left.concat(top),\n        rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n        chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n        vertical: left.concat(right).concat(centerVertical),\n        horizontal: top.concat(bottom).concat(centerHorizontal)\n    };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n    return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n    maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n    maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n    maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n    maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n    const { pos , box  } = layout;\n    const maxPadding = chartArea.maxPadding;\n    if (!isObject(pos)) {\n        if (layout.size) {\n            chartArea[pos] -= layout.size;\n        }\n        const stack = stacks[layout.stack] || {\n            size: 0,\n            count: 1\n        };\n        stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n        layout.size = stack.size / stack.count;\n        chartArea[pos] += layout.size;\n    }\n    if (box.getPadding) {\n        updateMaxPadding(maxPadding, box.getPadding());\n    }\n    const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n    const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n    const widthChanged = newWidth !== chartArea.w;\n    const heightChanged = newHeight !== chartArea.h;\n    chartArea.w = newWidth;\n    chartArea.h = newHeight;\n    return layout.horizontal ? {\n        same: widthChanged,\n        other: heightChanged\n    } : {\n        same: heightChanged,\n        other: widthChanged\n    };\n}\nfunction handleMaxPadding(chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function updatePos(pos) {\n        const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n        chartArea[pos] += change;\n        return change;\n    }\n    chartArea.y += updatePos('top');\n    chartArea.x += updatePos('left');\n    updatePos('right');\n    updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function marginForPositions(positions) {\n        const margin = {\n            left: 0,\n            top: 0,\n            right: 0,\n            bottom: 0\n        };\n        positions.forEach((pos)=>{\n            margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n        });\n        return margin;\n    }\n    return horizontal ? marginForPositions([\n        'left',\n        'right'\n    ]) : marginForPositions([\n        'top',\n        'bottom'\n    ]);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n    const refitBoxes = [];\n    let i, ilen, layout, box, refit, changed;\n    for(i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i){\n        layout = boxes[i];\n        box = layout.box;\n        box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n        const { same , other  } = updateDims(chartArea, params, layout, stacks);\n        refit |= same && refitBoxes.length;\n        changed = changed || other;\n        if (!box.fullSize) {\n            refitBoxes.push(layout);\n        }\n    }\n    return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n    box.top = top;\n    box.left = left;\n    box.right = left + width;\n    box.bottom = top + height;\n    box.width = width;\n    box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n    const userPadding = params.padding;\n    let { x , y  } = chartArea;\n    for (const layout of boxes){\n        const box = layout.box;\n        const stack = stacks[layout.stack] || {\n            count: 1,\n            placed: 0,\n            weight: 1\n        };\n        const weight = layout.stackWeight / stack.weight || 1;\n        if (layout.horizontal) {\n            const width = chartArea.w * weight;\n            const height = stack.size || box.height;\n            if (defined(stack.start)) {\n                y = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n            } else {\n                setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n            }\n            stack.start = y;\n            stack.placed += width;\n            y = box.bottom;\n        } else {\n            const height1 = chartArea.h * weight;\n            const width1 = stack.size || box.width;\n            if (defined(stack.start)) {\n                x = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, x, userPadding.top, width1, params.outerHeight - userPadding.bottom - userPadding.top);\n            } else {\n                setBoxDims(box, x, chartArea.top + stack.placed, width1, height1);\n            }\n            stack.start = x;\n            stack.placed += height1;\n            x = box.right;\n        }\n    }\n    chartArea.x = x;\n    chartArea.y = y;\n}\nvar layouts = {\n addBox (chart, item) {\n        if (!chart.boxes) {\n            chart.boxes = [];\n        }\n        item.fullSize = item.fullSize || false;\n        item.position = item.position || 'top';\n        item.weight = item.weight || 0;\n        item._layers = item._layers || function() {\n            return [\n                {\n                    z: 0,\n                    draw (chartArea) {\n                        item.draw(chartArea);\n                    }\n                }\n            ];\n        };\n        chart.boxes.push(item);\n    },\n removeBox (chart, layoutItem) {\n        const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n        if (index !== -1) {\n            chart.boxes.splice(index, 1);\n        }\n    },\n configure (chart, item, options) {\n        item.fullSize = options.fullSize;\n        item.position = options.position;\n        item.weight = options.weight;\n    },\n update (chart, width, height, minPadding) {\n        if (!chart) {\n            return;\n        }\n        const padding = toPadding(chart.options.layout.padding);\n        const availableWidth = Math.max(width - padding.width, 0);\n        const availableHeight = Math.max(height - padding.height, 0);\n        const boxes = buildLayoutBoxes(chart.boxes);\n        const verticalBoxes = boxes.vertical;\n        const horizontalBoxes = boxes.horizontal;\n        each(chart.boxes, (box)=>{\n            if (typeof box.beforeLayout === 'function') {\n                box.beforeLayout();\n            }\n        });\n        const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap)=>wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n        const params = Object.freeze({\n            outerWidth: width,\n            outerHeight: height,\n            padding,\n            availableWidth,\n            availableHeight,\n            vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n            hBoxMaxHeight: availableHeight / 2\n        });\n        const maxPadding = Object.assign({}, padding);\n        updateMaxPadding(maxPadding, toPadding(minPadding));\n        const chartArea = Object.assign({\n            maxPadding,\n            w: availableWidth,\n            h: availableHeight,\n            x: padding.left,\n            y: padding.top\n        }, padding);\n        const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n        fitBoxes(boxes.fullSize, chartArea, params, stacks);\n        fitBoxes(verticalBoxes, chartArea, params, stacks);\n        if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n            fitBoxes(verticalBoxes, chartArea, params, stacks);\n        }\n        handleMaxPadding(chartArea);\n        placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n        chartArea.x += chartArea.w;\n        chartArea.y += chartArea.h;\n        placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n        chart.chartArea = {\n            left: chartArea.left,\n            top: chartArea.top,\n            right: chartArea.left + chartArea.w,\n            bottom: chartArea.top + chartArea.h,\n            height: chartArea.h,\n            width: chartArea.w\n        };\n        each(boxes.chartArea, (layout)=>{\n            const box = layout.box;\n            Object.assign(box, chart.chartArea);\n            box.update(chartArea.w, chartArea.h, {\n                left: 0,\n                top: 0,\n                right: 0,\n                bottom: 0\n            });\n        });\n    }\n};\n\nclass BasePlatform {\n acquireContext(canvas, aspectRatio) {}\n releaseContext(context) {\n        return false;\n    }\n addEventListener(chart, type, listener) {}\n removeEventListener(chart, type, listener) {}\n getDevicePixelRatio() {\n        return 1;\n    }\n getMaximumSize(element, width, height, aspectRatio) {\n        width = Math.max(0, width || element.width);\n        height = height || element.height;\n        return {\n            width,\n            height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n        };\n    }\n isAttached(canvas) {\n        return true;\n    }\n updateConfig(config) {\n    }\n}\n\nclass BasicPlatform extends BasePlatform {\n    acquireContext(item) {\n        return item && item.getContext && item.getContext('2d') || null;\n    }\n    updateConfig(config) {\n        config.options.animation = false;\n    }\n}\n\nconst EXPANDO_KEY = '$chartjs';\n const EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n};\nconst isNullOrEmpty = (value)=>value === null || value === '';\n function initCanvas(canvas, aspectRatio) {\n    const style = canvas.style;\n    const renderHeight = canvas.getAttribute('height');\n    const renderWidth = canvas.getAttribute('width');\n    canvas[EXPANDO_KEY] = {\n        initial: {\n            height: renderHeight,\n            width: renderWidth,\n            style: {\n                display: style.display,\n                height: style.height,\n                width: style.width\n            }\n        }\n    };\n    style.display = style.display || 'block';\n    style.boxSizing = style.boxSizing || 'border-box';\n    if (isNullOrEmpty(renderWidth)) {\n        const displayWidth = readUsedSize(canvas, 'width');\n        if (displayWidth !== undefined) {\n            canvas.width = displayWidth;\n        }\n    }\n    if (isNullOrEmpty(renderHeight)) {\n        if (canvas.style.height === '') {\n            canvas.height = canvas.width / (aspectRatio || 2);\n        } else {\n            const displayHeight = readUsedSize(canvas, 'height');\n            if (displayHeight !== undefined) {\n                canvas.height = displayHeight;\n            }\n        }\n    }\n    return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n} : false;\nfunction addListener(node, type, listener) {\n    node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n    chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n    const type = EVENT_TYPES[event.type] || event.type;\n    const { x , y  } = getRelativePosition(event, chart);\n    return {\n        type,\n        chart,\n        native: event,\n        x: x !== undefined ? x : null,\n        y: y !== undefined ? y : null\n    };\n}\nfunction nodeListContains(nodeList, canvas) {\n    for (const node of nodeList){\n        if (node === canvas || node.contains(canvas)) {\n            return true;\n        }\n    }\n}\nfunction createAttachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n    const dpr = window.devicePixelRatio;\n    if (dpr === oldDevicePixelRatio) {\n        return;\n    }\n    oldDevicePixelRatio = dpr;\n    drpListeningCharts.forEach((resize, chart)=>{\n        if (chart.currentDevicePixelRatio !== dpr) {\n            resize();\n        }\n    });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n    if (!drpListeningCharts.size) {\n        window.addEventListener('resize', onWindowResize);\n    }\n    drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n    drpListeningCharts.delete(chart);\n    if (!drpListeningCharts.size) {\n        window.removeEventListener('resize', onWindowResize);\n    }\n}\nfunction createResizeObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const container = canvas && _getParentNode(canvas);\n    if (!container) {\n        return;\n    }\n    const resize = throttled((width, height)=>{\n        const w = container.clientWidth;\n        listener(width, height);\n        if (w < container.clientWidth) {\n            listener();\n        }\n    }, window);\n    const observer = new ResizeObserver((entries)=>{\n        const entry = entries[0];\n        const width = entry.contentRect.width;\n        const height = entry.contentRect.height;\n        if (width === 0 && height === 0) {\n            return;\n        }\n        resize(width, height);\n    });\n    observer.observe(container);\n    listenDevicePixelRatioChanges(chart, resize);\n    return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n    if (observer) {\n        observer.disconnect();\n    }\n    if (type === 'resize') {\n        unlistenDevicePixelRatioChanges(chart);\n    }\n}\nfunction createProxyAndListen(chart, type, listener) {\n    const canvas = chart.canvas;\n    const proxy = throttled((event)=>{\n        if (chart.ctx !== null) {\n            listener(fromNativeEvent(event, chart));\n        }\n    }, chart);\n    addListener(canvas, type, proxy);\n    return proxy;\n}\n class DomPlatform extends BasePlatform {\n acquireContext(canvas, aspectRatio) {\n        const context = canvas && canvas.getContext && canvas.getContext('2d');\n        if (context && context.canvas === canvas) {\n            initCanvas(canvas, aspectRatio);\n            return context;\n        }\n        return null;\n    }\n releaseContext(context) {\n        const canvas = context.canvas;\n        if (!canvas[EXPANDO_KEY]) {\n            return false;\n        }\n        const initial = canvas[EXPANDO_KEY].initial;\n        [\n            'height',\n            'width'\n        ].forEach((prop)=>{\n            const value = initial[prop];\n            if (isNullOrUndef(value)) {\n                canvas.removeAttribute(prop);\n            } else {\n                canvas.setAttribute(prop, value);\n            }\n        });\n        const style = initial.style || {};\n        Object.keys(style).forEach((key)=>{\n            canvas.style[key] = style[key];\n        });\n        canvas.width = canvas.width;\n        delete canvas[EXPANDO_KEY];\n        return true;\n    }\n addEventListener(chart, type, listener) {\n        this.removeEventListener(chart, type);\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const handlers = {\n            attach: createAttachObserver,\n            detach: createDetachObserver,\n            resize: createResizeObserver\n        };\n        const handler = handlers[type] || createProxyAndListen;\n        proxies[type] = handler(chart, type, listener);\n    }\n removeEventListener(chart, type) {\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const proxy = proxies[type];\n        if (!proxy) {\n            return;\n        }\n        const handlers = {\n            attach: releaseObserver,\n            detach: releaseObserver,\n            resize: releaseObserver\n        };\n        const handler = handlers[type] || removeListener;\n        handler(chart, type, proxy);\n        proxies[type] = undefined;\n    }\n    getDevicePixelRatio() {\n        return window.devicePixelRatio;\n    }\n getMaximumSize(canvas, width, height, aspectRatio) {\n        return getMaximumSize(canvas, width, height, aspectRatio);\n    }\n isAttached(canvas) {\n        const container = _getParentNode(canvas);\n        return !!(container && container.isConnected);\n    }\n}\n\nfunction _detectPlatform(canvas) {\n    if (!_isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n        return BasicPlatform;\n    }\n    return DomPlatform;\n}\n\nclass Element {\n    static defaults = {};\n    static defaultRoutes = undefined;\n    active = false;\n    tooltipPosition(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    hasValue() {\n        return isNumber(this.x) && isNumber(this.y);\n    }\n    getProps(props, final) {\n        const anims = this.$animations;\n        if (!final || !anims) {\n            // let's not create an object, if not needed\n            return this;\n        }\n        const ret = {};\n        props.forEach((prop)=>{\n            ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n        });\n        return ret;\n    }\n}\n\nfunction autoSkip(scale, ticks) {\n    const tickOpts = scale.options.ticks;\n    const determinedMaxTicks = determineMaxTicks(scale);\n    const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n    const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n    const numMajorIndices = majorIndices.length;\n    const first = majorIndices[0];\n    const last = majorIndices[numMajorIndices - 1];\n    const newTicks = [];\n    if (numMajorIndices > ticksLimit) {\n        skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n        return newTicks;\n    }\n    const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n    if (numMajorIndices > 0) {\n        let i, ilen;\n        const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n        skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n        for(i = 0, ilen = numMajorIndices - 1; i < ilen; i++){\n            skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n        }\n        skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n        return newTicks;\n    }\n    skip(ticks, newTicks, spacing);\n    return newTicks;\n}\nfunction determineMaxTicks(scale) {\n    const offset = scale.options.offset;\n    const tickLength = scale._tickSize();\n    const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n    const maxChart = scale._maxLength / tickLength;\n    return Math.floor(Math.min(maxScale, maxChart));\n}\n function calculateSpacing(majorIndices, ticks, ticksLimit) {\n    const evenMajorSpacing = getEvenSpacing(majorIndices);\n    const spacing = ticks.length / ticksLimit;\n    if (!evenMajorSpacing) {\n        return Math.max(spacing, 1);\n    }\n    const factors = _factorize(evenMajorSpacing);\n    for(let i = 0, ilen = factors.length - 1; i < ilen; i++){\n        const factor = factors[i];\n        if (factor > spacing) {\n            return factor;\n        }\n    }\n    return Math.max(spacing, 1);\n}\n function getMajorIndices(ticks) {\n    const result = [];\n    let i, ilen;\n    for(i = 0, ilen = ticks.length; i < ilen; i++){\n        if (ticks[i].major) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n function skipMajors(ticks, newTicks, majorIndices, spacing) {\n    let count = 0;\n    let next = majorIndices[0];\n    let i;\n    spacing = Math.ceil(spacing);\n    for(i = 0; i < ticks.length; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = majorIndices[count * spacing];\n        }\n    }\n}\n function skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n    const start = valueOrDefault(majorStart, 0);\n    const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n    let count = 0;\n    let length, i, next;\n    spacing = Math.ceil(spacing);\n    if (majorEnd) {\n        length = majorEnd - majorStart;\n        spacing = length / Math.floor(length / spacing);\n    }\n    next = start;\n    while(next < 0){\n        count++;\n        next = Math.round(start + count * spacing);\n    }\n    for(i = Math.max(start, 0); i < end; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = Math.round(start + count * spacing);\n        }\n    }\n}\n function getEvenSpacing(arr) {\n    const len = arr.length;\n    let i, diff;\n    if (len < 2) {\n        return false;\n    }\n    for(diff = arr[0], i = 1; i < len; ++i){\n        if (arr[i] - arr[i - 1] !== diff) {\n            return false;\n        }\n    }\n    return diff;\n}\n\nconst reverseAlign = (align)=>align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset)=>edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\n function sample(arr, numItems) {\n    const result = [];\n    const increment = arr.length / numItems;\n    const len = arr.length;\n    let i = 0;\n    for(; i < len; i += increment){\n        result.push(arr[Math.floor(i)]);\n    }\n    return result;\n}\n function getPixelForGridLine(scale, index, offsetGridLines) {\n    const length = scale.ticks.length;\n    const validIndex = Math.min(index, length - 1);\n    const start = scale._startPixel;\n    const end = scale._endPixel;\n    const epsilon = 1e-6;\n    let lineValue = scale.getPixelForTick(validIndex);\n    let offset;\n    if (offsetGridLines) {\n        if (length === 1) {\n            offset = Math.max(lineValue - start, end - lineValue);\n        } else if (index === 0) {\n            offset = (scale.getPixelForTick(1) - lineValue) / 2;\n        } else {\n            offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n        }\n        lineValue += validIndex < index ? offset : -offset;\n        if (lineValue < start - epsilon || lineValue > end + epsilon) {\n            return;\n        }\n    }\n    return lineValue;\n}\n function garbageCollect(caches, length) {\n    each(caches, (cache)=>{\n        const gc = cache.gc;\n        const gcLen = gc.length / 2;\n        let i;\n        if (gcLen > length) {\n            for(i = 0; i < gcLen; ++i){\n                delete cache.data[gc[i]];\n            }\n            gc.splice(0, gcLen);\n        }\n    });\n}\n function getTickMarkLength(options) {\n    return options.drawTicks ? options.tickLength : 0;\n}\n function getTitleHeight(options, fallback) {\n    if (!options.display) {\n        return 0;\n    }\n    const font = toFont(options.font, fallback);\n    const padding = toPadding(options.padding);\n    const lines = isArray(options.text) ? options.text.length : 1;\n    return lines * font.lineHeight + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n    return createContext(parent, {\n        scale,\n        type: 'scale'\n    });\n}\nfunction createTickContext(parent, index, tick) {\n    return createContext(parent, {\n        tick,\n        index,\n        type: 'tick'\n    });\n}\nfunction titleAlign(align, position, reverse) {\n    let ret = _toLeftRightCenter(align);\n    if (reverse && position !== 'right' || !reverse && position === 'right') {\n        ret = reverseAlign(ret);\n    }\n    return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n    const { top , left , bottom , right , chart  } = scale;\n    const { chartArea , scales  } = chart;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    const height = bottom - top;\n    const width = right - left;\n    if (scale.isHorizontal()) {\n        titleX = _alignStartEnd(align, left, right);\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n        } else if (position === 'center') {\n            titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n        } else {\n            titleY = offsetFromEdge(scale, position, offset);\n        }\n        maxWidth = right - left;\n    } else {\n        if (isObject(position)) {\n            const positionAxisID1 = Object.keys(position)[0];\n            const value1 = position[positionAxisID1];\n            titleX = scales[positionAxisID1].getPixelForValue(value1) - width + offset;\n        } else if (position === 'center') {\n            titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n        } else {\n            titleX = offsetFromEdge(scale, position, offset);\n        }\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = position === 'left' ? -HALF_PI : HALF_PI;\n    }\n    return {\n        titleX,\n        titleY,\n        maxWidth,\n        rotation\n    };\n}\nclass Scale extends Element {\n    constructor(cfg){\n        super();\n         this.id = cfg.id;\n         this.type = cfg.type;\n         this.options = undefined;\n         this.ctx = cfg.ctx;\n         this.chart = cfg.chart;\n         this.top = undefined;\n         this.bottom = undefined;\n         this.left = undefined;\n         this.right = undefined;\n         this.width = undefined;\n         this.height = undefined;\n        this._margins = {\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        };\n         this.maxWidth = undefined;\n         this.maxHeight = undefined;\n         this.paddingTop = undefined;\n         this.paddingBottom = undefined;\n         this.paddingLeft = undefined;\n         this.paddingRight = undefined;\n         this.axis = undefined;\n         this.labelRotation = undefined;\n        this.min = undefined;\n        this.max = undefined;\n        this._range = undefined;\n         this.ticks = [];\n         this._gridLineItems = null;\n         this._labelItems = null;\n         this._labelSizes = null;\n        this._length = 0;\n        this._maxLength = 0;\n        this._longestTextCache = {};\n         this._startPixel = undefined;\n         this._endPixel = undefined;\n        this._reversePixels = false;\n        this._userMax = undefined;\n        this._userMin = undefined;\n        this._suggestedMax = undefined;\n        this._suggestedMin = undefined;\n        this._ticksLength = 0;\n        this._borderValue = 0;\n        this._cache = {};\n        this._dataLimitsCached = false;\n        this.$context = undefined;\n    }\n init(options) {\n        this.options = options.setContext(this.getContext());\n        this.axis = options.axis;\n        this._userMin = this.parse(options.min);\n        this._userMax = this.parse(options.max);\n        this._suggestedMin = this.parse(options.suggestedMin);\n        this._suggestedMax = this.parse(options.suggestedMax);\n    }\n parse(raw, index) {\n        return raw;\n    }\n getUserBounds() {\n        let { _userMin , _userMax , _suggestedMin , _suggestedMax  } = this;\n        _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n        _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n        _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n        _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n        return {\n            min: finiteOrDefault(_userMin, _suggestedMin),\n            max: finiteOrDefault(_userMax, _suggestedMax),\n            minDefined: isNumberFinite(_userMin),\n            maxDefined: isNumberFinite(_userMax)\n        };\n    }\n getMinMax(canStack) {\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n        let range;\n        if (minDefined && maxDefined) {\n            return {\n                min,\n                max\n            };\n        }\n        const metas = this.getMatchingVisibleMetas();\n        for(let i = 0, ilen = metas.length; i < ilen; ++i){\n            range = metas[i].controller.getMinMax(this, canStack);\n            if (!minDefined) {\n                min = Math.min(min, range.min);\n            }\n            if (!maxDefined) {\n                max = Math.max(max, range.max);\n            }\n        }\n        min = maxDefined && min > max ? max : min;\n        max = minDefined && min > max ? min : max;\n        return {\n            min: finiteOrDefault(min, finiteOrDefault(max, min)),\n            max: finiteOrDefault(max, finiteOrDefault(min, max))\n        };\n    }\n getPadding() {\n        return {\n            left: this.paddingLeft || 0,\n            top: this.paddingTop || 0,\n            right: this.paddingRight || 0,\n            bottom: this.paddingBottom || 0\n        };\n    }\n getTicks() {\n        return this.ticks;\n    }\n getLabels() {\n        const data = this.chart.data;\n        return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n    }\n    beforeLayout() {\n        this._cache = {};\n        this._dataLimitsCached = false;\n    }\n    beforeUpdate() {\n        callback(this.options.beforeUpdate, [\n            this\n        ]);\n    }\n update(maxWidth, maxHeight, margins) {\n        const { beginAtZero , grace , ticks: tickOpts  } = this.options;\n        const sampleSize = tickOpts.sampleSize;\n        this.beforeUpdate();\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins = Object.assign({\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        }, margins);\n        this.ticks = null;\n        this._labelSizes = null;\n        this._gridLineItems = null;\n        this._labelItems = null;\n        this.beforeSetDimensions();\n        this.setDimensions();\n        this.afterSetDimensions();\n        this._maxLength = this.isHorizontal() ? this.width + margins.left + margins.right : this.height + margins.top + margins.bottom;\n        if (!this._dataLimitsCached) {\n            this.beforeDataLimits();\n            this.determineDataLimits();\n            this.afterDataLimits();\n            this._range = _addGrace(this, grace, beginAtZero);\n            this._dataLimitsCached = true;\n        }\n        this.beforeBuildTicks();\n        this.ticks = this.buildTicks() || [];\n        this.afterBuildTicks();\n        const samplingEnabled = sampleSize < this.ticks.length;\n        this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n        this.configure();\n        this.beforeCalculateLabelRotation();\n        this.calculateLabelRotation();\n        this.afterCalculateLabelRotation();\n        if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n            this.ticks = autoSkip(this, this.ticks);\n            this._labelSizes = null;\n            this.afterAutoSkip();\n        }\n        if (samplingEnabled) {\n            this._convertTicksToLabels(this.ticks);\n        }\n        this.beforeFit();\n        this.fit();\n        this.afterFit();\n        this.afterUpdate();\n    }\n configure() {\n        let reversePixels = this.options.reverse;\n        let startPixel, endPixel;\n        if (this.isHorizontal()) {\n            startPixel = this.left;\n            endPixel = this.right;\n        } else {\n            startPixel = this.top;\n            endPixel = this.bottom;\n            reversePixels = !reversePixels;\n        }\n        this._startPixel = startPixel;\n        this._endPixel = endPixel;\n        this._reversePixels = reversePixels;\n        this._length = endPixel - startPixel;\n        this._alignToPixels = this.options.alignToPixels;\n    }\n    afterUpdate() {\n        callback(this.options.afterUpdate, [\n            this\n        ]);\n    }\n    beforeSetDimensions() {\n        callback(this.options.beforeSetDimensions, [\n            this\n        ]);\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = 0;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = 0;\n            this.bottom = this.height;\n        }\n        this.paddingLeft = 0;\n        this.paddingTop = 0;\n        this.paddingRight = 0;\n        this.paddingBottom = 0;\n    }\n    afterSetDimensions() {\n        callback(this.options.afterSetDimensions, [\n            this\n        ]);\n    }\n    _callHooks(name) {\n        this.chart.notifyPlugins(name, this.getContext());\n        callback(this.options[name], [\n            this\n        ]);\n    }\n    beforeDataLimits() {\n        this._callHooks('beforeDataLimits');\n    }\n    determineDataLimits() {}\n    afterDataLimits() {\n        this._callHooks('afterDataLimits');\n    }\n    beforeBuildTicks() {\n        this._callHooks('beforeBuildTicks');\n    }\n buildTicks() {\n        return [];\n    }\n    afterBuildTicks() {\n        this._callHooks('afterBuildTicks');\n    }\n    beforeTickToLabelConversion() {\n        callback(this.options.beforeTickToLabelConversion, [\n            this\n        ]);\n    }\n generateTickLabels(ticks) {\n        const tickOpts = this.options.ticks;\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            tick = ticks[i];\n            tick.label = callback(tickOpts.callback, [\n                tick.value,\n                i,\n                ticks\n            ], this);\n        }\n    }\n    afterTickToLabelConversion() {\n        callback(this.options.afterTickToLabelConversion, [\n            this\n        ]);\n    }\n    beforeCalculateLabelRotation() {\n        callback(this.options.beforeCalculateLabelRotation, [\n            this\n        ]);\n    }\n    calculateLabelRotation() {\n        const options = this.options;\n        const tickOpts = options.ticks;\n        const numTicks = this.ticks.length;\n        const minRotation = tickOpts.minRotation || 0;\n        const maxRotation = tickOpts.maxRotation;\n        let labelRotation = minRotation;\n        let tickWidth, maxHeight, maxLabelDiagonal;\n        if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n            this.labelRotation = minRotation;\n            return;\n        }\n        const labelSizes = this._getLabelSizes();\n        const maxLabelWidth = labelSizes.widest.width;\n        const maxLabelHeight = labelSizes.highest.height;\n        const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n        tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n        if (maxLabelWidth + 6 > tickWidth) {\n            tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n            maxHeight = this.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n            maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n            labelRotation = toDegrees(Math.min(Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n            labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n        }\n        this.labelRotation = labelRotation;\n    }\n    afterCalculateLabelRotation() {\n        callback(this.options.afterCalculateLabelRotation, [\n            this\n        ]);\n    }\n    afterAutoSkip() {}\n    beforeFit() {\n        callback(this.options.beforeFit, [\n            this\n        ]);\n    }\n    fit() {\n        const minSize = {\n            width: 0,\n            height: 0\n        };\n        const { chart , options: { ticks: tickOpts , title: titleOpts , grid: gridOpts  }  } = this;\n        const display = this._isVisible();\n        const isHorizontal = this.isHorizontal();\n        if (display) {\n            const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n            if (isHorizontal) {\n                minSize.width = this.maxWidth;\n                minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n            } else {\n                minSize.height = this.maxHeight;\n                minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n            }\n            if (tickOpts.display && this.ticks.length) {\n                const { first , last , widest , highest  } = this._getLabelSizes();\n                const tickPadding = tickOpts.padding * 2;\n                const angleRadians = toRadians(this.labelRotation);\n                const cos = Math.cos(angleRadians);\n                const sin = Math.sin(angleRadians);\n                if (isHorizontal) {\n                    const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n                    minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n                } else {\n                    const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n                    minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n                }\n                this._calculatePadding(first, last, sin, cos);\n            }\n        }\n        this._handleMargins();\n        if (isHorizontal) {\n            this.width = this._length = chart.width - this._margins.left - this._margins.right;\n            this.height = minSize.height;\n        } else {\n            this.width = minSize.width;\n            this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n        }\n    }\n    _calculatePadding(first, last, sin, cos) {\n        const { ticks: { align , padding  } , position  } = this.options;\n        const isRotated = this.labelRotation !== 0;\n        const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n        if (this.isHorizontal()) {\n            const offsetLeft = this.getPixelForTick(0) - this.left;\n            const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n            let paddingLeft = 0;\n            let paddingRight = 0;\n            if (isRotated) {\n                if (labelsBelowTicks) {\n                    paddingLeft = cos * first.width;\n                    paddingRight = sin * last.height;\n                } else {\n                    paddingLeft = sin * first.height;\n                    paddingRight = cos * last.width;\n                }\n            } else if (align === 'start') {\n                paddingRight = last.width;\n            } else if (align === 'end') {\n                paddingLeft = first.width;\n            } else if (align !== 'inner') {\n                paddingLeft = first.width / 2;\n                paddingRight = last.width / 2;\n            }\n            this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n            this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n        } else {\n            let paddingTop = last.height / 2;\n            let paddingBottom = first.height / 2;\n            if (align === 'start') {\n                paddingTop = 0;\n                paddingBottom = first.height;\n            } else if (align === 'end') {\n                paddingTop = last.height;\n                paddingBottom = 0;\n            }\n            this.paddingTop = paddingTop + padding;\n            this.paddingBottom = paddingBottom + padding;\n        }\n    }\n _handleMargins() {\n        if (this._margins) {\n            this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n            this._margins.top = Math.max(this.paddingTop, this._margins.top);\n            this._margins.right = Math.max(this.paddingRight, this._margins.right);\n            this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n        }\n    }\n    afterFit() {\n        callback(this.options.afterFit, [\n            this\n        ]);\n    }\n isHorizontal() {\n        const { axis , position  } = this.options;\n        return position === 'top' || position === 'bottom' || axis === 'x';\n    }\n isFullSize() {\n        return this.options.fullSize;\n    }\n _convertTicksToLabels(ticks) {\n        this.beforeTickToLabelConversion();\n        this.generateTickLabels(ticks);\n        let i, ilen;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            if (isNullOrUndef(ticks[i].label)) {\n                ticks.splice(i, 1);\n                ilen--;\n                i--;\n            }\n        }\n        this.afterTickToLabelConversion();\n    }\n _getLabelSizes() {\n        let labelSizes = this._labelSizes;\n        if (!labelSizes) {\n            const sampleSize = this.options.ticks.sampleSize;\n            let ticks = this.ticks;\n            if (sampleSize < ticks.length) {\n                ticks = sample(ticks, sampleSize);\n            }\n            this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length);\n        }\n        return labelSizes;\n    }\n _computeLabelSizes(ticks, length) {\n        const { ctx , _longestTextCache: caches  } = this;\n        const widths = [];\n        const heights = [];\n        let widestLabelSize = 0;\n        let highestLabelSize = 0;\n        let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n        for(i = 0; i < length; ++i){\n            label = ticks[i].label;\n            tickFont = this._resolveTickFontOptions(i);\n            ctx.font = fontString = tickFont.string;\n            cache = caches[fontString] = caches[fontString] || {\n                data: {},\n                gc: []\n            };\n            lineHeight = tickFont.lineHeight;\n            width = height = 0;\n            if (!isNullOrUndef(label) && !isArray(label)) {\n                width = _measureText(ctx, cache.data, cache.gc, width, label);\n                height = lineHeight;\n            } else if (isArray(label)) {\n                for(j = 0, jlen = label.length; j < jlen; ++j){\n                    nestedLabel = label[j];\n                    if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n                        width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n                        height += lineHeight;\n                    }\n                }\n            }\n            widths.push(width);\n            heights.push(height);\n            widestLabelSize = Math.max(width, widestLabelSize);\n            highestLabelSize = Math.max(height, highestLabelSize);\n        }\n        garbageCollect(caches, length);\n        const widest = widths.indexOf(widestLabelSize);\n        const highest = heights.indexOf(highestLabelSize);\n        const valueAt = (idx)=>({\n                width: widths[idx] || 0,\n                height: heights[idx] || 0\n            });\n        return {\n            first: valueAt(0),\n            last: valueAt(length - 1),\n            widest: valueAt(widest),\n            highest: valueAt(highest),\n            widths,\n            heights\n        };\n    }\n getLabelForValue(value) {\n        return value;\n    }\n getPixelForValue(value, index) {\n        return NaN;\n    }\n getValueForPixel(pixel) {}\n getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n getPixelForDecimal(decimal) {\n        if (this._reversePixels) {\n            decimal = 1 - decimal;\n        }\n        const pixel = this._startPixel + decimal * this._length;\n        return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n    }\n getDecimalForPixel(pixel) {\n        const decimal = (pixel - this._startPixel) / this._length;\n        return this._reversePixels ? 1 - decimal : decimal;\n    }\n getBasePixel() {\n        return this.getPixelForValue(this.getBaseValue());\n    }\n getBaseValue() {\n        const { min , max  } = this;\n        return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    }\n getContext(index) {\n        const ticks = this.ticks || [];\n        if (index >= 0 && index < ticks.length) {\n            const tick = ticks[index];\n            return tick.$context || (tick.$context = createTickContext(this.getContext(), index, tick));\n        }\n        return this.$context || (this.$context = createScaleContext(this.chart.getContext(), this));\n    }\n _tickSize() {\n        const optionTicks = this.options.ticks;\n        const rot = toRadians(this.labelRotation);\n        const cos = Math.abs(Math.cos(rot));\n        const sin = Math.abs(Math.sin(rot));\n        const labelSizes = this._getLabelSizes();\n        const padding = optionTicks.autoSkipPadding || 0;\n        const w = labelSizes ? labelSizes.widest.width + padding : 0;\n        const h = labelSizes ? labelSizes.highest.height + padding : 0;\n        return this.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    }\n _isVisible() {\n        const display = this.options.display;\n        if (display !== 'auto') {\n            return !!display;\n        }\n        return this.getMatchingVisibleMetas().length > 0;\n    }\n _computeGridLineItems(chartArea) {\n        const axis = this.axis;\n        const chart = this.chart;\n        const options = this.options;\n        const { grid , position , border  } = options;\n        const offset = grid.offset;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const ticksLength = ticks.length + (offset ? 1 : 0);\n        const tl = getTickMarkLength(grid);\n        const items = [];\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = borderOpts.display ? borderOpts.width : 0;\n        const axisHalfWidth = axisWidth / 2;\n        const alignBorderValue = function(pixel) {\n            return _alignPixel(chart, pixel, axisWidth);\n        };\n        let borderValue, i, lineValue, alignedLineValue;\n        let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n        if (position === 'top') {\n            borderValue = alignBorderValue(this.bottom);\n            ty1 = this.bottom - tl;\n            ty2 = borderValue - axisHalfWidth;\n            y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n            y2 = chartArea.bottom;\n        } else if (position === 'bottom') {\n            borderValue = alignBorderValue(this.top);\n            y1 = chartArea.top;\n            y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = this.top + tl;\n        } else if (position === 'left') {\n            borderValue = alignBorderValue(this.right);\n            tx1 = this.right - tl;\n            tx2 = borderValue - axisHalfWidth;\n            x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n            x2 = chartArea.right;\n        } else if (position === 'right') {\n            borderValue = alignBorderValue(this.left);\n            x1 = chartArea.left;\n            x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n            tx1 = borderValue + axisHalfWidth;\n            tx2 = this.left + tl;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            y1 = chartArea.top;\n            y2 = chartArea.bottom;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = ty1 + tl;\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n            } else if (isObject(position)) {\n                const positionAxisID1 = Object.keys(position)[0];\n                const value1 = position[positionAxisID1];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID1].getPixelForValue(value1));\n            }\n            tx1 = borderValue - axisHalfWidth;\n            tx2 = tx1 - tl;\n            x1 = chartArea.left;\n            x2 = chartArea.right;\n        }\n        const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n        const step = Math.max(1, Math.ceil(ticksLength / limit));\n        for(i = 0; i < ticksLength; i += step){\n            const context = this.getContext(i);\n            const optsAtIndex = grid.setContext(context);\n            const optsAtIndexBorder = border.setContext(context);\n            const lineWidth = optsAtIndex.lineWidth;\n            const lineColor = optsAtIndex.color;\n            const borderDash = optsAtIndexBorder.dash || [];\n            const borderDashOffset = optsAtIndexBorder.dashOffset;\n            const tickWidth = optsAtIndex.tickWidth;\n            const tickColor = optsAtIndex.tickColor;\n            const tickBorderDash = optsAtIndex.tickBorderDash || [];\n            const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n            lineValue = getPixelForGridLine(this, i, offset);\n            if (lineValue === undefined) {\n                continue;\n            }\n            alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n            if (isHorizontal) {\n                tx1 = tx2 = x1 = x2 = alignedLineValue;\n            } else {\n                ty1 = ty2 = y1 = y2 = alignedLineValue;\n            }\n            items.push({\n                tx1,\n                ty1,\n                tx2,\n                ty2,\n                x1,\n                y1,\n                x2,\n                y2,\n                width: lineWidth,\n                color: lineColor,\n                borderDash,\n                borderDashOffset,\n                tickWidth,\n                tickColor,\n                tickBorderDash,\n                tickBorderDashOffset\n            });\n        }\n        this._ticksLength = ticksLength;\n        this._borderValue = borderValue;\n        return items;\n    }\n _computeLabelItems(chartArea) {\n        const axis = this.axis;\n        const options = this.options;\n        const { position , ticks: optionTicks  } = options;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const { align , crossAlign , padding , mirror  } = optionTicks;\n        const tl = getTickMarkLength(options.grid);\n        const tickAndPadding = tl + padding;\n        const hTickAndPadding = mirror ? -padding : tickAndPadding;\n        const rotation = -toRadians(this.labelRotation);\n        const items = [];\n        let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n        let textBaseline = 'middle';\n        if (position === 'top') {\n            y = this.bottom - hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'bottom') {\n            y = this.top + hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'left') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (position === 'right') {\n            const ret1 = this._getYAxisLabelAlignment(tl);\n            textAlign = ret1.textAlign;\n            x = ret1.x;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n            }\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID1 = Object.keys(position)[0];\n                const value1 = position[positionAxisID1];\n                x = this.chart.scales[positionAxisID1].getPixelForValue(value1);\n            }\n            textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n        }\n        if (axis === 'y') {\n            if (align === 'start') {\n                textBaseline = 'top';\n            } else if (align === 'end') {\n                textBaseline = 'bottom';\n            }\n        }\n        const labelSizes = this._getLabelSizes();\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            label = tick.label;\n            const optsAtIndex = optionTicks.setContext(this.getContext(i));\n            pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n            font = this._resolveTickFontOptions(i);\n            lineHeight = font.lineHeight;\n            lineCount = isArray(label) ? label.length : 1;\n            const halfCount = lineCount / 2;\n            const color = optsAtIndex.color;\n            const strokeColor = optsAtIndex.textStrokeColor;\n            const strokeWidth = optsAtIndex.textStrokeWidth;\n            let tickTextAlign = textAlign;\n            if (isHorizontal) {\n                x = pixel;\n                if (textAlign === 'inner') {\n                    if (i === ilen - 1) {\n                        tickTextAlign = !this.options.reverse ? 'right' : 'left';\n                    } else if (i === 0) {\n                        tickTextAlign = !this.options.reverse ? 'left' : 'right';\n                    } else {\n                        tickTextAlign = 'center';\n                    }\n                }\n                if (position === 'top') {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = -lineCount * lineHeight + lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n                    } else {\n                        textOffset = -labelSizes.highest.height + lineHeight / 2;\n                    }\n                } else {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n                    } else {\n                        textOffset = labelSizes.highest.height - lineCount * lineHeight;\n                    }\n                }\n                if (mirror) {\n                    textOffset *= -1;\n                }\n                if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n                    x += lineHeight / 2 * Math.sin(rotation);\n                }\n            } else {\n                y = pixel;\n                textOffset = (1 - lineCount) * lineHeight / 2;\n            }\n            let backdrop;\n            if (optsAtIndex.showLabelBackdrop) {\n                const labelPadding = toPadding(optsAtIndex.backdropPadding);\n                const height = labelSizes.heights[i];\n                const width = labelSizes.widths[i];\n                let top = textOffset - labelPadding.top;\n                let left = 0 - labelPadding.left;\n                switch(textBaseline){\n                    case 'middle':\n                        top -= height / 2;\n                        break;\n                    case 'bottom':\n                        top -= height;\n                        break;\n                }\n                switch(textAlign){\n                    case 'center':\n                        left -= width / 2;\n                        break;\n                    case 'right':\n                        left -= width;\n                        break;\n                }\n                backdrop = {\n                    left,\n                    top,\n                    width: width + labelPadding.width,\n                    height: height + labelPadding.height,\n                    color: optsAtIndex.backdropColor\n                };\n            }\n            items.push({\n                rotation,\n                label,\n                font,\n                color,\n                strokeColor,\n                strokeWidth,\n                textOffset,\n                textAlign: tickTextAlign,\n                textBaseline,\n                translation: [\n                    x,\n                    y\n                ],\n                backdrop\n            });\n        }\n        return items;\n    }\n    _getXAxisLabelAlignment() {\n        const { position , ticks  } = this.options;\n        const rotation = -toRadians(this.labelRotation);\n        if (rotation) {\n            return position === 'top' ? 'left' : 'right';\n        }\n        let align = 'center';\n        if (ticks.align === 'start') {\n            align = 'left';\n        } else if (ticks.align === 'end') {\n            align = 'right';\n        } else if (ticks.align === 'inner') {\n            align = 'inner';\n        }\n        return align;\n    }\n    _getYAxisLabelAlignment(tl) {\n        const { position , ticks: { crossAlign , mirror , padding  }  } = this.options;\n        const labelSizes = this._getLabelSizes();\n        const tickAndPadding = tl + padding;\n        const widest = labelSizes.widest.width;\n        let textAlign;\n        let x;\n        if (position === 'left') {\n            if (mirror) {\n                x = this.right + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x += widest;\n                }\n            } else {\n                x = this.right - tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x = this.left;\n                }\n            }\n        } else if (position === 'right') {\n            if (mirror) {\n                x = this.left + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x -= widest;\n                }\n            } else {\n                x = this.left + tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x = this.right;\n                }\n            }\n        } else {\n            textAlign = 'right';\n        }\n        return {\n            textAlign,\n            x\n        };\n    }\n _computeLabelArea() {\n        if (this.options.ticks.mirror) {\n            return;\n        }\n        const chart = this.chart;\n        const position = this.options.position;\n        if (position === 'left' || position === 'right') {\n            return {\n                top: 0,\n                left: this.left,\n                bottom: chart.height,\n                right: this.right\n            };\n        }\n        if (position === 'top' || position === 'bottom') {\n            return {\n                top: this.top,\n                left: 0,\n                bottom: this.bottom,\n                right: chart.width\n            };\n        }\n    }\n drawBackground() {\n        const { ctx , options: { backgroundColor  } , left , top , width , height  } = this;\n        if (backgroundColor) {\n            ctx.save();\n            ctx.fillStyle = backgroundColor;\n            ctx.fillRect(left, top, width, height);\n            ctx.restore();\n        }\n    }\n    getLineWidthForValue(value) {\n        const grid = this.options.grid;\n        if (!this._isVisible() || !grid.display) {\n            return 0;\n        }\n        const ticks = this.ticks;\n        const index = ticks.findIndex((t)=>t.value === value);\n        if (index >= 0) {\n            const opts = grid.setContext(this.getContext(index));\n            return opts.lineWidth;\n        }\n        return 0;\n    }\n drawGrid(chartArea) {\n        const grid = this.options.grid;\n        const ctx = this.ctx;\n        const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n        let i, ilen;\n        const drawLine = (p1, p2, style)=>{\n            if (!style.width || !style.color) {\n                return;\n            }\n            ctx.save();\n            ctx.lineWidth = style.width;\n            ctx.strokeStyle = style.color;\n            ctx.setLineDash(style.borderDash || []);\n            ctx.lineDashOffset = style.borderDashOffset;\n            ctx.beginPath();\n            ctx.moveTo(p1.x, p1.y);\n            ctx.lineTo(p2.x, p2.y);\n            ctx.stroke();\n            ctx.restore();\n        };\n        if (grid.display) {\n            for(i = 0, ilen = items.length; i < ilen; ++i){\n                const item = items[i];\n                if (grid.drawOnChartArea) {\n                    drawLine({\n                        x: item.x1,\n                        y: item.y1\n                    }, {\n                        x: item.x2,\n                        y: item.y2\n                    }, item);\n                }\n                if (grid.drawTicks) {\n                    drawLine({\n                        x: item.tx1,\n                        y: item.ty1\n                    }, {\n                        x: item.tx2,\n                        y: item.ty2\n                    }, {\n                        color: item.tickColor,\n                        width: item.tickWidth,\n                        borderDash: item.tickBorderDash,\n                        borderDashOffset: item.tickBorderDashOffset\n                    });\n                }\n            }\n        }\n    }\n drawBorder() {\n        const { chart , ctx , options: { border , grid  }  } = this;\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = border.display ? borderOpts.width : 0;\n        if (!axisWidth) {\n            return;\n        }\n        const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n        const borderValue = this._borderValue;\n        let x1, x2, y1, y2;\n        if (this.isHorizontal()) {\n            x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n            x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n            y1 = y2 = borderValue;\n        } else {\n            y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n            y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n            x1 = x2 = borderValue;\n        }\n        ctx.save();\n        ctx.lineWidth = borderOpts.width;\n        ctx.strokeStyle = borderOpts.color;\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x2, y2);\n        ctx.stroke();\n        ctx.restore();\n    }\n drawLabels(chartArea) {\n        const optionTicks = this.options.ticks;\n        if (!optionTicks.display) {\n            return;\n        }\n        const ctx = this.ctx;\n        const area = this._computeLabelArea();\n        if (area) {\n            clipArea(ctx, area);\n        }\n        const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n        let i, ilen;\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            const item = items[i];\n            const tickFont = item.font;\n            const label = item.label;\n            let y = item.textOffset;\n            renderText(ctx, label, 0, y, tickFont, item);\n        }\n        if (area) {\n            unclipArea(ctx);\n        }\n    }\n drawTitle() {\n        const { ctx , options: { position , title , reverse  }  } = this;\n        if (!title.display) {\n            return;\n        }\n        const font = toFont(title.font);\n        const padding = toPadding(title.padding);\n        const align = title.align;\n        let offset = font.lineHeight / 2;\n        if (position === 'bottom' || position === 'center' || isObject(position)) {\n            offset += padding.bottom;\n            if (isArray(title.text)) {\n                offset += font.lineHeight * (title.text.length - 1);\n            }\n        } else {\n            offset += padding.top;\n        }\n        const { titleX , titleY , maxWidth , rotation  } = titleArgs(this, offset, position, align);\n        renderText(ctx, title.text, 0, 0, font, {\n            color: title.color,\n            maxWidth,\n            rotation,\n            textAlign: titleAlign(align, position, reverse),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n    draw(chartArea) {\n        if (!this._isVisible()) {\n            return;\n        }\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawBorder();\n        this.drawTitle();\n        this.drawLabels(chartArea);\n    }\n _layers() {\n        const opts = this.options;\n        const tz = opts.ticks && opts.ticks.z || 0;\n        const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n        const bz = valueOrDefault(opts.border && opts.border.z, 0);\n        if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n            return [\n                {\n                    z: tz,\n                    draw: (chartArea)=>{\n                        this.draw(chartArea);\n                    }\n                }\n            ];\n        }\n        return [\n            {\n                z: gz,\n                draw: (chartArea)=>{\n                    this.drawBackground();\n                    this.drawGrid(chartArea);\n                    this.drawTitle();\n                }\n            },\n            {\n                z: bz,\n                draw: ()=>{\n                    this.drawBorder();\n                }\n            },\n            {\n                z: tz,\n                draw: (chartArea)=>{\n                    this.drawLabels(chartArea);\n                }\n            }\n        ];\n    }\n getMatchingVisibleMetas(type) {\n        const metas = this.chart.getSortedVisibleDatasetMetas();\n        const axisID = this.axis + 'AxisID';\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            const meta = metas[i];\n            if (meta[axisID] === this.id && (!type || meta.type === type)) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n _resolveTickFontOptions(index) {\n        const opts = this.options.ticks.setContext(this.getContext(index));\n        return toFont(opts.font);\n    }\n _maxDigits() {\n        const fontSize = this._resolveTickFontOptions(0).lineHeight;\n        return (this.isHorizontal() ? this.width : this.height) / fontSize;\n    }\n}\n\nclass TypedRegistry {\n    constructor(type, scope, override){\n        this.type = type;\n        this.scope = scope;\n        this.override = override;\n        this.items = Object.create(null);\n    }\n    isForType(type) {\n        return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n    }\n register(item) {\n        const proto = Object.getPrototypeOf(item);\n        let parentScope;\n        if (isIChartComponent(proto)) {\n            parentScope = this.register(proto);\n        }\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope + '.' + id;\n        if (!id) {\n            throw new Error('class does not have id: ' + item);\n        }\n        if (id in items) {\n            return scope;\n        }\n        items[id] = item;\n        registerDefaults(item, scope, parentScope);\n        if (this.override) {\n            defaults.override(item.id, item.overrides);\n        }\n        return scope;\n    }\n get(id) {\n        return this.items[id];\n    }\n unregister(item) {\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope;\n        if (id in items) {\n            delete items[id];\n        }\n        if (scope && id in defaults[scope]) {\n            delete defaults[scope][id];\n            if (this.override) {\n                delete overrides[id];\n            }\n        }\n    }\n}function registerDefaults(item, scope, parentScope) {\n    const itemDefaults = merge(Object.create(null), [\n        parentScope ? defaults.get(parentScope) : {},\n        defaults.get(scope),\n        item.defaults\n    ]);\n    defaults.set(scope, itemDefaults);\n    if (item.defaultRoutes) {\n        routeDefaults(scope, item.defaultRoutes);\n    }\n    if (item.descriptors) {\n        defaults.describe(scope, item.descriptors);\n    }\n}\nfunction routeDefaults(scope, routes) {\n    Object.keys(routes).forEach((property)=>{\n        const propertyParts = property.split('.');\n        const sourceName = propertyParts.pop();\n        const sourceScope = [\n            scope\n        ].concat(propertyParts).join('.');\n        const parts = routes[property].split('.');\n        const targetName = parts.pop();\n        const targetScope = parts.join('.');\n        defaults.route(sourceScope, sourceName, targetScope, targetName);\n    });\n}\nfunction isIChartComponent(proto) {\n    return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n    constructor(){\n        this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n        this.elements = new TypedRegistry(Element, 'elements');\n        this.plugins = new TypedRegistry(Object, 'plugins');\n        this.scales = new TypedRegistry(Scale, 'scales');\n        this._typedRegistries = [\n            this.controllers,\n            this.scales,\n            this.elements\n        ];\n    }\n add(...args) {\n        this._each('register', args);\n    }\n    remove(...args) {\n        this._each('unregister', args);\n    }\n addControllers(...args) {\n        this._each('register', args, this.controllers);\n    }\n addElements(...args) {\n        this._each('register', args, this.elements);\n    }\n addPlugins(...args) {\n        this._each('register', args, this.plugins);\n    }\n addScales(...args) {\n        this._each('register', args, this.scales);\n    }\n getController(id) {\n        return this._get(id, this.controllers, 'controller');\n    }\n getElement(id) {\n        return this._get(id, this.elements, 'element');\n    }\n getPlugin(id) {\n        return this._get(id, this.plugins, 'plugin');\n    }\n getScale(id) {\n        return this._get(id, this.scales, 'scale');\n    }\n removeControllers(...args) {\n        this._each('unregister', args, this.controllers);\n    }\n removeElements(...args) {\n        this._each('unregister', args, this.elements);\n    }\n removePlugins(...args) {\n        this._each('unregister', args, this.plugins);\n    }\n removeScales(...args) {\n        this._each('unregister', args, this.scales);\n    }\n _each(method, args, typedRegistry) {\n        [\n            ...args\n        ].forEach((arg)=>{\n            const reg = typedRegistry || this._getRegistryForType(arg);\n            if (typedRegistry || reg.isForType(arg) || reg === this.plugins && arg.id) {\n                this._exec(method, reg, arg);\n            } else {\n                each(arg, (item)=>{\n                    const itemReg = typedRegistry || this._getRegistryForType(item);\n                    this._exec(method, itemReg, item);\n                });\n            }\n        });\n    }\n _exec(method, registry, component) {\n        const camelMethod = _capitalize(method);\n        callback(component['before' + camelMethod], [], component);\n        registry[method](component);\n        callback(component['after' + camelMethod], [], component);\n    }\n _getRegistryForType(type) {\n        for(let i = 0; i < this._typedRegistries.length; i++){\n            const reg = this._typedRegistries[i];\n            if (reg.isForType(type)) {\n                return reg;\n            }\n        }\n        return this.plugins;\n    }\n _get(id, typedRegistry, type) {\n        const item = typedRegistry.get(id);\n        if (item === undefined) {\n            throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n        }\n        return item;\n    }\n}\nvar registry = /* #__PURE__ */ new Registry();\n\nclass PluginService {\n    constructor(){\n        this._init = [];\n    }\n notify(chart, hook, args, filter) {\n        if (hook === 'beforeInit') {\n            this._init = this._createDescriptors(chart, true);\n            this._notify(this._init, chart, 'install');\n        }\n        const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n        const result = this._notify(descriptors, chart, hook, args);\n        if (hook === 'afterDestroy') {\n            this._notify(descriptors, chart, 'stop');\n            this._notify(this._init, chart, 'uninstall');\n        }\n        return result;\n    }\n _notify(descriptors, chart, hook, args) {\n        args = args || {};\n        for (const descriptor of descriptors){\n            const plugin = descriptor.plugin;\n            const method = plugin[hook];\n            const params = [\n                chart,\n                args,\n                descriptor.options\n            ];\n            if (callback(method, params, plugin) === false && args.cancelable) {\n                return false;\n            }\n        }\n        return true;\n    }\n    invalidate() {\n        if (!isNullOrUndef(this._cache)) {\n            this._oldCache = this._cache;\n            this._cache = undefined;\n        }\n    }\n _descriptors(chart) {\n        if (this._cache) {\n            return this._cache;\n        }\n        const descriptors = this._cache = this._createDescriptors(chart);\n        this._notifyStateChanges(chart);\n        return descriptors;\n    }\n    _createDescriptors(chart, all) {\n        const config = chart && chart.config;\n        const options = valueOrDefault(config.options && config.options.plugins, {});\n        const plugins = allPlugins(config);\n        return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n    }\n _notifyStateChanges(chart) {\n        const previousDescriptors = this._oldCache || [];\n        const descriptors = this._cache;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.plugin.id === y.plugin.id));\n        this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n        this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n    }\n} function allPlugins(config) {\n    const localIds = {};\n    const plugins = [];\n    const keys = Object.keys(registry.plugins.items);\n    for(let i = 0; i < keys.length; i++){\n        plugins.push(registry.getPlugin(keys[i]));\n    }\n    const local = config.plugins || [];\n    for(let i1 = 0; i1 < local.length; i1++){\n        const plugin = local[i1];\n        if (plugins.indexOf(plugin) === -1) {\n            plugins.push(plugin);\n            localIds[plugin.id] = true;\n        }\n    }\n    return {\n        plugins,\n        localIds\n    };\n}\nfunction getOpts(options, all) {\n    if (!all && options === false) {\n        return null;\n    }\n    if (options === true) {\n        return {};\n    }\n    return options;\n}\nfunction createDescriptors(chart, { plugins , localIds  }, options, all) {\n    const result = [];\n    const context = chart.getContext();\n    for (const plugin of plugins){\n        const id = plugin.id;\n        const opts = getOpts(options[id], all);\n        if (opts === null) {\n            continue;\n        }\n        result.push({\n            plugin,\n            options: pluginOpts(chart.config, {\n                plugin,\n                local: localIds[id]\n            }, opts, context)\n        });\n    }\n    return result;\n}\nfunction pluginOpts(config, { plugin , local  }, opts, context) {\n    const keys = config.pluginScopeKeys(plugin);\n    const scopes = config.getOptionScopes(opts, keys);\n    if (local && plugin.defaults) {\n        scopes.push(plugin.defaults);\n    }\n    return config.createResolver(scopes, context, [\n        ''\n    ], {\n        scriptable: false,\n        indexable: false,\n        allKeys: true\n    });\n}\n\nfunction getIndexAxis(type, options) {\n    const datasetDefaults = defaults.datasets[type] || {};\n    const datasetOptions = (options.datasets || {})[type] || {};\n    return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n    let axis = id;\n    if (id === '_index_') {\n        axis = indexAxis;\n    } else if (id === '_value_') {\n        axis = indexAxis === 'x' ? 'y' : 'x';\n    }\n    return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n    return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction axisFromPosition(position) {\n    if (position === 'top' || position === 'bottom') {\n        return 'x';\n    }\n    if (position === 'left' || position === 'right') {\n        return 'y';\n    }\n}\nfunction determineAxis(id, scaleOptions) {\n    if (id === 'x' || id === 'y' || id === 'r') {\n        return id;\n    }\n    id = scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.length > 1 && determineAxis(id[0].toLowerCase(), scaleOptions);\n    if (id) {\n        return id;\n    }\n    throw new Error(`Cannot determine type of '${name}' axis. Please provide 'axis' or 'position' option.`);\n}\nfunction mergeScaleConfig(config, options) {\n    const chartDefaults = overrides[config.type] || {\n        scales: {}\n    };\n    const configScales = options.scales || {};\n    const chartIndexAxis = getIndexAxis(config.type, options);\n    const scales = Object.create(null);\n    Object.keys(configScales).forEach((id)=>{\n        const scaleConf = configScales[id];\n        if (!isObject(scaleConf)) {\n            return console.error(`Invalid scale configuration for scale: ${id}`);\n        }\n        if (scaleConf._proxy) {\n            return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n        }\n        const axis = determineAxis(id, scaleConf);\n        const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n        const defaultScaleOptions = chartDefaults.scales || {};\n        scales[id] = mergeIf(Object.create(null), [\n            {\n                axis\n            },\n            scaleConf,\n            defaultScaleOptions[axis],\n            defaultScaleOptions[defaultId]\n        ]);\n    });\n    config.data.datasets.forEach((dataset)=>{\n        const type = dataset.type || config.type;\n        const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n        const datasetDefaults = overrides[type] || {};\n        const defaultScaleOptions = datasetDefaults.scales || {};\n        Object.keys(defaultScaleOptions).forEach((defaultID)=>{\n            const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n            const id = dataset[axis + 'AxisID'] || axis;\n            scales[id] = scales[id] || Object.create(null);\n            mergeIf(scales[id], [\n                {\n                    axis\n                },\n                configScales[id],\n                defaultScaleOptions[defaultID]\n            ]);\n        });\n    });\n    Object.keys(scales).forEach((key)=>{\n        const scale = scales[key];\n        mergeIf(scale, [\n            defaults.scales[scale.type],\n            defaults.scale\n        ]);\n    });\n    return scales;\n}\nfunction initOptions(config) {\n    const options = config.options || (config.options = {});\n    options.plugins = valueOrDefault(options.plugins, {});\n    options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n    data = data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    return data;\n}\nfunction initConfig(config) {\n    config = config || {};\n    config.data = initData(config.data);\n    initOptions(config);\n    return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n    let keys = keyCache.get(cacheKey);\n    if (!keys) {\n        keys = generate();\n        keyCache.set(cacheKey, keys);\n        keysCached.add(keys);\n    }\n    return keys;\n}\nconst addIfFound = (set, obj, key)=>{\n    const opts = resolveObjectKey(obj, key);\n    if (opts !== undefined) {\n        set.add(opts);\n    }\n};\nclass Config {\n    constructor(config){\n        this._config = initConfig(config);\n        this._scopeCache = new Map();\n        this._resolverCache = new Map();\n    }\n    get platform() {\n        return this._config.platform;\n    }\n    get type() {\n        return this._config.type;\n    }\n    set type(type) {\n        this._config.type = type;\n    }\n    get data() {\n        return this._config.data;\n    }\n    set data(data) {\n        this._config.data = initData(data);\n    }\n    get options() {\n        return this._config.options;\n    }\n    set options(options) {\n        this._config.options = options;\n    }\n    get plugins() {\n        return this._config.plugins;\n    }\n    update() {\n        const config = this._config;\n        this.clearCache();\n        initOptions(config);\n    }\n    clearCache() {\n        this._scopeCache.clear();\n        this._resolverCache.clear();\n    }\n datasetScopeKeys(datasetType) {\n        return cachedKeys(datasetType, ()=>[\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetAnimationScopeKeys(datasetType, transition) {\n        return cachedKeys(`${datasetType}.transition.${transition}`, ()=>[\n                [\n                    `datasets.${datasetType}.transitions.${transition}`,\n                    `transitions.${transition}`,\n                ],\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetElementScopeKeys(datasetType, elementType) {\n        return cachedKeys(`${datasetType}-${elementType}`, ()=>[\n                [\n                    `datasets.${datasetType}.elements.${elementType}`,\n                    `datasets.${datasetType}`,\n                    `elements.${elementType}`,\n                    ''\n                ]\n            ]);\n    }\n pluginScopeKeys(plugin) {\n        const id = plugin.id;\n        const type = this.type;\n        return cachedKeys(`${type}-plugin-${id}`, ()=>[\n                [\n                    `plugins.${id}`,\n                    ...plugin.additionalOptionScopes || [],\n                ]\n            ]);\n    }\n _cachedScopes(mainScope, resetCache) {\n        const _scopeCache = this._scopeCache;\n        let cache = _scopeCache.get(mainScope);\n        if (!cache || resetCache) {\n            cache = new Map();\n            _scopeCache.set(mainScope, cache);\n        }\n        return cache;\n    }\n getOptionScopes(mainScope, keyLists, resetCache) {\n        const { options , type  } = this;\n        const cache = this._cachedScopes(mainScope, resetCache);\n        const cached = cache.get(keyLists);\n        if (cached) {\n            return cached;\n        }\n        const scopes = new Set();\n        keyLists.forEach((keys)=>{\n            if (mainScope) {\n                scopes.add(mainScope);\n                keys.forEach((key)=>addIfFound(scopes, mainScope, key));\n            }\n            keys.forEach((key)=>addIfFound(scopes, options, key));\n            keys.forEach((key)=>addIfFound(scopes, overrides[type] || {}, key));\n            keys.forEach((key)=>addIfFound(scopes, defaults, key));\n            keys.forEach((key)=>addIfFound(scopes, descriptors, key));\n        });\n        const array = Array.from(scopes);\n        if (array.length === 0) {\n            array.push(Object.create(null));\n        }\n        if (keysCached.has(keyLists)) {\n            cache.set(keyLists, array);\n        }\n        return array;\n    }\n chartOptionScopes() {\n        const { options , type  } = this;\n        return [\n            options,\n            overrides[type] || {},\n            defaults.datasets[type] || {},\n            {\n                type\n            },\n            defaults,\n            descriptors\n        ];\n    }\n resolveNamedOptions(scopes, names, context, prefixes = [\n        ''\n    ]) {\n        const result = {\n            $shared: true\n        };\n        const { resolver , subPrefixes  } = getResolver(this._resolverCache, scopes, prefixes);\n        let options = resolver;\n        if (needContext(resolver, names)) {\n            result.$shared = false;\n            context = isFunction(context) ? context() : context;\n            const subResolver = this.createResolver(scopes, context, subPrefixes);\n            options = _attachContext(resolver, context, subResolver);\n        }\n        for (const prop of names){\n            result[prop] = options[prop];\n        }\n        return result;\n    }\n createResolver(scopes, context, prefixes = [\n        ''\n    ], descriptorDefaults) {\n        const { resolver  } = getResolver(this._resolverCache, scopes, prefixes);\n        return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n    }\n}function getResolver(resolverCache, scopes, prefixes) {\n    let cache = resolverCache.get(scopes);\n    if (!cache) {\n        cache = new Map();\n        resolverCache.set(scopes, cache);\n    }\n    const cacheKey = prefixes.join();\n    let cached = cache.get(cacheKey);\n    if (!cached) {\n        const resolver = _createResolver(scopes, prefixes);\n        cached = {\n            resolver,\n            subPrefixes: prefixes.filter((p)=>!p.toLowerCase().includes('hover'))\n        };\n        cache.set(cacheKey, cached);\n    }\n    return cached;\n}\nconst hasFunction = (value)=>isObject(value) && Object.getOwnPropertyNames(value).reduce((acc, key)=>acc || isFunction(value[key]), false);\nfunction needContext(proxy, names) {\n    const { isScriptable , isIndexable  } = _descriptors(proxy);\n    for (const prop of names){\n        const scriptable = isScriptable(prop);\n        const indexable = isIndexable(prop);\n        const value = (indexable || scriptable) && proxy[prop];\n        if (scriptable && (isFunction(value) || hasFunction(value)) || indexable && isArray(value)) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar version = \"4.0.1\";\n\nconst KNOWN_POSITIONS = [\n    'top',\n    'bottom',\n    'left',\n    'right',\n    'chartArea'\n];\nfunction positionIsHorizontal(position, axis) {\n    return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\nfunction compare2Level(l1, l2) {\n    return function(a, b) {\n        return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n    };\n}\nfunction onAnimationsComplete(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    chart.notifyPlugins('afterRender');\n    callback(animationOptions && animationOptions.onComplete, [\n        context\n    ], chart);\n}\nfunction onAnimationProgress(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    callback(animationOptions && animationOptions.onProgress, [\n        context\n    ], chart);\n}\n function getCanvas(item) {\n    if (_isDomSupported() && typeof item === 'string') {\n        item = document.getElementById(item);\n    } else if (item && item.length) {\n        item = item[0];\n    }\n    if (item && item.canvas) {\n        item = item.canvas;\n    }\n    return item;\n}\nconst instances = {};\nconst getChart = (key)=>{\n    const canvas = getCanvas(key);\n    return Object.values(instances).filter((c)=>c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n    const keys = Object.keys(obj);\n    for (const key of keys){\n        const intKey = +key;\n        if (intKey >= start) {\n            const value = obj[key];\n            delete obj[key];\n            if (move > 0 || intKey > start) {\n                obj[intKey + move] = value;\n            }\n        }\n    }\n}\n function determineLastEvent(e, lastEvent, inChartArea, isClick) {\n    if (!inChartArea || e.type === 'mouseout') {\n        return null;\n    }\n    if (isClick) {\n        return lastEvent;\n    }\n    return e;\n}\nfunction getDatasetArea(meta) {\n    const { xScale , yScale  } = meta;\n    if (xScale && yScale) {\n        return {\n            left: xScale.left,\n            right: xScale.right,\n            top: yScale.top,\n            bottom: yScale.bottom\n        };\n    }\n}\nclass Chart {\n    static defaults = defaults;\n    static instances = instances;\n    static overrides = overrides;\n    static registry = registry;\n    static version = version;\n    static getChart = getChart;\n    static register(...items) {\n        registry.add(...items);\n        invalidatePlugins();\n    }\n    static unregister(...items) {\n        registry.remove(...items);\n        invalidatePlugins();\n    }\n    constructor(item, userConfig){\n        const config = this.config = new Config(userConfig);\n        const initialCanvas = getCanvas(item);\n        const existingChart = getChart(initialCanvas);\n        if (existingChart) {\n            throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.');\n        }\n        const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n        this.platform.updateConfig(config);\n        const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n        const canvas = context && context.canvas;\n        const height = canvas && canvas.height;\n        const width = canvas && canvas.width;\n        this.id = uid();\n        this.ctx = context;\n        this.canvas = canvas;\n        this.width = width;\n        this.height = height;\n        this._options = options;\n        this._aspectRatio = this.aspectRatio;\n        this._layers = [];\n        this._metasets = [];\n        this._stacks = undefined;\n        this.boxes = [];\n        this.currentDevicePixelRatio = undefined;\n        this.chartArea = undefined;\n        this._active = [];\n        this._lastEvent = undefined;\n        this._listeners = {};\n         this._responsiveListeners = undefined;\n        this._sortedMetasets = [];\n        this.scales = {};\n        this._plugins = new PluginService();\n        this.$proxies = {};\n        this._hiddenIndices = {};\n        this.attached = false;\n        this._animationsDisabled = undefined;\n        this.$context = undefined;\n        this._doResize = debounce((mode)=>this.update(mode), options.resizeDelay || 0);\n        this._dataChanges = [];\n        instances[this.id] = this;\n        if (!context || !canvas) {\n            console.error(\"Failed to create chart: can't acquire context from the given item\");\n            return;\n        }\n        animator.listen(this, 'complete', onAnimationsComplete);\n        animator.listen(this, 'progress', onAnimationProgress);\n        this._initialize();\n        if (this.attached) {\n            this.update();\n        }\n    }\n    get aspectRatio() {\n        const { options: { aspectRatio , maintainAspectRatio  } , width , height , _aspectRatio  } = this;\n        if (!isNullOrUndef(aspectRatio)) {\n            return aspectRatio;\n        }\n        if (maintainAspectRatio && _aspectRatio) {\n            return _aspectRatio;\n        }\n        return height ? width / height : null;\n    }\n    get data() {\n        return this.config.data;\n    }\n    set data(data) {\n        this.config.data = data;\n    }\n    get options() {\n        return this._options;\n    }\n    set options(options) {\n        this.config.options = options;\n    }\n    get registry() {\n        return registry;\n    }\n _initialize() {\n        this.notifyPlugins('beforeInit');\n        if (this.options.responsive) {\n            this.resize();\n        } else {\n            retinaScale(this, this.options.devicePixelRatio);\n        }\n        this.bindEvents();\n        this.notifyPlugins('afterInit');\n        return this;\n    }\n    clear() {\n        clearCanvas(this.canvas, this.ctx);\n        return this;\n    }\n    stop() {\n        animator.stop(this);\n        return this;\n    }\n resize(width, height) {\n        if (!animator.running(this)) {\n            this._resize(width, height);\n        } else {\n            this._resizeBeforeDraw = {\n                width,\n                height\n            };\n        }\n    }\n    _resize(width, height) {\n        const options = this.options;\n        const canvas = this.canvas;\n        const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n        const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n        const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n        const mode = this.width ? 'resize' : 'attach';\n        this.width = newSize.width;\n        this.height = newSize.height;\n        this._aspectRatio = this.aspectRatio;\n        if (!retinaScale(this, newRatio, true)) {\n            return;\n        }\n        this.notifyPlugins('resize', {\n            size: newSize\n        });\n        callback(options.onResize, [\n            this,\n            newSize\n        ], this);\n        if (this.attached) {\n            if (this._doResize(mode)) {\n                this.render();\n            }\n        }\n    }\n    ensureScalesHaveIDs() {\n        const options = this.options;\n        const scalesOptions = options.scales || {};\n        each(scalesOptions, (axisOptions, axisID)=>{\n            axisOptions.id = axisID;\n        });\n    }\n buildOrUpdateScales() {\n        const options = this.options;\n        const scaleOpts = options.scales;\n        const scales = this.scales;\n        const updated = Object.keys(scales).reduce((obj, id)=>{\n            obj[id] = false;\n            return obj;\n        }, {});\n        let items = [];\n        if (scaleOpts) {\n            items = items.concat(Object.keys(scaleOpts).map((id)=>{\n                const scaleOptions = scaleOpts[id];\n                const axis = determineAxis(id, scaleOptions);\n                const isRadial = axis === 'r';\n                const isHorizontal = axis === 'x';\n                return {\n                    options: scaleOptions,\n                    dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n                    dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n                };\n            }));\n        }\n        each(items, (item)=>{\n            const scaleOptions = item.options;\n            const id = scaleOptions.id;\n            const axis = determineAxis(id, scaleOptions);\n            const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n            if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n                scaleOptions.position = item.dposition;\n            }\n            updated[id] = true;\n            let scale = null;\n            if (id in scales && scales[id].type === scaleType) {\n                scale = scales[id];\n            } else {\n                const scaleClass = registry.getScale(scaleType);\n                scale = new scaleClass({\n                    id,\n                    type: scaleType,\n                    ctx: this.ctx,\n                    chart: this\n                });\n                scales[scale.id] = scale;\n            }\n            scale.init(scaleOptions, options);\n        });\n        each(updated, (hasUpdated, id)=>{\n            if (!hasUpdated) {\n                delete scales[id];\n            }\n        });\n        each(scales, (scale)=>{\n            layouts.configure(this, scale, scale.options);\n            layouts.addBox(this, scale);\n        });\n    }\n _updateMetasets() {\n        const metasets = this._metasets;\n        const numData = this.data.datasets.length;\n        const numMeta = metasets.length;\n        metasets.sort((a, b)=>a.index - b.index);\n        if (numMeta > numData) {\n            for(let i = numData; i < numMeta; ++i){\n                this._destroyDatasetMeta(i);\n            }\n            metasets.splice(numData, numMeta - numData);\n        }\n        this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n    }\n _removeUnreferencedMetasets() {\n        const { _metasets: metasets , data: { datasets  }  } = this;\n        if (metasets.length > datasets.length) {\n            delete this._stacks;\n        }\n        metasets.forEach((meta, index)=>{\n            if (datasets.filter((x)=>x === meta._dataset).length === 0) {\n                this._destroyDatasetMeta(index);\n            }\n        });\n    }\n    buildOrUpdateControllers() {\n        const newControllers = [];\n        const datasets = this.data.datasets;\n        let i, ilen;\n        this._removeUnreferencedMetasets();\n        for(i = 0, ilen = datasets.length; i < ilen; i++){\n            const dataset = datasets[i];\n            let meta = this.getDatasetMeta(i);\n            const type = dataset.type || this.config.type;\n            if (meta.type && meta.type !== type) {\n                this._destroyDatasetMeta(i);\n                meta = this.getDatasetMeta(i);\n            }\n            meta.type = type;\n            meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n            meta.order = dataset.order || 0;\n            meta.index = i;\n            meta.label = '' + dataset.label;\n            meta.visible = this.isDatasetVisible(i);\n            if (meta.controller) {\n                meta.controller.updateIndex(i);\n                meta.controller.linkScales();\n            } else {\n                const ControllerClass = registry.getController(type);\n                const { datasetElementType , dataElementType  } = defaults.datasets[type];\n                Object.assign(ControllerClass, {\n                    dataElementType: registry.getElement(dataElementType),\n                    datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n                });\n                meta.controller = new ControllerClass(this, i);\n                newControllers.push(meta.controller);\n            }\n        }\n        this._updateMetasets();\n        return newControllers;\n    }\n _resetElements() {\n        each(this.data.datasets, (dataset, datasetIndex)=>{\n            this.getDatasetMeta(datasetIndex).controller.reset();\n        }, this);\n    }\n reset() {\n        this._resetElements();\n        this.notifyPlugins('reset');\n    }\n    update(mode) {\n        const config = this.config;\n        config.update();\n        const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        const animsDisabled = this._animationsDisabled = !options.animation;\n        this._updateScales();\n        this._checkEventBindings();\n        this._updateHiddenIndices();\n        this._plugins.invalidate();\n        if (this.notifyPlugins('beforeUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const newControllers = this.buildOrUpdateControllers();\n        this.notifyPlugins('beforeElementsUpdate');\n        let minPadding = 0;\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; i++){\n            const { controller  } = this.getDatasetMeta(i);\n            const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n            controller.buildOrUpdateElements(reset);\n            minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n        }\n        minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n        this._updateLayout(minPadding);\n        if (!animsDisabled) {\n            each(newControllers, (controller)=>{\n                controller.reset();\n            });\n        }\n        this._updateDatasets(mode);\n        this.notifyPlugins('afterUpdate', {\n            mode\n        });\n        this._layers.sort(compare2Level('z', '_idx'));\n        const { _active , _lastEvent  } = this;\n        if (_lastEvent) {\n            this._eventHandler(_lastEvent, true);\n        } else if (_active.length) {\n            this._updateHoverStyles(_active, _active, true);\n        }\n        this.render();\n    }\n _updateScales() {\n        each(this.scales, (scale)=>{\n            layouts.removeBox(this, scale);\n        });\n        this.ensureScalesHaveIDs();\n        this.buildOrUpdateScales();\n    }\n _checkEventBindings() {\n        const options = this.options;\n        const existingEvents = new Set(Object.keys(this._listeners));\n        const newEvents = new Set(options.events);\n        if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n            this.unbindEvents();\n            this.bindEvents();\n        }\n    }\n _updateHiddenIndices() {\n        const { _hiddenIndices  } = this;\n        const changes = this._getUniformDataChanges() || [];\n        for (const { method , start , count  } of changes){\n            const move = method === '_removeElements' ? -count : count;\n            moveNumericKeys(_hiddenIndices, start, move);\n        }\n    }\n _getUniformDataChanges() {\n        const _dataChanges = this._dataChanges;\n        if (!_dataChanges || !_dataChanges.length) {\n            return;\n        }\n        this._dataChanges = [];\n        const datasetCount = this.data.datasets.length;\n        const makeSet = (idx)=>new Set(_dataChanges.filter((c)=>c[0] === idx).map((c, i)=>i + ',' + c.splice(1).join(',')));\n        const changeSet = makeSet(0);\n        for(let i = 1; i < datasetCount; i++){\n            if (!setsEqual(changeSet, makeSet(i))) {\n                return;\n            }\n        }\n        return Array.from(changeSet).map((c)=>c.split(',')).map((a)=>({\n                method: a[1],\n                start: +a[2],\n                count: +a[3]\n            }));\n    }\n _updateLayout(minPadding) {\n        if (this.notifyPlugins('beforeLayout', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        layouts.update(this, this.width, this.height, minPadding);\n        const area = this.chartArea;\n        const noArea = area.width <= 0 || area.height <= 0;\n        this._layers = [];\n        each(this.boxes, (box)=>{\n            if (noArea && box.position === 'chartArea') {\n                return;\n            }\n            if (box.configure) {\n                box.configure();\n            }\n            this._layers.push(...box._layers());\n        }, this);\n        this._layers.forEach((item, index)=>{\n            item._idx = index;\n        });\n        this.notifyPlugins('afterLayout');\n    }\n _updateDatasets(mode) {\n        if (this.notifyPlugins('beforeDatasetsUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this.getDatasetMeta(i).controller.configure();\n        }\n        for(let i1 = 0, ilen1 = this.data.datasets.length; i1 < ilen1; ++i1){\n            this._updateDataset(i1, isFunction(mode) ? mode({\n                datasetIndex: i1\n            }) : mode);\n        }\n        this.notifyPlugins('afterDatasetsUpdate', {\n            mode\n        });\n    }\n _updateDataset(index, mode) {\n        const meta = this.getDatasetMeta(index);\n        const args = {\n            meta,\n            index,\n            mode,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n            return;\n        }\n        meta.controller._update(mode);\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetUpdate', args);\n    }\n    render() {\n        if (this.notifyPlugins('beforeRender', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        if (animator.has(this)) {\n            if (this.attached && !animator.running(this)) {\n                animator.start(this);\n            }\n        } else {\n            this.draw();\n            onAnimationsComplete({\n                chart: this\n            });\n        }\n    }\n    draw() {\n        let i;\n        if (this._resizeBeforeDraw) {\n            const { width , height  } = this._resizeBeforeDraw;\n            this._resize(width, height);\n            this._resizeBeforeDraw = null;\n        }\n        this.clear();\n        if (this.width <= 0 || this.height <= 0) {\n            return;\n        }\n        if (this.notifyPlugins('beforeDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const layers = this._layers;\n        for(i = 0; i < layers.length && layers[i].z <= 0; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this._drawDatasets();\n        for(; i < layers.length; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this.notifyPlugins('afterDraw');\n    }\n _getSortedDatasetMetas(filterVisible) {\n        const metasets = this._sortedMetasets;\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metasets.length; i < ilen; ++i){\n            const meta = metasets[i];\n            if (!filterVisible || meta.visible) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n getSortedVisibleDatasetMetas() {\n        return this._getSortedDatasetMetas(true);\n    }\n _drawDatasets() {\n        if (this.notifyPlugins('beforeDatasetsDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const metasets = this.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            this._drawDataset(metasets[i]);\n        }\n        this.notifyPlugins('afterDatasetsDraw');\n    }\n _drawDataset(meta) {\n        const ctx = this.ctx;\n        const clip = meta._clip;\n        const useClip = !clip.disabled;\n        const area = getDatasetArea(meta) || this.chartArea;\n        const args = {\n            meta,\n            index: meta.index,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n            return;\n        }\n        if (useClip) {\n            clipArea(ctx, {\n                left: clip.left === false ? 0 : area.left - clip.left,\n                right: clip.right === false ? this.width : area.right + clip.right,\n                top: clip.top === false ? 0 : area.top - clip.top,\n                bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n            });\n        }\n        meta.controller.draw();\n        if (useClip) {\n            unclipArea(ctx);\n        }\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetDraw', args);\n    }\n isPointInArea(point) {\n        return _isPointInArea(point, this.chartArea, this._minPadding);\n    }\n    getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n        const method = Interaction.modes[mode];\n        if (typeof method === 'function') {\n            return method(this, e, options, useFinalPosition);\n        }\n        return [];\n    }\n    getDatasetMeta(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        const metasets = this._metasets;\n        let meta = metasets.filter((x)=>x && x._dataset === dataset).pop();\n        if (!meta) {\n            meta = {\n                type: null,\n                data: [],\n                dataset: null,\n                controller: null,\n                hidden: null,\n                xAxisID: null,\n                yAxisID: null,\n                order: dataset && dataset.order || 0,\n                index: datasetIndex,\n                _dataset: dataset,\n                _parsed: [],\n                _sorted: false\n            };\n            metasets.push(meta);\n        }\n        return meta;\n    }\n    getContext() {\n        return this.$context || (this.$context = createContext(null, {\n            chart: this,\n            type: 'chart'\n        }));\n    }\n    getVisibleDatasetCount() {\n        return this.getSortedVisibleDatasetMetas().length;\n    }\n    isDatasetVisible(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        if (!dataset) {\n            return false;\n        }\n        const meta = this.getDatasetMeta(datasetIndex);\n        return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n    }\n    setDatasetVisibility(datasetIndex, visible) {\n        const meta = this.getDatasetMeta(datasetIndex);\n        meta.hidden = !visible;\n    }\n    toggleDataVisibility(index) {\n        this._hiddenIndices[index] = !this._hiddenIndices[index];\n    }\n    getDataVisibility(index) {\n        return !this._hiddenIndices[index];\n    }\n _updateVisibility(datasetIndex, dataIndex, visible) {\n        const mode = visible ? 'show' : 'hide';\n        const meta = this.getDatasetMeta(datasetIndex);\n        const anims = meta.controller._resolveAnimations(undefined, mode);\n        if (defined(dataIndex)) {\n            meta.data[dataIndex].hidden = !visible;\n            this.update();\n        } else {\n            this.setDatasetVisibility(datasetIndex, visible);\n            anims.update(meta, {\n                visible\n            });\n            this.update((ctx)=>ctx.datasetIndex === datasetIndex ? mode : undefined);\n        }\n    }\n    hide(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, false);\n    }\n    show(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, true);\n    }\n _destroyDatasetMeta(datasetIndex) {\n        const meta = this._metasets[datasetIndex];\n        if (meta && meta.controller) {\n            meta.controller._destroy();\n        }\n        delete this._metasets[datasetIndex];\n    }\n    _stop() {\n        let i, ilen;\n        this.stop();\n        animator.remove(this);\n        for(i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._destroyDatasetMeta(i);\n        }\n    }\n    destroy() {\n        this.notifyPlugins('beforeDestroy');\n        const { canvas , ctx  } = this;\n        this._stop();\n        this.config.clearCache();\n        if (canvas) {\n            this.unbindEvents();\n            clearCanvas(canvas, ctx);\n            this.platform.releaseContext(ctx);\n            this.canvas = null;\n            this.ctx = null;\n        }\n        delete instances[this.id];\n        this.notifyPlugins('afterDestroy');\n    }\n    toBase64Image(...args) {\n        return this.canvas.toDataURL(...args);\n    }\n bindEvents() {\n        this.bindUserEvents();\n        if (this.options.responsive) {\n            this.bindResponsiveEvents();\n        } else {\n            this.attached = true;\n        }\n    }\n bindUserEvents() {\n        const listeners = this._listeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const listener = (e, x, y)=>{\n            e.offsetX = x;\n            e.offsetY = y;\n            this._eventHandler(e);\n        };\n        each(this.options.events, (type)=>_add(type, listener));\n    }\n bindResponsiveEvents() {\n        if (!this._responsiveListeners) {\n            this._responsiveListeners = {};\n        }\n        const listeners = this._responsiveListeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const _remove = (type, listener)=>{\n            if (listeners[type]) {\n                platform.removeEventListener(this, type, listener);\n                delete listeners[type];\n            }\n        };\n        const listener = (width, height)=>{\n            if (this.canvas) {\n                this.resize(width, height);\n            }\n        };\n        let detached;\n        const attached = ()=>{\n            _remove('attach', attached);\n            this.attached = true;\n            this.resize();\n            _add('resize', listener);\n            _add('detach', detached);\n        };\n        detached = ()=>{\n            this.attached = false;\n            _remove('resize', listener);\n            this._stop();\n            this._resize(0, 0);\n            _add('attach', attached);\n        };\n        if (platform.isAttached(this.canvas)) {\n            attached();\n        } else {\n            detached();\n        }\n    }\n unbindEvents() {\n        each(this._listeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._listeners = {};\n        each(this._responsiveListeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._responsiveListeners = undefined;\n    }\n    updateHoverStyle(items, mode, enabled) {\n        const prefix = enabled ? 'set' : 'remove';\n        let meta, item, i, ilen;\n        if (mode === 'dataset') {\n            meta = this.getDatasetMeta(items[0].datasetIndex);\n            meta.controller['_' + prefix + 'DatasetHoverStyle']();\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            item = items[i];\n            const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n            if (controller) {\n                controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n            }\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements) {\n        const lastActive = this._active || [];\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('No dataset found at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed) {\n            this._active = active;\n            this._lastEvent = null;\n            this._updateHoverStyles(active, lastActive);\n        }\n    }\n notifyPlugins(hook, args, filter) {\n        return this._plugins.notify(this, hook, args, filter);\n    }\n isPluginEnabled(pluginId) {\n        return this._plugins._cache.filter((p)=>p.plugin.id === pluginId).length === 1;\n    }\n _updateHoverStyles(active, lastActive, replay) {\n        const hoverOptions = this.options.hover;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.datasetIndex === y.datasetIndex && x.index === y.index));\n        const deactivated = diff(lastActive, active);\n        const activated = replay ? active : diff(active, lastActive);\n        if (deactivated.length) {\n            this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n        }\n        if (activated.length && hoverOptions.mode) {\n            this.updateHoverStyle(activated, hoverOptions.mode, true);\n        }\n    }\n _eventHandler(e, replay) {\n        const args = {\n            event: e,\n            replay,\n            cancelable: true,\n            inChartArea: this.isPointInArea(e)\n        };\n        const eventFilter = (plugin)=>(plugin.options.events || this.options.events).includes(e.native.type);\n        if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n            return;\n        }\n        const changed = this._handleEvent(e, replay, args.inChartArea);\n        args.cancelable = false;\n        this.notifyPlugins('afterEvent', args, eventFilter);\n        if (changed || args.changed) {\n            this.render();\n        }\n        return this;\n    }\n _handleEvent(e, replay, inChartArea) {\n        const { _active: lastActive = [] , options  } = this;\n        const useFinalPosition = replay;\n        const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n        const isClick = _isClickEvent(e);\n        const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n        if (inChartArea) {\n            this._lastEvent = null;\n            callback(options.onHover, [\n                e,\n                active,\n                this\n            ], this);\n            if (isClick) {\n                callback(options.onClick, [\n                    e,\n                    active,\n                    this\n                ], this);\n            }\n        }\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed || replay) {\n            this._active = active;\n            this._updateHoverStyles(active, lastActive, replay);\n        }\n        this._lastEvent = lastEvent;\n        return changed;\n    }\n _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive;\n        }\n        const hoverOptions = this.options.hover;\n        return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n    }\n}\nfunction invalidatePlugins() {\n    return each(Chart.instances, (chart)=>chart._plugins.invalidate());\n}\nvar Chart$1 = Chart;\n\nfunction clipArc(ctx, element, endAngle) {\n    const { startAngle , pixelMargin , x , y , outerRadius , innerRadius  } = element;\n    let angleMargin = pixelMargin / outerRadius;\n    // Draw an inner border by clipping the arc and drawing a double-width border\n    // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n    ctx.beginPath();\n    ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n    if (innerRadius > pixelMargin) {\n        angleMargin = pixelMargin / innerRadius;\n        ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n    } else {\n        ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n    }\n    ctx.closePath();\n    ctx.clip();\n}\nfunction toRadiusCorners(value) {\n    return _readValueToProps(value, [\n        'outerStart',\n        'outerEnd',\n        'innerStart',\n        'innerEnd'\n    ]);\n}\n/**\n * Parse border radius from the provided options\n */ function parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n    const o = toRadiusCorners(arc.options.borderRadius);\n    const halfThickness = (outerRadius - innerRadius) / 2;\n    const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n    // Outer limits are complicated. We want to compute the available angular distance at\n    // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n    // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n    //\n    // If the borderRadius is large, that value can become negative.\n    // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n    // we know that the thickness term will dominate and compute the limits at that point\n    const computeOuterLimit = (val)=>{\n        const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n        return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n    };\n    return {\n        outerStart: computeOuterLimit(o.outerStart),\n        outerEnd: computeOuterLimit(o.outerEnd),\n        innerStart: _limitValue(o.innerStart, 0, innerLimit),\n        innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n    };\n}\n/**\n * Convert (r, 𝜃) to (x, y)\n */ function rThetaToXY(r, theta, x, y) {\n    return {\n        x: x + r * Math.cos(theta),\n        y: y + r * Math.sin(theta)\n    };\n}\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */ function pathArc(ctx, element, offset, spacing, end, circular) {\n    const { x , y , startAngle: start , pixelMargin , innerRadius: innerR  } = element;\n    const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n    const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n    let spacingOffset = 0;\n    const alpha = end - start;\n    if (spacing) {\n        // When spacing is present, it is the same for all items\n        // So we adjust the start and end angle of the arc such that\n        // the distance is the same as it would be without the spacing\n        const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n        const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n        const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n        const adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n        spacingOffset = (alpha - adjustedAngle) / 2;\n    }\n    const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n    const angleOffset = (alpha - beta) / 2;\n    const startAngle = start + angleOffset + spacingOffset;\n    const endAngle = end - angleOffset - spacingOffset;\n    const { outerStart , outerEnd , innerStart , innerEnd  } = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n    const outerStartAdjustedRadius = outerRadius - outerStart;\n    const outerEndAdjustedRadius = outerRadius - outerEnd;\n    const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n    const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n    const innerStartAdjustedRadius = innerRadius + innerStart;\n    const innerEndAdjustedRadius = innerRadius + innerEnd;\n    const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n    const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n    ctx.beginPath();\n    if (circular) {\n        // The first arc segments from point 1 to point a to point 2\n        const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n        ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n        ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n        // The corner segment from point 2 to point 3\n        if (outerEnd > 0) {\n            const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n        }\n        // The line from point 3 to point 4\n        const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n        ctx.lineTo(p4.x, p4.y);\n        // The corner segment from point 4 to point 5\n        if (innerEnd > 0) {\n            const pCenter1 = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter1.x, pCenter1.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n        }\n        // The inner arc from point 5 to point b to point 6\n        const innerMidAdjustedAngle = (endAngle - innerEnd / innerRadius + (startAngle + innerStart / innerRadius)) / 2;\n        ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, innerMidAdjustedAngle, true);\n        ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + innerStart / innerRadius, true);\n        // The corner segment from point 6 to point 7\n        if (innerStart > 0) {\n            const pCenter2 = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter2.x, pCenter2.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n        }\n        // The line from point 7 to point 8\n        const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n        ctx.lineTo(p8.x, p8.y);\n        // The corner segment from point 8 to point 1\n        if (outerStart > 0) {\n            const pCenter3 = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter3.x, pCenter3.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n        }\n    } else {\n        ctx.moveTo(x, y);\n        const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n        const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerStartX, outerStartY);\n        const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n        const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerEndX, outerEndY);\n    }\n    ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference  } = element;\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.fill();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.fill();\n    return endAngle;\n}\nfunction drawBorder(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference , options  } = element;\n    const { borderWidth , borderJoinStyle  } = options;\n    const inner = options.borderAlign === 'inner';\n    if (!borderWidth) {\n        return;\n    }\n    if (inner) {\n        ctx.lineWidth = borderWidth * 2;\n        ctx.lineJoin = borderJoinStyle || 'round';\n    } else {\n        ctx.lineWidth = borderWidth;\n        ctx.lineJoin = borderJoinStyle || 'bevel';\n    }\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.stroke();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    if (inner) {\n        clipArc(ctx, element, endAngle);\n    }\n    if (!fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        ctx.stroke();\n    }\n}\nclass ArcElement extends Element {\n    static id = 'arc';\n    static defaults = {\n        borderAlign: 'center',\n        borderColor: '#fff',\n        borderJoinStyle: undefined,\n        borderRadius: 0,\n        borderWidth: 2,\n        offset: 0,\n        spacing: 0,\n        angle: undefined,\n        circular: true\n    };\n    static defaultRoutes = {\n        backgroundColor: 'backgroundColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.circumference = undefined;\n        this.startAngle = undefined;\n        this.endAngle = undefined;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.pixelMargin = 0;\n        this.fullCircles = 0;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(chartX, chartY, useFinalPosition) {\n        const point = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        const { angle , distance  } = getAngleFromPoint(point, {\n            x: chartX,\n            y: chartY\n        });\n        const { startAngle , endAngle , innerRadius , outerRadius , circumference  } = this.getProps([\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius',\n            'circumference'\n        ], useFinalPosition);\n        const rAdjust = this.options.spacing / 2;\n        const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n        const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n        const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n        return betweenAngles && withinRadius;\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , startAngle , endAngle , innerRadius , outerRadius  } = this.getProps([\n            'x',\n            'y',\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius',\n            'circumference', \n        ], useFinalPosition);\n        const { offset , spacing  } = this.options;\n        const halfAngle = (startAngle + endAngle) / 2;\n        const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n        return {\n            x: x + Math.cos(halfAngle) * halfRadius,\n            y: y + Math.sin(halfAngle) * halfRadius\n        };\n    }\n    tooltipPosition(useFinalPosition) {\n        return this.getCenterPoint(useFinalPosition);\n    }\n    draw(ctx) {\n        const { options , circumference  } = this;\n        const offset = (options.offset || 0) / 4;\n        const spacing = (options.spacing || 0) / 2;\n        const circular = options.circular;\n        this.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n        this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n        if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n            return;\n        }\n        ctx.save();\n        const halfAngle = (this.startAngle + this.endAngle) / 2;\n        ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n        const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n        const radiusOffset = offset * fix;\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        drawArc(ctx, this, radiusOffset, spacing, circular);\n        drawBorder(ctx, this, radiusOffset, spacing, circular);\n        ctx.restore();\n    }\n}\n\nfunction setStyle(ctx, options, style = options) {\n    ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n    ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n    ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n    ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n    ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n    ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n    ctx.lineTo(target.x, target.y);\n}\nfunction getLineMethod(options) {\n    if (options.stepped) {\n        return _steppedLineTo;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierCurveTo;\n    }\n    return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n    const count = points.length;\n    const { start: paramsStart = 0 , end: paramsEnd = count - 1  } = params;\n    const { start: segmentStart , end: segmentEnd  } = segment;\n    const start = Math.max(paramsStart, segmentStart);\n    const end = Math.min(paramsEnd, segmentEnd);\n    const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n    return {\n        count,\n        start,\n        loop: segment.loop,\n        ilen: end < start && !outside ? count + end - start : end - start\n    };\n}\n function pathSegment(ctx, line, segment, params) {\n    const { points , options  } = line;\n    const { count , start , loop , ilen  } = pathVars(points, segment, params);\n    const lineMethod = getLineMethod(options);\n    let { move =true , reverse  } = params || {};\n    let i, point, prev;\n    for(i = 0; i <= ilen; ++i){\n        point = points[(start + (reverse ? ilen - i : i)) % count];\n        if (point.skip) {\n            continue;\n        } else if (move) {\n            ctx.moveTo(point.x, point.y);\n            move = false;\n        } else {\n            lineMethod(ctx, prev, point, reverse, options.stepped);\n        }\n        prev = point;\n    }\n    if (loop) {\n        point = points[(start + (reverse ? ilen : 0)) % count];\n        lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    return !!loop;\n}\n function fastPathSegment(ctx, line, segment, params) {\n    const points = line.points;\n    const { count , start , ilen  } = pathVars(points, segment, params);\n    const { move =true , reverse  } = params || {};\n    let avgX = 0;\n    let countX = 0;\n    let i, point, prevX, minY, maxY, lastY;\n    const pointIndex = (index)=>(start + (reverse ? ilen - index : index)) % count;\n    const drawX = ()=>{\n        if (minY !== maxY) {\n            ctx.lineTo(avgX, maxY);\n            ctx.lineTo(avgX, minY);\n            ctx.lineTo(avgX, lastY);\n        }\n    };\n    if (move) {\n        point = points[pointIndex(0)];\n        ctx.moveTo(point.x, point.y);\n    }\n    for(i = 0; i <= ilen; ++i){\n        point = points[pointIndex(i)];\n        if (point.skip) {\n            continue;\n        }\n        const x = point.x;\n        const y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n            } else if (y > maxY) {\n                maxY = y;\n            }\n            avgX = (countX * avgX + x) / ++countX;\n        } else {\n            drawX();\n            ctx.lineTo(x, y);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n        }\n        lastY = y;\n    }\n    drawX();\n}\n function _getSegmentMethod(line) {\n    const opts = line.options;\n    const borderDash = opts.borderDash && opts.borderDash.length;\n    const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n    return useFastPath ? fastPathSegment : pathSegment;\n}\n function _getInterpolationMethod(options) {\n    if (options.stepped) {\n        return _steppedInterpolation;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierInterpolation;\n    }\n    return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n    let path = line._path;\n    if (!path) {\n        path = line._path = new Path2D();\n        if (line.path(path, start, count)) {\n            path.closePath();\n        }\n    }\n    setStyle(ctx, line.options);\n    ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n    const { segments , options  } = line;\n    const segmentMethod = _getSegmentMethod(line);\n    for (const segment of segments){\n        setStyle(ctx, options, segment.style);\n        ctx.beginPath();\n        if (segmentMethod(ctx, line, segment, {\n            start,\n            end: start + count - 1\n        })) {\n            ctx.closePath();\n        }\n        ctx.stroke();\n    }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n    if (usePath2D && !line.options.segment) {\n        strokePathWithCache(ctx, line, start, count);\n    } else {\n        strokePathDirect(ctx, line, start, count);\n    }\n}\nclass LineElement extends Element {\n    static id = 'line';\n static defaults = {\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: 'miter',\n        borderWidth: 3,\n        capBezierPoints: true,\n        cubicInterpolationMode: 'default',\n        fill: false,\n        spanGaps: false,\n        stepped: false,\n        tension: 0\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash' && name !== 'fill'\n    };\n    constructor(cfg){\n        super();\n        this.animated = true;\n        this.options = undefined;\n        this._chart = undefined;\n        this._loop = undefined;\n        this._fullLoop = undefined;\n        this._path = undefined;\n        this._points = undefined;\n        this._segments = undefined;\n        this._decimated = false;\n        this._pointsUpdated = false;\n        this._datasetIndex = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    updateControlPoints(chartArea, indexAxis) {\n        const options = this.options;\n        if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n            const loop = options.spanGaps ? this._loop : this._fullLoop;\n            _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n            this._pointsUpdated = true;\n        }\n    }\n    set points(points) {\n        this._points = points;\n        delete this._segments;\n        delete this._path;\n        this._pointsUpdated = false;\n    }\n    get points() {\n        return this._points;\n    }\n    get segments() {\n        return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n    }\n first() {\n        const segments = this.segments;\n        const points = this.points;\n        return segments.length && points[segments[0].start];\n    }\n last() {\n        const segments = this.segments;\n        const points = this.points;\n        const count = segments.length;\n        return count && points[segments[count - 1].end];\n    }\n interpolate(point, property) {\n        const options = this.options;\n        const value = point[property];\n        const points = this.points;\n        const segments = _boundSegments(this, {\n            property,\n            start: value,\n            end: value\n        });\n        if (!segments.length) {\n            return;\n        }\n        const result = [];\n        const _interpolate = _getInterpolationMethod(options);\n        let i, ilen;\n        for(i = 0, ilen = segments.length; i < ilen; ++i){\n            const { start , end  } = segments[i];\n            const p1 = points[start];\n            const p2 = points[end];\n            if (p1 === p2) {\n                result.push(p1);\n                continue;\n            }\n            const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n            const interpolated = _interpolate(p1, p2, t, options.stepped);\n            interpolated[property] = point[property];\n            result.push(interpolated);\n        }\n        return result.length === 1 ? result[0] : result;\n    }\n pathSegment(ctx, segment, params) {\n        const segmentMethod = _getSegmentMethod(this);\n        return segmentMethod(ctx, this, segment, params);\n    }\n path(ctx, start, count) {\n        const segments = this.segments;\n        const segmentMethod = _getSegmentMethod(this);\n        let loop = this._loop;\n        start = start || 0;\n        count = count || this.points.length - start;\n        for (const segment of segments){\n            loop &= segmentMethod(ctx, this, segment, {\n                start,\n                end: start + count - 1\n            });\n        }\n        return !!loop;\n    }\n draw(ctx, chartArea, start, count) {\n        const options = this.options || {};\n        const points = this.points || [];\n        if (points.length && options.borderWidth) {\n            ctx.save();\n            draw(ctx, this, start, count);\n            ctx.restore();\n        }\n        if (this.animated) {\n            this._pointsUpdated = false;\n            this._path = undefined;\n        }\n    }\n}\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n    const options = el.options;\n    const { [axis]: value  } = el.getProps([\n        axis\n    ], useFinalPosition);\n    return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\nclass PointElement extends Element {\n    static id = 'point';\n    /**\n   * @type {any}\n   */ static defaults = {\n        borderWidth: 1,\n        hitRadius: 1,\n        hoverBorderWidth: 1,\n        hoverRadius: 4,\n        pointStyle: 'circle',\n        radius: 3,\n        rotation: 0\n    };\n    /**\n   * @type {any}\n   */ static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.parsed = undefined;\n        this.skip = undefined;\n        this.stop = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        const options = this.options;\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange$1(this, mouseX, 'x', useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange$1(this, mouseY, 'y', useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    size(options) {\n        options = options || this.options || {};\n        let radius = options.radius || 0;\n        radius = Math.max(radius, radius && options.hoverRadius || 0);\n        const borderWidth = radius && options.borderWidth || 0;\n        return (radius + borderWidth) * 2;\n    }\n    draw(ctx, area) {\n        const options = this.options;\n        if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n            return;\n        }\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.fillStyle = options.backgroundColor;\n        drawPoint(ctx, options, this.x, this.y);\n    }\n    getRange() {\n        const options = this.options || {};\n        // @ts-expect-error Fallbacks should never be hit in practice\n        return options.radius + options.hitRadius;\n    }\n}\n\nfunction getBarBounds(bar, useFinalPosition) {\n    const { x , y , base , width , height  } =  bar.getProps([\n        'x',\n        'y',\n        'base',\n        'width',\n        'height'\n    ], useFinalPosition);\n    let left, right, top, bottom, half;\n    if (bar.horizontal) {\n        half = height / 2;\n        left = Math.min(x, base);\n        right = Math.max(x, base);\n        top = y - half;\n        bottom = y + half;\n    } else {\n        half = width / 2;\n        left = x - half;\n        right = x + half;\n        top = Math.min(y, base);\n        bottom = Math.max(y, base);\n    }\n    return {\n        left,\n        top,\n        right,\n        bottom\n    };\n}\nfunction skipOrLimit(skip, value, min, max) {\n    return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n    const value = bar.options.borderWidth;\n    const skip = bar.borderSkipped;\n    const o = toTRBL(value);\n    return {\n        t: skipOrLimit(skip.top, o.top, 0, maxH),\n        r: skipOrLimit(skip.right, o.right, 0, maxW),\n        b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n        l: skipOrLimit(skip.left, o.left, 0, maxW)\n    };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n    const { enableBorderRadius  } = bar.getProps([\n        'enableBorderRadius'\n    ]);\n    const value = bar.options.borderRadius;\n    const o = toTRBLCorners(value);\n    const maxR = Math.min(maxW, maxH);\n    const skip = bar.borderSkipped;\n    const enableBorder = enableBorderRadius || isObject(value);\n    return {\n        topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n        topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n        bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n        bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n    };\n}\nfunction boundingRects(bar) {\n    const bounds = getBarBounds(bar);\n    const width = bounds.right - bounds.left;\n    const height = bounds.bottom - bounds.top;\n    const border = parseBorderWidth(bar, width / 2, height / 2);\n    const radius = parseBorderRadius(bar, width / 2, height / 2);\n    return {\n        outer: {\n            x: bounds.left,\n            y: bounds.top,\n            w: width,\n            h: height,\n            radius\n        },\n        inner: {\n            x: bounds.left + border.l,\n            y: bounds.top + border.t,\n            w: width - border.l - border.r,\n            h: height - border.t - border.b,\n            radius: {\n                topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n                topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n                bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n                bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n            }\n        }\n    };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n    const skipX = x === null;\n    const skipY = y === null;\n    const skipBoth = skipX && skipY;\n    const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n    return bounds && (skipX || _isBetween(x, bounds.left, bounds.right)) && (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n    return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n function addNormalRectPath(ctx, rect) {\n    ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n    const x = rect.x !== refRect.x ? -amount : 0;\n    const y = rect.y !== refRect.y ? -amount : 0;\n    const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n    const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n    return {\n        x: rect.x + x,\n        y: rect.y + y,\n        w: rect.w + w,\n        h: rect.h + h,\n        radius: rect.radius\n    };\n}\nclass BarElement extends Element {\n    static id = 'bar';\n static defaults = {\n        borderSkipped: 'start',\n        borderWidth: 0,\n        borderRadius: 0,\n        inflateAmount: 'auto',\n        pointStyle: undefined\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.horizontal = undefined;\n        this.base = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.inflateAmount = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    draw(ctx) {\n        const { inflateAmount , options: { borderColor , backgroundColor  }  } = this;\n        const { inner , outer  } = boundingRects(this);\n        const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n        ctx.save();\n        if (outer.w !== inner.w || outer.h !== inner.h) {\n            ctx.beginPath();\n            addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n            ctx.clip();\n            addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n            ctx.fillStyle = borderColor;\n            ctx.fill('evenodd');\n        }\n        ctx.beginPath();\n        addRectPath(ctx, inflateRect(inner, inflateAmount));\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n        ctx.restore();\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        return inRange(this, mouseX, mouseY, useFinalPosition);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange(this, mouseX, null, useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange(this, null, mouseY, useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , base , horizontal  } =  this.getProps([\n            'x',\n            'y',\n            'base',\n            'horizontal'\n        ], useFinalPosition);\n        return {\n            x: horizontal ? (x + base) / 2 : x,\n            y: horizontal ? y : (y + base) / 2\n        };\n    }\n    getRange(axis) {\n        return axis === 'x' ? this.width / 2 : this.height / 2;\n    }\n}\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nLineElement: LineElement,\nPointElement: PointElement,\nBarElement: BarElement\n});\n\nconst BORDER_COLORS = [\n    'rgb(54, 162, 235)',\n    'rgb(255, 99, 132)',\n    'rgb(255, 159, 64)',\n    'rgb(255, 205, 86)',\n    'rgb(75, 192, 192)',\n    'rgb(153, 102, 255)',\n    'rgb(201, 203, 207)' // grey\n];\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map((color)=>color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\nfunction getBorderColor(i) {\n    return BORDER_COLORS[i % BORDER_COLORS.length];\n}\nfunction getBackgroundColor(i) {\n    return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\nfunction createDefaultDatasetColorizer() {\n    return (dataset, i)=>{\n        dataset.borderColor = getBorderColor(i);\n        dataset.backgroundColor = getBackgroundColor(i);\n    };\n}\nfunction createDoughnutDatasetColorizer() {\n    let i = 0;\n    return (dataset)=>{\n        dataset.backgroundColor = dataset.data.map(()=>getBorderColor(i++));\n    };\n}\nfunction createPolarAreaDatasetColorizer() {\n    let i = 0;\n    return (dataset)=>{\n        dataset.backgroundColor = dataset.data.map(()=>getBackgroundColor(i++));\n    };\n}\nfunction getColorizer(type) {\n    if (type === 'doughnut' || type === 'pie') {\n        return createDoughnutDatasetColorizer();\n    } else if (type === 'polarArea') {\n        return createPolarAreaDatasetColorizer();\n    }\n    return createDefaultDatasetColorizer();\n}\nfunction containsColorsDefinitions(descriptors) {\n    let k;\n    for(k in descriptors){\n        if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n            return true;\n        }\n    }\n    return false;\n}\nvar plugin_colors = {\n    id: 'colors',\n    defaults: {\n        enabled: true\n    },\n    beforeLayout (chart, _args, options) {\n        if (!options.enabled) {\n            return;\n        }\n        const { type , options: { elements  } , data: { datasets  }  } = chart.config;\n        if (containsColorsDefinitions(datasets) || elements && containsColorsDefinitions(elements)) {\n            return;\n        }\n        const colorizer = getColorizer(type);\n        datasets.forEach(colorizer);\n    }\n};\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n const samples = options.samples || availableWidth;\n    if (samples >= count) {\n        return data.slice(start, start + count);\n    }\n    const decimated = [];\n    const bucketWidth = (count - 2) / (samples - 2);\n    let sampledIndex = 0;\n    const endIndex = start + count - 1;\n    let a = start;\n    let i, maxAreaPoint, maxArea, area, nextA;\n    decimated[sampledIndex++] = data[a];\n    for(i = 0; i < samples - 2; i++){\n        let avgX = 0;\n        let avgY = 0;\n        let j;\n        const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n        const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n        const avgRangeLength = avgRangeEnd - avgRangeStart;\n        for(j = avgRangeStart; j < avgRangeEnd; j++){\n            avgX += data[j].x;\n            avgY += data[j].y;\n        }\n        avgX /= avgRangeLength;\n        avgY /= avgRangeLength;\n        const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n        const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n        const { x: pointAx , y: pointAy  } = data[a];\n        maxArea = area = -1;\n        for(j = rangeOffs; j < rangeTo; j++){\n            area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n            if (area > maxArea) {\n                maxArea = area;\n                maxAreaPoint = data[j];\n                nextA = j;\n            }\n        }\n        decimated[sampledIndex++] = maxAreaPoint;\n        a = nextA;\n    }\n    decimated[sampledIndex++] = data[endIndex];\n    return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n    let avgX = 0;\n    let countX = 0;\n    let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n    const decimated = [];\n    const endIndex = start + count - 1;\n    const xMin = data[start].x;\n    const xMax = data[endIndex].x;\n    const dx = xMax - xMin;\n    for(i = start; i < start + count; ++i){\n        point = data[i];\n        x = (point.x - xMin) / dx * availableWidth;\n        y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n                minIndex = i;\n            } else if (y > maxY) {\n                maxY = y;\n                maxIndex = i;\n            }\n            avgX = (countX * avgX + point.x) / ++countX;\n        } else {\n            const lastIndex = i - 1;\n            if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n                const intermediateIndex1 = Math.min(minIndex, maxIndex);\n                const intermediateIndex2 = Math.max(minIndex, maxIndex);\n                if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex1],\n                        x: avgX\n                    });\n                }\n                if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex2],\n                        x: avgX\n                    });\n                }\n            }\n            if (i > 0 && lastIndex !== startIndex) {\n                decimated.push(data[lastIndex]);\n            }\n            decimated.push(point);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n            minIndex = maxIndex = startIndex = i;\n        }\n    }\n    return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n    if (dataset._decimated) {\n        const data = dataset._data;\n        delete dataset._decimated;\n        delete dataset._data;\n        Object.defineProperty(dataset, 'data', {\n            value: data\n        });\n    }\n}\nfunction cleanDecimatedData(chart) {\n    chart.data.datasets.forEach((dataset)=>{\n        cleanDecimatedDataset(dataset);\n    });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n    const pointCount = points.length;\n    let start = 0;\n    let count;\n    const { iScale  } = meta;\n    const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n    if (minDefined) {\n        start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n    }\n    if (maxDefined) {\n        count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n    } else {\n        count = pointCount - start;\n    }\n    return {\n        start,\n        count\n    };\n}\nvar plugin_decimation = {\n    id: 'decimation',\n    defaults: {\n        algorithm: 'min-max',\n        enabled: false\n    },\n    beforeElementsUpdate: (chart, args, options)=>{\n        if (!options.enabled) {\n            cleanDecimatedData(chart);\n            return;\n        }\n        const availableWidth = chart.width;\n        chart.data.datasets.forEach((dataset, datasetIndex)=>{\n            const { _data , indexAxis  } = dataset;\n            const meta = chart.getDatasetMeta(datasetIndex);\n            const data = _data || dataset.data;\n            if (resolve([\n                indexAxis,\n                chart.options.indexAxis\n            ]) === 'y') {\n                return;\n            }\n            if (!meta.controller.supportsDecimation) {\n                return;\n            }\n            const xAxis = chart.scales[meta.xAxisID];\n            if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n                return;\n            }\n            if (chart.options.parsing) {\n                return;\n            }\n            let { start , count  } = getStartAndCountOfVisiblePointsSimplified(meta, data);\n            const threshold = options.threshold || 4 * availableWidth;\n            if (count <= threshold) {\n                cleanDecimatedDataset(dataset);\n                return;\n            }\n            if (isNullOrUndef(_data)) {\n                dataset._data = data;\n                delete dataset.data;\n                Object.defineProperty(dataset, 'data', {\n                    configurable: true,\n                    enumerable: true,\n                    get: function() {\n                        return this._decimated;\n                    },\n                    set: function(d) {\n                        this._data = d;\n                    }\n                });\n            }\n            let decimated;\n            switch(options.algorithm){\n                case 'lttb':\n                    decimated = lttbDecimation(data, start, count, availableWidth, options);\n                    break;\n                case 'min-max':\n                    decimated = minMaxDecimation(data, start, count, availableWidth);\n                    break;\n                default:\n                    throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n            }\n            dataset._decimated = decimated;\n        });\n    },\n    destroy (chart) {\n        cleanDecimatedData(chart);\n    }\n};\n\nfunction _segments(line, target, property) {\n    const segments = line.segments;\n    const points = line.points;\n    const tpoints = target.points;\n    const parts = [];\n    for (const segment of segments){\n        let { start , end  } = segment;\n        end = _findSegmentEnd(start, end, points);\n        const bounds = _getBounds(property, points[start], points[end], segment.loop);\n        if (!target.segments) {\n            parts.push({\n                source: segment,\n                target: bounds,\n                start: points[start],\n                end: points[end]\n            });\n            continue;\n        }\n        const targetSegments = _boundSegments(target, bounds);\n        for (const tgt of targetSegments){\n            const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n            const fillSources = _boundSegment(segment, points, subBounds);\n            for (const fillSource of fillSources){\n                parts.push({\n                    source: fillSource,\n                    target: tgt,\n                    start: {\n                        [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n                    },\n                    end: {\n                        [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n                    }\n                });\n            }\n        }\n    }\n    return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n    if (loop) {\n        return;\n    }\n    let start = first[property];\n    let end = last[property];\n    if (property === 'angle') {\n        start = _normalizeAngle(start);\n        end = _normalizeAngle(end);\n    }\n    return {\n        property,\n        start,\n        end\n    };\n}\nfunction _pointsFromSegments(boundary, line) {\n    const { x =null , y =null  } = boundary || {};\n    const linePoints = line.points;\n    const points = [];\n    line.segments.forEach(({ start , end  })=>{\n        end = _findSegmentEnd(start, end, linePoints);\n        const first = linePoints[start];\n        const last = linePoints[end];\n        if (y !== null) {\n            points.push({\n                x: first.x,\n                y\n            });\n            points.push({\n                x: last.x,\n                y\n            });\n        } else if (x !== null) {\n            points.push({\n                x,\n                y: first.y\n            });\n            points.push({\n                x,\n                y: last.y\n            });\n        }\n    });\n    return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n    for(; end > start; end--){\n        const point = points[end];\n        if (!isNaN(point.x) && !isNaN(point.y)) {\n            break;\n        }\n    }\n    return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n    if (a && b) {\n        return fn(a[prop], b[prop]);\n    }\n    return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n    let points = [];\n    let _loop = false;\n    if (isArray(boundary)) {\n        _loop = true;\n        points = boundary;\n    } else {\n        points = _pointsFromSegments(boundary, line);\n    }\n    return points.length ? new LineElement({\n        points,\n        options: {\n            tension: 0\n        },\n        _loop,\n        _fullLoop: _loop\n    }) : null;\n}\nfunction _shouldApplyFill(source) {\n    return source && source.fill !== false;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n    const source = sources[index];\n    let fill = source.fill;\n    const visited = [\n        index\n    ];\n    let target;\n    if (!propagate) {\n        return fill;\n    }\n    while(fill !== false && visited.indexOf(fill) === -1){\n        if (!isNumberFinite(fill)) {\n            return fill;\n        }\n        target = sources[fill];\n        if (!target) {\n            return false;\n        }\n        if (target.visible) {\n            return fill;\n        }\n        visited.push(fill);\n        fill = target.fill;\n    }\n    return false;\n}\n function _decodeFill(line, index, count) {\n     const fill = parseFillOption(line);\n    if (isObject(fill)) {\n        return isNaN(fill.value) ? false : fill;\n    }\n    let target = parseFloat(fill);\n    if (isNumberFinite(target) && Math.floor(target) === target) {\n        return decodeTargetIndex(fill[0], index, target, count);\n    }\n    return [\n        'origin',\n        'start',\n        'end',\n        'stack',\n        'shape'\n    ].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n    if (firstCh === '-' || firstCh === '+') {\n        target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n        return false;\n    }\n    return target;\n}\n function _getTargetPixel(fill, scale) {\n    let pixel = null;\n    if (fill === 'start') {\n        pixel = scale.bottom;\n    } else if (fill === 'end') {\n        pixel = scale.top;\n    } else if (isObject(fill)) {\n        pixel = scale.getPixelForValue(fill.value);\n    } else if (scale.getBasePixel) {\n        pixel = scale.getBasePixel();\n    }\n    return pixel;\n}\n function _getTargetValue(fill, scale, startValue) {\n    let value;\n    if (fill === 'start') {\n        value = startValue;\n    } else if (fill === 'end') {\n        value = scale.options.reverse ? scale.min : scale.max;\n    } else if (isObject(fill)) {\n        value = fill.value;\n    } else {\n        value = scale.getBaseValue();\n    }\n    return value;\n}\n function parseFillOption(line) {\n    const options = line.options;\n    const fillOption = options.fill;\n    let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n    if (fill === undefined) {\n        fill = !!options.backgroundColor;\n    }\n    if (fill === false || fill === null) {\n        return false;\n    }\n    if (fill === true) {\n        return 'origin';\n    }\n    return fill;\n}\n\nfunction _buildStackLine(source) {\n    const { scale , index , line  } = source;\n    const points = [];\n    const segments = line.segments;\n    const sourcePoints = line.points;\n    const linesBelow = getLinesBelow(scale, index);\n    linesBelow.push(_createBoundaryLine({\n        x: null,\n        y: scale.bottom\n    }, line));\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        for(let j = segment.start; j <= segment.end; j++){\n            addPointsBelow(points, sourcePoints[j], linesBelow);\n        }\n    }\n    return new LineElement({\n        points,\n        options: {}\n    });\n}\n function getLinesBelow(scale, index) {\n    const below = [];\n    const metas = scale.getMatchingVisibleMetas('line');\n    for(let i = 0; i < metas.length; i++){\n        const meta = metas[i];\n        if (meta.index === index) {\n            break;\n        }\n        if (!meta.hidden) {\n            below.unshift(meta.dataset);\n        }\n    }\n    return below;\n}\n function addPointsBelow(points, sourcePoint, linesBelow) {\n    const postponed = [];\n    for(let j = 0; j < linesBelow.length; j++){\n        const line = linesBelow[j];\n        const { first , last , point  } = findPoint(line, sourcePoint, 'x');\n        if (!point || first && last) {\n            continue;\n        }\n        if (first) {\n            postponed.unshift(point);\n        } else {\n            points.push(point);\n            if (!last) {\n                break;\n            }\n        }\n    }\n    points.push(...postponed);\n}\n function findPoint(line, sourcePoint, property) {\n    const point = line.interpolate(sourcePoint, property);\n    if (!point) {\n        return {};\n    }\n    const pointValue = point[property];\n    const segments = line.segments;\n    const linePoints = line.points;\n    let first = false;\n    let last = false;\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        const firstValue = linePoints[segment.start][property];\n        const lastValue = linePoints[segment.end][property];\n        if (_isBetween(pointValue, firstValue, lastValue)) {\n            first = pointValue === firstValue;\n            last = pointValue === lastValue;\n            break;\n        }\n    }\n    return {\n        first,\n        last,\n        point\n    };\n}\n\nclass simpleArc {\n    constructor(opts){\n        this.x = opts.x;\n        this.y = opts.y;\n        this.radius = opts.radius;\n    }\n    pathSegment(ctx, bounds, opts) {\n        const { x , y , radius  } = this;\n        bounds = bounds || {\n            start: 0,\n            end: TAU\n        };\n        ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n        return !opts.bounds;\n    }\n    interpolate(point) {\n        const { x , y , radius  } = this;\n        const angle = point.angle;\n        return {\n            x: x + Math.cos(angle) * radius,\n            y: y + Math.sin(angle) * radius,\n            angle\n        };\n    }\n}\n\nfunction _getTarget(source) {\n    const { chart , fill , line  } = source;\n    if (isNumberFinite(fill)) {\n        return getLineByIndex(chart, fill);\n    }\n    if (fill === 'stack') {\n        return _buildStackLine(source);\n    }\n    if (fill === 'shape') {\n        return true;\n    }\n    const boundary = computeBoundary(source);\n    if (boundary instanceof simpleArc) {\n        return boundary;\n    }\n    return _createBoundaryLine(boundary, line);\n}\n function getLineByIndex(chart, index) {\n    const meta = chart.getDatasetMeta(index);\n    const visible = meta && chart.isDatasetVisible(index);\n    return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n    const scale = source.scale || {};\n    if (scale.getPointPositionForValue) {\n        return computeCircularBoundary(source);\n    }\n    return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n    const { scale ={} , fill  } = source;\n    const pixel = _getTargetPixel(fill, scale);\n    if (isNumberFinite(pixel)) {\n        const horizontal = scale.isHorizontal();\n        return {\n            x: horizontal ? pixel : null,\n            y: horizontal ? null : pixel\n        };\n    }\n    return null;\n}\nfunction computeCircularBoundary(source) {\n    const { scale , fill  } = source;\n    const options = scale.options;\n    const length = scale.getLabels().length;\n    const start = options.reverse ? scale.max : scale.min;\n    const value = _getTargetValue(fill, scale, start);\n    const target = [];\n    if (options.grid.circular) {\n        const center = scale.getPointPositionForValue(0, start);\n        return new simpleArc({\n            x: center.x,\n            y: center.y,\n            radius: scale.getDistanceFromCenterForValue(value)\n        });\n    }\n    for(let i = 0; i < length; ++i){\n        target.push(scale.getPointPositionForValue(i, value));\n    }\n    return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n    const target = _getTarget(source);\n    const { line , scale , axis  } = source;\n    const lineOpts = line.options;\n    const fillOption = lineOpts.fill;\n    const color = lineOpts.backgroundColor;\n    const { above =color , below =color  } = fillOption || {};\n    if (target && line.points.length) {\n        clipArea(ctx, area);\n        doFill(ctx, {\n            line,\n            target,\n            above,\n            below,\n            area,\n            scale,\n            axis\n        });\n        unclipArea(ctx);\n    }\n}\nfunction doFill(ctx, cfg) {\n    const { line , target , above , below , area , scale  } = cfg;\n    const property = line._loop ? 'angle' : cfg.axis;\n    ctx.save();\n    if (property === 'x' && below !== above) {\n        clipVertical(ctx, target, area.top);\n        fill(ctx, {\n            line,\n            target,\n            color: above,\n            scale,\n            property\n        });\n        ctx.restore();\n        ctx.save();\n        clipVertical(ctx, target, area.bottom);\n    }\n    fill(ctx, {\n        line,\n        target,\n        color: below,\n        scale,\n        property\n    });\n    ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n    const { segments , points  } = target;\n    let first = true;\n    let lineLoop = false;\n    ctx.beginPath();\n    for (const segment of segments){\n        const { start , end  } = segment;\n        const firstPoint = points[start];\n        const lastPoint = points[_findSegmentEnd(start, end, points)];\n        if (first) {\n            ctx.moveTo(firstPoint.x, firstPoint.y);\n            first = false;\n        } else {\n            ctx.lineTo(firstPoint.x, clipY);\n            ctx.lineTo(firstPoint.x, firstPoint.y);\n        }\n        lineLoop = !!target.pathSegment(ctx, segment, {\n            move: lineLoop\n        });\n        if (lineLoop) {\n            ctx.closePath();\n        } else {\n            ctx.lineTo(lastPoint.x, clipY);\n        }\n    }\n    ctx.lineTo(target.first().x, clipY);\n    ctx.closePath();\n    ctx.clip();\n}\nfunction fill(ctx, cfg) {\n    const { line , target , property , color , scale  } = cfg;\n    const segments = _segments(line, target, property);\n    for (const { source: src , target: tgt , start , end  } of segments){\n        const { style: { backgroundColor =color  } = {}  } = src;\n        const notShape = target !== true;\n        ctx.save();\n        ctx.fillStyle = backgroundColor;\n        clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n        ctx.beginPath();\n        const lineLoop = !!line.pathSegment(ctx, src);\n        let loop;\n        if (notShape) {\n            if (lineLoop) {\n                ctx.closePath();\n            } else {\n                interpolatedLineTo(ctx, target, end, property);\n            }\n            const targetLoop = !!target.pathSegment(ctx, tgt, {\n                move: lineLoop,\n                reverse: true\n            });\n            loop = lineLoop && targetLoop;\n            if (!loop) {\n                interpolatedLineTo(ctx, target, start, property);\n            }\n        }\n        ctx.closePath();\n        ctx.fill(loop ? 'evenodd' : 'nonzero');\n        ctx.restore();\n    }\n}\nfunction clipBounds(ctx, scale, bounds) {\n    const { top , bottom  } = scale.chart.chartArea;\n    const { property , start , end  } = bounds || {};\n    if (property === 'x') {\n        ctx.beginPath();\n        ctx.rect(start, top, end - start, bottom - top);\n        ctx.clip();\n    }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n    const interpolatedPoint = target.interpolate(point, property);\n    if (interpolatedPoint) {\n        ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n    }\n}\n\nvar index = {\n    id: 'filler',\n    afterDatasetsUpdate (chart, _args, options) {\n        const count = (chart.data.datasets || []).length;\n        const sources = [];\n        let meta, i, line, source;\n        for(i = 0; i < count; ++i){\n            meta = chart.getDatasetMeta(i);\n            line = meta.dataset;\n            source = null;\n            if (line && line.options && line instanceof LineElement) {\n                source = {\n                    visible: chart.isDatasetVisible(i),\n                    index: i,\n                    fill: _decodeFill(line, i, count),\n                    chart,\n                    axis: meta.controller.options.indexAxis,\n                    scale: meta.vScale,\n                    line\n                };\n            }\n            meta.$filler = source;\n            sources.push(source);\n        }\n        for(i = 0; i < count; ++i){\n            source = sources[i];\n            if (!source || source.fill === false) {\n                continue;\n            }\n            source.fill = _resolveTarget(sources, i, options.propagate);\n        }\n    },\n    beforeDraw (chart, _args, options) {\n        const draw = options.drawTime === 'beforeDraw';\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        const area = chart.chartArea;\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (!source) {\n                continue;\n            }\n            source.line.updateControlPoints(area, source.axis);\n            if (draw && source.fill) {\n                _drawfill(chart.ctx, source, area);\n            }\n        }\n    },\n    beforeDatasetsDraw (chart, _args, options) {\n        if (options.drawTime !== 'beforeDatasetsDraw') {\n            return;\n        }\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (_shouldApplyFill(source)) {\n                _drawfill(chart.ctx, source, chart.chartArea);\n            }\n        }\n    },\n    beforeDatasetDraw (chart, args, options) {\n        const source = args.meta.$filler;\n        if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n            return;\n        }\n        _drawfill(chart.ctx, source, chart.chartArea);\n    },\n    defaults: {\n        propagate: true,\n        drawTime: 'beforeDatasetDraw'\n    }\n};\n\nconst getBoxSize = (labelOpts, fontSize)=>{\n    let { boxHeight =fontSize , boxWidth =fontSize  } = labelOpts;\n    if (labelOpts.usePointStyle) {\n        boxHeight = Math.min(boxHeight, fontSize);\n        boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n    }\n    return {\n        boxWidth,\n        boxHeight,\n        itemHeight: Math.max(fontSize, boxHeight)\n    };\n};\nconst itemsEqual = (a, b)=>a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n constructor(config){\n        super();\n        this._added = false;\n        this.legendHitBoxes = [];\n this._hoveredItem = null;\n        this.doughnutMode = false;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this.legendItems = undefined;\n        this.columnSizes = undefined;\n        this.lineWidths = undefined;\n        this.maxHeight = undefined;\n        this.maxWidth = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this._margins = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight, margins) {\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins;\n        this.setDimensions();\n        this.buildLabels();\n        this.fit();\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = this._margins.left;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = this._margins.top;\n            this.bottom = this.height;\n        }\n    }\n    buildLabels() {\n        const labelOpts = this.options.labels || {};\n        let legendItems = callback(labelOpts.generateLabels, [\n            this.chart\n        ], this) || [];\n        if (labelOpts.filter) {\n            legendItems = legendItems.filter((item)=>labelOpts.filter(item, this.chart.data));\n        }\n        if (labelOpts.sort) {\n            legendItems = legendItems.sort((a, b)=>labelOpts.sort(a, b, this.chart.data));\n        }\n        if (this.options.reverse) {\n            legendItems.reverse();\n        }\n        this.legendItems = legendItems;\n    }\n    fit() {\n        const { options , ctx  } = this;\n        if (!options.display) {\n            this.width = this.height = 0;\n            return;\n        }\n        const labelOpts = options.labels;\n        const labelFont = toFont(labelOpts.font);\n        const fontSize = labelFont.size;\n        const titleHeight = this._computeTitleHeight();\n        const { boxWidth , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        let width, height;\n        ctx.font = labelFont.string;\n        if (this.isHorizontal()) {\n            width = this.maxWidth;\n            height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n        } else {\n            height = this.maxHeight;\n            width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n        }\n        this.width = Math.min(width, options.maxWidth || this.maxWidth);\n        this.height = Math.min(height, options.maxHeight || this.maxHeight);\n    }\n _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n        const { ctx , maxWidth , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const lineWidths = this.lineWidths = [\n            0\n        ];\n        const lineHeight = itemHeight + padding;\n        let totalHeight = titleHeight;\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        let row = -1;\n        let top = -lineHeight;\n        this.legendItems.forEach((legendItem, i)=>{\n            const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n            if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n                totalHeight += lineHeight;\n                lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n                top += lineHeight;\n                row++;\n            }\n            hitboxes[i] = {\n                left: 0,\n                top,\n                row,\n                width: itemWidth,\n                height: itemHeight\n            };\n            lineWidths[lineWidths.length - 1] += itemWidth + padding;\n        });\n        return totalHeight;\n    }\n    _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n        const { ctx , maxHeight , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const columnSizes = this.columnSizes = [];\n        const heightLimit = maxHeight - titleHeight;\n        let totalWidth = padding;\n        let currentColWidth = 0;\n        let currentColHeight = 0;\n        let left = 0;\n        let col = 0;\n        this.legendItems.forEach((legendItem, i)=>{\n            const { itemWidth , itemHeight  } = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n            if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n                totalWidth += currentColWidth + padding;\n                columnSizes.push({\n                    width: currentColWidth,\n                    height: currentColHeight\n                });\n                left += currentColWidth + padding;\n                col++;\n                currentColWidth = currentColHeight = 0;\n            }\n            hitboxes[i] = {\n                left,\n                top: currentColHeight,\n                col,\n                width: itemWidth,\n                height: itemHeight\n            };\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight + padding;\n        });\n        totalWidth += currentColWidth;\n        columnSizes.push({\n            width: currentColWidth,\n            height: currentColHeight\n        });\n        return totalWidth;\n    }\n    adjustHitBoxes() {\n        if (!this.options.display) {\n            return;\n        }\n        const titleHeight = this._computeTitleHeight();\n        const { legendHitBoxes: hitboxes , options: { align , labels: { padding  } , rtl  }  } = this;\n        const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n        if (this.isHorizontal()) {\n            let row = 0;\n            let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n            for (const hitbox of hitboxes){\n                if (row !== hitbox.row) {\n                    row = hitbox.row;\n                    left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n                }\n                hitbox.top += this.top + titleHeight + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n                left += hitbox.width + padding;\n            }\n        } else {\n            let col = 0;\n            let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n            for (const hitbox1 of hitboxes){\n                if (hitbox1.col !== col) {\n                    col = hitbox1.col;\n                    top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n                }\n                hitbox1.top = top;\n                hitbox1.left += this.left + padding;\n                hitbox1.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox1.left), hitbox1.width);\n                top += hitbox1.height + padding;\n            }\n        }\n    }\n    isHorizontal() {\n        return this.options.position === 'top' || this.options.position === 'bottom';\n    }\n    draw() {\n        if (this.options.display) {\n            const ctx = this.ctx;\n            clipArea(ctx, this);\n            this._draw();\n            unclipArea(ctx);\n        }\n    }\n _draw() {\n        const { options: opts , columnSizes , lineWidths , ctx  } = this;\n        const { align , labels: labelOpts  } = opts;\n        const defaultColor = defaults.color;\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const labelFont = toFont(labelOpts.font);\n        const { padding  } = labelOpts;\n        const fontSize = labelFont.size;\n        const halfFontSize = fontSize / 2;\n        let cursor;\n        this.drawTitle();\n        ctx.textAlign = rtlHelper.textAlign('left');\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.font = labelFont.string;\n        const { boxWidth , boxHeight , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        const drawLegendBox = function(x, y, legendItem) {\n            if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n                return;\n            }\n            ctx.save();\n            const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n            ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n            ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n            ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n            ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n            ctx.lineWidth = lineWidth;\n            ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n            ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n            if (labelOpts.usePointStyle) {\n                const drawOptions = {\n                    radius: boxHeight * Math.SQRT2 / 2,\n                    pointStyle: legendItem.pointStyle,\n                    rotation: legendItem.rotation,\n                    borderWidth: lineWidth\n                };\n                const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n                const centerY = y + halfFontSize;\n                drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n            } else {\n                const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n                const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n                const borderRadius = toTRBLCorners(legendItem.borderRadius);\n                ctx.beginPath();\n                if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                    addRoundedRectPath(ctx, {\n                        x: xBoxLeft,\n                        y: yBoxTop,\n                        w: boxWidth,\n                        h: boxHeight,\n                        radius: borderRadius\n                    });\n                } else {\n                    ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n                }\n                ctx.fill();\n                if (lineWidth !== 0) {\n                    ctx.stroke();\n                }\n            }\n            ctx.restore();\n        };\n        const fillText = function(x, y, legendItem) {\n            renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n                strikethrough: legendItem.hidden,\n                textAlign: rtlHelper.textAlign(legendItem.textAlign)\n            });\n        };\n        const isHorizontal = this.isHorizontal();\n        const titleHeight = this._computeTitleHeight();\n        if (isHorizontal) {\n            cursor = {\n                x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n                y: this.top + padding + titleHeight,\n                line: 0\n            };\n        } else {\n            cursor = {\n                x: this.left + padding,\n                y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n                line: 0\n            };\n        }\n        overrideTextDirection(this.ctx, opts.textDirection);\n        const lineHeight = itemHeight + padding;\n        this.legendItems.forEach((legendItem, i)=>{\n            ctx.strokeStyle = legendItem.fontColor;\n            ctx.fillStyle = legendItem.fontColor;\n            const textWidth = ctx.measureText(legendItem.text).width;\n            const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n            const width = boxWidth + halfFontSize + textWidth;\n            let x = cursor.x;\n            let y = cursor.y;\n            rtlHelper.setWidth(this.width);\n            if (isHorizontal) {\n                if (i > 0 && x + width + padding > this.right) {\n                    y = cursor.y += lineHeight;\n                    cursor.line++;\n                    x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n                }\n            } else if (i > 0 && y + lineHeight > this.bottom) {\n                x = cursor.x = x + columnSizes[cursor.line].width + padding;\n                cursor.line++;\n                y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n            }\n            const realX = rtlHelper.x(x);\n            drawLegendBox(realX, y, legendItem);\n            x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n            fillText(rtlHelper.x(x), y, legendItem);\n            if (isHorizontal) {\n                cursor.x += width + padding;\n            } else if (typeof legendItem.text !== 'string') {\n                const fontLineHeight = labelFont.lineHeight;\n                cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight);\n            } else {\n                cursor.y += lineHeight;\n            }\n        });\n        restoreTextDirection(this.ctx, opts.textDirection);\n    }\n drawTitle() {\n        const opts = this.options;\n        const titleOpts = opts.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        if (!titleOpts.display) {\n            return;\n        }\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const ctx = this.ctx;\n        const position = titleOpts.position;\n        const halfFontSize = titleFont.size / 2;\n        const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n        let y;\n        let left = this.left;\n        let maxWidth = this.width;\n        if (this.isHorizontal()) {\n            maxWidth = Math.max(...this.lineWidths);\n            y = this.top + topPaddingPlusHalfFontSize;\n            left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n        } else {\n            const maxHeight = this.columnSizes.reduce((acc, size)=>Math.max(acc, size.height), 0);\n            y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n        }\n        const x = _alignStartEnd(position, left, left + maxWidth);\n        ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n        ctx.textBaseline = 'middle';\n        ctx.strokeStyle = titleOpts.color;\n        ctx.fillStyle = titleOpts.color;\n        ctx.font = titleFont.string;\n        renderText(ctx, titleOpts.text, x, y, titleFont);\n    }\n _computeTitleHeight() {\n        const titleOpts = this.options.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n    }\n _getLegendItemAt(x, y) {\n        let i, hitBox, lh;\n        if (_isBetween(x, this.left, this.right) && _isBetween(y, this.top, this.bottom)) {\n            lh = this.legendHitBoxes;\n            for(i = 0; i < lh.length; ++i){\n                hitBox = lh[i];\n                if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width) && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n                    return this.legendItems[i];\n                }\n            }\n        }\n        return null;\n    }\n handleEvent(e) {\n        const opts = this.options;\n        if (!isListened(e.type, opts)) {\n            return;\n        }\n        const hoveredItem = this._getLegendItemAt(e.x, e.y);\n        if (e.type === 'mousemove' || e.type === 'mouseout') {\n            const previous = this._hoveredItem;\n            const sameItem = itemsEqual(previous, hoveredItem);\n            if (previous && !sameItem) {\n                callback(opts.onLeave, [\n                    e,\n                    previous,\n                    this\n                ], this);\n            }\n            this._hoveredItem = hoveredItem;\n            if (hoveredItem && !sameItem) {\n                callback(opts.onHover, [\n                    e,\n                    hoveredItem,\n                    this\n                ], this);\n            }\n        } else if (hoveredItem) {\n            callback(opts.onClick, [\n                e,\n                hoveredItem,\n                this\n            ], this);\n        }\n    }\n}\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n    const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n    const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n    return {\n        itemWidth,\n        itemHeight\n    };\n}\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n    let legendItemText = legendItem.text;\n    if (legendItemText && typeof legendItemText !== 'string') {\n        legendItemText = legendItemText.reduce((a, b)=>a.length > b.length ? a : b);\n    }\n    return boxWidth + labelFont.size / 2 + ctx.measureText(legendItemText).width;\n}\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n    let itemHeight = _itemHeight;\n    if (typeof legendItem.text !== 'string') {\n        itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n    }\n    return itemHeight;\n}\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n    const labelHeight = legendItem.text ? legendItem.text.length + 0.5 : 0;\n    return fontLineHeight * labelHeight;\n}\nfunction isListened(type, opts) {\n    if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n        return true;\n    }\n    if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n        return true;\n    }\n    return false;\n}\nvar plugin_legend = {\n    id: 'legend',\n _element: Legend,\n    start (chart, _args, options) {\n        const legend = chart.legend = new Legend({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, legend, options);\n        layouts.addBox(chart, legend);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, chart.legend);\n        delete chart.legend;\n    },\n    beforeUpdate (chart, _args, options) {\n        const legend = chart.legend;\n        layouts.configure(chart, legend, options);\n        legend.options = options;\n    },\n    afterUpdate (chart) {\n        const legend = chart.legend;\n        legend.buildLabels();\n        legend.adjustHitBoxes();\n    },\n    afterEvent (chart, args) {\n        if (!args.replay) {\n            chart.legend.handleEvent(args.event);\n        }\n    },\n    defaults: {\n        display: true,\n        position: 'top',\n        align: 'center',\n        fullSize: true,\n        reverse: false,\n        weight: 1000,\n        onClick (e, legendItem, legend) {\n            const index = legendItem.datasetIndex;\n            const ci = legend.chart;\n            if (ci.isDatasetVisible(index)) {\n                ci.hide(index);\n                legendItem.hidden = true;\n            } else {\n                ci.show(index);\n                legendItem.hidden = false;\n            }\n        },\n        onHover: null,\n        onLeave: null,\n        labels: {\n            color: (ctx)=>ctx.chart.options.color,\n            boxWidth: 40,\n            padding: 10,\n            generateLabels (chart) {\n                const datasets = chart.data.datasets;\n                const { labels: { usePointStyle , pointStyle , textAlign , color , useBorderRadius , borderRadius  }  } = chart.legend.options;\n                return chart._getSortedDatasetMetas().map((meta)=>{\n                    const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n                    const borderWidth = toPadding(style.borderWidth);\n                    return {\n                        text: datasets[meta.index].label,\n                        fillStyle: style.backgroundColor,\n                        fontColor: color,\n                        hidden: !meta.visible,\n                        lineCap: style.borderCapStyle,\n                        lineDash: style.borderDash,\n                        lineDashOffset: style.borderDashOffset,\n                        lineJoin: style.borderJoinStyle,\n                        lineWidth: (borderWidth.width + borderWidth.height) / 4,\n                        strokeStyle: style.borderColor,\n                        pointStyle: pointStyle || style.pointStyle,\n                        rotation: style.rotation,\n                        textAlign: textAlign || style.textAlign,\n                        borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n                        datasetIndex: meta.index\n                    };\n                }, this);\n            }\n        },\n        title: {\n            color: (ctx)=>ctx.chart.options.color,\n            display: false,\n            position: 'center',\n            text: ''\n        }\n    },\n    descriptors: {\n        _scriptable: (name)=>!name.startsWith('on'),\n        labels: {\n            _scriptable: (name)=>![\n                    'generateLabels',\n                    'filter',\n                    'sort'\n                ].includes(name)\n        }\n    }\n};\n\nclass Title extends Element {\n constructor(config){\n        super();\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this._padding = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight) {\n        const opts = this.options;\n        this.left = 0;\n        this.top = 0;\n        if (!opts.display) {\n            this.width = this.height = this.right = this.bottom = 0;\n            return;\n        }\n        this.width = this.right = maxWidth;\n        this.height = this.bottom = maxHeight;\n        const lineCount = isArray(opts.text) ? opts.text.length : 1;\n        this._padding = toPadding(opts.padding);\n        const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n        if (this.isHorizontal()) {\n            this.height = textSize;\n        } else {\n            this.width = textSize;\n        }\n    }\n    isHorizontal() {\n        const pos = this.options.position;\n        return pos === 'top' || pos === 'bottom';\n    }\n    _drawArgs(offset) {\n        const { top , left , bottom , right , options  } = this;\n        const align = options.align;\n        let rotation = 0;\n        let maxWidth, titleX, titleY;\n        if (this.isHorizontal()) {\n            titleX = _alignStartEnd(align, left, right);\n            titleY = top + offset;\n            maxWidth = right - left;\n        } else {\n            if (options.position === 'left') {\n                titleX = left + offset;\n                titleY = _alignStartEnd(align, bottom, top);\n                rotation = PI * -0.5;\n            } else {\n                titleX = right - offset;\n                titleY = _alignStartEnd(align, top, bottom);\n                rotation = PI * 0.5;\n            }\n            maxWidth = bottom - top;\n        }\n        return {\n            titleX,\n            titleY,\n            maxWidth,\n            rotation\n        };\n    }\n    draw() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        if (!opts.display) {\n            return;\n        }\n        const fontOpts = toFont(opts.font);\n        const lineHeight = fontOpts.lineHeight;\n        const offset = lineHeight / 2 + this._padding.top;\n        const { titleX , titleY , maxWidth , rotation  } = this._drawArgs(offset);\n        renderText(ctx, opts.text, 0, 0, fontOpts, {\n            color: opts.color,\n            maxWidth,\n            rotation,\n            textAlign: _toLeftRightCenter(opts.align),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n}\nfunction createTitle(chart, titleOpts) {\n    const title = new Title({\n        ctx: chart.ctx,\n        options: titleOpts,\n        chart\n    });\n    layouts.configure(chart, title, titleOpts);\n    layouts.addBox(chart, title);\n    chart.titleBlock = title;\n}\nvar plugin_title = {\n    id: 'title',\n _element: Title,\n    start (chart, _args, options) {\n        createTitle(chart, options);\n    },\n    stop (chart) {\n        const titleBlock = chart.titleBlock;\n        layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = chart.titleBlock;\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'bold'\n        },\n        fullSize: true,\n        padding: 10,\n        position: 'top',\n        text: '',\n        weight: 2000\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n    id: 'subtitle',\n    start (chart, _args, options) {\n        const title = new Title({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, title, options);\n        layouts.addBox(chart, title);\n        map.set(chart, title);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, map.get(chart));\n        map.delete(chart);\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = map.get(chart);\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'normal'\n        },\n        fullSize: true,\n        padding: 0,\n        position: 'top',\n        text: '',\n        weight: 1500\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst positioners = {\n average (items) {\n        if (!items.length) {\n            return false;\n        }\n        let i, len;\n        let x = 0;\n        let y = 0;\n        let count = 0;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const pos = el.tooltipPosition();\n                x += pos.x;\n                y += pos.y;\n                ++count;\n            }\n        }\n        return {\n            x: x / count,\n            y: y / count\n        };\n    },\n nearest (items, eventPosition) {\n        if (!items.length) {\n            return false;\n        }\n        let x = eventPosition.x;\n        let y = eventPosition.y;\n        let minDistance = Number.POSITIVE_INFINITY;\n        let i, len, nearestElement;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const center = el.getCenterPoint();\n                const d = distanceBetweenPoints(eventPosition, center);\n                if (d < minDistance) {\n                    minDistance = d;\n                    nearestElement = el;\n                }\n            }\n        }\n        if (nearestElement) {\n            const tp = nearestElement.tooltipPosition();\n            x = tp.x;\n            y = tp.y;\n        }\n        return {\n            x,\n            y\n        };\n    }\n};\nfunction pushOrConcat(base, toPush) {\n    if (toPush) {\n        if (isArray(toPush)) {\n            Array.prototype.push.apply(base, toPush);\n        } else {\n            base.push(toPush);\n        }\n    }\n    return base;\n}\n function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n        return str.split('\\n');\n    }\n    return str;\n}\n function createTooltipItem(chart, item) {\n    const { element , datasetIndex , index  } = item;\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n    const { label , value  } = controller.getLabelAndValue(index);\n    return {\n        chart,\n        label,\n        parsed: controller.getParsed(index),\n        raw: chart.data.datasets[datasetIndex].data[index],\n        formattedValue: value,\n        dataset: controller.getDataset(),\n        dataIndex: index,\n        datasetIndex,\n        element\n    };\n}\n function getTooltipSize(tooltip, options) {\n    const ctx = tooltip.chart.ctx;\n    const { body , footer , title  } = tooltip;\n    const { boxWidth , boxHeight  } = options;\n    const bodyFont = toFont(options.bodyFont);\n    const titleFont = toFont(options.titleFont);\n    const footerFont = toFont(options.footerFont);\n    const titleLineCount = title.length;\n    const footerLineCount = footer.length;\n    const bodyLineItemCount = body.length;\n    const padding = toPadding(options.padding);\n    let height = padding.height;\n    let width = 0;\n    let combinedBodyLength = body.reduce((count, bodyItem)=>count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n    combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n    if (titleLineCount) {\n        height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n    }\n    if (combinedBodyLength) {\n        const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n        height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n    }\n    if (footerLineCount) {\n        height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n    }\n    let widthPadding = 0;\n    const maxLineWidth = function(line) {\n        width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n    ctx.save();\n    ctx.font = titleFont.string;\n    each(tooltip.title, maxLineWidth);\n    ctx.font = bodyFont.string;\n    each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n    widthPadding = options.displayColors ? boxWidth + 2 + options.boxPadding : 0;\n    each(body, (bodyItem)=>{\n        each(bodyItem.before, maxLineWidth);\n        each(bodyItem.lines, maxLineWidth);\n        each(bodyItem.after, maxLineWidth);\n    });\n    widthPadding = 0;\n    ctx.font = footerFont.string;\n    each(tooltip.footer, maxLineWidth);\n    ctx.restore();\n    width += padding.width;\n    return {\n        width,\n        height\n    };\n}\nfunction determineYAlign(chart, size) {\n    const { y , height  } = size;\n    if (y < height / 2) {\n        return 'top';\n    } else if (y > chart.height - height / 2) {\n        return 'bottom';\n    }\n    return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n    const { x , width  } = size;\n    const caret = options.caretSize + options.caretPadding;\n    if (xAlign === 'left' && x + width + caret > chart.width) {\n        return true;\n    }\n    if (xAlign === 'right' && x - width - caret < 0) {\n        return true;\n    }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n    const { x , width  } = size;\n    const { width: chartWidth , chartArea: { left , right  }  } = chart;\n    let xAlign = 'center';\n    if (yAlign === 'center') {\n        xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n    } else if (x <= width / 2) {\n        xAlign = 'left';\n    } else if (x >= chartWidth - width / 2) {\n        xAlign = 'right';\n    }\n    if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n        xAlign = 'center';\n    }\n    return xAlign;\n}\n function determineAlignment(chart, options, size) {\n    const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n    return {\n        xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n        yAlign\n    };\n}\nfunction alignX(size, xAlign) {\n    let { x , width  } = size;\n    if (xAlign === 'right') {\n        x -= width;\n    } else if (xAlign === 'center') {\n        x -= width / 2;\n    }\n    return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n    let { y , height  } = size;\n    if (yAlign === 'top') {\n        y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n        y -= height + paddingAndSize;\n    } else {\n        y -= height / 2;\n    }\n    return y;\n}\n function getBackgroundPoint(options, size, alignment, chart) {\n    const { caretSize , caretPadding , cornerRadius  } = options;\n    const { xAlign , yAlign  } = alignment;\n    const paddingAndSize = caretSize + caretPadding;\n    const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n    let x = alignX(size, xAlign);\n    const y = alignY(size, yAlign, paddingAndSize);\n    if (yAlign === 'center') {\n        if (xAlign === 'left') {\n            x += paddingAndSize;\n        } else if (xAlign === 'right') {\n            x -= paddingAndSize;\n        }\n    } else if (xAlign === 'left') {\n        x -= Math.max(topLeft, bottomLeft) + caretSize;\n    } else if (xAlign === 'right') {\n        x += Math.max(topRight, bottomRight) + caretSize;\n    }\n    return {\n        x: _limitValue(x, 0, chart.width - size.width),\n        y: _limitValue(y, 0, chart.height - size.height)\n    };\n}\nfunction getAlignedX(tooltip, align, options) {\n    const padding = toPadding(options.padding);\n    return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\n function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n    return createContext(parent, {\n        tooltip,\n        tooltipItems,\n        type: 'tooltip'\n    });\n}\nfunction overrideCallbacks(callbacks, context) {\n    const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n    return override ? callbacks.override(override) : callbacks;\n}\nconst defaultCallbacks = {\n    beforeTitle: noop,\n    title (tooltipItems) {\n        if (tooltipItems.length > 0) {\n            const item = tooltipItems[0];\n            const labels = item.chart.data.labels;\n            const labelCount = labels ? labels.length : 0;\n            if (this && this.options && this.options.mode === 'dataset') {\n                return item.dataset.label || '';\n            } else if (item.label) {\n                return item.label;\n            } else if (labelCount > 0 && item.dataIndex < labelCount) {\n                return labels[item.dataIndex];\n            }\n        }\n        return '';\n    },\n    afterTitle: noop,\n    beforeBody: noop,\n    beforeLabel: noop,\n    label (tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n            return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n            label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n            label += value;\n        }\n        return label;\n    },\n    labelColor (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            borderColor: options.borderColor,\n            backgroundColor: options.backgroundColor,\n            borderWidth: options.borderWidth,\n            borderDash: options.borderDash,\n            borderDashOffset: options.borderDashOffset,\n            borderRadius: 0\n        };\n    },\n    labelTextColor () {\n        return this.options.bodyColor;\n    },\n    labelPointStyle (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            pointStyle: options.pointStyle,\n            rotation: options.rotation\n        };\n    },\n    afterLabel: noop,\n    afterBody: noop,\n    beforeFooter: noop,\n    footer: noop,\n    afterFooter: noop\n};\n function invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n    const result = callbacks[name].call(ctx, arg);\n    if (typeof result === 'undefined') {\n        return defaultCallbacks[name].call(ctx, arg);\n    }\n    return result;\n}\nclass Tooltip extends Element {\n static positioners = positioners;\n    constructor(config){\n        super();\n        this.opacity = 0;\n        this._active = [];\n        this._eventPosition = undefined;\n        this._size = undefined;\n        this._cachedAnimations = undefined;\n        this._tooltipItems = [];\n        this.$animations = undefined;\n        this.$context = undefined;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.dataPoints = undefined;\n        this.title = undefined;\n        this.beforeBody = undefined;\n        this.body = undefined;\n        this.afterBody = undefined;\n        this.footer = undefined;\n        this.xAlign = undefined;\n        this.yAlign = undefined;\n        this.x = undefined;\n        this.y = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this.caretX = undefined;\n        this.caretY = undefined;\n        this.labelColors = undefined;\n        this.labelPointStyles = undefined;\n        this.labelTextColors = undefined;\n    }\n    initialize(options) {\n        this.options = options;\n        this._cachedAnimations = undefined;\n        this.$context = undefined;\n    }\n _resolveAnimations() {\n        const cached = this._cachedAnimations;\n        if (cached) {\n            return cached;\n        }\n        const chart = this.chart;\n        const options = this.options.setContext(this.getContext());\n        const opts = options.enabled && chart.options.animation && options.animations;\n        const animations = new Animations(this.chart, opts);\n        if (opts._cacheable) {\n            this._cachedAnimations = Object.freeze(animations);\n        }\n        return animations;\n    }\n getContext() {\n        return this.$context || (this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n    }\n    getTitle(context, options) {\n        const { callbacks  } = options;\n        const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n        const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n        const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n        lines = pushOrConcat(lines, splitNewlines(title));\n        lines = pushOrConcat(lines, splitNewlines(afterTitle));\n        return lines;\n    }\n    getBeforeBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems));\n    }\n    getBody(tooltipItems, options) {\n        const { callbacks  } = options;\n        const bodyItems = [];\n        each(tooltipItems, (context)=>{\n            const bodyItem = {\n                before: [],\n                lines: [],\n                after: []\n            };\n            const scoped = overrideCallbacks(callbacks, context);\n            pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n            pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n            pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n            bodyItems.push(bodyItem);\n        });\n        return bodyItems;\n    }\n    getAfterBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems));\n    }\n    getFooter(tooltipItems, options) {\n        const { callbacks  } = options;\n        const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n        const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n        const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n        lines = pushOrConcat(lines, splitNewlines(footer));\n        lines = pushOrConcat(lines, splitNewlines(afterFooter));\n        return lines;\n    }\n _createItems(options) {\n        const active = this._active;\n        const data = this.chart.data;\n        const labelColors = [];\n        const labelPointStyles = [];\n        const labelTextColors = [];\n        let tooltipItems = [];\n        let i, len;\n        for(i = 0, len = active.length; i < len; ++i){\n            tooltipItems.push(createTooltipItem(this.chart, active[i]));\n        }\n        if (options.filter) {\n            tooltipItems = tooltipItems.filter((element, index, array)=>options.filter(element, index, array, data));\n        }\n        if (options.itemSort) {\n            tooltipItems = tooltipItems.sort((a, b)=>options.itemSort(a, b, data));\n        }\n        each(tooltipItems, (context)=>{\n            const scoped = overrideCallbacks(options.callbacks, context);\n            labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n            labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n            labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n        });\n        this.labelColors = labelColors;\n        this.labelPointStyles = labelPointStyles;\n        this.labelTextColors = labelTextColors;\n        this.dataPoints = tooltipItems;\n        return tooltipItems;\n    }\n    update(changed, replay) {\n        const options = this.options.setContext(this.getContext());\n        const active = this._active;\n        let properties;\n        let tooltipItems = [];\n        if (!active.length) {\n            if (this.opacity !== 0) {\n                properties = {\n                    opacity: 0\n                };\n            }\n        } else {\n            const position = positioners[options.position].call(this, active, this._eventPosition);\n            tooltipItems = this._createItems(options);\n            this.title = this.getTitle(tooltipItems, options);\n            this.beforeBody = this.getBeforeBody(tooltipItems, options);\n            this.body = this.getBody(tooltipItems, options);\n            this.afterBody = this.getAfterBody(tooltipItems, options);\n            this.footer = this.getFooter(tooltipItems, options);\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, size);\n            const alignment = determineAlignment(this.chart, options, positionAndSize);\n            const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n            this.xAlign = alignment.xAlign;\n            this.yAlign = alignment.yAlign;\n            properties = {\n                opacity: 1,\n                x: backgroundPoint.x,\n                y: backgroundPoint.y,\n                width: size.width,\n                height: size.height,\n                caretX: position.x,\n                caretY: position.y\n            };\n        }\n        this._tooltipItems = tooltipItems;\n        this.$context = undefined;\n        if (properties) {\n            this._resolveAnimations().update(this, properties);\n        }\n        if (changed && options.external) {\n            options.external.call(this, {\n                chart: this.chart,\n                tooltip: this,\n                replay\n            });\n        }\n    }\n    drawCaret(tooltipPoint, ctx, size, options) {\n        const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n        ctx.lineTo(caretPosition.x1, caretPosition.y1);\n        ctx.lineTo(caretPosition.x2, caretPosition.y2);\n        ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    }\n    getCaretPosition(tooltipPoint, size, options) {\n        const { xAlign , yAlign  } = this;\n        const { caretSize , cornerRadius  } = options;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n        const { x: ptX , y: ptY  } = tooltipPoint;\n        const { width , height  } = size;\n        let x1, x2, x3, y1, y2, y3;\n        if (yAlign === 'center') {\n            y2 = ptY + height / 2;\n            if (xAlign === 'left') {\n                x1 = ptX;\n                x2 = x1 - caretSize;\n                y1 = y2 + caretSize;\n                y3 = y2 - caretSize;\n            } else {\n                x1 = ptX + width;\n                x2 = x1 + caretSize;\n                y1 = y2 - caretSize;\n                y3 = y2 + caretSize;\n            }\n            x3 = x1;\n        } else {\n            if (xAlign === 'left') {\n                x2 = ptX + Math.max(topLeft, bottomLeft) + caretSize;\n            } else if (xAlign === 'right') {\n                x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n            } else {\n                x2 = this.caretX;\n            }\n            if (yAlign === 'top') {\n                y1 = ptY;\n                y2 = y1 - caretSize;\n                x1 = x2 - caretSize;\n                x3 = x2 + caretSize;\n            } else {\n                y1 = ptY + height;\n                y2 = y1 + caretSize;\n                x1 = x2 + caretSize;\n                x3 = x2 - caretSize;\n            }\n            y3 = y1;\n        }\n        return {\n            x1,\n            x2,\n            x3,\n            y1,\n            y2,\n            y3\n        };\n    }\n    drawTitle(pt, ctx, options) {\n        const title = this.title;\n        const length = title.length;\n        let titleFont, titleSpacing, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.titleAlign, options);\n            ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n            ctx.textBaseline = 'middle';\n            titleFont = toFont(options.titleFont);\n            titleSpacing = options.titleSpacing;\n            ctx.fillStyle = options.titleColor;\n            ctx.font = titleFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n                pt.y += titleFont.lineHeight + titleSpacing;\n                if (i + 1 === length) {\n                    pt.y += options.titleMarginBottom - titleSpacing;\n                }\n            }\n        }\n    }\n _drawColorBox(ctx, pt, i, rtlHelper, options) {\n        const labelColors = this.labelColors[i];\n        const labelPointStyle = this.labelPointStyles[i];\n        const { boxHeight , boxWidth , boxPadding  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        const colorX = getAlignedX(this, 'left', options);\n        const rtlColorX = rtlHelper.x(colorX);\n        const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n        const colorY = pt.y + yOffSet;\n        if (options.usePointStyle) {\n            const drawOptions = {\n                radius: Math.min(boxWidth, boxHeight) / 2,\n                pointStyle: labelPointStyle.pointStyle,\n                rotation: labelPointStyle.rotation,\n                borderWidth: 1\n            };\n            const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n            const centerY = colorY + boxHeight / 2;\n            ctx.strokeStyle = options.multiKeyBackground;\n            ctx.fillStyle = options.multiKeyBackground;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n            ctx.strokeStyle = labelColors.borderColor;\n            ctx.fillStyle = labelColors.backgroundColor;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n        } else {\n            ctx.lineWidth = isObject(labelColors.borderWidth) ? Math.max(...Object.values(labelColors.borderWidth)) : labelColors.borderWidth || 1;\n            ctx.strokeStyle = labelColors.borderColor;\n            ctx.setLineDash(labelColors.borderDash || []);\n            ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n            const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth - boxPadding);\n            const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - boxPadding - 2);\n            const borderRadius = toTRBLCorners(labelColors.borderRadius);\n            if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                ctx.beginPath();\n                ctx.fillStyle = options.multiKeyBackground;\n                addRoundedRectPath(ctx, {\n                    x: outerX,\n                    y: colorY,\n                    w: boxWidth,\n                    h: boxHeight,\n                    radius: borderRadius\n                });\n                ctx.fill();\n                ctx.stroke();\n                ctx.fillStyle = labelColors.backgroundColor;\n                ctx.beginPath();\n                addRoundedRectPath(ctx, {\n                    x: innerX,\n                    y: colorY + 1,\n                    w: boxWidth - 2,\n                    h: boxHeight - 2,\n                    radius: borderRadius\n                });\n                ctx.fill();\n            } else {\n                ctx.fillStyle = options.multiKeyBackground;\n                ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.fillStyle = labelColors.backgroundColor;\n                ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n            }\n        }\n        ctx.fillStyle = this.labelTextColors[i];\n    }\n    drawBody(pt, ctx, options) {\n        const { body  } = this;\n        const { bodySpacing , bodyAlign , displayColors , boxHeight , boxWidth , boxPadding  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        let bodyLineHeight = bodyFont.lineHeight;\n        let xLinePadding = 0;\n        const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n        const fillLineOfText = function(line) {\n            ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n            pt.y += bodyLineHeight + bodySpacing;\n        };\n        const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n        let bodyItem, textColor, lines, i, j, ilen, jlen;\n        ctx.textAlign = bodyAlign;\n        ctx.textBaseline = 'middle';\n        ctx.font = bodyFont.string;\n        pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n        ctx.fillStyle = options.bodyColor;\n        each(this.beforeBody, fillLineOfText);\n        xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + boxPadding : boxWidth + 2 + boxPadding : 0;\n        for(i = 0, ilen = body.length; i < ilen; ++i){\n            bodyItem = body[i];\n            textColor = this.labelTextColors[i];\n            ctx.fillStyle = textColor;\n            each(bodyItem.before, fillLineOfText);\n            lines = bodyItem.lines;\n            if (displayColors && lines.length) {\n                this._drawColorBox(ctx, pt, i, rtlHelper, options);\n                bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n            }\n            for(j = 0, jlen = lines.length; j < jlen; ++j){\n                fillLineOfText(lines[j]);\n                bodyLineHeight = bodyFont.lineHeight;\n            }\n            each(bodyItem.after, fillLineOfText);\n        }\n        xLinePadding = 0;\n        bodyLineHeight = bodyFont.lineHeight;\n        each(this.afterBody, fillLineOfText);\n        pt.y -= bodySpacing;\n    }\n    drawFooter(pt, ctx, options) {\n        const footer = this.footer;\n        const length = footer.length;\n        let footerFont, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.footerAlign, options);\n            pt.y += options.footerMarginTop;\n            ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n            ctx.textBaseline = 'middle';\n            footerFont = toFont(options.footerFont);\n            ctx.fillStyle = options.footerColor;\n            ctx.font = footerFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n                pt.y += footerFont.lineHeight + options.footerSpacing;\n            }\n        }\n    }\n    drawBackground(pt, ctx, tooltipSize, options) {\n        const { xAlign , yAlign  } = this;\n        const { x , y  } = pt;\n        const { width , height  } = tooltipSize;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(options.cornerRadius);\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.beginPath();\n        ctx.moveTo(x + topLeft, y);\n        if (yAlign === 'top') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width - topRight, y);\n        ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n        if (yAlign === 'center' && xAlign === 'right') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width, y + height - bottomRight);\n        ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n        if (yAlign === 'bottom') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + bottomLeft, y + height);\n        ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n        if (yAlign === 'center' && xAlign === 'left') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x, y + topLeft);\n        ctx.quadraticCurveTo(x, y, x + topLeft, y);\n        ctx.closePath();\n        ctx.fill();\n        if (options.borderWidth > 0) {\n            ctx.stroke();\n        }\n    }\n _updateAnimationTarget(options) {\n        const chart = this.chart;\n        const anims = this.$animations;\n        const animX = anims && anims.x;\n        const animY = anims && anims.y;\n        if (animX || animY) {\n            const position = positioners[options.position].call(this, this._active, this._eventPosition);\n            if (!position) {\n                return;\n            }\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, this._size);\n            const alignment = determineAlignment(chart, options, positionAndSize);\n            const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n            if (animX._to !== point.x || animY._to !== point.y) {\n                this.xAlign = alignment.xAlign;\n                this.yAlign = alignment.yAlign;\n                this.width = size.width;\n                this.height = size.height;\n                this.caretX = position.x;\n                this.caretY = position.y;\n                this._resolveAnimations().update(this, point);\n            }\n        }\n    }\n _willRender() {\n        return !!this.opacity;\n    }\n    draw(ctx) {\n        const options = this.options.setContext(this.getContext());\n        let opacity = this.opacity;\n        if (!opacity) {\n            return;\n        }\n        this._updateAnimationTarget(options);\n        const tooltipSize = {\n            width: this.width,\n            height: this.height\n        };\n        const pt = {\n            x: this.x,\n            y: this.y\n        };\n        opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n        const padding = toPadding(options.padding);\n        const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n        if (options.enabled && hasTooltipContent) {\n            ctx.save();\n            ctx.globalAlpha = opacity;\n            this.drawBackground(pt, ctx, tooltipSize, options);\n            overrideTextDirection(ctx, options.textDirection);\n            pt.y += padding.top;\n            this.drawTitle(pt, ctx, options);\n            this.drawBody(pt, ctx, options);\n            this.drawFooter(pt, ctx, options);\n            restoreTextDirection(ctx, options.textDirection);\n            ctx.restore();\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements, eventPosition) {\n        const lastActive = this._active;\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.chart.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('Cannot find a dataset at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(lastActive, active);\n        const positionChanged = this._positionChanged(active, eventPosition);\n        if (changed || positionChanged) {\n            this._active = active;\n            this._eventPosition = eventPosition;\n            this._ignoreReplayEvents = true;\n            this.update(true);\n        }\n    }\n handleEvent(e, replay, inChartArea = true) {\n        if (replay && this._ignoreReplayEvents) {\n            return false;\n        }\n        this._ignoreReplayEvents = false;\n        const options = this.options;\n        const lastActive = this._active || [];\n        const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n        const positionChanged = this._positionChanged(active, e);\n        const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n        if (changed) {\n            this._active = active;\n            if (options.enabled || options.external) {\n                this._eventPosition = {\n                    x: e.x,\n                    y: e.y\n                };\n                this.update(true, replay);\n            }\n        }\n        return changed;\n    }\n _getActiveElements(e, lastActive, replay, inChartArea) {\n        const options = this.options;\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive;\n        }\n        const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n        if (options.reverse) {\n            active.reverse();\n        }\n        return active;\n    }\n _positionChanged(active, e) {\n        const { caretX , caretY , options  } = this;\n        const position = positioners[options.position].call(this, active, e);\n        return position !== false && (caretX !== position.x || caretY !== position.y);\n    }\n}\nvar plugin_tooltip = {\n    id: 'tooltip',\n    _element: Tooltip,\n    positioners,\n    afterInit (chart, _args, options) {\n        if (options) {\n            chart.tooltip = new Tooltip({\n                chart,\n                options\n            });\n        }\n    },\n    beforeUpdate (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    reset (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    afterDraw (chart) {\n        const tooltip = chart.tooltip;\n        if (tooltip && tooltip._willRender()) {\n            const args = {\n                tooltip\n            };\n            if (chart.notifyPlugins('beforeTooltipDraw', {\n                ...args,\n                cancelable: true\n            }) === false) {\n                return;\n            }\n            tooltip.draw(chart.ctx);\n            chart.notifyPlugins('afterTooltipDraw', args);\n        }\n    },\n    afterEvent (chart, args) {\n        if (chart.tooltip) {\n            const useFinalPosition = args.replay;\n            if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n                args.changed = true;\n            }\n        }\n    },\n    defaults: {\n        enabled: true,\n        external: null,\n        position: 'average',\n        backgroundColor: 'rgba(0,0,0,0.8)',\n        titleColor: '#fff',\n        titleFont: {\n            weight: 'bold'\n        },\n        titleSpacing: 2,\n        titleMarginBottom: 6,\n        titleAlign: 'left',\n        bodyColor: '#fff',\n        bodySpacing: 2,\n        bodyFont: {},\n        bodyAlign: 'left',\n        footerColor: '#fff',\n        footerSpacing: 2,\n        footerMarginTop: 6,\n        footerFont: {\n            weight: 'bold'\n        },\n        footerAlign: 'left',\n        padding: 6,\n        caretPadding: 2,\n        caretSize: 5,\n        cornerRadius: 6,\n        boxHeight: (ctx, opts)=>opts.bodyFont.size,\n        boxWidth: (ctx, opts)=>opts.bodyFont.size,\n        multiKeyBackground: '#fff',\n        displayColors: true,\n        boxPadding: 0,\n        borderColor: 'rgba(0,0,0,0)',\n        borderWidth: 0,\n        animation: {\n            duration: 400,\n            easing: 'easeOutQuart'\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'width',\n                    'height',\n                    'caretX',\n                    'caretY'\n                ]\n            },\n            opacity: {\n                easing: 'linear',\n                duration: 200\n            }\n        },\n        callbacks: defaultCallbacks\n    },\n    defaultRoutes: {\n        bodyFont: 'font',\n        footerFont: 'font',\n        titleFont: 'font'\n    },\n    descriptors: {\n        _scriptable: (name)=>name !== 'filter' && name !== 'itemSort' && name !== 'external',\n        _indexable: false,\n        callbacks: {\n            _scriptable: false,\n            _indexable: false\n        },\n        animation: {\n            _fallback: false\n        },\n        animations: {\n            _fallback: 'animation'\n        }\n    },\n    additionalOptionScopes: [\n        'interaction'\n    ]\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nColors: plugin_colors,\nDecimation: plugin_decimation,\nFiller: index,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels)=>{\n    if (typeof raw === 'string') {\n        index = labels.push(raw) - 1;\n        addedLabels.unshift({\n            index,\n            label: raw\n        });\n    } else if (isNaN(raw)) {\n        index = null;\n    }\n    return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n    const first = labels.indexOf(raw);\n    if (first === -1) {\n        return addIfString(labels, raw, index, addedLabels);\n    }\n    const last = labels.lastIndexOf(raw);\n    return first !== last ? index : first;\n}\nconst validIndex = (index, max)=>index === null ? null : _limitValue(Math.round(index), 0, max);\nfunction _getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n        return labels[value];\n    }\n    return value;\n}\nclass CategoryScale extends Scale {\n    static id = 'category';\n static defaults = {\n        ticks: {\n            callback: _getLabelForValue\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this._startValue = undefined;\n        this._valueRange = 0;\n        this._addedLabels = [];\n    }\n    init(scaleOptions) {\n        const added = this._addedLabels;\n        if (added.length) {\n            const labels = this.getLabels();\n            for (const { index , label  } of added){\n                if (labels[index] === label) {\n                    labels.splice(index, 1);\n                }\n            }\n            this._addedLabels = [];\n        }\n        super.init(scaleOptions);\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        const labels = this.getLabels();\n        index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n        return validIndex(index, labels.length - 1);\n    }\n    determineDataLimits() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this.getMinMax(true);\n        if (this.options.bounds === 'ticks') {\n            if (!minDefined) {\n                min = 0;\n            }\n            if (!maxDefined) {\n                max = this.getLabels().length - 1;\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const min = this.min;\n        const max = this.max;\n        const offset = this.options.offset;\n        const ticks = [];\n        let labels = this.getLabels();\n        labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n        this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n        this._startValue = this.min - (offset ? 0.5 : 0);\n        for(let value = min; value <= max; value++){\n            ticks.push({\n                value\n            });\n        }\n        return ticks;\n    }\n    getLabelForValue(value) {\n        return _getLabelForValue.call(this, value);\n    }\n configure() {\n        super.configure();\n        if (!this.isHorizontal()) {\n            this._reversePixels = !this._reversePixels;\n        }\n    }\n    getPixelForValue(value) {\n        if (typeof value !== 'number') {\n            value = this.parse(value);\n        }\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n    getValueForPixel(pixel) {\n        return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n    }\n    getBasePixel() {\n        return this.bottom;\n    }\n}\n\nfunction generateTicks$1(generationOptions, dataRange) {\n    const ticks = [];\n    const MIN_SPACING = 1e-14;\n    const { bounds , step , min , max , precision , count , maxTicks , maxDigits , includeBounds  } = generationOptions;\n    const unit = step || 1;\n    const maxSpaces = maxTicks - 1;\n    const { min: rmin , max: rmax  } = dataRange;\n    const minDefined = !isNullOrUndef(min);\n    const maxDefined = !isNullOrUndef(max);\n    const countDefined = !isNullOrUndef(count);\n    const minSpacing = (rmax - rmin) / (maxDigits + 1);\n    let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n    let factor, niceMin, niceMax, numSpaces;\n    if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n        return [\n            {\n                value: rmin\n            },\n            {\n                value: rmax\n            }\n        ];\n    }\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n    if (numSpaces > maxSpaces) {\n        spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n    }\n    if (!isNullOrUndef(precision)) {\n        factor = Math.pow(10, precision);\n        spacing = Math.ceil(spacing * factor) / factor;\n    }\n    if (bounds === 'ticks') {\n        niceMin = Math.floor(rmin / spacing) * spacing;\n        niceMax = Math.ceil(rmax / spacing) * spacing;\n    } else {\n        niceMin = rmin;\n        niceMax = rmax;\n    }\n    if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n        numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n        spacing = (max - min) / numSpaces;\n        niceMin = min;\n        niceMax = max;\n    } else if (countDefined) {\n        niceMin = minDefined ? min : niceMin;\n        niceMax = maxDefined ? max : niceMax;\n        numSpaces = count - 1;\n        spacing = (niceMax - niceMin) / numSpaces;\n    } else {\n        numSpaces = (niceMax - niceMin) / spacing;\n        if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n            numSpaces = Math.round(numSpaces);\n        } else {\n            numSpaces = Math.ceil(numSpaces);\n        }\n    }\n    const decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n    factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    let j = 0;\n    if (minDefined) {\n        if (includeBounds && niceMin !== min) {\n            ticks.push({\n                value: min\n            });\n            if (niceMin < min) {\n                j++;\n            }\n            if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n                j++;\n            }\n        } else if (niceMin < min) {\n            j++;\n        }\n    }\n    for(; j < numSpaces; ++j){\n        ticks.push({\n            value: Math.round((niceMin + j * spacing) * factor) / factor\n        });\n    }\n    if (maxDefined && includeBounds && niceMax !== max) {\n        if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n            ticks[ticks.length - 1].value = max;\n        } else {\n            ticks.push({\n                value: max\n            });\n        }\n    } else if (!maxDefined || niceMax === max) {\n        ticks.push({\n            value: niceMax\n        });\n    }\n    return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, { horizontal , minRotation  }) {\n    const rad = toRadians(minRotation);\n    const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n    const length = 0.75 * minSpacing * ('' + value).length;\n    return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n         this._endValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n            return null;\n        }\n        return +raw;\n    }\n    handleTickRangeOptions() {\n        const { beginAtZero  } = this.options;\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (beginAtZero) {\n            const minSign = sign(min);\n            const maxSign = sign(max);\n            if (minSign < 0 && maxSign < 0) {\n                setMax(0);\n            } else if (minSign > 0 && maxSign > 0) {\n                setMin(0);\n            }\n        }\n        if (min === max) {\n            let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n            setMax(max + offset);\n            if (!beginAtZero) {\n                setMin(min - offset);\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    getTickLimit() {\n        const tickOpts = this.options.ticks;\n        let { maxTicksLimit , stepSize  } = tickOpts;\n        let maxTicks;\n        if (stepSize) {\n            maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n            if (maxTicks > 1000) {\n                console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n                maxTicks = 1000;\n            }\n        } else {\n            maxTicks = this.computeTickLimit();\n            maxTicksLimit = maxTicksLimit || 11;\n        }\n        if (maxTicksLimit) {\n            maxTicks = Math.min(maxTicksLimit, maxTicks);\n        }\n        return maxTicks;\n    }\n computeTickLimit() {\n        return Number.POSITIVE_INFINITY;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        let maxTicks = this.getTickLimit();\n        maxTicks = Math.max(2, maxTicks);\n        const numericGeneratorOptions = {\n            maxTicks,\n            bounds: opts.bounds,\n            min: opts.min,\n            max: opts.max,\n            precision: tickOpts.precision,\n            step: tickOpts.stepSize,\n            count: tickOpts.count,\n            maxDigits: this._maxDigits(),\n            horizontal: this.isHorizontal(),\n            minRotation: tickOpts.minRotation || 0,\n            includeBounds: tickOpts.includeBounds !== false\n        };\n        const dataRange = this._range || this;\n        const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n configure() {\n        const ticks = this.ticks;\n        let start = this.min;\n        let end = this.max;\n        super.configure();\n        if (this.options.offset && ticks.length) {\n            const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n            start -= offset;\n            end += offset;\n        }\n        this._startValue = start;\n        this._endValue = end;\n        this._valueRange = end - start;\n    }\n    getLabelForValue(value) {\n        return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n}\n\nclass LinearScale extends LinearScaleBase {\n    static id = 'linear';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.numeric\n        }\n    };\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? min : 0;\n        this.max = isNumberFinite(max) ? max : 1;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        const horizontal = this.isHorizontal();\n        const length = horizontal ? this.width : this.height;\n        const minRotation = toRadians(this.options.ticks.minRotation);\n        const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n        const tickFont = this._resolveTickFontOptions(0);\n        return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n    }\n    getPixelForValue(value) {\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n    }\n}\n\nconst log10Floor = (v)=>Math.floor(log10(v));\nconst changeExponent = (v, m)=>Math.pow(10, log10Floor(v) + m);\nfunction isMajor(tickVal) {\n    const remain = tickVal / Math.pow(10, log10Floor(tickVal));\n    return remain === 1;\n}\nfunction steps(min, max, rangeExp) {\n    const rangeStep = Math.pow(10, rangeExp);\n    const start = Math.floor(min / rangeStep);\n    const end = Math.ceil(max / rangeStep);\n    return end - start;\n}\nfunction startExp(min, max) {\n    const range = max - min;\n    let rangeExp = log10Floor(range);\n    while(steps(min, max, rangeExp) > 10){\n        rangeExp++;\n    }\n    while(steps(min, max, rangeExp) < 10){\n        rangeExp--;\n    }\n    return Math.min(rangeExp, log10Floor(min));\n}\n function generateTicks(generationOptions, { min , max  }) {\n    min = finiteOrDefault(generationOptions.min, min);\n    const ticks = [];\n    const minExp = log10Floor(min);\n    let exp = startExp(min, max);\n    let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n    const stepSize = Math.pow(10, exp);\n    const base = minExp > exp ? Math.pow(10, minExp) : 0;\n    const start = Math.round((min - base) * precision) / precision;\n    const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n    let significand = Math.floor((start - offset) / Math.pow(10, exp));\n    let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n    while(value < max){\n        ticks.push({\n            value,\n            major: isMajor(value),\n            significand\n        });\n        if (significand >= 10) {\n            significand = significand < 15 ? 15 : 20;\n        } else {\n            significand++;\n        }\n        if (significand >= 20) {\n            exp++;\n            significand = 2;\n            precision = exp >= 0 ? 1 : precision;\n        }\n        value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n    }\n    const lastTick = finiteOrDefault(generationOptions.max, value);\n    ticks.push({\n        value: lastTick,\n        major: isMajor(lastTick),\n        significand\n    });\n    return ticks;\n}\nclass LogarithmicScale extends Scale {\n    static id = 'logarithmic';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.logarithmic,\n            major: {\n                enabled: true\n            }\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        const value = LinearScaleBase.prototype.parse.apply(this, [\n            raw,\n            index\n        ]);\n        if (value === 0) {\n            this._zero = true;\n            return undefined;\n        }\n        return isNumberFinite(value) && value > 0 ? value : null;\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n        this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n        if (this.options.beginAtZero) {\n            this._zero = true;\n        }\n        if (this._zero && this.min !== this._suggestedMin && !isNumberFinite(this._userMin)) {\n            this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n        }\n        this.handleTickRangeOptions();\n    }\n    handleTickRangeOptions() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let min = this.min;\n        let max = this.max;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (min === max) {\n            if (min <= 0) {\n                setMin(1);\n                setMax(10);\n            } else {\n                setMin(changeExponent(min, -1));\n                setMax(changeExponent(max, +1));\n            }\n        }\n        if (min <= 0) {\n            setMin(changeExponent(max, -1));\n        }\n        if (max <= 0) {\n            setMax(changeExponent(min, +1));\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const generationOptions = {\n            min: this._userMin,\n            max: this._userMax\n        };\n        const ticks = generateTicks(generationOptions, this);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n getLabelForValue(value) {\n        return value === undefined ? '0' : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n configure() {\n        const start = this.min;\n        super.configure();\n        this._startValue = log10(start);\n        this._valueRange = log10(this.max) - log10(start);\n    }\n    getPixelForValue(value) {\n        if (value === undefined || value === 0) {\n            value = this.min;\n        }\n        if (value === null || isNaN(value)) {\n            return NaN;\n        }\n        return this.getPixelForDecimal(value === this.min ? 0 : (log10(value) - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        const decimal = this.getDecimalForPixel(pixel);\n        return Math.pow(10, this._startValue + decimal * this._valueRange);\n    }\n}\n\nfunction getTickBackdropHeight(opts) {\n    const tickOpts = opts.ticks;\n    if (tickOpts.display && opts.display) {\n        const padding = toPadding(tickOpts.backdropPadding);\n        return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n    }\n    return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n    label = isArray(label) ? label : [\n        label\n    ];\n    return {\n        w: _longestText(ctx, font.string, label),\n        h: label.length * font.lineHeight\n    };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n        return {\n            start: pos - size / 2,\n            end: pos + size / 2\n        };\n    } else if (angle < min || angle > max) {\n        return {\n            start: pos - size,\n            end: pos\n        };\n    }\n    return {\n        start: pos,\n        end: pos + size\n    };\n}\n function fitWithPointLabels(scale) {\n    const orig = {\n        l: scale.left + scale._padding.left,\n        r: scale.right - scale._padding.right,\n        t: scale.top + scale._padding.top,\n        b: scale.bottom - scale._padding.bottom\n    };\n    const limits = Object.assign({}, orig);\n    const labelSizes = [];\n    const padding = [];\n    const valueCount = scale._pointLabels.length;\n    const pointLabelOpts = scale.options.pointLabels;\n    const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n    for(let i = 0; i < valueCount; i++){\n        const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n        padding[i] = opts.padding;\n        const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n        const plFont = toFont(opts.font);\n        const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n        labelSizes[i] = textSize;\n        const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n        const angle = Math.round(toDegrees(angleRadians));\n        const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n        const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n        updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n    }\n    scale.setCenterPoint(orig.l - limits.l, limits.r - orig.r, orig.t - limits.t, limits.b - orig.b);\n    scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n    const sin = Math.abs(Math.sin(angle));\n    const cos = Math.abs(Math.cos(angle));\n    let x = 0;\n    let y = 0;\n    if (hLimits.start < orig.l) {\n        x = (orig.l - hLimits.start) / sin;\n        limits.l = Math.min(limits.l, orig.l - x);\n    } else if (hLimits.end > orig.r) {\n        x = (hLimits.end - orig.r) / sin;\n        limits.r = Math.max(limits.r, orig.r + x);\n    }\n    if (vLimits.start < orig.t) {\n        y = (orig.t - vLimits.start) / cos;\n        limits.t = Math.min(limits.t, orig.t - y);\n    } else if (vLimits.end > orig.b) {\n        y = (vLimits.end - orig.b) / cos;\n        limits.b = Math.max(limits.b, orig.b + y);\n    }\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n    const items = [];\n    const valueCount = scale._pointLabels.length;\n    const opts = scale.options;\n    const extra = getTickBackdropHeight(opts) / 2;\n    const outerDistance = scale.drawingArea;\n    const additionalAngle = opts.pointLabels.centerPointLabels ? PI / valueCount : 0;\n    for(let i = 0; i < valueCount; i++){\n        const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i], additionalAngle);\n        const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n        const size = labelSizes[i];\n        const y = yForAngle(pointLabelPosition.y, size.h, angle);\n        const textAlign = getTextAlignForAngle(angle);\n        const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n        items.push({\n            x: pointLabelPosition.x,\n            y,\n            textAlign,\n            left,\n            top: y,\n            right: left + size.w,\n            bottom: y + size.h\n        });\n    }\n    return items;\n}\nfunction getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n        return 'center';\n    } else if (angle < 180) {\n        return 'left';\n    }\n    return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n    if (align === 'right') {\n        x -= w;\n    } else if (align === 'center') {\n        x -= w / 2;\n    }\n    return x;\n}\nfunction yForAngle(y, h, angle) {\n    if (angle === 90 || angle === 270) {\n        y -= h / 2;\n    } else if (angle > 270 || angle < 90) {\n        y -= h;\n    }\n    return y;\n}\nfunction drawPointLabels(scale, labelCount) {\n    const { ctx , options: { pointLabels  }  } = scale;\n    for(let i = labelCount - 1; i >= 0; i--){\n        const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n        const plFont = toFont(optsAtIndex.font);\n        const { x , y , textAlign , left , top , right , bottom  } = scale._pointLabelItems[i];\n        const { backdropColor  } = optsAtIndex;\n        if (!isNullOrUndef(backdropColor)) {\n            const borderRadius = toTRBLCorners(optsAtIndex.borderRadius);\n            const padding = toPadding(optsAtIndex.backdropPadding);\n            ctx.fillStyle = backdropColor;\n            const backdropLeft = left - padding.left;\n            const backdropTop = top - padding.top;\n            const backdropWidth = right - left + padding.width;\n            const backdropHeight = bottom - top + padding.height;\n            if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                ctx.beginPath();\n                addRoundedRectPath(ctx, {\n                    x: backdropLeft,\n                    y: backdropTop,\n                    w: backdropWidth,\n                    h: backdropHeight,\n                    radius: borderRadius\n                });\n                ctx.fill();\n            } else {\n                ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n            }\n        }\n        renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n            color: optsAtIndex.color,\n            textAlign: textAlign,\n            textBaseline: 'middle'\n        });\n    }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n    const { ctx  } = scale;\n    if (circular) {\n        ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n    } else {\n        let pointPosition = scale.getPointPosition(0, radius);\n        ctx.moveTo(pointPosition.x, pointPosition.y);\n        for(let i = 1; i < labelCount; i++){\n            pointPosition = scale.getPointPosition(i, radius);\n            ctx.lineTo(pointPosition.x, pointPosition.y);\n        }\n    }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n    const ctx = scale.ctx;\n    const circular = gridLineOpts.circular;\n    const { color , lineWidth  } = gridLineOpts;\n    if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n        return;\n    }\n    ctx.save();\n    ctx.strokeStyle = color;\n    ctx.lineWidth = lineWidth;\n    ctx.setLineDash(borderOpts.dash);\n    ctx.lineDashOffset = borderOpts.dashOffset;\n    ctx.beginPath();\n    pathRadiusLine(scale, radius, circular, labelCount);\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n    return createContext(parent, {\n        label,\n        index,\n        type: 'pointLabel'\n    });\n}\nclass RadialLinearScale extends LinearScaleBase {\n    static id = 'radialLinear';\n static defaults = {\n        display: true,\n        animate: true,\n        position: 'chartArea',\n        angleLines: {\n            display: true,\n            lineWidth: 1,\n            borderDash: [],\n            borderDashOffset: 0.0\n        },\n        grid: {\n            circular: false\n        },\n        startAngle: 0,\n        ticks: {\n            showLabelBackdrop: true,\n            callback: Ticks.formatters.numeric\n        },\n        pointLabels: {\n            backdropColor: undefined,\n            backdropPadding: 2,\n            display: true,\n            font: {\n                size: 10\n            },\n            callback (label) {\n                return label;\n            },\n            padding: 5,\n            centerPointLabels: false\n        }\n    };\n    static defaultRoutes = {\n        'angleLines.color': 'borderColor',\n        'pointLabels.color': 'color',\n        'ticks.color': 'color'\n    };\n    static descriptors = {\n        angleLines: {\n            _fallback: 'grid'\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.xCenter = undefined;\n         this.yCenter = undefined;\n         this.drawingArea = undefined;\n         this._pointLabels = [];\n        this._pointLabelItems = [];\n    }\n    setDimensions() {\n        const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n        const w = this.width = this.maxWidth - padding.width;\n        const h = this.height = this.maxHeight - padding.height;\n        this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n        this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n        this.drawingArea = Math.floor(Math.min(w, h) / 2);\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(false);\n        this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n        this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    }\n    generateTickLabels(ticks) {\n        LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n        this._pointLabels = this.getLabels().map((value, index)=>{\n            const label = callback(this.options.pointLabels.callback, [\n                value,\n                index\n            ], this);\n            return label || label === 0 ? label : '';\n        }).filter((v, i)=>this.chart.getDataVisibility(i));\n    }\n    fit() {\n        const opts = this.options;\n        if (opts.display && opts.pointLabels.display) {\n            fitWithPointLabels(this);\n        } else {\n            this.setCenterPoint(0, 0, 0, 0);\n        }\n    }\n    setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n        this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n        this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n        this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n    }\n    getIndexAngle(index) {\n        const angleMultiplier = TAU / (this._pointLabels.length || 1);\n        const startAngle = this.options.startAngle || 0;\n        return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n    }\n    getDistanceFromCenterForValue(value) {\n        if (isNullOrUndef(value)) {\n            return NaN;\n        }\n        const scalingFactor = this.drawingArea / (this.max - this.min);\n        if (this.options.reverse) {\n            return (this.max - value) * scalingFactor;\n        }\n        return (value - this.min) * scalingFactor;\n    }\n    getValueForDistanceFromCenter(distance) {\n        if (isNullOrUndef(distance)) {\n            return NaN;\n        }\n        const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n        return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n    }\n    getPointLabelContext(index) {\n        const pointLabels = this._pointLabels || [];\n        if (index >= 0 && index < pointLabels.length) {\n            const pointLabel = pointLabels[index];\n            return createPointLabelContext(this.getContext(), index, pointLabel);\n        }\n    }\n    getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n        const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n        return {\n            x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n            y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n            angle\n        };\n    }\n    getPointPositionForValue(index, value) {\n        return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    }\n    getBasePosition(index) {\n        return this.getPointPositionForValue(index || 0, this.getBaseValue());\n    }\n    getPointLabelPosition(index) {\n        const { left , top , right , bottom  } = this._pointLabelItems[index];\n        return {\n            left,\n            top,\n            right,\n            bottom\n        };\n    }\n drawBackground() {\n        const { backgroundColor , grid: { circular  }  } = this.options;\n        if (backgroundColor) {\n            const ctx = this.ctx;\n            ctx.save();\n            ctx.beginPath();\n            pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n            ctx.closePath();\n            ctx.fillStyle = backgroundColor;\n            ctx.fill();\n            ctx.restore();\n        }\n    }\n drawGrid() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const { angleLines , grid , border  } = opts;\n        const labelCount = this._pointLabels.length;\n        let i, offset, position;\n        if (opts.pointLabels.display) {\n            drawPointLabels(this, labelCount);\n        }\n        if (grid.display) {\n            this.ticks.forEach((tick, index)=>{\n                if (index !== 0) {\n                    offset = this.getDistanceFromCenterForValue(tick.value);\n                    const context = this.getContext(index);\n                    const optsAtIndex = grid.setContext(context);\n                    const optsAtIndexBorder = border.setContext(context);\n                    drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n                }\n            });\n        }\n        if (angleLines.display) {\n            ctx.save();\n            for(i = labelCount - 1; i >= 0; i--){\n                const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n                const { color , lineWidth  } = optsAtIndex;\n                if (!lineWidth || !color) {\n                    continue;\n                }\n                ctx.lineWidth = lineWidth;\n                ctx.strokeStyle = color;\n                ctx.setLineDash(optsAtIndex.borderDash);\n                ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n                offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n                position = this.getPointPosition(i, offset);\n                ctx.beginPath();\n                ctx.moveTo(this.xCenter, this.yCenter);\n                ctx.lineTo(position.x, position.y);\n                ctx.stroke();\n            }\n            ctx.restore();\n        }\n    }\n drawBorder() {}\n drawLabels() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        if (!tickOpts.display) {\n            return;\n        }\n        const startAngle = this.getIndexAngle(0);\n        let offset, width;\n        ctx.save();\n        ctx.translate(this.xCenter, this.yCenter);\n        ctx.rotate(startAngle);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        this.ticks.forEach((tick, index)=>{\n            if (index === 0 && !opts.reverse) {\n                return;\n            }\n            const optsAtIndex = tickOpts.setContext(this.getContext(index));\n            const tickFont = toFont(optsAtIndex.font);\n            offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n            if (optsAtIndex.showLabelBackdrop) {\n                ctx.font = tickFont.string;\n                width = ctx.measureText(tick.label).width;\n                ctx.fillStyle = optsAtIndex.backdropColor;\n                const padding = toPadding(optsAtIndex.backdropPadding);\n                ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n            }\n            renderText(ctx, tick.label, 0, -offset, tickFont, {\n                color: optsAtIndex.color\n            });\n        });\n        ctx.restore();\n    }\n drawTitle() {}\n}\n\nconst INTERVALS = {\n    millisecond: {\n        common: true,\n        size: 1,\n        steps: 1000\n    },\n    second: {\n        common: true,\n        size: 1000,\n        steps: 60\n    },\n    minute: {\n        common: true,\n        size: 60000,\n        steps: 60\n    },\n    hour: {\n        common: true,\n        size: 3600000,\n        steps: 24\n    },\n    day: {\n        common: true,\n        size: 86400000,\n        steps: 30\n    },\n    week: {\n        common: false,\n        size: 604800000,\n        steps: 4\n    },\n    month: {\n        common: true,\n        size: 2.628e9,\n        steps: 12\n    },\n    quarter: {\n        common: false,\n        size: 7.884e9,\n        steps: 4\n    },\n    year: {\n        common: true,\n        size: 3.154e10\n    }\n};\n const UNITS =  /* #__PURE__ */ Object.keys(INTERVALS);\n function sorter(a, b) {\n    return a - b;\n}\n function parse(scale, input) {\n    if (isNullOrUndef(input)) {\n        return null;\n    }\n    const adapter = scale._adapter;\n    const { parser , round , isoWeekday  } = scale._parseOpts;\n    let value = input;\n    if (typeof parser === 'function') {\n        value = parser(value);\n    }\n    if (!isNumberFinite(value)) {\n        value = typeof parser === 'string' ? adapter.parse(value,  (parser)) : adapter.parse(value);\n    }\n    if (value === null) {\n        return null;\n    }\n    if (round) {\n        value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n    }\n    return +value;\n}\n function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    const ilen = UNITS.length;\n    for(let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i){\n        const interval = INTERVALS[UNITS[i]];\n        const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n        if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n            return UNITS[i];\n        }\n    }\n    return UNITS[ilen - 1];\n}\n function determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n    for(let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--){\n        const unit = UNITS[i];\n        if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n            return unit;\n        }\n    }\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n function determineMajorUnit(unit) {\n    for(let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i){\n        if (INTERVALS[UNITS[i]].common) {\n            return UNITS[i];\n        }\n    }\n}\n function addTick(ticks, time, timestamps) {\n    if (!timestamps) {\n        ticks[time] = true;\n    } else if (timestamps.length) {\n        const { lo , hi  } = _lookup(timestamps, time);\n        const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n        ticks[timestamp] = true;\n    }\n}\n function setMajorTicks(scale, ticks, map, majorUnit) {\n    const adapter = scale._adapter;\n    const first = +adapter.startOf(ticks[0].value, majorUnit);\n    const last = ticks[ticks.length - 1].value;\n    let major, index;\n    for(major = first; major <= last; major = +adapter.add(major, 1, majorUnit)){\n        index = map[major];\n        if (index >= 0) {\n            ticks[index].major = true;\n        }\n    }\n    return ticks;\n}\n function ticksFromTimestamps(scale, values, majorUnit) {\n    const ticks = [];\n     const map = {};\n    const ilen = values.length;\n    let i, value;\n    for(i = 0; i < ilen; ++i){\n        value = values[i];\n        map[value] = i;\n        ticks.push({\n            value,\n            major: false\n        });\n    }\n    return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n    static id = 'time';\n static defaults = {\n bounds: 'data',\n        adapters: {},\n        time: {\n            parser: false,\n            unit: false,\n            round: false,\n            isoWeekday: false,\n            minUnit: 'millisecond',\n            displayFormats: {}\n        },\n        ticks: {\n source: 'auto',\n            callback: false,\n            major: {\n                enabled: false\n            }\n        }\n    };\n constructor(props){\n        super(props);\n         this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n         this._unit = 'day';\n         this._majorUnit = undefined;\n        this._offsets = {};\n        this._normalized = false;\n        this._parseOpts = undefined;\n    }\n    init(scaleOpts, opts = {}) {\n        const time = scaleOpts.time || (scaleOpts.time = {});\n         const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n        adapter.init(opts);\n        mergeIf(time.displayFormats, adapter.formats());\n        this._parseOpts = {\n            parser: time.parser,\n            round: time.round,\n            isoWeekday: time.isoWeekday\n        };\n        super.init(scaleOpts);\n        this._normalized = opts.normalized;\n    }\n parse(raw, index) {\n        if (raw === undefined) {\n            return null;\n        }\n        return parse(this, raw);\n    }\n    beforeLayout() {\n        super.beforeLayout();\n        this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n    }\n    determineDataLimits() {\n        const options = this.options;\n        const adapter = this._adapter;\n        const unit = options.time.unit || 'day';\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n function _applyBounds(bounds) {\n            if (!minDefined && !isNaN(bounds.min)) {\n                min = Math.min(min, bounds.min);\n            }\n            if (!maxDefined && !isNaN(bounds.max)) {\n                max = Math.max(max, bounds.max);\n            }\n        }\n        if (!minDefined || !maxDefined) {\n            _applyBounds(this._getLabelBounds());\n            if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n                _applyBounds(this.getMinMax(false));\n            }\n        }\n        min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n        max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n        this.min = Math.min(min, max - 1);\n        this.max = Math.max(min + 1, max);\n    }\n _getLabelBounds() {\n        const arr = this.getLabelTimestamps();\n        let min = Number.POSITIVE_INFINITY;\n        let max = Number.NEGATIVE_INFINITY;\n        if (arr.length) {\n            min = arr[0];\n            max = arr[arr.length - 1];\n        }\n        return {\n            min,\n            max\n        };\n    }\n buildTicks() {\n        const options = this.options;\n        const timeOpts = options.time;\n        const tickOpts = options.ticks;\n        const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n        if (options.bounds === 'ticks' && timestamps.length) {\n            this.min = this._userMin || timestamps[0];\n            this.max = this._userMax || timestamps[timestamps.length - 1];\n        }\n        const min = this.min;\n        const max = this.max;\n        const ticks = _filterBetween(timestamps, min, max);\n        this._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min)) : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n        this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined : determineMajorUnit(this._unit);\n        this.initOffsets(timestamps);\n        if (options.reverse) {\n            ticks.reverse();\n        }\n        return ticksFromTimestamps(this, ticks, this._majorUnit);\n    }\n    afterAutoSkip() {\n        if (this.options.offsetAfterAutoskip) {\n            this.initOffsets(this.ticks.map((tick)=>+tick.value));\n        }\n    }\n initOffsets(timestamps = []) {\n        let start = 0;\n        let end = 0;\n        let first, last;\n        if (this.options.offset && timestamps.length) {\n            first = this.getDecimalForValue(timestamps[0]);\n            if (timestamps.length === 1) {\n                start = 1 - first;\n            } else {\n                start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n            }\n            last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n            if (timestamps.length === 1) {\n                end = last;\n            } else {\n                end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n            }\n        }\n        const limit = timestamps.length < 3 ? 0.5 : 0.25;\n        start = _limitValue(start, 0, limit);\n        end = _limitValue(end, 0, limit);\n        this._offsets = {\n            start,\n            end,\n            factor: 1 / (start + 1 + end)\n        };\n    }\n _generate() {\n        const adapter = this._adapter;\n        const min = this.min;\n        const max = this.max;\n        const options = this.options;\n        const timeOpts = options.time;\n        const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n        const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n        const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n        const hasWeekday = isNumber(weekday) || weekday === true;\n        const ticks = {};\n        let first = min;\n        let time, count;\n        if (hasWeekday) {\n            first = +adapter.startOf(first, 'isoWeek', weekday);\n        }\n        first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n        if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n            throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n        }\n        const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n        for(time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++){\n            addTick(ticks, time, timestamps);\n        }\n        if (time === max || options.bounds === 'ticks' || count === 1) {\n            addTick(ticks, time, timestamps);\n        }\n        return Object.keys(ticks).sort((a, b)=>a - b).map((x)=>+x);\n    }\n getLabelForValue(value) {\n        const adapter = this._adapter;\n        const timeOpts = this.options.time;\n        if (timeOpts.tooltipFormat) {\n            return adapter.format(value, timeOpts.tooltipFormat);\n        }\n        return adapter.format(value, timeOpts.displayFormats.datetime);\n    }\n _tickFormatFunction(time, index, ticks, format) {\n        const options = this.options;\n        const formatter = options.ticks.callback;\n        if (formatter) {\n            return callback(formatter, [\n                time,\n                index,\n                ticks\n            ], this);\n        }\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const majorUnit = this._majorUnit;\n        const minorFormat = unit && formats[unit];\n        const majorFormat = majorUnit && formats[majorUnit];\n        const tick = ticks[index];\n        const major = majorUnit && majorFormat && tick && tick.major;\n        return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    }\n generateTickLabels(ticks) {\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            tick.label = this._tickFormatFunction(tick.value, i, ticks);\n        }\n    }\n getDecimalForValue(value) {\n        return value === null ? NaN : (value - this.min) / (this.max - this.min);\n    }\n getPixelForValue(value) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForValue(value);\n        return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return this.min + pos * (this.max - this.min);\n    }\n _getLabelSize(label) {\n        const ticksOpts = this.options.ticks;\n        const tickLabelWidth = this.ctx.measureText(label).width;\n        const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n        const cosRotation = Math.cos(angle);\n        const sinRotation = Math.sin(angle);\n        const tickFontSize = this._resolveTickFontOptions(0).size;\n        return {\n            w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n            h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n        };\n    }\n _getLabelCapacity(exampleTime) {\n        const timeOpts = this.options.time;\n        const displayFormats = timeOpts.displayFormats;\n        const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n        const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [\n            exampleTime\n        ], this._majorUnit), format);\n        const size = this._getLabelSize(exampleLabel);\n        const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n        return capacity > 0 ? capacity : 1;\n    }\n getDataTimestamps() {\n        let timestamps = this._cache.data || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const metas = this.getMatchingVisibleMetas();\n        if (this._normalized && metas.length) {\n            return this._cache.data = metas[0].controller.getAllParsedValues(this);\n        }\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n        }\n        return this._cache.data = this.normalize(timestamps);\n    }\n getLabelTimestamps() {\n        const timestamps = this._cache.labels || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const labels = this.getLabels();\n        for(i = 0, ilen = labels.length; i < ilen; ++i){\n            timestamps.push(parse(this, labels[i]));\n        }\n        return this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps);\n    }\n normalize(values) {\n        return _arrayUnique(values.sort(sorter));\n    }\n}\n\nfunction interpolate(table, val, reverse) {\n    let lo = 0;\n    let hi = table.length - 1;\n    let prevSource, nextSource, prevTarget, nextTarget;\n    if (reverse) {\n        if (val >= table[lo].pos && val <= table[hi].pos) {\n            ({ lo , hi  } = _lookupByKey(table, 'pos', val));\n        }\n        ({ pos: prevSource , time: prevTarget  } = table[lo]);\n        ({ pos: nextSource , time: nextTarget  } = table[hi]);\n    } else {\n        if (val >= table[lo].time && val <= table[hi].time) {\n            ({ lo , hi  } = _lookupByKey(table, 'time', val));\n        }\n        ({ time: prevSource , pos: prevTarget  } = table[lo]);\n        ({ time: nextSource , pos: nextTarget  } = table[hi]);\n    }\n    const span = nextSource - prevSource;\n    return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n    static id = 'timeseries';\n static defaults = TimeScale.defaults;\n constructor(props){\n        super(props);\n         this._table = [];\n         this._minPos = undefined;\n         this._tableRange = undefined;\n    }\n initOffsets() {\n        const timestamps = this._getTimestampsForTable();\n        const table = this._table = this.buildLookupTable(timestamps);\n        this._minPos = interpolate(table, this.min);\n        this._tableRange = interpolate(table, this.max) - this._minPos;\n        super.initOffsets(timestamps);\n    }\n buildLookupTable(timestamps) {\n        const { min , max  } = this;\n        const items = [];\n        const table = [];\n        let i, ilen, prev, curr, next;\n        for(i = 0, ilen = timestamps.length; i < ilen; ++i){\n            curr = timestamps[i];\n            if (curr >= min && curr <= max) {\n                items.push(curr);\n            }\n        }\n        if (items.length < 2) {\n            return [\n                {\n                    time: min,\n                    pos: 0\n                },\n                {\n                    time: max,\n                    pos: 1\n                }\n            ];\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            next = items[i + 1];\n            prev = items[i - 1];\n            curr = items[i];\n            if (Math.round((next + prev) / 2) !== curr) {\n                table.push({\n                    time: curr,\n                    pos: i / (ilen - 1)\n                });\n            }\n        }\n        return table;\n    }\n _getTimestampsForTable() {\n        let timestamps = this._cache.all || [];\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const data = this.getDataTimestamps();\n        const label = this.getLabelTimestamps();\n        if (data.length && label.length) {\n            timestamps = this.normalize(data.concat(label));\n        } else {\n            timestamps = data.length ? data : label;\n        }\n        timestamps = this._cache.all = timestamps;\n        return timestamps;\n    }\n getDecimalForValue(value) {\n        return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n    }\n}\nvar TimeSeriesScale$1 = TimeSeriesScale;\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale$1\n});\n\nconst registerables = [\n    controllers,\n    elements,\n    plugins,\n    scales, \n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart$1 as Chart, plugin_colors as Colors, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, TimeScale, TimeSeriesScale$1 as TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, elements, layouts, plugins, registerables, registry, scales };\n//# sourceMappingURL=chart.js.map\n","import {\n  displayTooltipTitle,\n  displayTooltipLabel,\n  displayTooltipLabelWithUnit,\n  displayTicksWithUnit,\n  showChartTooltip,\n} from '../utils/charty.js';\n\nimport {\n  Chart,\n  ArcElement,\n  BarElement,\n  BarController,\n  DoughnutController,\n  CategoryScale,\n  LinearScale,\n  LineController,\n  LineElement,\n  Legend,\n  Title,\n  Tooltip,\n  PointElement,\n} from 'chart.js';\n\nChart.register(\n  ArcElement,\n  BarElement,\n  BarController,\n  DoughnutController,\n  CategoryScale,\n  LinearScale,\n  LineController,\n  LineElement,\n  PointElement,\n  Legend,\n  Title,\n  Tooltip\n);\n\nexport default class Charty {\n  constructor(elem, APP) {\n    this.elem = elem;\n    this.canvas_arr = this.elem.querySelectorAll('.js-canvas');\n    this.chart_arr = [];\n    this.tableActionEnalbed = false;\n    this.tableRows;\n    this.balloonEnabled = false;\n    this.balloonElem;\n    this.balloonTextElem;\n    this.balloonData;\n  }\n\n  getJson(url) {\n    return new Promise((resolve, reject) => {\n      fetch(url)\n        .then((response) => {\n          return response.json();\n        })\n        .then((data) => resolve(data))\n        .catch((error) => reject(error));\n    });\n  }\n\n  getConfig(data) {\n    // const thisElem = this.elem;\n    const config = {\n      type: data.type,\n      data: data.data,\n      options: {\n        plugins: {\n          legend: {\n            display: false,\n          },\n          tooltip: {\n            callbacks: {\n              title: displayTooltipTitle,\n            },\n            enabled: false,\n            external: showChartTooltip,\n          },\n        },\n      },\n    };\n\n    if (data.options.scales) {\n      config.options.scales = data.options.scales;\n    }\n\n    if (data.options.aspectRatio) {\n      config.options.aspectRatio = data.options.aspectRatio;\n    }\n\n    if (data.options.cutout) {\n      config.options.cutout = data.options.cutout;\n    }\n\n    if (data.options.layout) {\n      config.options.layout = data.options.layout;\n    }\n\n    if (data.options.plugins) {\n      if (data.options.plugins.title) {\n        config.options.plugins.title = data.options.plugins.title;\n      }\n    }\n\n    if (data.unit) {\n      config.options.plugins.tooltip.callbacks.label =\n        displayTooltipLabelWithUnit;\n    } else {\n      config.options.plugins.tooltip.callbacks.label = displayTooltipLabel;\n    }\n\n    if (data.unit && data.type == 'bar') {\n      config.options.scales.y.ticks.callback = displayTicksWithUnit;\n    }\n\n    if (data.balloons || data.hasMatchedTable) {\n      config.options.onHover = this.mouseHandler;\n    }\n\n    // console.log(config);\n    return config;\n  }\n\n  createDonutTitle(dtitle, index) {\n    const title = dtitle.text || '';\n    const parent = this.canvas_arr[index].parentElement;\n    const titleElem = document.createElement('div');\n    titleElem.classList.add('charts-donut-title-container');\n    titleElem.innerHTML = `<div class=\"charts-donut-title\">${title}</div>`;\n    parent.insertBefore(titleElem, this.canvas_arr[index]);\n  }\n\n  enableBalloon(balloon_data) {\n    this.balloonData = balloon_data;\n    this.balloonElem = this.elem.querySelector('.js-charts-balloon');\n    this.balloonTextElem = this.elem.querySelector('.charts-balloon-text');\n\n    const closeBtn = this.elem.querySelector('.charts-balloon-close');\n\n    if (closeBtn) {\n      closeBtn.addEventListener('click', (e) => {\n        this.balloonElem.classList.remove('active');\n        this.balloonTextElem.innerHTML = '';\n      });\n    }\n\n    this.balloonEnabled = true;\n  }\n\n  enableTableAction() {\n    this.tableRows = this.elem.querySelectorAll('.charts-table tbody tr');\n\n    if (this.canvas_arr[0]) {\n      this.canvas_arr[0].addEventListener('mouseleave', () => {\n        this.updateTableRow(-1);\n      });\n    }\n\n    this.tableActionEnalbed = true;\n  }\n\n  updateBalloon(index) {\n    this.balloonElem.classList.add('active');\n\n    if (index !== -1) {\n      this.balloonTextElem.innerHTML = this.balloonData[index].text;\n    }\n  }\n\n  updateTableRow(index) {\n    this.tableRows.forEach((r, i) => {\n      r.classList[index == i ? 'add' : 'remove']('active');\n    });\n  }\n\n  mouseHandler = (evt) => {\n    let chartIndex = -1;\n\n    const points = this.chart_arr[0].getElementsAtEventForMode(\n      evt,\n      'nearest',\n      { intersect: true },\n      true\n    );\n\n    if (points.length) {\n      chartIndex = points[0].index;\n    }\n\n    if (this.balloonEnabled) this.updateBalloon(chartIndex);\n    if (this.tableActionEnalbed) this.updateTableRow(chartIndex);\n  };\n\n  createChart() {\n    const json_url = `/assets/json/charty/${this.elem.dataset.json}.json`;\n\n    this.getJson(json_url)\n      .then((data) => {\n        data.charts.forEach((chart, i) => {\n          const config = this.getConfig(chart);\n          const chart_obj = new Chart(this.canvas_arr[i], config);\n          this.chart_arr.push(chart_obj);\n\n          if (chart.type == 'doughnut') {\n            if (chart.options.plugins) {\n              if (chart.options.plugins.title) {\n                this.createDonutTitle(chart.options.plugins.title, i);\n              }\n            }\n          }\n\n          if (chart.balloons) {\n            this.enableBalloon(chart.balloons);\n          }\n\n          if (chart.hasMatchedTable) {\n            this.enableTableAction();\n          }\n        });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n\n  init() {\n    this.createChart();\n    console.log('charty');\n  }\n}\n","import { initComponents } from \"./../utils/initComponents\";\nimport Header from \"./../components/Header\";\nimport Accordion from \"./../components/Accordion\";\nimport Tab from \"./../components/Tab\";\nimport Modal from \"./../components/Modal\";\nimport Filter from \"../components/Filter\";\nimport Carousel from \"./../components/Carousel\";\nimport Charty from \"./../components/Charty\";\n// import Sticky from \"./../components/Sticky\";\n\nconst APP = {};\n\nAPP.helpers = {\n  initComponents: (elem) => initComponents(elem, APP),\n};\n\n/**\n * Page components\n * <elem data-component=\"<component name>\">\n */\nAPP.components = {\n  Header: (elem) => new Header(elem, APP).init(),\n  Accordion: (elem) => new Accordion(elem, APP).init(),\n  Tab: (elem) => new Tab(elem, APP).init(),\n  Modal: (elem) => new Modal(elem, APP).init(),\n  Filter: (elem) => new Filter(elem, APP).init(),\n  Carousel: (elem) => new Carousel(elem, APP).init(),\n  Charty: (elem) => new Charty(elem, APP).init(),\n  // Sticky: (elem) => new Sticky(elem, APP).init(),\n};\n\nexport default APP;\n","export function initComponents(elem, APP) {\n  const jsComponents = [...elem.querySelectorAll(\"[data-component]\")];\n\n  // initialize components\n  const initComponent = (elem) => {\n    let componentList = elem.dataset.component;\n\n    if (!componentList) return;\n    componentList = componentList.split(\" \");\n\n    componentList.forEach((componentName) => {\n      if (APP.components[componentName]) {\n        const targetComponent = new APP.components[componentName](elem, APP);\n        if (targetComponent.init) {\n          targetComponent.init();\n        }\n      }\n    });\n  };\n\n  // get components\n  if (jsComponents) {\n    jsComponents.forEach((elem) => {\n      initComponent(elem);\n    });\n  }\n\n  // for body elem\n  initComponent(elem);\n}\n","import APP from \"./app/appObj\";\n\n/**\n * Get Document Ready\n */\ndocument.addEventListener(\"DOMContentLoaded\", (e) => {\n  APP.helpers.initComponents(document.body, APP);\n});\n"],"names":["global","factory","window","this","EvEmitter","proto","prototype","on","eventName","listener","events","_events","listeners","includes","push","once","onceEvents","_onceEvents","off","length","index","indexOf","splice","emitEvent","args","slice","onceListeners","apply","allOff","module","exports","utils","a","b","Object","assign","num","div","obj","Array","isArray","ary","elem","selector","parentNode","document","body","matches","querySelector","event","method","type","elems","makeArray","filter","HTMLElement","reduce","ffElems","childElems","querySelectorAll","concat","_class","methodName","threshold","timeoutName","clearTimeout","arguments","setTimeout","onDocReady","readyState","addEventListener","str","replace","match","$1","$2","toLowerCase","console","htmlInit","WidgetClass","namespace","docReady","dataAttr","toDashed","dataAttrElems","jQuery","forEach","options","attr","getAttribute","JSON","parse","error","className","instance","data","fizzyUIUtils","Flickity","insert","cells","_makeCells","len","undefined","fragment","createDocumentFragment","cell","appendChild","element","getCellsFragment","isAppend","slider","insertCellElement","insertBefore","endCells","_sizeCells","cellChange","positionSliderAtSelected","append","prepend","remove","getCells","minCellIndex","Math","min","removeFrom","cellSizeChange","getCell","getSize","changedCellIndex","prevSelectedElem","selectedElement","_positionCells","_updateWrapShiftCells","setGallerySize","selectedIndex","getCellSlideIndex","slides","select","animatePrototype","isAnimating","restingFrames","animate","applyDragForce","applySelectedAttraction","previousX","x","integratePhysics","positionSlider","settle","requestAnimationFrame","isWrapping","modulo","slideableWidth","shiftWrapCells","setTranslateX","dispatchScrollEvent","is3d","cursorPosition","rightToLeft","translateX","getPositionValue","style","transform","firstSlide","positionX","target","progress","slidesWidth","dispatchEvent","selectedSlide","velocity","position","percentPosition","round","size","innerWidth","isPointerDown","isFreeScrolling","beforeGap","_shiftCells","beforeShiftCells","afterGap","afterShiftCells","gap","shift","cellShift","_wrapShiftCell","outerWidth","_renderCellPosition","getFrictionFactor","force","isDraggable","dragForce","dragX","applyForce","selectedAttraction","Cell","cellClassName","classList","add","unselect","destroy","removeAttribute","setAttribute","_Flickity","Slide","getComputedStyle","GUID","instances","queryElement","getQueryElement","flickityGUID","option","$element","constructor","defaults","_create","accessibility","cellAlign","freeScrollFriction","friction","namespaceJQueryEvents","resize","create","watchCSS","id","guid","beginMargin","endMargin","viewport","createElement","_createSlider","focusableElems","call","activate","opts","isActive","cellElems","_filterFindCellElements","children","reloadCells","tabIndex","selectInitialIndex","isInitActivated","filterFindElements","cellSelector","positionCells","map","cellElem","getLastCell","getLastSlide","maxCellHeight","cellX","startCell","max","outerHeight","updateSlides","_containSlides","renderX","width","positionValue","slide","canCellFit","_getCanCellFit","i","addCell","slideWidth","firstMargin","updateTarget","updateSelectedSlide","groupCells","number","parseInt","percent","percentMatch","groupWidth","_init","reposition","setCellAlign","cellAlignShorthands","left","center","right","shorthand","height","adaptiveHeight","getIsWrapping","_unshiftCells","beforeGapX","lastIndex","_getGapCells","afterGapX","wrapAround","gapWidth","gapX","cellIndex","increment","contain","contentWidth","beginBound","endBound","emitArgs","$event","jQEvent","Event","trigger","unidraggerEvents","_emitEvent","clickedCell","getParentCell","isWrap","isInstant","_wrapSelect","prevIndex","startAnimation","isDragSelect","wrapIndex","delta","abs","backWrapDelta","forewardWrapDelta","previous","next","unselectSelectedSlide","selectedCells","selectedElements","getCellElements","selectedCell","initialIndex","queryCell","selectCell","value","cellSlide","find","Boolean","closest","getAdjacentCellElements","adjCount","slideIndex","uiChange","onresize","debounceMethod","isDragging","content","deactivate","onkeydown","activeElement","handler","keyboardHandlers","key","some","ArrowLeft","ArrowRight","focus","preventScroll","removeEventListener","removeData","jQueryBridget","setJQuery","jq","Unidragger","draggable","dragThreshold","getScrollPosition","pageXOffset","y","pageYOffset","touchActionValue","drag","onActivateDrag","_uiChangeDrag","onDeactivateDrag","updateDraggable","handlePointerDown","handlePointerUp","handlePointerDone","handleDragStart","handleDragMove","handleDragEnd","handleStaticClick","handles","bindHandles","unbindHandles","toggle","bindActivePointerEvents","isTouchStart","isTouchPointer","pointerType","isFocusNode","preventDefault","blur","pointerDownScroll","hasDragStarted","moveVector","isTouchScrolling","dragStartPosition","pointer","previousDragX","direction","originBound","dragMoveTime","Date","freeScroll","dragEndRestingSelect","restingX","getRestingPosition","dragEndBoostSelect","distance","getSlideDistance","positiveResting","_getClosestResting","negativeResting","minDistance","Infinity","condition","dist","minDist","isWrapAround","wrap","floor","onscroll","scroll","scrollMoveX","scrollMoveY","pointerDone","imagesLoaded","image","img","lazyAttr","lazySrcAttr","lazySrcsetAttr","imgSelector","lazyLoad","handleLazyLoadComplete","onLazyLoadComplete","bind","getCellLazyImages","cellAttr","cellSrcAttr","cellSrcsetAttr","LazyLoader","onComplete","load","flat","handleEvent","src","srcset","onload","complete","onerror","PageDots","holder","dots","setDots","slidesLength","addDots","removeDots","count","newDots","fill","item","dot","textContent","updateSelected","selectedDot","pageDots","handlePageDotsClick","onPageDotsClick","activatePageDots","updateSelectedPageDots","updatePageDots","deactivatePageDots","Player","autoPlay","onTick","state","onVisibilityChange","visibilityChange","onVisibilityPlay","visibilityPlay","play","hidden","tick","time","clear","timeout","stop","pause","unpause","pauseAutoPlayOnHover","player","activatePlayer","stopPlayer","deactivatePlayer","playPlayer","pausePlayer","unpausePlayer","onmouseenter","onmouseleave","svgURI","PrevNextButton","arrowShape","isPrevious","isLeft","label","disable","svg","createSVG","createElementNS","title","path","pathMovements","shape","x0","x1","x2","x3","y1","y2","getArrowMovements","enable","prevNextButtons","prevDirection","nextDirection","prevButton","nextButton","handlePrevButtonClick","handleNextButtonClick","activatePrevNextButtons","updatePrevNextButtons","updatePrevNextButton","button","disabledIndex","isEnabled","deactivatePrevNextButtons","lastCell","lastMargin","getStyleSize","parseFloat","isNaN","measurements","nodeType","display","innerHeight","measurement","getZeroSize","offsetWidth","offsetHeight","isBorderBox","boxSizing","paddingWidth","paddingLeft","paddingRight","paddingHeight","paddingTop","paddingBottom","marginWidth","marginLeft","marginRight","marginHeight","marginTop","marginBottom","borderWidth","borderLeftWidth","borderRightWidth","borderHeight","borderTopWidth","borderBottomWidth","styleWidth","styleHeight","$","ImagesLoaded","onAlways","queryElem","elements","getImages","jqDeferred","Deferred","check","images","addElementImages","elementNodeTypes","nodeName","addImage","background","addElementBackgroundImages","childImgs","child","reURL","LoadingImage","Background","url","Image","exec","backgroundImage","addBackground","loadingImage","progressedCount","hasAnyBroken","onProgress","message","isLoaded","notify","debug","log","isComplete","jqMethod","getIsImageComplete","confirm","naturalWidth","proxyImage","crossOrigin","currentSrc","unbindEvents","makeJQueryPlugin","fn","promise","startEvent","activeEvents","PointerEvent","_bindHandles","bindMethod","touchAction","handle","unbindActivePointerEvents","withPointer","pointerId","pointerIdentifier","withTouch","touch","changedTouch","changedTouches","identifier","onmousedown","pointerDown","ontouchstart","onpointerdown","cursorNodes","clickTypes","isCursorNode","isClickType","isOkayElement","pointerDownPointer","pageX","pageY","onmousemove","pointerMove","onpointermove","ontouchmove","dragStart","dragMove","isPreventingClicks","onmouseup","pointerUp","onpointerup","ontouchend","dragEnd","staticClick","onpointercancel","ontouchcancel","pointerCancel","onclick","isMouseup","isIgnoringMouseUp","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","n","getter","__esModule","d","definition","o","defineProperty","enumerable","get","prop","hasOwnProperty","t","Error","e","Adapter","extend","adapter","callback","axis","horizontal","enabled","triggerPoint","group","Group","findOrCreate","name","context","Context","findOrCreateByElement","offsetAliases","offset","queueTrigger","refresh","invokeAll","r","destroyAll","disableAll","enableAll","refreshAll","viewportHeight","documentElement","clientHeight","viewportWidth","clientWidth","adapters","continuous","Waypoint","didScroll","didResize","oldScroll","scrollLeft","scrollTop","waypoints","vertical","waypointContextKey","windowContext","createThrottledScrollHandler","createThrottledResizeHandler","checkEmpty","isEmptyObject","handleResize","handleScroll","isTouch","newScroll","forward","backward","s","l","h","flushTriggers","contextOffset","contextScroll","contextDimension","offsetProp","top","p","f","c","w","g","ceil","findByElement","mozRequestAnimationFrame","webkitRequestAnimationFrame","clearTriggerQueues","triggerQueues","up","down","sort","inArray","first","last","defaultView","handlers","split","ownerDocument","getBoundingClientRect","clientTop","clientLeft","Header","APP","Accordion","triggers","panels","panel","panelHeight","targetState","togglePanel","targetHeight","contains","setTriggerHandler","resizePanel","Tab","tablist","tabs","currentTab","tab","updateTabs","addKeyHandler","tabClickHandler","Modal","modal","dialog","openBtn","closeBtn","cancelBtn","okBtn","firstFocusableElement","lastFocusableElement","shiftKey","openModal","closeModal","Filter","list","filteredResults","results","innerHTML","checked","btn","previousElementSibling","innerText","updateResults","isExpanded","setup","Carousel","carousel","flkty","ready","change","flickityChangeHandler","focusableElements","setupCarousel","displayTooltipTitle","dataset","displayTooltipLabel","raw","displayTooltipLabelWithUnit","showChartTooltip","tooltipEl","getElementById","tooltipModel","tooltip","opacity","yAlign","titleLines","bodyLines","bodyItem","lines","innerHtml","chart","canvas","caretX","caretY","pointerEvents","displayTicksWithUnit","ticks","noop","uid","isNullOrUndef","toString","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toDimension","dimension","endsWith","thisArg","each","loopable","reverse","keys","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","clone$1","source","klen","k","isValidKey","_merger","tval","sval","merge","sources","merger","current","mergeIf","_mergerIf","keyResolvers","v","resolveObjectKey","resolver","parts","tmp","part","_splitKey","_getKeyResolver","_capitalize","charAt","toUpperCase","defined","isFunction","setsEqual","has","PI","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","almostEquals","epsilon","niceNum","range","roundedRange","niceRange","pow","fraction","isNumber","toRadians","degrees","_decimalPlaces","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","sqrt","angle","atan2","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_isBetween","_lookup","table","cmp","mid","hi","lo","_lookupByKey","ti","_rlookupByKey","arrayEvents","unlistenArrayEvents","array","stub","_chartjs","requestAnimFrame","throttled","ticking","_toLeftRightCenter","align","_alignStartEnd","atEdge","elasticIn","sin","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","m","easeInOutBounce","effects$1","lim","p2b","n2b","b2n","n2p","map$1","A","B","C","D","E","F","hex","h1","h2","eq","HUE_RE","hsl2rgbn","hsv2rgbn","hwb2rgbn","rgb","rgb2hsl","hueValue","calln","hsl2rgb","hue","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","names","RGB_RE","to","from","modHSL","ratio","clone","fromObject","input","functionParse","rgbParse","p1","p2","hwb2rgb","hsv2rgb","hueParse","Color","ret","unpacked","tkeys","j","ok","nk","unpack","transparent","nameParse","_rgb","_valid","valid","rgbString","hexString","isShort","alpha","hslString","mix","color","weight","c1","c2","w2","w1","interpolate","rgb1","rgb2","clearer","greyscale","val","opaquer","negate","lighten","darken","saturate","desaturate","rotate","deg","index_esm","isPatternOrGradient","getHoverColor","numbers","colors","intlCache","Map","formatNumber","locale","cacheKey","stringify","formatter","Intl","NumberFormat","set","getNumberFormat","format","formatters","values","numeric","tickValue","notation","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","remain","significand","Ticks","overrides","descriptors","getScope$1","node","root","scope","Defaults","_descriptors","_appliers","animation","backgroundColor","borderColor","datasets","devicePixelRatio","platform","getDevicePixelRatio","font","family","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","includeInvisible","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scale","scales","showLine","drawActiveElementsOnTop","describe","override","route","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","local","appliers","_scriptable","startsWith","_indexable","_fallback","delay","duration","easing","loop","properties","active","show","animations","visible","hide","autoPadding","padding","bottom","beginAtZero","bounds","grace","grid","lineWidth","drawOnChartArea","drawTicks","tickLength","tickWidth","_ctx","tickColor","border","dash","dashOffset","text","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","minor","major","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","_measureText","gc","longest","string","textWidth","measureText","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","clearCanvas","getContext","save","resetTransform","clearRect","restore","drawPoint","drawPointLegend","xOffset","yOffset","cornerRadius","xOffsetW","yOffsetW","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","ellipse","arc","closePath","moveTo","lineTo","SQRT1_2","rect","stroke","_isPointInArea","point","area","margin","clipArea","clip","unclipArea","_steppedLineTo","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","renderText","strokeWidth","strokeColor","line","translation","fillStyle","textAlign","textBaseline","setRenderOpts","backdrop","drawBackdrop","strokeStyle","strokeText","maxWidth","fillText","decorateText","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","decorationWidth","oldColor","fillRect","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","LINE_HEIGHT","FONT_STYLE","toLineHeight","_readValueToProps","props","objProps","read","toTRBL","toTRBLCorners","toPadding","toFont","fallback","warn","toFontString","resolve","inputs","info","cacheable","createContext","parentContext","_createResolver","scopes","prefixes","rootScopes","getTarget","_resolve","cache","Symbol","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","Proxy","deleteProperty","_keys","_cached","proxy","prefix","readKey","needsSubResolver","createSubResolver","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getPrototypeOf","getKeysFromAllScopes","ownKeys","storage","_storage","_attachContext","subProxy","descriptorDefaults","_proxy","_context","_subProxy","_stack","Set","setContext","receiver","isScriptable","join","delete","_resolveScriptable","isIndexable","arr","_resolveArray","_resolveWithContext","allKeys","configurable","scriptable","indexable","_allKeys","resolveFallback","getScope","parent","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","EPSILON","getPoint","points","skip","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","d01","d12","s01","s12","fa","fb","capControlPoint","pt","_updateBezierControlPoints","controlPoints","spanGaps","cubicInterpolationMode","valueAxis","pointsLen","deltaK","mK","pointBefore","pointCurrent","pointAfter","slopeDelta","alphaK","betaK","tauK","squaredMagnitude","monotoneAdjust","iPixel","vPixel","monotoneCompute","splineCurveMonotone","prev","tension","capBezierPoints","inArea","inAreaPrev","inAreaNext","_isDomSupported","_getParentNode","domNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","positions","getPositionedStyle","styles","suffix","result","pos","getRelativePosition","borderBox","paddings","borders","box","touches","offsetX","offsetY","shadowRoot","useOffsetPos","clientX","clientY","getCanvasPosition","round1","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","readUsedSize","property","el","getPropertyValue","getStyle","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","getRtlAdapter","rtl","rectX","setWidth","xPlus","leftForLtr","itemWidth","getRightToLeftAdapter","_itemWidth","overrideTextDirection","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","propertyFn","between","compare","normalize","normalizeSegment","_boundSegment","segment","startBound","getSegment","prevValue","inside","subStart","readStyle","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","styleChanged","prevStyle","Animator","_request","_charts","_running","_lastDate","_notify","anims","date","callbacks","numSteps","initial","currentStep","_refresh","_update","now","remaining","running","items","draw","_active","_total","pop","_getAnims","charts","listen","cb","acc","cur","_duration","cancel","animator","interpolators","boolean","factor","c0","Animation","cfg","currentValue","_fn","_easing","_start","_loop","_target","_prop","_from","_to","_promises","update","elapsed","wait","promises","Promise","res","rej","resolved","Animations","config","_chart","_properties","configure","animationOptions","animatedProps","getOwnPropertyNames","_animateOptions","newOptions","$shared","$animations","resolveTargetOptions","_createAnimations","anim","all","awaitAll","then","scaleClip","allowedOverflow","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","applyStack","stack","dsIndex","singleMode","otherValue","isStacked","meta","stacked","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","parsed","_cachedMeta","_stacks","iScale","iAxis","vAxis","indexScale","valueScale","getStackKey","_top","_bottom","getFirstScaleId","clearStacks","_parsed","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","static","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","dataElementType","initialize","linkScales","_stacked","addElements","isPluginEnabled","updateIndex","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","xScale","getScaleForId","yScale","rScale","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","_dataCheck","adata","convertObjectDataToArray","isExtensible","base","object","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","sorted","_sorted","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","parsedValue","NaN","getMinMax","canStack","otherScale","createStack","NEGATIVE_INFINITY","otherMin","otherMax","minDefined","maxDefined","getUserBounds","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","getLabelForValue","_clip","disabled","toClip","defaultClip","chartArea","resolveDatasetElementOptions","resolveDataElementOptions","dataIndex","createDataContext","createDatasetContext","_resolveElementOptions","elementType","sharing","datasetElementScopeKeys","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_sync","_dataChanges","_onDataPush","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","computeMinSampleSize","_cache","$bar","visibleMetas","_arrayUnique","getAllScaleValues","curr","_length","updateMinAndPrev","getPixelForValue","getPixelForTick","parseValue","entry","startValue","endValue","barStart","barEnd","_custom","parseFloatBar","parseArrayOrPrimitive","isFloatBar","custom","setBorderSkipped","edge","borderSkipped","borderProps","enableBorderRadius","parseEdge","orig","v2","startEnd","setInflateAmount","inflateAmount","binarySearch","metaset","lookupMethod","_reversePixels","getRange","evaluateInteractionItems","getSortedVisibleDatasetMetas","getIntersectItems","useFinalPosition","isPointInArea","inRange","getNearestItems","distanceMetric","useX","useY","deltaX","deltaY","getDistanceMetricForAxis","getCenterPoint","getNearestCartesianItems","startAngle","endAngle","getProps","getNearestRadialItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","params","layout","getPadding","newWidth","newHeight","widthChanged","heightChanged","same","other","getMargins","marginForPositions","fitBoxes","boxes","refitBoxes","refit","changed","fullSize","setBoxDims","placeBoxes","userPadding","placed","stackWeight","height1","width1","layouts","addBox","_layers","z","removeBox","layoutItem","minPadding","availableWidth","availableHeight","layoutBoxes","isHorizontal","wrapBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","buildLayoutBoxes","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","total","vBoxMaxWidth","hBoxMaxHeight","buildStacks","setLayoutDims","updatePos","handleMaxPadding","BasePlatform","acquireContext","aspectRatio","releaseContext","getMaximumSize","isAttached","updateConfig","BasicPlatform","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","removeListener","nodeListContains","nodeList","createAttachObserver","observer","MutationObserver","entries","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","createResizeObserver","container","ResizeObserver","contentRect","listenDevicePixelRatioChanges","releaseObserver","disconnect","unlistenDevicePixelRatioChanges","createProxyAndListen","native","fromNativeEvent","addListener","DomPlatform","renderHeight","renderWidth","displayWidth","displayHeight","initCanvas","proxies","$proxies","attach","detach","bbWidth","bbHeight","margins","maxHeight","containerSize","containerStyle","containerBorder","containerPadding","getContainerSize","isConnected","Element","tooltipPosition","hasValue","final","newTicks","spacing","majorStart","majorEnd","offsetFromEdge","sample","numItems","getPixelForGridLine","offsetGridLines","validIndex","_startPixel","_endPixel","lineValue","getTickMarkLength","getTitleHeight","titleAlign","reverseAlign","Scale","super","_margins","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_maxLength","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","init","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","beforeUpdate","tickOpts","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","minmax","keepZero","_addGrace","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","determinedMaxTicks","_tickSize","maxScale","maxChart","determineMaxTicks","ticksLimit","maxTicksLimit","majorIndices","getMajorIndices","numMajorIndices","skipMajors","evenMajorSpacing","diff","getEvenSpacing","factors","_factorize","calculateSpacing","avgMajorSpacing","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","startPixel","endPixel","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","minSize","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","caches","widths","heights","jlen","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","gcLen","garbageCollect","valueAt","idx","getValueForPixel","getPixelForDecimal","decimal","getDecimalForPixel","getBasePixel","getBaseValue","createTickContext","optionTicks","rot","_computeGridLineItems","ticksLength","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","positionAxisID","positionAxisID1","value1","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","tickBorderDash","tickBorderDashOffset","_computeLabelItems","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","ret1","halfCount","tickTextAlign","labelPadding","_computeLabelArea","drawBackground","getLineWidthForValue","findIndex","drawGrid","drawLine","setLineDash","lineDashOffset","drawBorder","lastLineWidth","drawLabels","drawTitle","titleX","titleY","titleArgs","tz","gz","bz","axisID","_maxDigits","fontSize","TypedRegistry","isForType","isPrototypeOf","register","parentScope","isIChartComponent","itemDefaults","defaultRoutes","routes","propertyParts","sourceName","sourceScope","routeDefaults","registerDefaults","unregister","Registry","controllers","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getElement","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","registry","component","camelMethod","PluginService","hook","_createDescriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","localIds","i1","allPlugins","getOpts","pluginOpts","createDescriptors","previousDescriptors","pluginScopeKeys","getIndexAxis","datasetDefaults","determineAxis","scaleOptions","initOptions","chartDefaults","configScales","chartIndexAxis","scaleConf","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","defaultID","getAxisFromDefaultScaleID","mergeScaleConfig","initData","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","initConfig","_scopeCache","_resolverCache","clearCache","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","subPrefixes","getResolver","hasFunction","needContext","resolverCache","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onAnimationProgress","getCanvas","getChart","moveNumericKeys","intKey","Chart","invalidatePlugins","userConfig","initialCanvas","existingChart","OffscreenCanvas","_detectPlatform","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","debounce","resizeDelay","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","_dataset","buildOrUpdateControllers","newControllers","order","isDatasetVisible","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","ilen1","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getDatasetArea","getElementsAtEventForMode","getVisibleDatasetCount","setDatasetVisibility","toggleDataVisibility","getDataVisibility","_updateVisibility","_stop","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","getActiveElements","setActiveElements","activeElements","lastActive","pluginId","replay","hoverOptions","deactivated","activated","inChartArea","eventFilter","_handleEvent","_getActiveElements","isClick","_isClickEvent","lastEvent","determineLastEvent","Chart$1","rThetaToXY","theta","pathArc","circular","pixelMargin","innerRadius","innerR","outerRadius","spacingOffset","avNogSpacingRadius","angleOffset","outerStart","outerEnd","innerStart","innerEnd","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","parseBorderRadius$1","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","pCenter1","innerMidAdjustedAngle","pCenter2","p8","pCenter3","outerStartX","outerStartY","outerEndX","outerEndY","setStyle","lineCap","lineJoin","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","stepped","getLineMethod","fastPathSegment","prevX","minY","maxY","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","_decimated","usePath2D","Path2D","inRange$1","hitRadius","getBarBounds","bar","half","skipOrLimit","skipX","skipY","addNormalRectPath","inflateRect","amount","refRect","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","generateLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","legendItem","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","legendItemText","calculateItemWidth","fontLineHeight","calculateLegendItemHeight","calculateItemHeight","calculateItemSize","adjustHitBoxes","rtlHelper","hitbox","hitbox1","_draw","defaultColor","halfFontSize","cursor","textDirection","fontColor","lineDash","drawOptions","SQRT2","centerX","yBoxTop","xBoxLeft","drawLegendBox","_textX","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","onLeave","isListened","hoveredItem","sameItem","plugin_legend","_element","_args","legend","afterEvent","ci","useBorderRadius","Title","_padding","textSize","_drawArgs","fontOpts","plugin_title","titleBlock","createTitle","WeakMap","positioners","average","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","formattedValue","getTooltipSize","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineXAlign","chartWidth","xAlign","caret","caretSize","caretPadding","doesNotFitWithAlign","determineAlignment","determineYAlign","getBackgroundPoint","alignment","paddingAndSize","alignX","alignY","getAlignedX","getBeforeAfterBodyLines","overrideCallbacks","defaultCallbacks","beforeTitle","tooltipItems","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","y3","ptX","ptY","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","centerY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","afterInit","afterDraw","_getLabelForValue","relativeLabelSize","minSpacing","LinearScaleBase","_startValue","_endValue","_valueRange","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","maxTicks","stepSize","computeTickLimit","generationOptions","dataRange","precision","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","niceMin","niceMax","numSpaces","rounded","almostWhole","decimalPlaces","generateTicks$1","_setMinAndMaxByKey","LinearScale","borderAlign","circumference","fullCircles","chartX","chartY","rAdjust","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","drawArc","inner","angleMargin","clipArc","outer","maxW","maxH","parseBorderWidth","maxR","enableBorder","parseBorderRadius","boundingRects","addRectPath","mouseX","mouseY","inXRange","inYRange","categoryPercentage","barPercentage","grouped","_index_","_value_","iAxisKey","vAxisKey","bars","ruler","_getRuler","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","_getStacks","skipNull","_getStackCount","_getStackIndex","pixels","barThickness","stackCount","baseValue","minBarLength","actualBase","floating","barSign","halfGrid","maxBarThickness","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","rects","animateRotate","animateScale","cutout","_getRotation","_getCircumference","_getRotationExtents","arcs","getMaxBorderWidth","getMaxOffset","maxSize","chartWeight","_getRingWeight","ratioX","ratioY","startX","startY","endX","endY","calcMax","calcMin","maxX","minX","getRatioAndOffset","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","calculateTotal","_getRingWeightOffset","_circumference","calculateCircumference","animationOpts","metaData","hoverBorderWidth","hoverOffset","ringWeightOffset","_addedLabels","added","addedLabels","unshift","addIfString","lastIndexOf","findOrAddLabel","animationsDisabled","pointCount","_getStartAndCountOfVisiblePoints","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","_scaleRangesChanged","_datasetIndex","animated","maxGapLength","directUpdate","pointsCount","prevParsed","nullData","lastPoint","updateControlPoints","_fullLoop","_path","_points","_segments","_pointsUpdated","segments","segmentOptions","findStartAndEnd","chartContext","baseStyle","addStyle","st","dir","p0","p0DataIndex","p1DataIndex","doSplitByStyles","splitByStyles","solidSegments","_computeSegments","sub","_boundSegments","_interpolate","_getInterpolationMethod","interpolated","segmentMethod","strokePathWithCache","strokePathDirect","hoverRadius","Charty","evt","chartIndex","chart_arr","balloonEnabled","updateBalloon","tableActionEnalbed","updateTableRow","canvas_arr","tableRows","balloonElem","balloonTextElem","balloonData","reject","fetch","response","json","balloons","hasMatchedTable","mouseHandler","dtitle","parentElement","titleElem","balloon_data","json_url","getJson","getConfig","chart_obj","createDonutTitle","enableBalloon","enableTableAction","createChart","helpers","initComponents","jsComponents","initComponent","componentList","componentName","components","targetComponent"],"sourceRoot":""}